

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 15:41:49 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0013                     _SSPBUF	set	19
   447  0014                     _SSPCONbits	set	20
   448  0014                     _SSPCON	set	20
   449  001E                     _ADRESH	set	30
   450  000B                     _INTCONbits	set	11
   451  0006                     _PORTB	set	6
   452  0009                     _PORTE	set	9
   453  0008                     _PORTD	set	8
   454  001F                     _ADCON0bits	set	31
   455  000C                     _PIR1bits	set	12
   456  0094                     _SSPSTATbits	set	148
   457  0085                     _TRISAbits	set	133
   458  0087                     _TRISCbits	set	135
   459  008F                     _OSCCONbits	set	143
   460  009F                     _ADCON1bits	set	159
   461  008C                     _PIE1bits	set	140
   462  0089                     _TRISE	set	137
   463  0088                     _TRISD	set	136
   464  0086                     _TRISB	set	134
   465  0085                     _TRISA	set	133
   466  0094                     _SSPSTAT	set	148
   467  0189                     _ANSELH	set	393
   468  0188                     _ANSEL	set	392
   469                           
   470                           	psect	cinit
   471  07F9                     start_initialization:	
   472                           ; #config settings
   473                           
   474  07F9                     __initialization:
   475                           
   476                           ; Clear objects allocated to COMMON
   477  07F9  01F7               	clrf	__pbssCOMMON& (0+127)
   478  07FA  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   479  07FB  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   480  07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  07FC                     __end_of__initialization:
   484  07FC  0183               	clrf	3
   485  07FD  120A  118A  2F94   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssCOMMON
   488  0077                     __pbssCOMMON:
   489  0077                     _read:
   490  0077                     	ds	1
   491  0078                     _cont2:
   492  0078                     	ds	1
   493  0079                     _cont1:
   494  0079                     	ds	1
   495                           
   496                           	psect	cstackCOMMON
   497  0071                     __pcstackCOMMON:
   498  0071                     ?_ADC:
   499  0071                     ??_ADC:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0071                     ?_setup:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0071                     ?_conversion:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0071                     ?_ReadMSSP:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0071                     ?_WriteMSSP:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0071                     ?_initOsc:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0071                     ?_InitMSSP:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0071                     ?_isr:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0071                     ?_main:	
   524                           ; 1 bytes @ 0x0
   525                           
   526                           
   527                           ; 1 bytes @ 0x0
   528  0071                     	ds	1
   529  0072                     ??_isr:
   530                           
   531                           ; 1 bytes @ 0x1
   532  0072                     	ds	2
   533  0074                     ??_conversion:
   534  0074                     ??_ReadMSSP:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0074                     ??_WriteMSSP:	
   538                           ; 1 bytes @ 0x3
   539                           
   540  0074                     ??_initOsc:	
   541                           ; 1 bytes @ 0x3
   542                           
   543  0074                     ?_config_ADC:	
   544                           ; 1 bytes @ 0x3
   545                           
   546  0074                     ??_InitMSSP:	
   547                           ; 1 bytes @ 0x3
   548                           
   549  0074                     initOsc@Valor:	
   550                           ; 1 bytes @ 0x3
   551                           
   552  0074                     InitMSSP@Modo:	
   553                           ; 1 bytes @ 0x3
   554                           
   555  0074                     WriteMSSP@Data:	
   556                           ; 1 bytes @ 0x3
   557                           
   558  0074                     config_ADC@channel:	
   559                           ; 1 bytes @ 0x3
   560                           
   561                           
   562                           ; 2 bytes @ 0x3
   563  0074                     	ds	2
   564  0076                     ??_config_ADC:
   565                           
   566                           ; 1 bytes @ 0x5
   567  0076                     	ds	1
   568  0077                     ??_setup:
   569                           
   570                           	psect	cstackBANK0
   571  0020                     __pcstackBANK0:	
   572                           ; 1 bytes @ 0x6
   573                           
   574  0020                     ??_main:
   575                           
   576                           ; 1 bytes @ 0x0
   577  0020                     	ds	2
   578                           
   579                           	psect	maintext
   580  0794                     __pmaintext:	
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 62 in file "ESCLAVO1.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : B00/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       2       0       0       0
   603 ;;      Totals:         0       2       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels required when called: 4
   606 ;; This function calls:
   607 ;;		_ReadMSSP
   608 ;;		_WriteMSSP
   609 ;;		_conversion
   610 ;;		_setup
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _main
   618  0794                     _main:
   619  0794                     l905:	
   620                           ;incstack = 0
   621                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   622                           
   623                           
   624                           ;ESCLAVO1.c: 63:     setup();
   625  0794  120A  118A  2736  120A  118A  	fcall	_setup
   626  0799                     l907:
   627                           
   628                           ;ESCLAVO1.c: 64:     ADCON0bits.GO = 1;
   629  0799  1283               	bcf	3,5	;RP0=0, select bank0
   630  079A  1303               	bcf	3,6	;RP1=0, select bank0
   631  079B  149F               	bsf	31,1	;volatile
   632  079C                     l909:
   633                           
   634                           ;ESCLAVO1.c: 65:     read = 0;
   635  079C  01F7               	clrf	_read
   636  079D                     l911:
   637                           
   638                           ;ESCLAVO1.c: 71:         conversion();
   639  079D  120A  118A  2708  120A  118A  	fcall	_conversion
   640  07A2                     l913:
   641                           
   642                           ;ESCLAVO1.c: 76:         if (SSPSTAT & 0b00000001) {
   643  07A2  1683               	bsf	3,5	;RP0=1, select bank1
   644  07A3  1303               	bcf	3,6	;RP1=0, select bank1
   645  07A4  1C14               	btfss	20,0	;volatile
   646  07A5  2FA7               	goto	u171
   647  07A6  2FA8               	goto	u170
   648  07A7                     u171:
   649  07A7  2FB2               	goto	l917
   650  07A8                     u170:
   651  07A8                     l915:
   652                           
   653                           ;ESCLAVO1.c: 77:             read = ReadMSSP();
   654  07A8  120A  118A  26B3  120A  118A  	fcall	_ReadMSSP
   655  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   656  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   657  07AF  00A0               	movwf	??_main
   658  07B0  0820               	movf	??_main,w
   659  07B1  00F7               	movwf	_read
   660  07B2                     l917:
   661                           
   662                           ;ESCLAVO1.c: 80:         _delay((unsigned long)((10)*(4000000/4000.0)));
   663  07B2  300D               	movlw	13
   664  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   665  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   666  07B5  00A1               	movwf	??_main+1
   667  07B6  30FB               	movlw	251
   668  07B7  00A0               	movwf	??_main
   669  07B8                     u187:
   670  07B8  0BA0               	decfsz	??_main,f
   671  07B9  2FB8               	goto	u187
   672  07BA  0BA1               	decfsz	??_main+1,f
   673  07BB  2FB8               	goto	u187
   674  07BC                     l919:
   675                           
   676                           ;ESCLAVO1.c: 81:         WriteMSSP(cont1);
   677  07BC  0879               	movf	_cont1,w
   678  07BD  120A  118A  26AD  120A  118A  	fcall	_WriteMSSP
   679  07C2  2F9D               	goto	l911
   680  07C3  120A  118A  280C   	ljmp	start
   681  07C6                     __end_of_main:
   682                           
   683                           	psect	text1
   684  0736                     __ptext1:	
   685 ;; *************** function _setup *****************
   686 ;; Defined at:
   687 ;;		line 89 in file "ESCLAVO1.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 3
   708 ;; This function calls:
   709 ;;		_InitMSSP
   710 ;;		_config_ADC
   711 ;;		_initOsc
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _setup
   719  0736                     _setup:
   720  0736                     l869:	
   721                           ;incstack = 0
   722                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   723                           
   724                           
   725                           ;ESCLAVO1.c: 92:     ANSEL = 0b0011;
   726  0736  3003               	movlw	3
   727  0737  1683               	bsf	3,5	;RP0=1, select bank3
   728  0738  1703               	bsf	3,6	;RP1=1, select bank3
   729  0739  0088               	movwf	8	;volatile
   730  073A                     l871:
   731                           
   732                           ;ESCLAVO1.c: 93:     ANSELH = 0;
   733  073A  0189               	clrf	9	;volatile
   734  073B                     l873:
   735                           
   736                           ;ESCLAVO1.c: 95:     TRISA = 0b0011;
   737  073B  3003               	movlw	3
   738  073C  1683               	bsf	3,5	;RP0=1, select bank1
   739  073D  1303               	bcf	3,6	;RP1=0, select bank1
   740  073E  0085               	movwf	5	;volatile
   741                           
   742                           ;ESCLAVO1.c: 96:     TRISB = 0;
   743  073F  0186               	clrf	6	;volatile
   744                           
   745                           ;ESCLAVO1.c: 97:     TRISD = 0;
   746  0740  0188               	clrf	8	;volatile
   747                           
   748                           ;ESCLAVO1.c: 98:     TRISE = 0;
   749  0741  0189               	clrf	9	;volatile
   750                           
   751                           ;ESCLAVO1.c: 100:     PORTD = 0;
   752  0742  1283               	bcf	3,5	;RP0=0, select bank0
   753  0743  1303               	bcf	3,6	;RP1=0, select bank0
   754  0744  0188               	clrf	8	;volatile
   755                           
   756                           ;ESCLAVO1.c: 101:     PORTE = 0;
   757  0745  0189               	clrf	9	;volatile
   758                           
   759                           ;ESCLAVO1.c: 102:     PORTB = 0;
   760  0746  0186               	clrf	6	;volatile
   761  0747                     l875:
   762                           
   763                           ;ESCLAVO1.c: 105:     initOsc(4);
   764  0747  3004               	movlw	4
   765  0748  120A  118A  2764  120A  118A  	fcall	_initOsc
   766  074D                     l877:
   767                           
   768                           ;ESCLAVO1.c: 108:     config_ADC(0);
   769  074D  3000               	movlw	0
   770  074E  00F4               	movwf	config_ADC@channel
   771  074F  00F5               	movwf	config_ADC@channel+1
   772  0750  120A  118A  26ED  120A  118A  	fcall	_config_ADC
   773  0755                     l879:
   774                           
   775                           ;ESCLAVO1.c: 111:     InitMSSP(SPI_SLAVE_SS_EN);
   776  0755  3004               	movlw	4
   777  0756  120A  118A  27C6  120A  118A  	fcall	_InitMSSP
   778  075B                     l881:
   779                           
   780                           ;ESCLAVO1.c: 114:     INTCONbits.GIE = 1;
   781  075B  178B               	bsf	11,7	;volatile
   782  075C                     l883:
   783                           
   784                           ;ESCLAVO1.c: 115:     INTCONbits.PEIE = 1;
   785  075C  170B               	bsf	11,6	;volatile
   786  075D                     l885:
   787                           
   788                           ;ESCLAVO1.c: 116:     PIR1bits.ADIF = 0;
   789  075D  1283               	bcf	3,5	;RP0=0, select bank0
   790  075E  1303               	bcf	3,6	;RP1=0, select bank0
   791  075F  130C               	bcf	12,6	;volatile
   792  0760                     l887:
   793                           
   794                           ;ESCLAVO1.c: 117:     PIE1bits.ADIE = 1;
   795  0760  1683               	bsf	3,5	;RP0=1, select bank1
   796  0761  1303               	bcf	3,6	;RP1=0, select bank1
   797  0762  170C               	bsf	12,6	;volatile
   798  0763                     l70:
   799  0763  0008               	return
   800  0764                     __end_of_setup:
   801                           
   802                           	psect	text2
   803  0764                     __ptext2:	
   804 ;; *************** function _initOsc *****************
   805 ;; Defined at:
   806 ;;		line 12 in file "Oscilador.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  Valor           1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  Valor           1    3[COMMON] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         1       0       0       0       0
   824 ;;Total ram usage:        1 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; Hardware stack levels required when called: 2
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_setup
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _initOsc
   836  0764                     _initOsc:
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   840                           ;initOsc@Valor stored from wreg
   841  0764  00F4               	movwf	initOsc@Valor
   842  0765                     l731:
   843                           
   844                           ;Oscilador.c: 14:     if(Valor == 8){
   845  0765  3008               	movlw	8
   846  0766  0674               	xorwf	initOsc@Valor,w
   847  0767  1D03               	btfss	3,2
   848  0768  2F6A               	goto	u11
   849  0769  2F6B               	goto	u10
   850  076A                     u11:
   851  076A  2F70               	goto	l735
   852  076B                     u10:
   853  076B                     l733:
   854                           
   855                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   856  076B  1683               	bsf	3,5	;RP0=1, select bank1
   857  076C  1303               	bcf	3,6	;RP1=0, select bank1
   858  076D  160F               	bsf	15,4	;volatile
   859                           
   860                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   861  076E  168F               	bsf	15,5	;volatile
   862                           
   863                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   864  076F  170F               	bsf	15,6	;volatile
   865  0770                     l735:
   866                           
   867                           ;Oscilador.c: 19:     if(Valor == 4){
   868  0770  3004               	movlw	4
   869  0771  0674               	xorwf	initOsc@Valor,w
   870  0772  1D03               	btfss	3,2
   871  0773  2F75               	goto	u21
   872  0774  2F76               	goto	u20
   873  0775                     u21:
   874  0775  2F7B               	goto	l739
   875  0776                     u20:
   876  0776                     l737:
   877                           
   878                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   879  0776  1683               	bsf	3,5	;RP0=1, select bank1
   880  0777  1303               	bcf	3,6	;RP1=0, select bank1
   881  0778  120F               	bcf	15,4	;volatile
   882                           
   883                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   884  0779  168F               	bsf	15,5	;volatile
   885                           
   886                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   887  077A  170F               	bsf	15,6	;volatile
   888  077B                     l739:
   889                           
   890                           ;Oscilador.c: 24:     if(Valor == 2){
   891  077B  3002               	movlw	2
   892  077C  0674               	xorwf	initOsc@Valor,w
   893  077D  1D03               	btfss	3,2
   894  077E  2F80               	goto	u31
   895  077F  2F81               	goto	u30
   896  0780                     u31:
   897  0780  2F86               	goto	l743
   898  0781                     u30:
   899  0781                     l741:
   900                           
   901                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   902  0781  1683               	bsf	3,5	;RP0=1, select bank1
   903  0782  1303               	bcf	3,6	;RP1=0, select bank1
   904  0783  160F               	bsf	15,4	;volatile
   905                           
   906                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   907  0784  128F               	bcf	15,5	;volatile
   908                           
   909                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   910  0785  170F               	bsf	15,6	;volatile
   911  0786                     l743:
   912                           
   913                           ;Oscilador.c: 29:     if(Valor == 1){
   914  0786  0374               	decf	initOsc@Valor,w
   915  0787  1D03               	btfss	3,2
   916  0788  2F8A               	goto	u41
   917  0789  2F8B               	goto	u40
   918  078A                     u41:
   919  078A  2F90               	goto	l106
   920  078B                     u40:
   921  078B                     l745:
   922                           
   923                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   924  078B  1683               	bsf	3,5	;RP0=1, select bank1
   925  078C  1303               	bcf	3,6	;RP1=0, select bank1
   926  078D  120F               	bcf	15,4	;volatile
   927                           
   928                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   929  078E  128F               	bcf	15,5	;volatile
   930                           
   931                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   932  078F  170F               	bsf	15,6	;volatile
   933  0790                     l106:	
   934                           ;Oscilador.c: 33:     }
   935                           
   936                           
   937                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   938  0790  1683               	bsf	3,5	;RP0=1, select bank1
   939  0791  1303               	bcf	3,6	;RP1=0, select bank1
   940  0792  140F               	bsf	15,0	;volatile
   941  0793                     l107:
   942  0793  0008               	return
   943  0794                     __end_of_initOsc:
   944                           
   945                           	psect	text3
   946  06ED                     __ptext3:	
   947 ;; *************** function _config_ADC *****************
   948 ;; Defined at:
   949 ;;		line 36 in file "ADC.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  channel         2    3[COMMON] int 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         2       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          1       0       0       0       0
   966 ;;      Totals:         3       0       0       0       0
   967 ;;Total ram usage:        3 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 2
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_setup
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           
   978                           ;psect for function _config_ADC
   979  06ED                     _config_ADC:
   980  06ED                     l861:	
   981                           ;incstack = 0
   982                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
   983                           
   984                           
   985                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
   986  06ED  1683               	bsf	3,5	;RP0=1, select bank1
   987  06EE  1303               	bcf	3,6	;RP1=0, select bank1
   988  06EF  139F               	bcf	31,7	;volatile
   989                           
   990                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
   991  06F0  121F               	bcf	31,4	;volatile
   992                           
   993                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
   994  06F1  129F               	bcf	31,5	;volatile
   995  06F2                     l863:
   996                           
   997                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
   998  06F2  1283               	bcf	3,5	;RP0=0, select bank0
   999  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1000  06F4  081F               	movf	31,w	;volatile
  1001  06F5  393F               	andlw	-193
  1002  06F6  3840               	iorlw	64
  1003  06F7  009F               	movwf	31	;volatile
  1004                           
  1005                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1006  06F8  0874               	movf	config_ADC@channel,w
  1007  06F9  00F6               	movwf	??_config_ADC
  1008  06FA  0DF6               	rlf	??_config_ADC,f
  1009  06FB  0DF6               	rlf	??_config_ADC,f
  1010  06FC  081F               	movf	31,w	;volatile
  1011  06FD  0676               	xorwf	??_config_ADC,w
  1012  06FE  39C3               	andlw	-61
  1013  06FF  0676               	xorwf	??_config_ADC,w
  1014  0700  009F               	movwf	31	;volatile
  1015  0701                     l865:
  1016                           
  1017                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1018  0701  141F               	bsf	31,0	;volatile
  1019  0702                     l867:
  1020                           
  1021                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1022  0702  3010               	movlw	16
  1023  0703  00F6               	movwf	??_config_ADC
  1024  0704                     u197:
  1025  0704  0BF6               	decfsz	??_config_ADC,f
  1026  0705  2F04               	goto	u197
  1027  0706  0000               	nop
  1028  0707                     l98:
  1029  0707  0008               	return
  1030  0708                     __end_of_config_ADC:
  1031                           
  1032                           	psect	text4
  1033  07C6                     __ptext4:	
  1034 ;; *************** function _InitMSSP *****************
  1035 ;; Defined at:
  1036 ;;		line 10 in file "SPI.c"
  1037 ;; Parameters:    Size  Location     Type
  1038 ;;  Modo            1    wreg     enum E1264
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;  Modo            1    3[COMMON] enum E1264
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, status,2, status,0
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       0       0       0       0
  1051 ;;      Locals:         1       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         1       0       0       0       0
  1054 ;;Total ram usage:        1 bytes
  1055 ;; Hardware stack levels used: 1
  1056 ;; Hardware stack levels required when called: 2
  1057 ;; This function calls:
  1058 ;;		Nothing
  1059 ;; This function is called by:
  1060 ;;		_setup
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _InitMSSP
  1066  07C6                     _InitMSSP:
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1070                           ;InitMSSP@Modo stored from wreg
  1071  07C6  00F4               	movwf	InitMSSP@Modo
  1072  07C7                     l755:
  1073                           
  1074                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1075  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  1076  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  1077  07C9  0194               	clrf	20	;volatile
  1078                           
  1079                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1080  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1081  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  1082  07CC  0194               	clrf	20	;volatile
  1083  07CD                     l757:
  1084                           
  1085                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1086  07CD  1294               	bcf	20,5	;volatile
  1087  07CE                     l759:
  1088                           
  1089                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1090  07CE  1694               	bsf	20,5	;volatile
  1091  07CF                     l761:
  1092                           
  1093                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1094  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1095  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1096  07D1  1287               	bcf	7,5	;volatile
  1097  07D2                     l763:
  1098                           
  1099                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1100  07D2  1607               	bsf	7,4	;volatile
  1101  07D3                     l765:
  1102                           
  1103                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1104  07D3  3006               	movlw	6
  1105  07D4  0274               	subwf	InitMSSP@Modo,w
  1106  07D5  1803               	skipnc
  1107  07D6  2FD8               	goto	u51
  1108  07D7  2FD9               	goto	u50
  1109  07D8                     u51:
  1110  07D8  2FE2               	goto	l771
  1111  07D9                     u50:
  1112  07D9                     l767:
  1113                           
  1114                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1115  07D9  3004               	movlw	4
  1116  07DA  0274               	subwf	InitMSSP@Modo,w
  1117  07DB  1803               	skipnc
  1118  07DC  2FDE               	goto	u61
  1119  07DD  2FDF               	goto	u60
  1120  07DE                     u61:
  1121  07DE  2FE1               	goto	l127
  1122  07DF                     u60:
  1123  07DF                     l769:
  1124                           
  1125                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1126  07DF  1187               	bcf	7,3	;volatile
  1127                           
  1128                           ;SPI.c: 29:         }
  1129  07E0  2FE2               	goto	l771
  1130  07E1                     l127:	
  1131                           ;SPI.c: 30:         else {
  1132                           
  1133                           
  1134                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1135  07E1  1587               	bsf	7,3	;volatile
  1136  07E2                     l771:
  1137                           
  1138                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1139  07E2  3004               	movlw	4
  1140  07E3  0674               	xorwf	InitMSSP@Modo,w
  1141  07E4  1D03               	btfss	3,2
  1142  07E5  2FE7               	goto	u71
  1143  07E6  2FE8               	goto	u70
  1144  07E7                     u71:
  1145  07E7  2FE9               	goto	l775
  1146  07E8                     u70:
  1147  07E8                     l773:
  1148  07E8  1685               	bsf	5,5	;volatile
  1149  07E9                     l775:
  1150                           
  1151                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1152  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1153  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1154  07EB  0814               	movf	20,w	;volatile
  1155  07EC  0474               	iorwf	InitMSSP@Modo,w	;volatile
  1156  07ED  0094               	movwf	20	;volatile
  1157  07EE                     l777:
  1158                           
  1159                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  1160  07EE  1683               	bsf	3,5	;RP0=1, select bank1
  1161  07EF  1303               	bcf	3,6	;RP1=0, select bank1
  1162  07F0  118C               	bcf	12,3	;volatile
  1163  07F1                     l779:
  1164                           
  1165                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1166  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1167  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1168  07F3  1214               	bcf	20,4	;volatile
  1169  07F4                     l781:
  1170                           
  1171                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1172  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  1173  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  1174  07F6  1314               	bcf	20,6	;volatile
  1175  07F7                     l783:
  1176                           
  1177                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1178  07F7  1394               	bcf	20,7	;volatile
  1179  07F8                     l130:
  1180  07F8  0008               	return
  1181  07F9                     __end_of_InitMSSP:
  1182                           
  1183                           	psect	text5
  1184  0708                     __ptext5:	
  1185 ;; *************** function _conversion *****************
  1186 ;; Defined at:
  1187 ;;		line 21 in file "ADC.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0
  1203 ;;      Temps:          1       0       0       0       0
  1204 ;;      Totals:         1       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 2
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _conversion
  1217  0708                     _conversion:
  1218  0708                     l813:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1221                           
  1222                           
  1223                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1224  0708  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0709  1303               	bcf	3,6	;RP1=0, select bank0
  1226  070A  189F               	btfsc	31,1	;volatile
  1227  070B  2F0D               	goto	u101
  1228  070C  2F0E               	goto	u100
  1229  070D                     u101:
  1230  070D  2F35               	goto	l95
  1231  070E                     u100:
  1232  070E                     l815:
  1233                           
  1234                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1235  070E  0C1F               	rrf	31,w	;volatile
  1236  070F  00F4               	movwf	??_conversion
  1237  0710  0C74               	rrf	??_conversion,w
  1238  0711  390F               	andlw	15
  1239  0712  3A01               	xorlw	1
  1240  0713  1D03               	skipz
  1241  0714  2F16               	goto	u111
  1242  0715  2F17               	goto	u110
  1243  0716                     u111:
  1244  0716  2F1F               	goto	l821
  1245  0717                     u110:
  1246  0717                     l817:
  1247                           
  1248                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1249  0717  30C3               	movlw	-61
  1250  0718  059F               	andwf	31,f	;volatile
  1251  0719                     l819:
  1252                           
  1253                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1254  0719  3010               	movlw	16
  1255  071A  00F4               	movwf	??_conversion
  1256  071B                     u207:
  1257  071B  0BF4               	decfsz	??_conversion,f
  1258  071C  2F1B               	goto	u207
  1259  071D  0000               	nop
  1260                           
  1261                           ;ADC.c: 26:         }
  1262  071E  2F2D               	goto	l827
  1263  071F                     l821:
  1264  071F  0C1F               	rrf	31,w	;volatile
  1265  0720  00F4               	movwf	??_conversion
  1266  0721  0C74               	rrf	??_conversion,w
  1267  0722  390F               	andlw	15
  1268  0723  3A00               	xorlw	0
  1269  0724  1D03               	skipz
  1270  0725  2F27               	goto	u121
  1271  0726  2F28               	goto	u120
  1272  0727                     u121:
  1273  0727  2F2D               	goto	l827
  1274  0728                     u120:
  1275  0728                     l823:
  1276                           
  1277                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1278  0728  081F               	movf	31,w	;volatile
  1279  0729  39C3               	andlw	-61
  1280  072A  3804               	iorlw	4
  1281  072B  009F               	movwf	31	;volatile
  1282  072C  2F19               	goto	l819
  1283  072D                     l827:
  1284                           
  1285                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1286  072D  3010               	movlw	16
  1287  072E  00F4               	movwf	??_conversion
  1288  072F                     u217:
  1289  072F  0BF4               	decfsz	??_conversion,f
  1290  0730  2F2F               	goto	u217
  1291  0731  0000               	nop
  1292  0732                     l829:
  1293                           
  1294                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1295  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0734  149F               	bsf	31,1	;volatile
  1298  0735                     l95:
  1299  0735  0008               	return
  1300  0736                     __end_of_conversion:
  1301                           
  1302                           	psect	text6
  1303  06AD                     __ptext6:	
  1304 ;; *************** function _WriteMSSP *****************
  1305 ;; Defined at:
  1306 ;;		line 55 in file "SPI.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  Data            1    wreg     unsigned char 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  Data            1    3[COMMON] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1320 ;;      Params:         0       0       0       0       0
  1321 ;;      Locals:         1       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0
  1323 ;;      Totals:         1       0       0       0       0
  1324 ;;Total ram usage:        1 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 2
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _WriteMSSP
  1336  06AD                     _WriteMSSP:
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _WriteMSSP: [wreg]
  1340                           ;WriteMSSP@Data stored from wreg
  1341  06AD  00F4               	movwf	WriteMSSP@Data
  1342  06AE                     l837:
  1343                           
  1344                           ;SPI.c: 59:     SSPBUF = Data;
  1345  06AE  0874               	movf	WriteMSSP@Data,w
  1346  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1347  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1348  06B1  0093               	movwf	19	;volatile
  1349  06B2                     l133:
  1350  06B2  0008               	return
  1351  06B3                     __end_of_WriteMSSP:
  1352                           
  1353                           	psect	text7
  1354  06B3                     __ptext7:	
  1355 ;; *************** function _ReadMSSP *****************
  1356 ;; Defined at:
  1357 ;;		line 63 in file "SPI.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      unsigned char 
  1364 ;; Registers used:
  1365 ;;		wreg
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 2
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _ReadMSSP
  1387  06B3                     _ReadMSSP:
  1388  06B3                     l831:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _ReadMSSP: [wreg]
  1391                           
  1392  06B3                     l136:	
  1393                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  1394                           
  1395  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  1396  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  1397  06B5  1C14               	btfss	20,0	;volatile
  1398  06B6  2EB8               	goto	u131
  1399  06B7  2EB9               	goto	u130
  1400  06B8                     u131:
  1401  06B8  2EB3               	goto	l136
  1402  06B9                     u130:
  1403  06B9                     l833:
  1404                           
  1405                           ;SPI.c: 65:     return(SSPBUF);
  1406  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  1407  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  1408  06BB  0813               	movf	19,w	;volatile
  1409  06BC                     l139:
  1410  06BC  0008               	return
  1411  06BD                     __end_of_ReadMSSP:
  1412                           
  1413                           	psect	text8
  1414  06BD                     __ptext8:	
  1415 ;; *************** function _isr *****************
  1416 ;; Defined at:
  1417 ;;		line 54 in file "ESCLAVO1.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0
  1433 ;;      Temps:          2       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 1
  1438 ;; This function calls:
  1439 ;;		_ADC
  1440 ;; This function is called by:
  1441 ;;		Interrupt level 1
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _isr
  1447  06BD                     _isr:
  1448  06BD                     i1l839:
  1449                           
  1450                           ;ESCLAVO1.c: 55:     if(PIR1bits.ADIF){
  1451  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1452  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1453  06BF  1F0C               	btfss	12,6	;volatile
  1454  06C0  2EC2               	goto	u14_21
  1455  06C1  2EC3               	goto	u14_20
  1456  06C2                     u14_21:
  1457  06C2  2ECB               	goto	i1l58
  1458  06C3                     u14_20:
  1459  06C3                     i1l841:
  1460                           
  1461                           ;ESCLAVO1.c: 56:         ADC();
  1462  06C3  120A  118A  26D2  120A  118A  	fcall	_ADC
  1463  06C8                     i1l843:
  1464                           
  1465                           ;ESCLAVO1.c: 57:         PIR1bits.ADIF = 0;
  1466  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1467  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1468  06CA  130C               	bcf	12,6	;volatile
  1469  06CB                     i1l58:
  1470  06CB  0873               	movf	??_isr+1,w
  1471  06CC  008A               	movwf	10
  1472  06CD  0E72               	swapf	??_isr,w
  1473  06CE  0083               	movwf	3
  1474  06CF  0EFE               	swapf	btemp,f
  1475  06D0  0E7E               	swapf	btemp,w
  1476  06D1  0009               	retfie
  1477  06D2                     __end_of_isr:
  1478                           
  1479                           	psect	intentry
  1480  0004                     __pintentry:	
  1481                           ;incstack = 0
  1482                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1483                           
  1484  0004                     interrupt_function:
  1485  007E                     saved_w	set	btemp
  1486  0004  00FE               	movwf	btemp
  1487  0005  0E03               	swapf	3,w
  1488  0006  00F2               	movwf	??_isr
  1489  0007  080A               	movf	10,w
  1490  0008  00F3               	movwf	??_isr+1
  1491  0009  120A  118A  2EBD   	ljmp	_isr
  1492                           
  1493                           	psect	text9
  1494  06D2                     __ptext9:	
  1495 ;; *************** function _ADC *****************
  1496 ;; Defined at:
  1497 ;;		line 11 in file "ADC.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0
  1513 ;;      Temps:          1       0       0       0       0
  1514 ;;      Totals:         1       0       0       0       0
  1515 ;;Total ram usage:        1 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_isr
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _ADC
  1526  06D2                     _ADC:
  1527  06D2                     i1l785:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1530                           
  1531                           
  1532                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1533  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1534  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1535  06D4  0C1F               	rrf	31,w	;volatile
  1536  06D5  00F1               	movwf	??_ADC
  1537  06D6  0C71               	rrf	??_ADC,w
  1538  06D7  390F               	andlw	15
  1539  06D8  3A00               	xorlw	0
  1540  06D9  1D03               	skipz
  1541  06DA  2EDC               	goto	u8_21
  1542  06DB  2EDD               	goto	u8_20
  1543  06DC                     u8_21:
  1544  06DC  2EE2               	goto	i1l789
  1545  06DD                     u8_20:
  1546  06DD                     i1l787:
  1547                           
  1548                           ;ADC.c: 13:         cont1 = ADRESH;
  1549  06DD  081E               	movf	30,w	;volatile
  1550  06DE  00F1               	movwf	??_ADC
  1551  06DF  0871               	movf	??_ADC,w
  1552  06E0  00F9               	movwf	_cont1
  1553                           
  1554                           ;ADC.c: 14:     }
  1555  06E1  2EEC               	goto	i1l88
  1556  06E2                     i1l789:
  1557  06E2  0C1F               	rrf	31,w	;volatile
  1558  06E3  00F1               	movwf	??_ADC
  1559  06E4  0C71               	rrf	??_ADC,w
  1560  06E5  390F               	andlw	15
  1561  06E6  3A01               	xorlw	1
  1562  06E7  1D03               	skipz
  1563  06E8  2EEA               	goto	u9_21
  1564  06E9  2EEB               	goto	u9_20
  1565  06EA                     u9_21:
  1566  06EA  2EEC               	goto	i1l88
  1567  06EB                     u9_20:
  1568  06EB  2EDD               	goto	i1l787
  1569  06EC                     i1l88:
  1570  06EC  0008               	return
  1571  06ED                     __end_of_ADC:
  1572  007E                     btemp	set	126	;btemp
  1573  007E                     wtemp0	set	126
  1574                           
  1575                           	psect	config
  1576                           
  1577                           ;Config register CONFIG1 @ 0x2007
  1578                           ;	Oscillator Selection bits
  1579                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1580                           ;	Watchdog Timer Enable bit
  1581                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1582                           ;	Power-up Timer Enable bit
  1583                           ;	PWRTE = OFF, PWRT disabled
  1584                           ;	RE3/MCLR pin function select bit
  1585                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1586                           ;	Code Protection bit
  1587                           ;	CP = OFF, Program memory code protection is disabled
  1588                           ;	Data Code Protection bit
  1589                           ;	CPD = OFF, Data memory code protection is disabled
  1590                           ;	Brown Out Reset Selection bits
  1591                           ;	BOREN = OFF, BOR disabled
  1592                           ;	Internal External Switchover bit
  1593                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1594                           ;	Fail-Safe Clock Monitor Enabled bit
  1595                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1596                           ;	Low Voltage Programming Enable bit
  1597                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1598                           ;	In-Circuit Debugger Mode bit
  1599                           ;	DEBUG = 0x1, unprogrammed default
  1600  2007                     	org	8199
  1601  2007  20D4               	dw	8404
  1602                           
  1603                           ;Config register CONFIG2 @ 0x2008
  1604                           ;	Brown-out Reset Selection bit
  1605                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1606                           ;	Flash Program Memory Self Write Enable bits
  1607                           ;	WRT = OFF, Write protection off
  1608  2008                     	org	8200
  1609  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      6       9
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_config_ADC

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     233
                                              0 BANK0      2     2      0
                           _ReadMSSP
                          _WriteMSSP
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     218
                           _InitMSSP
                         _config_ADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                                _ADC
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   _conversion
   _setup
     _InitMSSP
     _config_ADC
     _initOsc

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      6       9       1       69.2%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 15:41:49 2022

            _SSPSTATbits 0094                       l70 0763                       l95 0735  
                     l98 0707                       u10 076B                       u11 076A  
                     u20 0776                       u21 0775                       u30 0781  
                     u31 0780                       u40 078B                       u41 078A  
                     u50 07D9                       u51 07D8                       u60 07DF  
                     u61 07DE                       u70 07E8                       u71 07E7  
                    l130 07F8                      l106 0790                      l107 0793  
                    l133 06B2                      l127 07E1                      l136 06B3  
                    l139 06BC                      _ADC 06D2                      l731 0765  
                    l821 071F                      l813 0708                      l741 0781  
                    l733 076B                      l831 06B3                      l823 0728  
                    l815 070E                      l743 0786                      l735 0770  
                    l911 079D                      l833 06B9                      l817 0717  
                    l761 07CF                      l745 078B                      l737 0776  
                    l913 07A2                      l905 0794                      l827 072D  
                    l819 0719                      l771 07E2                      l763 07D2  
                    l755 07C7                      l739 077B                      l915 07A8  
                    l907 0799                      l837 06AE                      l829 0732  
                    l781 07F4                      l773 07E8                      l765 07D3  
                    l757 07CD                      l861 06ED                      l917 07B2  
                    l909 079C                      l783 07F7                      l775 07E9  
                    l767 07D9                      l759 07CE                      l863 06F2  
                    l871 073A                      l919 07BC                      l777 07EE  
                    l769 07DF                      l865 0701                      l881 075B  
                    l873 073B                      l779 07F1                      l867 0702  
                    l883 075C                      l875 0747                      l885 075D  
                    l877 074D                      l869 0736                      l887 0760  
                    l879 0755                      u100 070E                      u101 070D  
                    u110 0717                      u111 0716                      u120 0728  
                    u121 0727                      u130 06B9                      u131 06B8  
                    u207 071B                      u217 072F                      u170 07A8  
                    u171 07A7                      u187 07B8                      u197 0704  
                    _isr 06BD                     ?_ADC 0071                     ?_isr 0071  
                   i1l58 06CB                     i1l88 06EC                     u8_20 06DD  
                   u8_21 06DC                     u9_20 06EB                     u9_21 06EA  
                   _main 0794                     _read 0077                     btemp 007E  
                   start 000C                    ??_ADC 0071                    ??_isr 0072  
                  ?_main 0071                    _ANSEL 0188                    i1l841 06C3  
                  i1l843 06C8                    i1l839 06BD                    i1l785 06D2  
                  i1l787 06DD                    i1l789 06E2                    u14_20 06C3  
                  u14_21 06C2                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089             InitMSSP@Modo 0074  
                  _cont1 0079                    _cont2 0078          __end_of_initOsc 0794  
                  _setup 0736                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F9             __end_of_main 07C6  
       __end_of_InitMSSP 07F9         __end_of_ReadMSSP 06BD                   ??_main 0020  
                 _ADRESH 001E                   ?_setup 0071                   _ANSELH 0189  
                 _SSPCON 0014                   _SSPBUF 0013                ??_initOsc 0074  
                 saved_w 007E  __end_of__initialization 07FC       __size_of_WriteMSSP 0006  
         __pcstackCOMMON 0071            __end_of_setup 0764                  ??_setup 0077  
              ?_InitMSSP 0071                ?_ReadMSSP 0071               __pmaintext 0794  
             __pintentry 0004        __end_of_WriteMSSP 06B3             initOsc@Valor 0074  
             _config_ADC 06ED                  _SSPSTAT 0094               ??_InitMSSP 0074  
             ??_ReadMSSP 0074               _conversion 0708                  __ptext1 0736  
                __ptext2 0764                  __ptext3 06ED                  __ptext4 07C6  
                __ptext5 0708                  __ptext6 06AD                  __ptext7 06B3  
                __ptext8 06BD                  __ptext9 06D2             __size_of_ADC 001B  
                _initOsc 0764             __size_of_isr 0015     end_of_initialization 07FC  
            ?_config_ADC 0074                _TRISAbits 0085                _TRISCbits 0087  
            ?_conversion 0071            WriteMSSP@Data 0074      start_initialization 07F9  
            __end_of_ADC 06ED              __end_of_isr 06D2        __size_of_InitMSSP 0033  
      __size_of_ReadMSSP 000A      __size_of_config_ADC 001B      __size_of_conversion 002E  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
              _WriteMSSP 06AD        config_ADC@channel 0074                 ?_initOsc 0071  
             ?_WriteMSSP 0071           __size_of_setup 002E        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_config_ADC 0076                 _InitMSSP 07C6  
               _ReadMSSP 06B3             ??_conversion 0074       __end_of_config_ADC 0708  
     __end_of_conversion 0736         __size_of_initOsc 0030              ??_WriteMSSP 0074  
          __size_of_main 0032               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F               _SSPCONbits 0014  
