

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 16 18:00:34 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCON	set	20
   447  001E                     _ADRESH	set	30
   448  000B                     _INTCONbits	set	11
   449  0006                     _PORTB	set	6
   450  0009                     _PORTE	set	9
   451  0007                     _PORTC	set	7
   452  0008                     _PORTD	set	8
   453  001F                     _ADCON0bits	set	31
   454  000C                     _PIR1bits	set	12
   455  0063                     _SSPIF	set	99
   456  0094                     _SSPSTATbits	set	148
   457  0094                     _SSPSTAT	set	148
   458  008F                     _OSCCONbits	set	143
   459  009F                     _ADCON1bits	set	159
   460  008C                     _PIE1bits	set	140
   461  0085                     _TRISAbits	set	133
   462  0089                     _TRISE	set	137
   463  0087                     _TRISC	set	135
   464  0088                     _TRISD	set	136
   465  0086                     _TRISB	set	134
   466  0085                     _TRISA	set	133
   467  043B                     _TRISC3	set	1083
   468  043D                     _TRISC5	set	1085
   469  0189                     _ANSELH	set	393
   470  0188                     _ANSEL	set	392
   471                           
   472                           	psect	cinit
   473  000F                     start_initialization:	
   474                           ; #config settings
   475                           
   476  000F                     __initialization:
   477                           
   478                           ; Clear objects allocated to COMMON
   479  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   480  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   481  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   482  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   483  0013  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   484  0014                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  0014                     __end_of__initialization:
   488  0014  0183               	clrf	3
   489  0015  120A  118A  292B   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	bssCOMMON
   492  0076                     __pbssCOMMON:
   493  0076                     _cen:
   494  0076                     	ds	1
   495  0077                     _dec:
   496  0077                     	ds	1
   497  0078                     _uni:
   498  0078                     	ds	1
   499  0079                     _cont2:
   500  0079                     	ds	1
   501  007A                     _cont1:
   502  007A                     	ds	1
   503                           
   504                           	psect	cstackCOMMON
   505  0070                     __pcstackCOMMON:
   506  0070                     ?_spiWrite:
   507  0070                     ??_spiWrite:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_ADC:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_ADC:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_setup:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_conversion:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_initOsc:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_isr:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_main:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     spiWrite@dat:	
   532                           ; 1 bytes @ 0x0
   533                           
   534                           
   535                           ; 1 bytes @ 0x0
   536  0070                     	ds	1
   537  0071                     ??_isr:
   538                           
   539                           ; 1 bytes @ 0x1
   540  0071                     	ds	2
   541  0073                     ??_conversion:
   542  0073                     ??_initOsc:	
   543                           ; 1 bytes @ 0x3
   544                           
   545  0073                     ?_config_ADC:	
   546                           ; 1 bytes @ 0x3
   547                           
   548  0073                     ?_spiInit:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     initOsc@Valor:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0073                     spiInit@sDataSample:	
   555                           ; 1 bytes @ 0x3
   556                           
   557  0073                     config_ADC@channel:	
   558                           ; 1 bytes @ 0x3
   559                           
   560                           
   561                           ; 2 bytes @ 0x3
   562  0073                     	ds	1
   563  0074                     spiInit@sClockIdle:
   564                           
   565                           ; 1 bytes @ 0x4
   566  0074                     	ds	1
   567  0075                     ??_config_ADC:
   568  0075                     spiInit@sTransmitEdge:	
   569                           ; 1 bytes @ 0x5
   570                           
   571                           
   572                           ; 1 bytes @ 0x5
   573  0075                     	ds	1
   574  0076                     ??_setup:
   575  0076                     ??_spiInit:	
   576                           ; 1 bytes @ 0x6
   577                           
   578  0076                     ??_main:	
   579                           ; 1 bytes @ 0x6
   580                           
   581                           
   582                           	psect	cstackBANK0
   583  0020                     __pcstackBANK0:	
   584                           ; 1 bytes @ 0x6
   585                           
   586  0020                     spiInit@sType:
   587                           
   588                           ; 1 bytes @ 0x0
   589  0020                     	ds	1
   590                           
   591                           	psect	maintext
   592  012B                     __pmaintext:	
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 68 in file "ESCLAVO1.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, status,2, status,0, pclath, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : B00/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels required when called: 4
   618 ;; This function calls:
   619 ;;		_conversion
   620 ;;		_setup
   621 ;; This function is called by:
   622 ;;		Startup code after reset
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _main
   628  012B                     _main:
   629  012B                     l947:	
   630                           ;incstack = 0
   631                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   632                           
   633                           
   634                           ;ESCLAVO1.c: 69:     setup();
   635  012B  120A  118A  2018  120A  118A  	fcall	_setup
   636  0130                     l949:
   637                           
   638                           ;ESCLAVO1.c: 70:     ADCON0bits.GO = 1;
   639  0130  1283               	bcf	3,5	;RP0=0, select bank0
   640  0131  1303               	bcf	3,6	;RP1=0, select bank0
   641  0132  149F               	bsf	31,1	;volatile
   642  0133                     l70:	
   643                           ;ESCLAVO1.c: 71:     while(1){
   644                           
   645                           
   646                           ;ESCLAVO1.c: 75:         conversion();
   647  0133  120A  118A  2084  120A  118A  	fcall	_conversion
   648  0138  2933               	goto	l70
   649  0139  120A  118A  280C   	ljmp	start
   650  013C                     __end_of_main:
   651                           
   652                           	psect	text1
   653  0018                     __ptext1:	
   654 ;; *************** function _setup *****************
   655 ;; Defined at:
   656 ;;		line 81 in file "ESCLAVO1.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0
   673 ;;      Totals:         0       0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 3
   677 ;; This function calls:
   678 ;;		_config_ADC
   679 ;;		_initOsc
   680 ;;		_spiInit
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _setup
   688  0018                     _setup:
   689  0018                     l921:	
   690                           ;incstack = 0
   691                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   692                           
   693                           
   694                           ;ESCLAVO1.c: 84:     ANSEL = 0b0001;
   695  0018  3001               	movlw	1
   696  0019  1683               	bsf	3,5	;RP0=1, select bank3
   697  001A  1703               	bsf	3,6	;RP1=1, select bank3
   698  001B  0088               	movwf	8	;volatile
   699  001C                     l923:
   700                           
   701                           ;ESCLAVO1.c: 85:     ANSELH = 0;
   702  001C  0189               	clrf	9	;volatile
   703  001D                     l925:
   704                           
   705                           ;ESCLAVO1.c: 87:     TRISA = 0b0001;
   706  001D  3001               	movlw	1
   707  001E  1683               	bsf	3,5	;RP0=1, select bank1
   708  001F  1303               	bcf	3,6	;RP1=0, select bank1
   709  0020  0085               	movwf	5	;volatile
   710                           
   711                           ;ESCLAVO1.c: 88:     TRISB = 0;
   712  0021  0186               	clrf	6	;volatile
   713                           
   714                           ;ESCLAVO1.c: 89:     TRISD = 0;
   715  0022  0188               	clrf	8	;volatile
   716                           
   717                           ;ESCLAVO1.c: 90:     TRISC = 0;
   718  0023  0187               	clrf	7	;volatile
   719                           
   720                           ;ESCLAVO1.c: 91:     TRISE = 0;
   721  0024  0189               	clrf	9	;volatile
   722                           
   723                           ;ESCLAVO1.c: 93:     PORTD = 0;
   724  0025  1283               	bcf	3,5	;RP0=0, select bank0
   725  0026  1303               	bcf	3,6	;RP1=0, select bank0
   726  0027  0188               	clrf	8	;volatile
   727                           
   728                           ;ESCLAVO1.c: 94:     PORTC = 0;
   729  0028  0187               	clrf	7	;volatile
   730                           
   731                           ;ESCLAVO1.c: 95:     PORTE = 0;
   732  0029  0189               	clrf	9	;volatile
   733                           
   734                           ;ESCLAVO1.c: 96:     PORTB = 0;
   735  002A  0186               	clrf	6	;volatile
   736  002B                     l927:
   737                           
   738                           ;ESCLAVO1.c: 99:     TRISAbits.TRISA5 = 1;
   739  002B  1683               	bsf	3,5	;RP0=1, select bank1
   740  002C  1303               	bcf	3,6	;RP1=0, select bank1
   741  002D  1685               	bsf	5,5	;volatile
   742  002E                     l929:
   743                           
   744                           ;ESCLAVO1.c: 102:     initOsc(4);
   745  002E  3004               	movlw	4
   746  002F  120A  118A  2054  120A  118A  	fcall	_initOsc
   747  0034                     l931:
   748                           
   749                           ;ESCLAVO1.c: 105:     config_ADC(0);
   750  0034  3000               	movlw	0
   751  0035  00F3               	movwf	config_ADC@channel
   752  0036  00F4               	movwf	config_ADC@channel+1
   753  0037  120A  118A  2110  120A  118A  	fcall	_config_ADC
   754  003C                     l933:
   755                           
   756                           ;ESCLAVO1.c: 108:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   757  003C  01F3               	clrf	spiInit@sDataSample
   758  003D  01F4               	clrf	spiInit@sClockIdle
   759  003E  01F5               	clrf	spiInit@sTransmitEdge
   760  003F  3024               	movlw	36
   761  0040  120A  118A  20D4  120A  118A  	fcall	_spiInit
   762  0045                     l935:
   763                           
   764                           ;ESCLAVO1.c: 111:     INTCONbits.GIE = 1;
   765  0045  178B               	bsf	11,7	;volatile
   766  0046                     l937:
   767                           
   768                           ;ESCLAVO1.c: 112:     INTCONbits.PEIE = 1;
   769  0046  170B               	bsf	11,6	;volatile
   770  0047                     l939:
   771                           
   772                           ;ESCLAVO1.c: 113:     PIR1bits.SSPIF = 0;
   773  0047  1283               	bcf	3,5	;RP0=0, select bank0
   774  0048  1303               	bcf	3,6	;RP1=0, select bank0
   775  0049  118C               	bcf	12,3	;volatile
   776  004A                     l941:
   777                           
   778                           ;ESCLAVO1.c: 114:     PIE1bits.SSPIE = 1;
   779  004A  1683               	bsf	3,5	;RP0=1, select bank1
   780  004B  1303               	bcf	3,6	;RP1=0, select bank1
   781  004C  158C               	bsf	12,3	;volatile
   782  004D                     l943:
   783                           
   784                           ;ESCLAVO1.c: 115:     PIR1bits.ADIF = 0;
   785  004D  1283               	bcf	3,5	;RP0=0, select bank0
   786  004E  1303               	bcf	3,6	;RP1=0, select bank0
   787  004F  130C               	bcf	12,6	;volatile
   788  0050                     l945:
   789                           
   790                           ;ESCLAVO1.c: 116:     PIE1bits.ADIE = 1;
   791  0050  1683               	bsf	3,5	;RP0=1, select bank1
   792  0051  1303               	bcf	3,6	;RP1=0, select bank1
   793  0052  170C               	bsf	12,6	;volatile
   794  0053                     l76:
   795  0053  0008               	return
   796  0054                     __end_of_setup:
   797                           
   798                           	psect	text2
   799  00D4                     __ptext2:	
   800 ;; *************** function _spiInit *****************
   801 ;; Defined at:
   802 ;;		line 10 in file "SPI.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;  sType           1    wreg     enum E1264
   805 ;;  sDataSample     1    3[COMMON] enum E1272
   806 ;;  sClockIdle      1    4[COMMON] enum E1276
   807 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  sType           1    0[BANK0 ] enum E1264
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         3       0       0       0       0
   820 ;;      Locals:         0       1       0       0       0
   821 ;;      Temps:          0       0       0       0       0
   822 ;;      Totals:         3       1       0       0       0
   823 ;;Total ram usage:        4 bytes
   824 ;; Hardware stack levels used: 1
   825 ;; Hardware stack levels required when called: 2
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_setup
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           
   834                           ;psect for function _spiInit
   835  00D4                     _spiInit:
   836                           
   837                           ;incstack = 0
   838                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   839                           ;spiInit@sType stored from wreg
   840  00D4  1283               	bcf	3,5	;RP0=0, select bank0
   841  00D5  1303               	bcf	3,6	;RP1=0, select bank0
   842  00D6  00A0               	movwf	spiInit@sType
   843  00D7                     l911:
   844                           
   845                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_polarity
      +                           sClockIdle, Spi_Clock_edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
   846  00D7  1683               	bsf	3,5	;RP0=1, select bank1
   847  00D8  1303               	bcf	3,6	;RP1=0, select bank1
   848  00D9  1287               	bcf	7,5	;volatile
   849                           
   850                           ;SPI.c: 13:     if(sType & 0b00000100)
   851  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   852  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   853  00DC  1D20               	btfss	spiInit@sType,2
   854  00DD  28DF               	goto	u151
   855  00DE  28E0               	goto	u150
   856  00DF                     u151:
   857  00DF  28E6               	goto	l917
   858  00E0                     u150:
   859  00E0                     l913:
   860                           
   861                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   862  00E0  0875               	movf	spiInit@sTransmitEdge,w
   863  00E1  1683               	bsf	3,5	;RP0=1, select bank1
   864  00E2  1303               	bcf	3,6	;RP1=0, select bank1
   865  00E3  0094               	movwf	20	;volatile
   866  00E4                     l915:
   867                           
   868                           ;SPI.c: 16:         TRISC3 = 1;
   869  00E4  1587               	bsf	7,3	;volatile
   870                           
   871                           ;SPI.c: 17:     }
   872  00E5  28EC               	goto	l135
   873  00E6                     l917:
   874                           
   875                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   876  00E6  0873               	movf	spiInit@sDataSample,w
   877  00E7  0475               	iorwf	spiInit@sTransmitEdge,w
   878  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   879  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   880  00EA  0094               	movwf	20	;volatile
   881  00EB                     l919:
   882                           
   883                           ;SPI.c: 21:         TRISC3 = 0;
   884  00EB  1187               	bcf	7,3	;volatile
   885  00EC                     l135:	
   886                           ;SPI.c: 22:     }
   887                           
   888                           
   889                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   890  00EC  1283               	bcf	3,5	;RP0=0, select bank0
   891  00ED  1303               	bcf	3,6	;RP1=0, select bank0
   892  00EE  0820               	movf	spiInit@sType,w
   893  00EF  0474               	iorwf	spiInit@sClockIdle,w
   894  00F0  0094               	movwf	20	;volatile
   895  00F1                     l136:
   896  00F1  0008               	return
   897  00F2                     __end_of_spiInit:
   898                           
   899                           	psect	text3
   900  0054                     __ptext3:	
   901 ;; *************** function _initOsc *****************
   902 ;; Defined at:
   903 ;;		line 12 in file "Oscilador.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  Valor           1    wreg     unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  Valor           1    3[COMMON] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0
   920 ;;      Totals:         1       0       0       0       0
   921 ;;Total ram usage:        1 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 2
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_setup
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _initOsc
   933  0054                     _initOsc:
   934                           
   935                           ;incstack = 0
   936                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   937                           ;initOsc@Valor stored from wreg
   938  0054  00F3               	movwf	initOsc@Valor
   939  0055                     l745:
   940                           
   941                           ;Oscilador.c: 14:     if(Valor == 8){
   942  0055  3008               	movlw	8
   943  0056  0673               	xorwf	initOsc@Valor,w
   944  0057  1D03               	btfss	3,2
   945  0058  285A               	goto	u11
   946  0059  285B               	goto	u10
   947  005A                     u11:
   948  005A  2860               	goto	l749
   949  005B                     u10:
   950  005B                     l747:
   951                           
   952                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   953  005B  1683               	bsf	3,5	;RP0=1, select bank1
   954  005C  1303               	bcf	3,6	;RP1=0, select bank1
   955  005D  160F               	bsf	15,4	;volatile
   956                           
   957                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   958  005E  168F               	bsf	15,5	;volatile
   959                           
   960                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   961  005F  170F               	bsf	15,6	;volatile
   962  0060                     l749:
   963                           
   964                           ;Oscilador.c: 19:     if(Valor == 4){
   965  0060  3004               	movlw	4
   966  0061  0673               	xorwf	initOsc@Valor,w
   967  0062  1D03               	btfss	3,2
   968  0063  2865               	goto	u21
   969  0064  2866               	goto	u20
   970  0065                     u21:
   971  0065  286B               	goto	l753
   972  0066                     u20:
   973  0066                     l751:
   974                           
   975                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   976  0066  1683               	bsf	3,5	;RP0=1, select bank1
   977  0067  1303               	bcf	3,6	;RP1=0, select bank1
   978  0068  120F               	bcf	15,4	;volatile
   979                           
   980                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   981  0069  168F               	bsf	15,5	;volatile
   982                           
   983                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   984  006A  170F               	bsf	15,6	;volatile
   985  006B                     l753:
   986                           
   987                           ;Oscilador.c: 24:     if(Valor == 2){
   988  006B  3002               	movlw	2
   989  006C  0673               	xorwf	initOsc@Valor,w
   990  006D  1D03               	btfss	3,2
   991  006E  2870               	goto	u31
   992  006F  2871               	goto	u30
   993  0070                     u31:
   994  0070  2876               	goto	l757
   995  0071                     u30:
   996  0071                     l755:
   997                           
   998                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   999  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1000  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1001  0073  160F               	bsf	15,4	;volatile
  1002                           
  1003                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1004  0074  128F               	bcf	15,5	;volatile
  1005                           
  1006                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1007  0075  170F               	bsf	15,6	;volatile
  1008  0076                     l757:
  1009                           
  1010                           ;Oscilador.c: 29:     if(Valor == 1){
  1011  0076  0373               	decf	initOsc@Valor,w
  1012  0077  1D03               	btfss	3,2
  1013  0078  287A               	goto	u41
  1014  0079  287B               	goto	u40
  1015  007A                     u41:
  1016  007A  2880               	goto	l118
  1017  007B                     u40:
  1018  007B                     l759:
  1019                           
  1020                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1021  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1022  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1023  007D  120F               	bcf	15,4	;volatile
  1024                           
  1025                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1026  007E  128F               	bcf	15,5	;volatile
  1027                           
  1028                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1029  007F  170F               	bsf	15,6	;volatile
  1030  0080                     l118:	
  1031                           ;Oscilador.c: 33:     }
  1032                           
  1033                           
  1034                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1035  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1036  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1037  0082  140F               	bsf	15,0	;volatile
  1038  0083                     l119:
  1039  0083  0008               	return
  1040  0084                     __end_of_initOsc:
  1041                           
  1042                           	psect	text4
  1043  0110                     __ptext4:	
  1044 ;; *************** function _config_ADC *****************
  1045 ;; Defined at:
  1046 ;;		line 36 in file "ADC.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  channel         2    3[COMMON] int 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         2       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          1       0       0       0       0
  1063 ;;      Totals:         3       0       0       0       0
  1064 ;;Total ram usage:        3 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 2
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_setup
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _config_ADC
  1076  0110                     _config_ADC:
  1077  0110                     l863:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1080                           
  1081                           
  1082                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1083  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1084  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0112  139F               	bcf	31,7	;volatile
  1086                           
  1087                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1088  0113  121F               	bcf	31,4	;volatile
  1089                           
  1090                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1091  0114  129F               	bcf	31,5	;volatile
  1092  0115                     l865:
  1093                           
  1094                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1095  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0117  081F               	movf	31,w	;volatile
  1098  0118  393F               	andlw	-193
  1099  0119  3840               	iorlw	64
  1100  011A  009F               	movwf	31	;volatile
  1101                           
  1102                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1103  011B  0873               	movf	config_ADC@channel,w
  1104  011C  00F5               	movwf	??_config_ADC
  1105  011D  0DF5               	rlf	??_config_ADC,f
  1106  011E  0DF5               	rlf	??_config_ADC,f
  1107  011F  081F               	movf	31,w	;volatile
  1108  0120  0675               	xorwf	??_config_ADC,w
  1109  0121  39C3               	andlw	-61
  1110  0122  0675               	xorwf	??_config_ADC,w
  1111  0123  009F               	movwf	31	;volatile
  1112  0124                     l867:
  1113                           
  1114                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1115  0124  141F               	bsf	31,0	;volatile
  1116  0125                     l869:
  1117                           
  1118                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1119  0125  3010               	movlw	16
  1120  0126  00F5               	movwf	??_config_ADC
  1121  0127                     u167:
  1122  0127  0BF5               	decfsz	??_config_ADC,f
  1123  0128  2927               	goto	u167
  1124  0129  0000               	nop
  1125  012A                     l110:
  1126  012A  0008               	return
  1127  012B                     __end_of_config_ADC:
  1128                           
  1129                           	psect	text5
  1130  0084                     __ptext5:	
  1131 ;; *************** function _conversion *****************
  1132 ;; Defined at:
  1133 ;;		line 21 in file "ADC.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  1    wreg      void 
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          1       0       0       0       0
  1150 ;;      Totals:         1       0       0       0       0
  1151 ;;Total ram usage:        1 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 2
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           
  1162                           ;psect for function _conversion
  1163  0084                     _conversion:
  1164  0084                     l815:	
  1165                           ;incstack = 0
  1166                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1167                           
  1168                           
  1169                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1170  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0086  189F               	btfsc	31,1	;volatile
  1173  0087  2889               	goto	u81
  1174  0088  288A               	goto	u80
  1175  0089                     u81:
  1176  0089  28B1               	goto	l107
  1177  008A                     u80:
  1178  008A                     l817:
  1179                           
  1180                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1181  008A  0C1F               	rrf	31,w	;volatile
  1182  008B  00F3               	movwf	??_conversion
  1183  008C  0C73               	rrf	??_conversion,w
  1184  008D  390F               	andlw	15
  1185  008E  3A01               	xorlw	1
  1186  008F  1D03               	skipz
  1187  0090  2892               	goto	u91
  1188  0091  2893               	goto	u90
  1189  0092                     u91:
  1190  0092  289B               	goto	l823
  1191  0093                     u90:
  1192  0093                     l819:
  1193                           
  1194                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1195  0093  30C3               	movlw	-61
  1196  0094  059F               	andwf	31,f	;volatile
  1197  0095                     l821:
  1198                           
  1199                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1200  0095  3010               	movlw	16
  1201  0096  00F3               	movwf	??_conversion
  1202  0097                     u177:
  1203  0097  0BF3               	decfsz	??_conversion,f
  1204  0098  2897               	goto	u177
  1205  0099  0000               	nop
  1206                           
  1207                           ;ADC.c: 26:         }
  1208  009A  28A9               	goto	l829
  1209  009B                     l823:
  1210  009B  0C1F               	rrf	31,w	;volatile
  1211  009C  00F3               	movwf	??_conversion
  1212  009D  0C73               	rrf	??_conversion,w
  1213  009E  390F               	andlw	15
  1214  009F  3A00               	xorlw	0
  1215  00A0  1D03               	skipz
  1216  00A1  28A3               	goto	u101
  1217  00A2  28A4               	goto	u100
  1218  00A3                     u101:
  1219  00A3  28A9               	goto	l829
  1220  00A4                     u100:
  1221  00A4                     l825:
  1222                           
  1223                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1224  00A4  081F               	movf	31,w	;volatile
  1225  00A5  39C3               	andlw	-61
  1226  00A6  3804               	iorlw	4
  1227  00A7  009F               	movwf	31	;volatile
  1228  00A8  2895               	goto	l821
  1229  00A9                     l829:
  1230                           
  1231                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1232  00A9  3010               	movlw	16
  1233  00AA  00F3               	movwf	??_conversion
  1234  00AB                     u187:
  1235  00AB  0BF3               	decfsz	??_conversion,f
  1236  00AC  28AB               	goto	u187
  1237  00AD  0000               	nop
  1238  00AE                     l831:
  1239                           
  1240                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1241  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1242  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  1243  00B0  149F               	bsf	31,1	;volatile
  1244  00B1                     l107:
  1245  00B1  0008               	return
  1246  00B2                     __end_of_conversion:
  1247                           
  1248                           	psect	text6
  1249  00B2                     __ptext6:	
  1250 ;; *************** function _isr *****************
  1251 ;; Defined at:
  1252 ;;		line 56 in file "ESCLAVO1.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          2       0       0       0       0
  1269 ;;      Totals:         2       0       0       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 1
  1273 ;; This function calls:
  1274 ;;		_ADC
  1275 ;;		_spiWrite
  1276 ;; This function is called by:
  1277 ;;		Interrupt level 1
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _isr
  1283  00B2                     _isr:
  1284  00B2                     i1l835:
  1285                           
  1286                           ;ESCLAVO1.c: 57:     if(SSPIF == 1){
  1287  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1288  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1289  00B4  1D8C               	btfss	12,3	;volatile
  1290  00B5  28B7               	goto	u12_21
  1291  00B6  28B8               	goto	u12_20
  1292  00B7                     u12_21:
  1293  00B7  28C1               	goto	i1l841
  1294  00B8                     u12_20:
  1295  00B8                     i1l837:
  1296                           
  1297                           ;ESCLAVO1.c: 58:         spiWrite(cont1);
  1298  00B8  087A               	movf	_cont1,w
  1299  00B9  120A  118A  213C  120A  118A  	fcall	_spiWrite
  1300  00BE                     i1l839:
  1301                           
  1302                           ;ESCLAVO1.c: 59:         SSPIF = 0;
  1303  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1304  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1305  00C0  118C               	bcf	12,3	;volatile
  1306  00C1                     i1l841:
  1307                           
  1308                           ;ESCLAVO1.c: 61:     if(PIR1bits.ADIF){
  1309  00C1  1F0C               	btfss	12,6	;volatile
  1310  00C2  28C4               	goto	u13_21
  1311  00C3  28C5               	goto	u13_20
  1312  00C4                     u13_21:
  1313  00C4  28CD               	goto	i1l65
  1314  00C5                     u13_20:
  1315  00C5                     i1l843:
  1316                           
  1317                           ;ESCLAVO1.c: 62:         ADC();
  1318  00C5  120A  118A  20F2  120A  118A  	fcall	_ADC
  1319  00CA                     i1l845:
  1320                           
  1321                           ;ESCLAVO1.c: 63:         PIR1bits.ADIF = 0;
  1322  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1323  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1324  00CC  130C               	bcf	12,6	;volatile
  1325  00CD                     i1l65:
  1326  00CD  0872               	movf	??_isr+1,w
  1327  00CE  008A               	movwf	10
  1328  00CF  0E71               	swapf	??_isr,w
  1329  00D0  0083               	movwf	3
  1330  00D1  0EFE               	swapf	btemp,f
  1331  00D2  0E7E               	swapf	btemp,w
  1332  00D3  0009               	retfie
  1333  00D4                     __end_of_isr:
  1334                           
  1335                           	psect	intentry
  1336  0004                     __pintentry:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1339                           
  1340  0004                     interrupt_function:
  1341  007E                     saved_w	set	btemp
  1342  0004  00FE               	movwf	btemp
  1343  0005  0E03               	swapf	3,w
  1344  0006  00F1               	movwf	??_isr
  1345  0007  080A               	movf	10,w
  1346  0008  00F2               	movwf	??_isr+1
  1347  0009  120A  118A  28B2   	ljmp	_isr
  1348                           
  1349                           	psect	text7
  1350  013C                     __ptext7:	
  1351 ;; *************** function _spiWrite *****************
  1352 ;; Defined at:
  1353 ;;		line 32 in file "SPI.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;  dat             1    wreg     unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  dat             1    0[COMMON] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         1       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0
  1370 ;;      Totals:         1       0       0       0       0
  1371 ;;Total ram usage:        1 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_isr
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _spiWrite
  1382  013C                     _spiWrite:
  1383                           
  1384                           ;incstack = 0
  1385                           ; Regs used in _spiWrite: [wreg]
  1386                           ;spiWrite@dat stored from wreg
  1387  013C  00F0               	movwf	spiWrite@dat
  1388  013D                     i1l779:
  1389                           
  1390                           ;SPI.c: 32: void spiWrite(char dat);SPI.c: 33: {;SPI.c: 34:     SSPBUF = dat;
  1391  013D  0870               	movf	spiWrite@dat,w
  1392  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1393  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0140  0093               	movwf	19	;volatile
  1395  0141                     i1l145:
  1396  0141  0008               	return
  1397  0142                     __end_of_spiWrite:
  1398                           
  1399                           	psect	text8
  1400  00F2                     __ptext8:	
  1401 ;; *************** function _ADC *****************
  1402 ;; Defined at:
  1403 ;;		line 11 in file "ADC.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1417 ;;      Params:         0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0
  1419 ;;      Temps:          1       0       0       0       0
  1420 ;;      Totals:         1       0       0       0       0
  1421 ;;Total ram usage:        1 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_isr
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _ADC
  1432  00F2                     _ADC:
  1433  00F2                     i1l781:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1436                           
  1437                           
  1438                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1439  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1440  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1441  00F4  0C1F               	rrf	31,w	;volatile
  1442  00F5  00F0               	movwf	??_ADC
  1443  00F6  0C70               	rrf	??_ADC,w
  1444  00F7  390F               	andlw	15
  1445  00F8  3A00               	xorlw	0
  1446  00F9  1D03               	skipz
  1447  00FA  28FC               	goto	u6_21
  1448  00FB  28FD               	goto	u6_20
  1449  00FC                     u6_21:
  1450  00FC  2902               	goto	i1l785
  1451  00FD                     u6_20:
  1452  00FD                     i1l783:
  1453                           
  1454                           ;ADC.c: 13:         cont1 = ADRESH;
  1455  00FD  081E               	movf	30,w	;volatile
  1456  00FE  00F0               	movwf	??_ADC
  1457  00FF  0870               	movf	??_ADC,w
  1458  0100  00FA               	movwf	_cont1
  1459                           
  1460                           ;ADC.c: 14:     }
  1461  0101  290F               	goto	i1l100
  1462  0102                     i1l785:
  1463  0102  0C1F               	rrf	31,w	;volatile
  1464  0103  00F0               	movwf	??_ADC
  1465  0104  0C70               	rrf	??_ADC,w
  1466  0105  390F               	andlw	15
  1467  0106  3A01               	xorlw	1
  1468  0107  1D03               	skipz
  1469  0108  290A               	goto	u7_21
  1470  0109  290B               	goto	u7_20
  1471  010A                     u7_21:
  1472  010A  290F               	goto	i1l100
  1473  010B                     u7_20:
  1474  010B                     i1l787:
  1475                           
  1476                           ;ADC.c: 16:         cont2 = ADRESH;
  1477  010B  081E               	movf	30,w	;volatile
  1478  010C  00F0               	movwf	??_ADC
  1479  010D  0870               	movf	??_ADC,w
  1480  010E  00F9               	movwf	_cont2
  1481  010F                     i1l100:
  1482  010F  0008               	return
  1483  0110                     __end_of_ADC:
  1484  007E                     btemp	set	126	;btemp
  1485  007E                     wtemp0	set	126
  1486                           
  1487                           	psect	config
  1488                           
  1489                           ;Config register CONFIG1 @ 0x2007
  1490                           ;	Oscillator Selection bits
  1491                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1492                           ;	Watchdog Timer Enable bit
  1493                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1494                           ;	Power-up Timer Enable bit
  1495                           ;	PWRTE = OFF, PWRT disabled
  1496                           ;	RE3/MCLR pin function select bit
  1497                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1498                           ;	Code Protection bit
  1499                           ;	CP = OFF, Program memory code protection is disabled
  1500                           ;	Data Code Protection bit
  1501                           ;	CPD = OFF, Data memory code protection is disabled
  1502                           ;	Brown Out Reset Selection bits
  1503                           ;	BOREN = OFF, BOR disabled
  1504                           ;	Internal External Switchover bit
  1505                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1506                           ;	Fail-Safe Clock Monitor Enabled bit
  1507                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1508                           ;	Low Voltage Programming Enable bit
  1509                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1510                           ;	In-Circuit Debugger Mode bit
  1511                           ;	DEBUG = 0x1, unprogrammed default
  1512  2007                     	org	8199
  1513  2007  20D4               	dw	8404
  1514                           
  1515                           ;Config register CONFIG2 @ 0x2008
  1516                           ;	Brown-out Reset Selection bit
  1517                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1518                           ;	Flash Program Memory Self Write Enable bits
  1519                           ;	WRT = OFF, Write protection off
  1520  2008                     	org	8200
  1521  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_config_ADC
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_ADC
    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     614
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     614
                         _config_ADC
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              3 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                                _ADC
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
   _setup
     _config_ADC
     _initOsc
     _spiInit

 _isr (ROOT)
   _ADC
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 16 18:00:34 2022

            _SSPSTATbits 0094                       l70 0133                       l76 0053  
                     u10 005B                       u11 005A                       u20 0066  
                     u21 0065                       u30 0071                       u31 0070  
                     u40 007B                       u41 007A                       u80 008A  
                     u81 0089                       u90 0093                       u91 0092  
                    l110 012A                      l107 00B1                      l118 0080  
                    l119 0083                      l135 00EC                      l136 00F1  
                    _ADC 00F2                      l821 0095                      l831 00AE  
                    l823 009B                      l815 0084                      l751 0066  
                    l911 00D7                      l825 00A4                      l817 008A  
                    l753 006B                      l745 0055                      l913 00E0  
                    l921 0018                      l819 0093                      l755 0071  
                    l747 005B                      l915 00E4                      l931 0034  
                    l923 001C                      l829 00A9                      l757 0076  
                    l749 0060                      l917 00E6                      l941 004A  
                    l933 003C                      l925 001D                      l863 0110  
                    l759 007B                      l919 00EB                      l943 004D  
                    l935 0045                      l927 002B                      l865 0115  
                    l945 0050                      l937 0046                      l929 002E  
                    l867 0124                      l939 0047                      l947 012B  
                    l869 0125                      l949 0130                      u100 00A4  
                    u101 00A3                      u150 00E0                      u151 00DF  
                    u167 0127                      u177 0097                      u187 00AB  
                    _dec 0077                      _cen 0076                      _isr 00B2  
                    _uni 0078                     ?_ADC 0070                     ?_isr 0070  
                   i1l65 00CD                     u6_20 00FD                     u6_21 00FC  
                   u7_20 010B                     u7_21 010A                     _main 012B  
                   btemp 007E                     start 000C                    ??_ADC 0070  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l100 010F                    i1l145 0141                    i1l841 00C1  
                  i1l843 00C5                    i1l835 00B2                    i1l781 00F2  
                  i1l845 00CA                    i1l837 00B8                    i1l783 00FD  
                  i1l839 00BE                    i1l785 0102                    i1l787 010B  
                  i1l779 013D                    u12_20 00B8                    u12_21 00B7  
                  u13_20 00C5                    u13_21 00C4                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
                  _cont1 007A                    _cont2 0079          __end_of_initOsc 0084  
                  _setup 0018                    pclath 000A          __end_of_spiInit 00F2  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 013C                   ??_main 0076                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ??_initOsc 0073                   saved_w 007E         __end_of_spiWrite 0142  
              ??_spiInit 0076  __end_of__initialization 0014           __pcstackCOMMON 0070  
          __end_of_setup 0054                  ??_setup 0076               __pmaintext 012B  
             __pintentry 0004             initOsc@Valor 0073               _config_ADC 0110  
                _SSPSTAT 0094               _conversion 0084                ?_spiWrite 0070  
                __ptext1 0018                  __ptext2 00D4                  __ptext3 0054  
                __ptext4 0110                  __ptext5 0084                  __ptext6 00B2  
                __ptext7 013C                  __ptext8 00F2             __size_of_ADC 001E  
                _initOsc 0054             __size_of_isr 0022                  _spiInit 00D4  
   end_of_initialization 0014               ??_spiWrite 0070              ?_config_ADC 0073  
              _TRISAbits 0085              spiWrite@dat 0070              ?_conversion 0070  
    start_initialization 000F              __end_of_ADC 0110              __end_of_isr 00D4  
    __size_of_config_ADC 001B      __size_of_conversion 002E              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_spiWrite 0006  
      config_ADC@channel 0073                 ?_initOsc 0070                 ?_spiInit 0073  
         __size_of_setup 003C     spiInit@sTransmitEdge 0075        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0073                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F             ??_config_ADC 0075  
           ??_conversion 0073       __end_of_config_ADC 012B       __end_of_conversion 00B2  
       __size_of_initOsc 0030         __size_of_spiInit 001E            __size_of_main 0011  
               _spiWrite 013C             spiInit@sType 0020        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
