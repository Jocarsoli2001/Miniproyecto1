

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 18 08:03:26 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCONbits	set	20
   447  0014                     _SSPCON	set	20
   448  001E                     _ADRESH	set	30
   449  000B                     _INTCONbits	set	11
   450  0006                     _PORTB	set	6
   451  0009                     _PORTE	set	9
   452  0008                     _PORTD	set	8
   453  001F                     _ADCON0bits	set	31
   454  000C                     _PIR1bits	set	12
   455  0063                     _SSPIF	set	99
   456  0094                     _SSPSTATbits	set	148
   457  0085                     _TRISAbits	set	133
   458  0087                     _TRISCbits	set	135
   459  0094                     _SSPSTAT	set	148
   460  008F                     _OSCCONbits	set	143
   461  009F                     _ADCON1bits	set	159
   462  008C                     _PIE1bits	set	140
   463  0089                     _TRISE	set	137
   464  0088                     _TRISD	set	136
   465  0086                     _TRISB	set	134
   466  0085                     _TRISA	set	133
   467  0189                     _ANSELH	set	393
   468  0188                     _ANSEL	set	392
   469                           
   470                           	psect	cinit
   471  000F                     start_initialization:	
   472                           ; #config settings
   473                           
   474  000F                     __initialization:
   475                           
   476                           ; Clear objects allocated to COMMON
   477  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   478  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   479  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   480  0012                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  0012                     __end_of__initialization:
   484  0012  0183               	clrf	3
   485  0013  120A  118A  2936   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssCOMMON
   488  0077                     __pbssCOMMON:
   489  0077                     _read:
   490  0077                     	ds	1
   491  0078                     _cont2:
   492  0078                     	ds	1
   493  0079                     _cont1:
   494  0079                     	ds	1
   495                           
   496                           	psect	cstackCOMMON
   497  0070                     __pcstackCOMMON:
   498  0070                     ?_ReadMSSP:
   499  0070                     ??_ReadMSSP:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_WriteMSSP:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ??_WriteMSSP:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_ADC:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ??_ADC:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_setup:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_conversion:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_initOsc:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_InitMSSP:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_isr:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_main:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     WriteMSSP@Data:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 1 bytes @ 0x0
   537  0070                     	ds	1
   538  0071                     ??_isr:
   539                           
   540                           ; 1 bytes @ 0x1
   541  0071                     	ds	3
   542  0074                     ??_conversion:
   543  0074                     ??_initOsc:	
   544                           ; 1 bytes @ 0x4
   545                           
   546  0074                     ?_config_ADC:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0074                     ??_InitMSSP:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0074                     initOsc@Valor:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0074                     InitMSSP@Modo:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0074                     config_ADC@channel:	
   559                           ; 1 bytes @ 0x4
   560                           
   561                           
   562                           ; 2 bytes @ 0x4
   563  0074                     	ds	2
   564  0076                     ??_config_ADC:
   565                           
   566                           ; 1 bytes @ 0x6
   567  0076                     	ds	1
   568  0077                     ??_setup:
   569  0077                     ??_main:	
   570                           ; 1 bytes @ 0x7
   571                           
   572                           
   573                           	psect	maintext
   574  0136                     __pmaintext:	
   575                           ; 1 bytes @ 0x7
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 74 in file "ESCLAVO1.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : B00/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels required when called: 4
   601 ;; This function calls:
   602 ;;		_conversion
   603 ;;		_setup
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _main
   611  0136                     _main:
   612  0136                     l891:	
   613                           ;incstack = 0
   614                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;ESCLAVO1.c: 75:     setup();
   618  0136  120A  118A  2016  120A  118A  	fcall	_setup
   619  013B                     l893:
   620                           
   621                           ;ESCLAVO1.c: 76:     ADCON0bits.GO = 1;
   622  013B  1283               	bcf	3,5	;RP0=0, select bank0
   623  013C  1303               	bcf	3,6	;RP1=0, select bank0
   624  013D  149F               	bsf	31,1	;volatile
   625  013E                     l895:
   626                           
   627                           ;ESCLAVO1.c: 77:     read = 0;
   628  013E  01F7               	clrf	_read
   629  013F                     l897:
   630                           
   631                           ;ESCLAVO1.c: 83:         conversion();
   632  013F  120A  118A  20A8  120A  118A  	fcall	_conversion
   633  0144  293F               	goto	l897
   634  0145  120A  118A  280C   	ljmp	start
   635  0148                     __end_of_main:
   636                           
   637                           	psect	text1
   638  0016                     __ptext1:	
   639 ;; *************** function _setup *****************
   640 ;; Defined at:
   641 ;;		line 88 in file "ESCLAVO1.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 3
   662 ;; This function calls:
   663 ;;		_InitMSSP
   664 ;;		_config_ADC
   665 ;;		_initOsc
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _setup
   673  0016                     _setup:
   674  0016                     l867:	
   675                           ;incstack = 0
   676                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;ESCLAVO1.c: 91:     ANSEL = 0b0011;
   680  0016  3003               	movlw	3
   681  0017  1683               	bsf	3,5	;RP0=1, select bank3
   682  0018  1703               	bsf	3,6	;RP1=1, select bank3
   683  0019  0088               	movwf	8	;volatile
   684  001A                     l869:
   685                           
   686                           ;ESCLAVO1.c: 92:     ANSELH = 0;
   687  001A  0189               	clrf	9	;volatile
   688  001B                     l871:
   689                           
   690                           ;ESCLAVO1.c: 94:     TRISA = 0b0011;
   691  001B  3003               	movlw	3
   692  001C  1683               	bsf	3,5	;RP0=1, select bank1
   693  001D  1303               	bcf	3,6	;RP1=0, select bank1
   694  001E  0085               	movwf	5	;volatile
   695                           
   696                           ;ESCLAVO1.c: 95:     TRISB = 0;
   697  001F  0186               	clrf	6	;volatile
   698                           
   699                           ;ESCLAVO1.c: 96:     TRISD = 0;
   700  0020  0188               	clrf	8	;volatile
   701                           
   702                           ;ESCLAVO1.c: 97:     TRISE = 0;
   703  0021  0189               	clrf	9	;volatile
   704                           
   705                           ;ESCLAVO1.c: 99:     PORTD = 0;
   706  0022  1283               	bcf	3,5	;RP0=0, select bank0
   707  0023  1303               	bcf	3,6	;RP1=0, select bank0
   708  0024  0188               	clrf	8	;volatile
   709                           
   710                           ;ESCLAVO1.c: 100:     PORTE = 0;
   711  0025  0189               	clrf	9	;volatile
   712                           
   713                           ;ESCLAVO1.c: 101:     PORTB = 0;
   714  0026  0186               	clrf	6	;volatile
   715  0027                     l873:
   716                           
   717                           ;ESCLAVO1.c: 104:     initOsc(4);
   718  0027  3004               	movlw	4
   719  0028  120A  118A  204A  120A  118A  	fcall	_initOsc
   720  002D                     l875:
   721                           
   722                           ;ESCLAVO1.c: 107:     config_ADC(0);
   723  002D  3000               	movlw	0
   724  002E  00F4               	movwf	config_ADC@channel
   725  002F  00F5               	movwf	config_ADC@channel+1
   726  0030  120A  118A  2100  120A  118A  	fcall	_config_ADC
   727  0035                     l877:
   728                           
   729                           ;ESCLAVO1.c: 110:     InitMSSP(SPI_SLAVE_SS_EN);
   730  0035  3004               	movlw	4
   731  0036  120A  118A  207A  120A  118A  	fcall	_InitMSSP
   732  003B                     l879:
   733                           
   734                           ;ESCLAVO1.c: 113:     INTCONbits.GIE = 1;
   735  003B  178B               	bsf	11,7	;volatile
   736  003C                     l881:
   737                           
   738                           ;ESCLAVO1.c: 114:     INTCONbits.PEIE = 1;
   739  003C  170B               	bsf	11,6	;volatile
   740  003D                     l883:
   741                           
   742                           ;ESCLAVO1.c: 115:     PIR1bits.ADIF = 0;
   743  003D  1283               	bcf	3,5	;RP0=0, select bank0
   744  003E  1303               	bcf	3,6	;RP1=0, select bank0
   745  003F  130C               	bcf	12,6	;volatile
   746  0040                     l885:
   747                           
   748                           ;ESCLAVO1.c: 116:     PIE1bits.ADIE = 1;
   749  0040  1683               	bsf	3,5	;RP0=1, select bank1
   750  0041  1303               	bcf	3,6	;RP1=0, select bank1
   751  0042  170C               	bsf	12,6	;volatile
   752  0043                     l887:
   753                           
   754                           ;ESCLAVO1.c: 117:     PIR1bits.SSPIF = 0;
   755  0043  1283               	bcf	3,5	;RP0=0, select bank0
   756  0044  1303               	bcf	3,6	;RP1=0, select bank0
   757  0045  118C               	bcf	12,3	;volatile
   758  0046                     l889:
   759                           
   760                           ;ESCLAVO1.c: 118:     PIE1bits.SSPIE = 1;
   761  0046  1683               	bsf	3,5	;RP0=1, select bank1
   762  0047  1303               	bcf	3,6	;RP1=0, select bank1
   763  0048  158C               	bsf	12,3	;volatile
   764  0049                     l68:
   765  0049  0008               	return
   766  004A                     __end_of_setup:
   767                           
   768                           	psect	text2
   769  004A                     __ptext2:	
   770 ;; *************** function _initOsc *****************
   771 ;; Defined at:
   772 ;;		line 12 in file "Oscilador.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  Valor           1    wreg     unsigned char 
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  Valor           1    4[COMMON] unsigned char 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         1       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         1       0       0       0       0
   790 ;;Total ram usage:        1 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 2
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_setup
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           
   801                           ;psect for function _initOsc
   802  004A                     _initOsc:
   803                           
   804                           ;incstack = 0
   805                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   806                           ;initOsc@Valor stored from wreg
   807  004A  00F4               	movwf	initOsc@Valor
   808  004B                     l727:
   809                           
   810                           ;Oscilador.c: 14:     if(Valor == 8){
   811  004B  3008               	movlw	8
   812  004C  0674               	xorwf	initOsc@Valor,w
   813  004D  1D03               	btfss	3,2
   814  004E  2850               	goto	u11
   815  004F  2851               	goto	u10
   816  0050                     u11:
   817  0050  2856               	goto	l731
   818  0051                     u10:
   819  0051                     l729:
   820                           
   821                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   822  0051  1683               	bsf	3,5	;RP0=1, select bank1
   823  0052  1303               	bcf	3,6	;RP1=0, select bank1
   824  0053  160F               	bsf	15,4	;volatile
   825                           
   826                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   827  0054  168F               	bsf	15,5	;volatile
   828                           
   829                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   830  0055  170F               	bsf	15,6	;volatile
   831  0056                     l731:
   832                           
   833                           ;Oscilador.c: 19:     if(Valor == 4){
   834  0056  3004               	movlw	4
   835  0057  0674               	xorwf	initOsc@Valor,w
   836  0058  1D03               	btfss	3,2
   837  0059  285B               	goto	u21
   838  005A  285C               	goto	u20
   839  005B                     u21:
   840  005B  2861               	goto	l735
   841  005C                     u20:
   842  005C                     l733:
   843                           
   844                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   845  005C  1683               	bsf	3,5	;RP0=1, select bank1
   846  005D  1303               	bcf	3,6	;RP1=0, select bank1
   847  005E  120F               	bcf	15,4	;volatile
   848                           
   849                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   850  005F  168F               	bsf	15,5	;volatile
   851                           
   852                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   853  0060  170F               	bsf	15,6	;volatile
   854  0061                     l735:
   855                           
   856                           ;Oscilador.c: 24:     if(Valor == 2){
   857  0061  3002               	movlw	2
   858  0062  0674               	xorwf	initOsc@Valor,w
   859  0063  1D03               	btfss	3,2
   860  0064  2866               	goto	u31
   861  0065  2867               	goto	u30
   862  0066                     u31:
   863  0066  286C               	goto	l739
   864  0067                     u30:
   865  0067                     l737:
   866                           
   867                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   868  0067  1683               	bsf	3,5	;RP0=1, select bank1
   869  0068  1303               	bcf	3,6	;RP1=0, select bank1
   870  0069  160F               	bsf	15,4	;volatile
   871                           
   872                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   873  006A  128F               	bcf	15,5	;volatile
   874                           
   875                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   876  006B  170F               	bsf	15,6	;volatile
   877  006C                     l739:
   878                           
   879                           ;Oscilador.c: 29:     if(Valor == 1){
   880  006C  0374               	decf	initOsc@Valor,w
   881  006D  1D03               	btfss	3,2
   882  006E  2870               	goto	u41
   883  006F  2871               	goto	u40
   884  0070                     u41:
   885  0070  2876               	goto	l104
   886  0071                     u40:
   887  0071                     l741:
   888                           
   889                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   890  0071  1683               	bsf	3,5	;RP0=1, select bank1
   891  0072  1303               	bcf	3,6	;RP1=0, select bank1
   892  0073  120F               	bcf	15,4	;volatile
   893                           
   894                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   895  0074  128F               	bcf	15,5	;volatile
   896                           
   897                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   898  0075  170F               	bsf	15,6	;volatile
   899  0076                     l104:	
   900                           ;Oscilador.c: 33:     }
   901                           
   902                           
   903                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   904  0076  1683               	bsf	3,5	;RP0=1, select bank1
   905  0077  1303               	bcf	3,6	;RP1=0, select bank1
   906  0078  140F               	bsf	15,0	;volatile
   907  0079                     l105:
   908  0079  0008               	return
   909  007A                     __end_of_initOsc:
   910                           
   911                           	psect	text3
   912  0100                     __ptext3:	
   913 ;; *************** function _config_ADC *****************
   914 ;; Defined at:
   915 ;;		line 36 in file "ADC.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  channel         2    4[COMMON] int 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         2       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          1       0       0       0       0
   932 ;;      Totals:         3       0       0       0       0
   933 ;;Total ram usage:        3 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 2
   936 ;; This function calls:
   937 ;;		Nothing
   938 ;; This function is called by:
   939 ;;		_setup
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _config_ADC
   945  0100                     _config_ADC:
   946  0100                     l859:	
   947                           ;incstack = 0
   948                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
   949                           
   950                           
   951                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
   952  0100  1683               	bsf	3,5	;RP0=1, select bank1
   953  0101  1303               	bcf	3,6	;RP1=0, select bank1
   954  0102  139F               	bcf	31,7	;volatile
   955                           
   956                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
   957  0103  121F               	bcf	31,4	;volatile
   958                           
   959                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
   960  0104  129F               	bcf	31,5	;volatile
   961  0105                     l861:
   962                           
   963                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
   964  0105  1283               	bcf	3,5	;RP0=0, select bank0
   965  0106  1303               	bcf	3,6	;RP1=0, select bank0
   966  0107  081F               	movf	31,w	;volatile
   967  0108  393F               	andlw	-193
   968  0109  3840               	iorlw	64
   969  010A  009F               	movwf	31	;volatile
   970                           
   971                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
   972  010B  0874               	movf	config_ADC@channel,w
   973  010C  00F6               	movwf	??_config_ADC
   974  010D  0DF6               	rlf	??_config_ADC,f
   975  010E  0DF6               	rlf	??_config_ADC,f
   976  010F  081F               	movf	31,w	;volatile
   977  0110  0676               	xorwf	??_config_ADC,w
   978  0111  39C3               	andlw	-61
   979  0112  0676               	xorwf	??_config_ADC,w
   980  0113  009F               	movwf	31	;volatile
   981  0114                     l863:
   982                           
   983                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
   984  0114  141F               	bsf	31,0	;volatile
   985  0115                     l865:
   986                           
   987                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   988  0115  3010               	movlw	16
   989  0116  00F6               	movwf	??_config_ADC
   990  0117                     u167:
   991  0117  0BF6               	decfsz	??_config_ADC,f
   992  0118  2917               	goto	u167
   993  0119  0000               	nop
   994  011A                     l96:
   995  011A  0008               	return
   996  011B                     __end_of_config_ADC:
   997                           
   998                           	psect	text4
   999  007A                     __ptext4:	
  1000 ;; *************** function _InitMSSP *****************
  1001 ;; Defined at:
  1002 ;;		line 10 in file "SPI.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  Modo            1    wreg     enum E1264
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  Modo            1    4[COMMON] enum E1264
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         1       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         1       0       0       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 2
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_setup
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _InitMSSP
  1032  007A                     _InitMSSP:
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1036                           ;InitMSSP@Modo stored from wreg
  1037  007A  00F4               	movwf	InitMSSP@Modo
  1038  007B                     l751:
  1039                           
  1040                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1041  007B  1683               	bsf	3,5	;RP0=1, select bank1
  1042  007C  1303               	bcf	3,6	;RP1=0, select bank1
  1043  007D  0194               	clrf	20	;volatile
  1044                           
  1045                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1046  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1047  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0080  0194               	clrf	20	;volatile
  1049  0081                     l753:
  1050                           
  1051                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1052  0081  1294               	bcf	20,5	;volatile
  1053  0082                     l755:
  1054                           
  1055                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1056  0082  1694               	bsf	20,5	;volatile
  1057  0083                     l757:
  1058                           
  1059                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1060  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0085  1287               	bcf	7,5	;volatile
  1063  0086                     l759:
  1064                           
  1065                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1066  0086  1607               	bsf	7,4	;volatile
  1067  0087                     l761:
  1068                           
  1069                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1070  0087  3006               	movlw	6
  1071  0088  0274               	subwf	InitMSSP@Modo,w
  1072  0089  1803               	skipnc
  1073  008A  288C               	goto	u51
  1074  008B  288D               	goto	u50
  1075  008C                     u51:
  1076  008C  2896               	goto	l767
  1077  008D                     u50:
  1078  008D                     l763:
  1079                           
  1080                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1081  008D  3004               	movlw	4
  1082  008E  0274               	subwf	InitMSSP@Modo,w
  1083  008F  1803               	skipnc
  1084  0090  2892               	goto	u61
  1085  0091  2893               	goto	u60
  1086  0092                     u61:
  1087  0092  2895               	goto	l123
  1088  0093                     u60:
  1089  0093                     l765:
  1090                           
  1091                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1092  0093  1187               	bcf	7,3	;volatile
  1093                           
  1094                           ;SPI.c: 29:         }
  1095  0094  2896               	goto	l767
  1096  0095                     l123:	
  1097                           ;SPI.c: 30:         else {
  1098                           
  1099                           
  1100                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1101  0095  1587               	bsf	7,3	;volatile
  1102  0096                     l767:
  1103                           
  1104                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1105  0096  3004               	movlw	4
  1106  0097  0674               	xorwf	InitMSSP@Modo,w
  1107  0098  1D03               	btfss	3,2
  1108  0099  289B               	goto	u71
  1109  009A  289C               	goto	u70
  1110  009B                     u71:
  1111  009B  289D               	goto	l771
  1112  009C                     u70:
  1113  009C                     l769:
  1114  009C  1685               	bsf	5,5	;volatile
  1115  009D                     l771:
  1116                           
  1117                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1118  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1119  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1120  009F  0814               	movf	20,w	;volatile
  1121  00A0  0474               	iorwf	InitMSSP@Modo,w	;volatile
  1122  00A1  0094               	movwf	20	;volatile
  1123  00A2                     l773:
  1124                           
  1125                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1126  00A2  1214               	bcf	20,4	;volatile
  1127  00A3                     l775:
  1128                           
  1129                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1130  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1131  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1132  00A5  1314               	bcf	20,6	;volatile
  1133  00A6                     l777:
  1134                           
  1135                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1136  00A6  1394               	bcf	20,7	;volatile
  1137  00A7                     l126:
  1138  00A7  0008               	return
  1139  00A8                     __end_of_InitMSSP:
  1140                           
  1141                           	psect	text5
  1142  00A8                     __ptext5:	
  1143 ;; *************** function _conversion *****************
  1144 ;; Defined at:
  1145 ;;		line 21 in file "ADC.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, status,2, status,0
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1159 ;;      Params:         0       0       0       0       0
  1160 ;;      Locals:         0       0       0       0       0
  1161 ;;      Temps:          1       0       0       0       0
  1162 ;;      Totals:         1       0       0       0       0
  1163 ;;Total ram usage:        1 bytes
  1164 ;; Hardware stack levels used: 1
  1165 ;; Hardware stack levels required when called: 2
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		_main
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           
  1174                           ;psect for function _conversion
  1175  00A8                     _conversion:
  1176  00A8                     l819:	
  1177                           ;incstack = 0
  1178                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1179                           
  1180                           
  1181                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1182  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1183  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1184  00AA  189F               	btfsc	31,1	;volatile
  1185  00AB  28AD               	goto	u111
  1186  00AC  28AE               	goto	u110
  1187  00AD                     u111:
  1188  00AD  28D5               	goto	l93
  1189  00AE                     u110:
  1190  00AE                     l821:
  1191                           
  1192                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1193  00AE  0C1F               	rrf	31,w	;volatile
  1194  00AF  00F4               	movwf	??_conversion
  1195  00B0  0C74               	rrf	??_conversion,w
  1196  00B1  390F               	andlw	15
  1197  00B2  3A01               	xorlw	1
  1198  00B3  1D03               	skipz
  1199  00B4  28B6               	goto	u121
  1200  00B5  28B7               	goto	u120
  1201  00B6                     u121:
  1202  00B6  28BF               	goto	l827
  1203  00B7                     u120:
  1204  00B7                     l823:
  1205                           
  1206                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1207  00B7  30C3               	movlw	-61
  1208  00B8  059F               	andwf	31,f	;volatile
  1209  00B9                     l825:
  1210                           
  1211                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1212  00B9  3010               	movlw	16
  1213  00BA  00F4               	movwf	??_conversion
  1214  00BB                     u177:
  1215  00BB  0BF4               	decfsz	??_conversion,f
  1216  00BC  28BB               	goto	u177
  1217  00BD  0000               	nop
  1218                           
  1219                           ;ADC.c: 26:         }
  1220  00BE  28CD               	goto	l833
  1221  00BF                     l827:
  1222  00BF  0C1F               	rrf	31,w	;volatile
  1223  00C0  00F4               	movwf	??_conversion
  1224  00C1  0C74               	rrf	??_conversion,w
  1225  00C2  390F               	andlw	15
  1226  00C3  3A00               	xorlw	0
  1227  00C4  1D03               	skipz
  1228  00C5  28C7               	goto	u131
  1229  00C6  28C8               	goto	u130
  1230  00C7                     u131:
  1231  00C7  28CD               	goto	l833
  1232  00C8                     u130:
  1233  00C8                     l829:
  1234                           
  1235                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1236  00C8  081F               	movf	31,w	;volatile
  1237  00C9  39C3               	andlw	-61
  1238  00CA  3804               	iorlw	4
  1239  00CB  009F               	movwf	31	;volatile
  1240  00CC  28B9               	goto	l825
  1241  00CD                     l833:
  1242                           
  1243                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1244  00CD  3010               	movlw	16
  1245  00CE  00F4               	movwf	??_conversion
  1246  00CF                     u187:
  1247  00CF  0BF4               	decfsz	??_conversion,f
  1248  00D0  28CF               	goto	u187
  1249  00D1  0000               	nop
  1250  00D2                     l835:
  1251                           
  1252                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1253  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1254  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1255  00D4  149F               	bsf	31,1	;volatile
  1256  00D5                     l93:
  1257  00D5  0008               	return
  1258  00D6                     __end_of_conversion:
  1259                           
  1260                           	psect	text6
  1261  00D6                     __ptext6:	
  1262 ;; *************** function _isr *****************
  1263 ;; Defined at:
  1264 ;;		line 54 in file "ESCLAVO1.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         0       0       0       0       0
  1279 ;;      Locals:         0       0       0       0       0
  1280 ;;      Temps:          3       0       0       0       0
  1281 ;;      Totals:         3       0       0       0       0
  1282 ;;Total ram usage:        3 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 1
  1285 ;; This function calls:
  1286 ;;		_ADC
  1287 ;;		_ReadMSSP
  1288 ;;		_WriteMSSP
  1289 ;; This function is called by:
  1290 ;;		Interrupt level 1
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           
  1295                           ;psect for function _isr
  1296  00D6                     _isr:
  1297  00D6                     i1l837:
  1298                           
  1299                           ;ESCLAVO1.c: 58:     if(SSPIF == 1){
  1300  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1301  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1302  00D8  1D8C               	btfss	12,3	;volatile
  1303  00D9  28DB               	goto	u14_21
  1304  00DA  28DC               	goto	u14_20
  1305  00DB                     u14_21:
  1306  00DB  28ED               	goto	i1l845
  1307  00DC                     u14_20:
  1308  00DC                     i1l839:
  1309                           
  1310                           ;ESCLAVO1.c: 59:         read = ReadMSSP();
  1311  00DC  120A  118A  2148  120A  118A  	fcall	_ReadMSSP
  1312  00E1  00F1               	movwf	??_isr
  1313  00E2  0871               	movf	??_isr,w
  1314  00E3  00F7               	movwf	_read
  1315  00E4                     i1l841:
  1316                           
  1317                           ;ESCLAVO1.c: 60:         WriteMSSP(cont1);
  1318  00E4  0879               	movf	_cont1,w
  1319  00E5  120A  118A  2152  120A  118A  	fcall	_WriteMSSP
  1320  00EA                     i1l843:
  1321                           
  1322                           ;ESCLAVO1.c: 61:         SSPIF = 0;
  1323  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1324  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1325  00EC  118C               	bcf	12,3	;volatile
  1326  00ED                     i1l845:
  1327                           
  1328                           ;ESCLAVO1.c: 67:     if(PIR1bits.ADIF){
  1329  00ED  1F0C               	btfss	12,6	;volatile
  1330  00EE  28F0               	goto	u15_21
  1331  00EF  28F1               	goto	u15_20
  1332  00F0                     u15_21:
  1333  00F0  28F9               	goto	i1l57
  1334  00F1                     u15_20:
  1335  00F1                     i1l847:
  1336                           
  1337                           ;ESCLAVO1.c: 68:         ADC();
  1338  00F1  120A  118A  211B  120A  118A  	fcall	_ADC
  1339  00F6                     i1l849:
  1340                           
  1341                           ;ESCLAVO1.c: 69:         PIR1bits.ADIF = 0;
  1342  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1343  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1344  00F8  130C               	bcf	12,6	;volatile
  1345  00F9                     i1l57:
  1346  00F9  0873               	movf	??_isr+2,w
  1347  00FA  008A               	movwf	10
  1348  00FB  0E72               	swapf	??_isr+1,w
  1349  00FC  0083               	movwf	3
  1350  00FD  0EFE               	swapf	btemp,f
  1351  00FE  0E7E               	swapf	btemp,w
  1352  00FF  0009               	retfie
  1353  0100                     __end_of_isr:
  1354                           
  1355                           	psect	intentry
  1356  0004                     __pintentry:	
  1357                           ;incstack = 0
  1358                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1359                           
  1360  0004                     interrupt_function:
  1361  007E                     saved_w	set	btemp
  1362  0004  00FE               	movwf	btemp
  1363  0005  0E03               	swapf	3,w
  1364  0006  00F2               	movwf	??_isr+1
  1365  0007  080A               	movf	10,w
  1366  0008  00F3               	movwf	??_isr+2
  1367  0009  120A  118A  28D6   	ljmp	_isr
  1368                           
  1369                           	psect	text7
  1370  0152                     __ptext7:	
  1371 ;; *************** function _WriteMSSP *****************
  1372 ;; Defined at:
  1373 ;;		line 55 in file "SPI.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  Data            1    wreg     unsigned char 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  Data            1    0[COMMON] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         1       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0
  1390 ;;      Totals:         1       0       0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_isr
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _WriteMSSP
  1402  0152                     _WriteMSSP:
  1403                           
  1404                           ;incstack = 0
  1405                           ; Regs used in _WriteMSSP: [wreg]
  1406                           ;WriteMSSP@Data stored from wreg
  1407  0152  00F0               	movwf	WriteMSSP@Data
  1408  0153                     i1l785:
  1409                           
  1410                           ;SPI.c: 59:     SSPBUF = Data;
  1411  0153  0870               	movf	WriteMSSP@Data,w
  1412  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0156  0093               	movwf	19	;volatile
  1415  0157                     i1l129:
  1416  0157  0008               	return
  1417  0158                     __end_of_WriteMSSP:
  1418                           
  1419                           	psect	text8
  1420  0148                     __ptext8:	
  1421 ;; *************** function _ReadMSSP *****************
  1422 ;; Defined at:
  1423 ;;		line 63 in file "SPI.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      unsigned char 
  1430 ;; Registers used:
  1431 ;;		wreg
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_isr
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _ReadMSSP
  1452  0148                     _ReadMSSP:
  1453  0148                     i1l779:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _ReadMSSP: [wreg]
  1456                           
  1457  0148                     i1l132:	
  1458                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  1459                           
  1460  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1462  014A  1C14               	btfss	20,0	;volatile
  1463  014B  294D               	goto	u8_21
  1464  014C  294E               	goto	u8_20
  1465  014D                     u8_21:
  1466  014D  2948               	goto	i1l132
  1467  014E                     u8_20:
  1468  014E                     i1l781:
  1469                           
  1470                           ;SPI.c: 65:     return(SSPBUF);
  1471  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1472  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0150  0813               	movf	19,w	;volatile
  1474  0151                     i1l135:
  1475  0151  0008               	return
  1476  0152                     __end_of_ReadMSSP:
  1477                           
  1478                           	psect	text9
  1479  011B                     __ptext9:	
  1480 ;; *************** function _ADC *****************
  1481 ;; Defined at:
  1482 ;;		line 11 in file "ADC.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0
  1498 ;;      Temps:          1       0       0       0       0
  1499 ;;      Totals:         1       0       0       0       0
  1500 ;;Total ram usage:        1 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_isr
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _ADC
  1511  011B                     _ADC:
  1512  011B                     i1l787:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1515                           
  1516                           
  1517                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1518  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1519  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1520  011D  0C1F               	rrf	31,w	;volatile
  1521  011E  00F0               	movwf	??_ADC
  1522  011F  0C70               	rrf	??_ADC,w
  1523  0120  390F               	andlw	15
  1524  0121  3A00               	xorlw	0
  1525  0122  1D03               	skipz
  1526  0123  2925               	goto	u9_21
  1527  0124  2926               	goto	u9_20
  1528  0125                     u9_21:
  1529  0125  292B               	goto	i1l791
  1530  0126                     u9_20:
  1531  0126                     i1l789:
  1532                           
  1533                           ;ADC.c: 13:         cont1 = ADRESH;
  1534  0126  081E               	movf	30,w	;volatile
  1535  0127  00F0               	movwf	??_ADC
  1536  0128  0870               	movf	??_ADC,w
  1537  0129  00F9               	movwf	_cont1
  1538                           
  1539                           ;ADC.c: 14:     }
  1540  012A  2935               	goto	i1l86
  1541  012B                     i1l791:
  1542  012B  0C1F               	rrf	31,w	;volatile
  1543  012C  00F0               	movwf	??_ADC
  1544  012D  0C70               	rrf	??_ADC,w
  1545  012E  390F               	andlw	15
  1546  012F  3A01               	xorlw	1
  1547  0130  1D03               	skipz
  1548  0131  2933               	goto	u10_21
  1549  0132  2934               	goto	u10_20
  1550  0133                     u10_21:
  1551  0133  2935               	goto	i1l86
  1552  0134                     u10_20:
  1553  0134  2926               	goto	i1l789
  1554  0135                     i1l86:
  1555  0135  0008               	return
  1556  0136                     __end_of_ADC:
  1557  007E                     btemp	set	126	;btemp
  1558  007E                     wtemp0	set	126
  1559                           
  1560                           	psect	config
  1561                           
  1562                           ;Config register CONFIG1 @ 0x2007
  1563                           ;	Oscillator Selection bits
  1564                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1565                           ;	Watchdog Timer Enable bit
  1566                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1567                           ;	Power-up Timer Enable bit
  1568                           ;	PWRTE = OFF, PWRT disabled
  1569                           ;	RE3/MCLR pin function select bit
  1570                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1571                           ;	Code Protection bit
  1572                           ;	CP = OFF, Program memory code protection is disabled
  1573                           ;	Data Code Protection bit
  1574                           ;	CPD = OFF, Data memory code protection is disabled
  1575                           ;	Brown Out Reset Selection bits
  1576                           ;	BOREN = OFF, BOR disabled
  1577                           ;	Internal External Switchover bit
  1578                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1579                           ;	Fail-Safe Clock Monitor Enabled bit
  1580                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1581                           ;	Low Voltage Programming Enable bit
  1582                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1583                           ;	In-Circuit Debugger Mode bit
  1584                           ;	DEBUG = 0x1, unprogrammed default
  1585  2007                     	org	8199
  1586  2007  20D4               	dw	8404
  1587                           
  1588                           ;Config register CONFIG2 @ 0x2008
  1589                           ;	Brown-out Reset Selection bit
  1590                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1591                           ;	Flash Program Memory Self Write Enable bits
  1592                           ;	WRT = OFF, Write protection off
  1593  2008                     	org	8200
  1594  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_config_ADC

Critical Paths under _isr in COMMON

    _isr->_ADC
    _isr->_WriteMSSP

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     218
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     218
                           _InitMSSP
                         _config_ADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              4 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                                _ADC
                           _ReadMSSP
                          _WriteMSSP
 ---------------------------------------------------------------------------------
 (4) _WriteMSSP                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
   _setup
     _InitMSSP
     _config_ADC
     _initOsc

 _isr (ROOT)
   _ADC
   _ReadMSSP
   _WriteMSSP

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 18 08:03:26 2022

            _SSPSTATbits 0094                       l68 0049                       l93 00D5  
                     l96 011A                       u10 0051                       u11 0050  
                     u20 005C                       u21 005B                       u30 0067  
                     u31 0066                       u40 0071                       u41 0070  
                     u50 008D                       u51 008C                       u60 0093  
                     u61 0092                       u70 009C                       u71 009B  
                    l104 0076                      l105 0079                      l123 0095  
                    l126 00A7                      _ADC 011B                      l731 0056  
                    l821 00AE                      l741 0071                      l733 005C  
                    l823 00B7                      l751 007B                      l735 0061  
                    l727 004B                      l833 00CD                      l825 00B9  
                    l761 0087                      l753 0081                      l737 0067  
                    l729 0051                      l835 00D2                      l827 00BF  
                    l819 00A8                      l771 009D                      l763 008D  
                    l755 0082                      l739 006C                      l829 00C8  
                    l773 00A2                      l765 0093                      l757 0083  
                    l861 0105                      l775 00A3                      l767 0096  
                    l759 0086                      l863 0114                      l871 001B  
                    l777 00A6                      l769 009C                      l865 0115  
                    l881 003C                      l873 0027                      l859 0100  
                    l883 003D                      l875 002D                      l867 0016  
                    l891 0136                      l885 0040                      l877 0035  
                    l869 001A                      l893 013B                      l887 0043  
                    l879 003B                      l895 013E                      l889 0046  
                    l897 013F                      u110 00AE                      u111 00AD  
                    u120 00B7                      u121 00B6                      u130 00C8  
                    u131 00C7                      u167 0117                      u177 00BB  
                    u187 00CF                      _isr 00D6                     ?_ADC 0070  
                   ?_isr 0070                     i1l57 00F9                     i1l86 0135  
                   u8_20 014E                     u8_21 014D                     u9_20 0126  
                   u9_21 0125                     _main 0136                     _read 0077  
                   btemp 007E                     start 000C                    ??_ADC 0070  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l132 0148                    i1l135 0151                    i1l129 0157  
                  i1l841 00E4                    i1l843 00EA                    i1l781 014E  
                  i1l845 00ED                    i1l837 00D6                    i1l791 012B  
                  i1l847 00F1                    i1l839 00DC                    i1l785 0153  
                  i1l849 00F6                    i1l787 011B                    i1l779 0148  
                  i1l789 0126                    u10_20 0134                    u10_21 0133  
                  u14_20 00DC                    u14_21 00DB                    u15_20 00F1  
                  u15_21 00F0                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _SSPIF 0063  
           InitMSSP@Modo 0074                    _cont1 0079                    _cont2 0078  
        __end_of_initOsc 007A                    _setup 0016                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0148         __end_of_InitMSSP 00A8         __end_of_ReadMSSP 0152  
                 ??_main 0077                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SSPCON 0014                   _SSPBUF 0013  
              ??_initOsc 0074                   saved_w 007E  __end_of__initialization 0012  
     __size_of_WriteMSSP 0006           __pcstackCOMMON 0070            __end_of_setup 004A  
                ??_setup 0077                ?_InitMSSP 0070                ?_ReadMSSP 0070  
             __pmaintext 0136               __pintentry 0004        __end_of_WriteMSSP 0158  
           initOsc@Valor 0074               _config_ADC 0100                  _SSPSTAT 0094  
             ??_InitMSSP 0074               ??_ReadMSSP 0070               _conversion 00A8  
                __ptext1 0016                  __ptext2 004A                  __ptext3 0100  
                __ptext4 007A                  __ptext5 00A8                  __ptext6 00D6  
                __ptext7 0152                  __ptext8 0148                  __ptext9 011B  
           __size_of_ADC 001B                  _initOsc 004A             __size_of_isr 002A  
   end_of_initialization 0012              ?_config_ADC 0074                _TRISAbits 0085  
              _TRISCbits 0087              ?_conversion 0070            WriteMSSP@Data 0070  
    start_initialization 000F              __end_of_ADC 0136              __end_of_isr 0100  
      __size_of_InitMSSP 002E        __size_of_ReadMSSP 000A      __size_of_config_ADC 001B  
    __size_of_conversion 002E              __pbssCOMMON 0077                ___latbits 0002  
              _WriteMSSP 0152        config_ADC@channel 0074                 ?_initOsc 0070  
             ?_WriteMSSP 0070           __size_of_setup 0034        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_config_ADC 0076                 _InitMSSP 007A  
               _ReadMSSP 0148             ??_conversion 0074       __end_of_config_ADC 011B  
     __end_of_conversion 00D6         __size_of_initOsc 0030              ??_WriteMSSP 0070  
          __size_of_main 0012               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F               _SSPCONbits 0014  
