

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 09:08:39 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCON	set	20
   447  0014                     _SSPCONbits	set	20
   448  001E                     _ADRESH	set	30
   449  000B                     _INTCONbits	set	11
   450  0006                     _PORTB	set	6
   451  0009                     _PORTE	set	9
   452  0008                     _PORTD	set	8
   453  001F                     _ADCON0bits	set	31
   454  000C                     _PIR1bits	set	12
   455  0094                     _SSPSTATbits	set	148
   456  0085                     _TRISAbits	set	133
   457  0087                     _TRISCbits	set	135
   458  008F                     _OSCCONbits	set	143
   459  009F                     _ADCON1bits	set	159
   460  008C                     _PIE1bits	set	140
   461  0089                     _TRISE	set	137
   462  0088                     _TRISD	set	136
   463  0086                     _TRISB	set	134
   464  0085                     _TRISA	set	133
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467                           
   468                           	psect	cinit
   469  000F                     start_initialization:	
   470                           ; #config settings
   471                           
   472  000F                     __initialization:
   473                           
   474                           ; Clear objects allocated to COMMON
   475  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   476  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   477  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   478  0012                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  0012                     __end_of__initialization:
   482  0012  0183               	clrf	3
   483  0013  120A  118A  28D1   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMMON
   486  0077                     __pbssCOMMON:
   487  0077                     _read:
   488  0077                     	ds	1
   489  0078                     _cont2:
   490  0078                     	ds	1
   491  0079                     _cont1:
   492  0079                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:
   496  0070                     ?_ADC:
   497  0070                     ??_ADC:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_setup:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_conversion:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_ReadMSSP:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_WriteMSSP:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_initOsc:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_InitMSSP:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_isr:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_main:	
   522                           ; 1 bytes @ 0x0
   523                           
   524                           
   525                           ; 1 bytes @ 0x0
   526  0070                     	ds	1
   527  0071                     ??_isr:
   528                           
   529                           ; 1 bytes @ 0x1
   530  0071                     	ds	2
   531  0073                     ??_conversion:
   532  0073                     ??_ReadMSSP:	
   533                           ; 1 bytes @ 0x3
   534                           
   535  0073                     ??_WriteMSSP:	
   536                           ; 1 bytes @ 0x3
   537                           
   538  0073                     ??_initOsc:	
   539                           ; 1 bytes @ 0x3
   540                           
   541  0073                     ?_config_ADC:	
   542                           ; 1 bytes @ 0x3
   543                           
   544  0073                     ??_InitMSSP:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  0073                     initOsc@Valor:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0073                     InitMSSP@Modo:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     WriteMSSP@Data:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0073                     config_ADC@channel:	
   557                           ; 1 bytes @ 0x3
   558                           
   559                           
   560                           ; 2 bytes @ 0x3
   561  0073                     	ds	2
   562  0075                     ??_config_ADC:
   563                           
   564                           ; 1 bytes @ 0x5
   565  0075                     	ds	1
   566  0076                     ??_setup:
   567  0076                     ??_main:	
   568                           ; 1 bytes @ 0x6
   569                           
   570                           
   571                           ; 1 bytes @ 0x6
   572  0076                     	ds	1
   573                           
   574                           	psect	maintext
   575  00D1                     __pmaintext:	
   576 ;;
   577 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   578 ;;
   579 ;; *************** function _main *****************
   580 ;; Defined at:
   581 ;;		line 64 in file "ESCLAVO1.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : B00/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          1       0       0       0       0
   598 ;;      Totals:         1       0       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels required when called: 4
   601 ;; This function calls:
   602 ;;		_ReadMSSP
   603 ;;		_WriteMSSP
   604 ;;		_conversion
   605 ;;		_setup
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _main
   613  00D1                     _main:
   614  00D1                     l873:	
   615                           ;incstack = 0
   616                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   617                           
   618                           
   619                           ;ESCLAVO1.c: 65:     setup();
   620  00D1  120A  118A  2075  120A  118A  	fcall	_setup
   621  00D6                     l875:
   622                           
   623                           ;ESCLAVO1.c: 66:     ADCON0bits.GO = 1;
   624  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   625  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   626  00D8  149F               	bsf	31,1	;volatile
   627  00D9                     l877:
   628                           
   629                           ;ESCLAVO1.c: 67:     read = 0;
   630  00D9  01F7               	clrf	_read
   631  00DA                     l879:
   632                           
   633                           ;ESCLAVO1.c: 73:         conversion();
   634  00DA  120A  118A  20A3  120A  118A  	fcall	_conversion
   635  00DF                     l881:
   636                           
   637                           ;ESCLAVO1.c: 78:         read = ReadMSSP();
   638  00DF  120A  118A  2144  120A  118A  	fcall	_ReadMSSP
   639  00E4  00F6               	movwf	??_main
   640  00E5  0876               	movf	??_main,w
   641  00E6  00F7               	movwf	_read
   642  00E7                     l883:
   643                           
   644                           ;ESCLAVO1.c: 79:         if(read == 1){
   645  00E7  0377               	decf	_read,w
   646  00E8  1D03               	btfss	3,2
   647  00E9  28EB               	goto	u161
   648  00EA  28EC               	goto	u160
   649  00EB                     u161:
   650  00EB  28DA               	goto	l879
   651  00EC                     u160:
   652  00EC                     l885:
   653                           
   654                           ;ESCLAVO1.c: 80:             WriteMSSP(cont1);
   655  00EC  0879               	movf	_cont1,w
   656  00ED  120A  118A  214E  120A  118A  	fcall	_WriteMSSP
   657  00F2  28DA               	goto	l879
   658  00F3  120A  118A  280C   	ljmp	start
   659  00F6                     __end_of_main:
   660                           
   661                           	psect	text1
   662  0075                     __ptext1:	
   663 ;; *************** function _setup *****************
   664 ;; Defined at:
   665 ;;		line 88 in file "ESCLAVO1.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; Hardware stack levels required when called: 3
   686 ;; This function calls:
   687 ;;		_InitMSSP
   688 ;;		_config_ADC
   689 ;;		_initOsc
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _setup
   697  0075                     _setup:
   698  0075                     l853:	
   699                           ;incstack = 0
   700                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;ESCLAVO1.c: 91:     ANSEL = 0b0011;
   704  0075  3003               	movlw	3
   705  0076  1683               	bsf	3,5	;RP0=1, select bank3
   706  0077  1703               	bsf	3,6	;RP1=1, select bank3
   707  0078  0088               	movwf	8	;volatile
   708  0079                     l855:
   709                           
   710                           ;ESCLAVO1.c: 92:     ANSELH = 0;
   711  0079  0189               	clrf	9	;volatile
   712  007A                     l857:
   713                           
   714                           ;ESCLAVO1.c: 94:     TRISA = 0b0011;
   715  007A  3003               	movlw	3
   716  007B  1683               	bsf	3,5	;RP0=1, select bank1
   717  007C  1303               	bcf	3,6	;RP1=0, select bank1
   718  007D  0085               	movwf	5	;volatile
   719                           
   720                           ;ESCLAVO1.c: 95:     TRISB = 0;
   721  007E  0186               	clrf	6	;volatile
   722                           
   723                           ;ESCLAVO1.c: 96:     TRISD = 0;
   724  007F  0188               	clrf	8	;volatile
   725                           
   726                           ;ESCLAVO1.c: 97:     TRISE = 0;
   727  0080  0189               	clrf	9	;volatile
   728                           
   729                           ;ESCLAVO1.c: 99:     PORTD = 0;
   730  0081  1283               	bcf	3,5	;RP0=0, select bank0
   731  0082  1303               	bcf	3,6	;RP1=0, select bank0
   732  0083  0188               	clrf	8	;volatile
   733                           
   734                           ;ESCLAVO1.c: 100:     PORTE = 0;
   735  0084  0189               	clrf	9	;volatile
   736                           
   737                           ;ESCLAVO1.c: 101:     PORTB = 0;
   738  0085  0186               	clrf	6	;volatile
   739  0086                     l859:
   740                           
   741                           ;ESCLAVO1.c: 104:     initOsc(4);
   742  0086  3004               	movlw	4
   743  0087  120A  118A  2016  120A  118A  	fcall	_initOsc
   744  008C                     l861:
   745                           
   746                           ;ESCLAVO1.c: 107:     config_ADC(0);
   747  008C  3000               	movlw	0
   748  008D  00F3               	movwf	config_ADC@channel
   749  008E  00F4               	movwf	config_ADC@channel+1
   750  008F  120A  118A  2114  120A  118A  	fcall	_config_ADC
   751  0094                     l863:
   752                           
   753                           ;ESCLAVO1.c: 110:     InitMSSP(SPI_SLAVE_SS_EN);
   754  0094  3004               	movlw	4
   755  0095  120A  118A  2046  120A  118A  	fcall	_InitMSSP
   756  009A                     l865:
   757                           
   758                           ;ESCLAVO1.c: 113:     INTCONbits.GIE = 1;
   759  009A  178B               	bsf	11,7	;volatile
   760  009B                     l867:
   761                           
   762                           ;ESCLAVO1.c: 114:     INTCONbits.PEIE = 1;
   763  009B  170B               	bsf	11,6	;volatile
   764  009C                     l869:
   765                           
   766                           ;ESCLAVO1.c: 115:     PIR1bits.ADIF = 0;
   767  009C  1283               	bcf	3,5	;RP0=0, select bank0
   768  009D  1303               	bcf	3,6	;RP1=0, select bank0
   769  009E  130C               	bcf	12,6	;volatile
   770  009F                     l871:
   771                           
   772                           ;ESCLAVO1.c: 116:     PIE1bits.ADIE = 1;
   773  009F  1683               	bsf	3,5	;RP0=1, select bank1
   774  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   775  00A1  170C               	bsf	12,6	;volatile
   776  00A2                     l66:
   777  00A2  0008               	return
   778  00A3                     __end_of_setup:
   779                           
   780                           	psect	text2
   781  0016                     __ptext2:	
   782 ;; *************** function _initOsc *****************
   783 ;; Defined at:
   784 ;;		line 12 in file "Oscilador.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  Valor           1    wreg     unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  Valor           1    3[COMMON] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 2
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_setup
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _initOsc
   814  0016                     _initOsc:
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   818                           ;initOsc@Valor stored from wreg
   819  0016  00F3               	movwf	initOsc@Valor
   820  0017                     l725:
   821                           
   822                           ;Oscilador.c: 14:     if(Valor == 8){
   823  0017  3008               	movlw	8
   824  0018  0673               	xorwf	initOsc@Valor,w
   825  0019  1D03               	btfss	3,2
   826  001A  281C               	goto	u11
   827  001B  281D               	goto	u10
   828  001C                     u11:
   829  001C  2822               	goto	l729
   830  001D                     u10:
   831  001D                     l727:
   832                           
   833                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   834  001D  1683               	bsf	3,5	;RP0=1, select bank1
   835  001E  1303               	bcf	3,6	;RP1=0, select bank1
   836  001F  160F               	bsf	15,4	;volatile
   837                           
   838                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   839  0020  168F               	bsf	15,5	;volatile
   840                           
   841                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   842  0021  170F               	bsf	15,6	;volatile
   843  0022                     l729:
   844                           
   845                           ;Oscilador.c: 19:     if(Valor == 4){
   846  0022  3004               	movlw	4
   847  0023  0673               	xorwf	initOsc@Valor,w
   848  0024  1D03               	btfss	3,2
   849  0025  2827               	goto	u21
   850  0026  2828               	goto	u20
   851  0027                     u21:
   852  0027  282D               	goto	l733
   853  0028                     u20:
   854  0028                     l731:
   855                           
   856                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   857  0028  1683               	bsf	3,5	;RP0=1, select bank1
   858  0029  1303               	bcf	3,6	;RP1=0, select bank1
   859  002A  120F               	bcf	15,4	;volatile
   860                           
   861                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   862  002B  168F               	bsf	15,5	;volatile
   863                           
   864                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   865  002C  170F               	bsf	15,6	;volatile
   866  002D                     l733:
   867                           
   868                           ;Oscilador.c: 24:     if(Valor == 2){
   869  002D  3002               	movlw	2
   870  002E  0673               	xorwf	initOsc@Valor,w
   871  002F  1D03               	btfss	3,2
   872  0030  2832               	goto	u31
   873  0031  2833               	goto	u30
   874  0032                     u31:
   875  0032  2838               	goto	l737
   876  0033                     u30:
   877  0033                     l735:
   878                           
   879                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   880  0033  1683               	bsf	3,5	;RP0=1, select bank1
   881  0034  1303               	bcf	3,6	;RP1=0, select bank1
   882  0035  160F               	bsf	15,4	;volatile
   883                           
   884                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   885  0036  128F               	bcf	15,5	;volatile
   886                           
   887                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   888  0037  170F               	bsf	15,6	;volatile
   889  0038                     l737:
   890                           
   891                           ;Oscilador.c: 29:     if(Valor == 1){
   892  0038  0373               	decf	initOsc@Valor,w
   893  0039  1D03               	btfss	3,2
   894  003A  283C               	goto	u41
   895  003B  283D               	goto	u40
   896  003C                     u41:
   897  003C  2842               	goto	l102
   898  003D                     u40:
   899  003D                     l739:
   900                           
   901                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   902  003D  1683               	bsf	3,5	;RP0=1, select bank1
   903  003E  1303               	bcf	3,6	;RP1=0, select bank1
   904  003F  120F               	bcf	15,4	;volatile
   905                           
   906                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   907  0040  128F               	bcf	15,5	;volatile
   908                           
   909                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   910  0041  170F               	bsf	15,6	;volatile
   911  0042                     l102:	
   912                           ;Oscilador.c: 33:     }
   913                           
   914                           
   915                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   916  0042  1683               	bsf	3,5	;RP0=1, select bank1
   917  0043  1303               	bcf	3,6	;RP1=0, select bank1
   918  0044  140F               	bsf	15,0	;volatile
   919  0045                     l103:
   920  0045  0008               	return
   921  0046                     __end_of_initOsc:
   922                           
   923                           	psect	text3
   924  0114                     __ptext3:	
   925 ;; *************** function _config_ADC *****************
   926 ;; Defined at:
   927 ;;		line 36 in file "ADC.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  channel         2    3[COMMON] int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         2       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          1       0       0       0       0
   944 ;;      Totals:         3       0       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 2
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_setup
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _config_ADC
   957  0114                     _config_ADC:
   958  0114                     l845:	
   959                           ;incstack = 0
   960                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
   961                           
   962                           
   963                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
   964  0114  1683               	bsf	3,5	;RP0=1, select bank1
   965  0115  1303               	bcf	3,6	;RP1=0, select bank1
   966  0116  139F               	bcf	31,7	;volatile
   967                           
   968                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
   969  0117  121F               	bcf	31,4	;volatile
   970                           
   971                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
   972  0118  129F               	bcf	31,5	;volatile
   973  0119                     l847:
   974                           
   975                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
   976  0119  1283               	bcf	3,5	;RP0=0, select bank0
   977  011A  1303               	bcf	3,6	;RP1=0, select bank0
   978  011B  081F               	movf	31,w	;volatile
   979  011C  393F               	andlw	-193
   980  011D  3840               	iorlw	64
   981  011E  009F               	movwf	31	;volatile
   982                           
   983                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
   984  011F  0873               	movf	config_ADC@channel,w
   985  0120  00F5               	movwf	??_config_ADC
   986  0121  0DF5               	rlf	??_config_ADC,f
   987  0122  0DF5               	rlf	??_config_ADC,f
   988  0123  081F               	movf	31,w	;volatile
   989  0124  0675               	xorwf	??_config_ADC,w
   990  0125  39C3               	andlw	-61
   991  0126  0675               	xorwf	??_config_ADC,w
   992  0127  009F               	movwf	31	;volatile
   993  0128                     l849:
   994                           
   995                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
   996  0128  141F               	bsf	31,0	;volatile
   997  0129                     l851:
   998                           
   999                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1000  0129  3010               	movlw	16
  1001  012A  00F5               	movwf	??_config_ADC
  1002  012B                     u177:
  1003  012B  0BF5               	decfsz	??_config_ADC,f
  1004  012C  292B               	goto	u177
  1005  012D  0000               	nop
  1006  012E                     l94:
  1007  012E  0008               	return
  1008  012F                     __end_of_config_ADC:
  1009                           
  1010                           	psect	text4
  1011  0046                     __ptext4:	
  1012 ;; *************** function _InitMSSP *****************
  1013 ;; Defined at:
  1014 ;;		line 10 in file "SPI.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  Modo            1    wreg     enum E1264
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  Modo            1    3[COMMON] enum E1264
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         1       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0
  1031 ;;      Totals:         1       0       0       0       0
  1032 ;;Total ram usage:        1 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 2
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_setup
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _InitMSSP
  1044  0046                     _InitMSSP:
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1048                           ;InitMSSP@Modo stored from wreg
  1049  0046  00F3               	movwf	InitMSSP@Modo
  1050  0047                     l749:
  1051                           
  1052                           ;SPI.c: 14:     SSPCONbits.SSPEN = 0;
  1053  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0049  1294               	bcf	20,5	;volatile
  1056                           
  1057                           ;SPI.c: 16:     SSPCONbits.SSPEN = 1;
  1058  004A  1694               	bsf	20,5	;volatile
  1059                           
  1060                           ;SPI.c: 19:     TRISCbits.TRISC5 = 0;
  1061  004B  1683               	bsf	3,5	;RP0=1, select bank1
  1062  004C  1303               	bcf	3,6	;RP1=0, select bank1
  1063  004D  1287               	bcf	7,5	;volatile
  1064                           
  1065                           ;SPI.c: 20:     TRISCbits.TRISC4 = 1;
  1066  004E  1607               	bsf	7,4	;volatile
  1067  004F                     l751:
  1068                           
  1069                           ;SPI.c: 21:     if (Modo < 0b00000110){
  1070  004F  3006               	movlw	6
  1071  0050  0273               	subwf	InitMSSP@Modo,w
  1072  0051  1803               	skipnc
  1073  0052  2854               	goto	u51
  1074  0053  2855               	goto	u50
  1075  0054                     u51:
  1076  0054  285E               	goto	l757
  1077  0055                     u50:
  1078  0055                     l753:
  1079                           
  1080                           ;SPI.c: 23:         if (Modo < 0b00000100){
  1081  0055  3004               	movlw	4
  1082  0056  0273               	subwf	InitMSSP@Modo,w
  1083  0057  1803               	skipnc
  1084  0058  285A               	goto	u61
  1085  0059  285B               	goto	u60
  1086  005A                     u61:
  1087  005A  285D               	goto	l121
  1088  005B                     u60:
  1089  005B                     l755:
  1090                           
  1091                           ;SPI.c: 24:             TRISCbits.TRISC3 = 0;
  1092  005B  1187               	bcf	7,3	;volatile
  1093                           
  1094                           ;SPI.c: 25:         }
  1095  005C  285E               	goto	l757
  1096  005D                     l121:	
  1097                           ;SPI.c: 26:         else {
  1098                           
  1099                           
  1100                           ;SPI.c: 27:             TRISCbits.TRISC3 = 1;
  1101  005D  1587               	bsf	7,3	;volatile
  1102  005E                     l757:
  1103                           
  1104                           ;SPI.c: 32:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1105  005E  3004               	movlw	4
  1106  005F  0673               	xorwf	InitMSSP@Modo,w
  1107  0060  1D03               	btfss	3,2
  1108  0061  2863               	goto	u71
  1109  0062  2864               	goto	u70
  1110  0063                     u71:
  1111  0063  2865               	goto	l761
  1112  0064                     u70:
  1113  0064                     l759:
  1114  0064  1685               	bsf	5,5	;volatile
  1115  0065                     l761:
  1116                           
  1117                           ;SPI.c: 36:     SSPCON = SSPCON | Modo;
  1118  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0067  0814               	movf	20,w	;volatile
  1121  0068  0473               	iorwf	InitMSSP@Modo,w	;volatile
  1122  0069  0094               	movwf	20	;volatile
  1123  006A                     l763:
  1124                           
  1125                           ;SPI.c: 38:     PIE1bits.SSPIE = 0;
  1126  006A  1683               	bsf	3,5	;RP0=1, select bank1
  1127  006B  1303               	bcf	3,6	;RP1=0, select bank1
  1128  006C  118C               	bcf	12,3	;volatile
  1129  006D                     l765:
  1130                           
  1131                           ;SPI.c: 42:     SSPCONbits.CKP = 0;
  1132  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1133  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1134  006F  1214               	bcf	20,4	;volatile
  1135  0070                     l767:
  1136                           
  1137                           ;SPI.c: 45:     SSPSTATbits.CKE = 1;
  1138  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0071  1303               	bcf	3,6	;RP1=0, select bank1
  1140  0072  1714               	bsf	20,6	;volatile
  1141  0073                     l769:
  1142                           
  1143                           ;SPI.c: 47:     SSPSTATbits.SMP = 0;
  1144  0073  1394               	bcf	20,7	;volatile
  1145  0074                     l124:
  1146  0074  0008               	return
  1147  0075                     __end_of_InitMSSP:
  1148                           
  1149                           	psect	text5
  1150  00A3                     __ptext5:	
  1151 ;; *************** function _conversion *****************
  1152 ;; Defined at:
  1153 ;;		line 21 in file "ADC.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		wreg, status,2, status,0
  1162 ;; Tracked objects:
  1163 ;;		On entry : 0/0
  1164 ;;		On exit  : 0/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1167 ;;      Params:         0       0       0       0       0
  1168 ;;      Locals:         0       0       0       0       0
  1169 ;;      Temps:          1       0       0       0       0
  1170 ;;      Totals:         1       0       0       0       0
  1171 ;;Total ram usage:        1 bytes
  1172 ;; Hardware stack levels used: 1
  1173 ;; Hardware stack levels required when called: 2
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           
  1182                           ;psect for function _conversion
  1183  00A3                     _conversion:
  1184  00A3                     l799:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1187                           
  1188                           
  1189                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1190  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1191  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1192  00A5  189F               	btfsc	31,1	;volatile
  1193  00A6  28A8               	goto	u101
  1194  00A7  28A9               	goto	u100
  1195  00A8                     u101:
  1196  00A8  28D0               	goto	l91
  1197  00A9                     u100:
  1198  00A9                     l801:
  1199                           
  1200                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1201  00A9  0C1F               	rrf	31,w	;volatile
  1202  00AA  00F3               	movwf	??_conversion
  1203  00AB  0C73               	rrf	??_conversion,w
  1204  00AC  390F               	andlw	15
  1205  00AD  3A01               	xorlw	1
  1206  00AE  1D03               	skipz
  1207  00AF  28B1               	goto	u111
  1208  00B0  28B2               	goto	u110
  1209  00B1                     u111:
  1210  00B1  28BA               	goto	l807
  1211  00B2                     u110:
  1212  00B2                     l803:
  1213                           
  1214                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1215  00B2  30C3               	movlw	-61
  1216  00B3  059F               	andwf	31,f	;volatile
  1217  00B4                     l805:
  1218                           
  1219                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1220  00B4  3010               	movlw	16
  1221  00B5  00F3               	movwf	??_conversion
  1222  00B6                     u187:
  1223  00B6  0BF3               	decfsz	??_conversion,f
  1224  00B7  28B6               	goto	u187
  1225  00B8  0000               	nop
  1226                           
  1227                           ;ADC.c: 26:         }
  1228  00B9  28C8               	goto	l813
  1229  00BA                     l807:
  1230  00BA  0C1F               	rrf	31,w	;volatile
  1231  00BB  00F3               	movwf	??_conversion
  1232  00BC  0C73               	rrf	??_conversion,w
  1233  00BD  390F               	andlw	15
  1234  00BE  3A00               	xorlw	0
  1235  00BF  1D03               	skipz
  1236  00C0  28C2               	goto	u121
  1237  00C1  28C3               	goto	u120
  1238  00C2                     u121:
  1239  00C2  28C8               	goto	l813
  1240  00C3                     u120:
  1241  00C3                     l809:
  1242                           
  1243                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1244  00C3  081F               	movf	31,w	;volatile
  1245  00C4  39C3               	andlw	-61
  1246  00C5  3804               	iorlw	4
  1247  00C6  009F               	movwf	31	;volatile
  1248  00C7  28B4               	goto	l805
  1249  00C8                     l813:
  1250                           
  1251                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1252  00C8  3010               	movlw	16
  1253  00C9  00F3               	movwf	??_conversion
  1254  00CA                     u197:
  1255  00CA  0BF3               	decfsz	??_conversion,f
  1256  00CB  28CA               	goto	u197
  1257  00CC  0000               	nop
  1258  00CD                     l815:
  1259                           
  1260                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1261  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1262  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1263  00CF  149F               	bsf	31,1	;volatile
  1264  00D0                     l91:
  1265  00D0  0008               	return
  1266  00D1                     __end_of_conversion:
  1267                           
  1268                           	psect	text6
  1269  014E                     __ptext6:	
  1270 ;; *************** function _WriteMSSP *****************
  1271 ;; Defined at:
  1272 ;;		line 51 in file "SPI.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  Data            1    wreg     unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  Data            1    3[COMMON] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         1       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0
  1289 ;;      Totals:         1       0       0       0       0
  1290 ;;Total ram usage:        1 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 2
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function _WriteMSSP
  1302  014E                     _WriteMSSP:
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _WriteMSSP: [wreg]
  1306                           ;WriteMSSP@Data stored from wreg
  1307  014E  00F3               	movwf	WriteMSSP@Data
  1308  014F                     l823:
  1309                           
  1310                           ;SPI.c: 55:     SSPBUF = Data;
  1311  014F  0873               	movf	WriteMSSP@Data,w
  1312  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0152  0093               	movwf	19	;volatile
  1315  0153                     l127:
  1316  0153  0008               	return
  1317  0154                     __end_of_WriteMSSP:
  1318                           
  1319                           	psect	text7
  1320  0144                     __ptext7:	
  1321 ;; *************** function _ReadMSSP *****************
  1322 ;; Defined at:
  1323 ;;		line 59 in file "SPI.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      unsigned char 
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 2
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _ReadMSSP
  1353  0144                     _ReadMSSP:
  1354  0144                     l817:	
  1355                           ;incstack = 0
  1356                           ; Regs used in _ReadMSSP: [wreg]
  1357                           
  1358  0144                     l130:	
  1359                           ;SPI.c: 60:     while(SSPSTATbits.BF == 0){}
  1360                           
  1361  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1362  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1363  0146  1C14               	btfss	20,0	;volatile
  1364  0147  2949               	goto	u131
  1365  0148  294A               	goto	u130
  1366  0149                     u131:
  1367  0149  2944               	goto	l130
  1368  014A                     u130:
  1369  014A                     l819:
  1370                           
  1371                           ;SPI.c: 61:     return(SSPBUF);
  1372  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1373  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1374  014C  0813               	movf	19,w	;volatile
  1375  014D                     l133:
  1376  014D  0008               	return
  1377  014E                     __end_of_ReadMSSP:
  1378                           
  1379                           	psect	text8
  1380  012F                     __ptext8:	
  1381 ;; *************** function _isr *****************
  1382 ;; Defined at:
  1383 ;;		line 56 in file "ESCLAVO1.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2, status,0, pclath, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          2       0       0       0       0
  1400 ;;      Totals:         2       0       0       0       0
  1401 ;;Total ram usage:        2 bytes
  1402 ;; Hardware stack levels used: 1
  1403 ;; Hardware stack levels required when called: 1
  1404 ;; This function calls:
  1405 ;;		_ADC
  1406 ;; This function is called by:
  1407 ;;		Interrupt level 1
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _isr
  1413  012F                     _isr:
  1414  012F                     i1l825:
  1415                           
  1416                           ;ESCLAVO1.c: 57:     if(PIR1bits.ADIF){
  1417  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0131  1F0C               	btfss	12,6	;volatile
  1420  0132  2934               	goto	u14_21
  1421  0133  2935               	goto	u14_20
  1422  0134                     u14_21:
  1423  0134  293D               	goto	i1l54
  1424  0135                     u14_20:
  1425  0135                     i1l827:
  1426                           
  1427                           ;ESCLAVO1.c: 58:         ADC();
  1428  0135  120A  118A  20F6  120A  118A  	fcall	_ADC
  1429  013A                     i1l829:
  1430                           
  1431                           ;ESCLAVO1.c: 59:         PIR1bits.ADIF = 0;
  1432  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1433  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1434  013C  130C               	bcf	12,6	;volatile
  1435  013D                     i1l54:
  1436  013D  0872               	movf	??_isr+1,w
  1437  013E  008A               	movwf	10
  1438  013F  0E71               	swapf	??_isr,w
  1439  0140  0083               	movwf	3
  1440  0141  0EFE               	swapf	btemp,f
  1441  0142  0E7E               	swapf	btemp,w
  1442  0143  0009               	retfie
  1443  0144                     __end_of_isr:
  1444                           
  1445                           	psect	intentry
  1446  0004                     __pintentry:	
  1447                           ;incstack = 0
  1448                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1449                           
  1450  0004                     interrupt_function:
  1451  007E                     saved_w	set	btemp
  1452  0004  00FE               	movwf	btemp
  1453  0005  0E03               	swapf	3,w
  1454  0006  00F1               	movwf	??_isr
  1455  0007  080A               	movf	10,w
  1456  0008  00F2               	movwf	??_isr+1
  1457  0009  120A  118A  292F   	ljmp	_isr
  1458                           
  1459                           	psect	text9
  1460  00F6                     __ptext9:	
  1461 ;; *************** function _ADC *****************
  1462 ;; Defined at:
  1463 ;;		line 11 in file "ADC.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          1       0       0       0       0
  1480 ;;      Totals:         1       0       0       0       0
  1481 ;;Total ram usage:        1 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_isr
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _ADC
  1492  00F6                     _ADC:
  1493  00F6                     i1l771:	
  1494                           ;incstack = 0
  1495                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1496                           
  1497                           
  1498                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1499  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1500  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1501  00F8  0C1F               	rrf	31,w	;volatile
  1502  00F9  00F0               	movwf	??_ADC
  1503  00FA  0C70               	rrf	??_ADC,w
  1504  00FB  390F               	andlw	15
  1505  00FC  3A00               	xorlw	0
  1506  00FD  1D03               	skipz
  1507  00FE  2900               	goto	u8_21
  1508  00FF  2901               	goto	u8_20
  1509  0100                     u8_21:
  1510  0100  2906               	goto	i1l775
  1511  0101                     u8_20:
  1512  0101                     i1l773:
  1513                           
  1514                           ;ADC.c: 13:         cont1 = ADRESH;
  1515  0101  081E               	movf	30,w	;volatile
  1516  0102  00F0               	movwf	??_ADC
  1517  0103  0870               	movf	??_ADC,w
  1518  0104  00F9               	movwf	_cont1
  1519                           
  1520                           ;ADC.c: 14:     }
  1521  0105  2913               	goto	i1l84
  1522  0106                     i1l775:
  1523  0106  0C1F               	rrf	31,w	;volatile
  1524  0107  00F0               	movwf	??_ADC
  1525  0108  0C70               	rrf	??_ADC,w
  1526  0109  390F               	andlw	15
  1527  010A  3A01               	xorlw	1
  1528  010B  1D03               	skipz
  1529  010C  290E               	goto	u9_21
  1530  010D  290F               	goto	u9_20
  1531  010E                     u9_21:
  1532  010E  2913               	goto	i1l84
  1533  010F                     u9_20:
  1534  010F                     i1l777:
  1535                           
  1536                           ;ADC.c: 16:         cont2 = ADRESH;
  1537  010F  081E               	movf	30,w	;volatile
  1538  0110  00F0               	movwf	??_ADC
  1539  0111  0870               	movf	??_ADC,w
  1540  0112  00F8               	movwf	_cont2
  1541  0113                     i1l84:
  1542  0113  0008               	return
  1543  0114                     __end_of_ADC:
  1544  007E                     btemp	set	126	;btemp
  1545  007E                     wtemp0	set	126
  1546                           
  1547                           	psect	config
  1548                           
  1549                           ;Config register CONFIG1 @ 0x2007
  1550                           ;	Oscillator Selection bits
  1551                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1552                           ;	Watchdog Timer Enable bit
  1553                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1554                           ;	Power-up Timer Enable bit
  1555                           ;	PWRTE = OFF, PWRT disabled
  1556                           ;	RE3/MCLR pin function select bit
  1557                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1558                           ;	Code Protection bit
  1559                           ;	CP = OFF, Program memory code protection is disabled
  1560                           ;	Data Code Protection bit
  1561                           ;	CPD = OFF, Data memory code protection is disabled
  1562                           ;	Brown Out Reset Selection bits
  1563                           ;	BOREN = OFF, BOR disabled
  1564                           ;	Internal External Switchover bit
  1565                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1566                           ;	Fail-Safe Clock Monitor Enabled bit
  1567                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1568                           ;	Low Voltage Programming Enable bit
  1569                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1570                           ;	In-Circuit Debugger Mode bit
  1571                           ;	DEBUG = 0x1, unprogrammed default
  1572  2007                     	org	8199
  1573  2007  20D4               	dw	8404
  1574                           
  1575                           ;Config register CONFIG2 @ 0x2008
  1576                           ;	Brown-out Reset Selection bit
  1577                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1578                           ;	Flash Program Memory Self Write Enable bits
  1579                           ;	WRT = OFF, Write protection off
  1580  2008                     	org	8200
  1581  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_config_ADC

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     233
                                              6 COMMON     1     1      0
                           _ReadMSSP
                          _WriteMSSP
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     218
                           _InitMSSP
                         _config_ADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                                _ADC
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   _conversion
   _setup
     _InitMSSP
     _config_ADC
     _initOsc

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 09:08:39 2022

            _SSPSTATbits 0094                       l66 00A2                       l91 00D0  
                     l94 012E                       u10 001D                       u11 001C  
                     u20 0028                       u21 0027                       u30 0033  
                     u31 0032                       u40 003D                       u41 003C  
                     u50 0055                       u51 0054                       u60 005B  
                     u61 005A                       u70 0064                       u71 0063  
                    l102 0042                      l103 0045                      l121 005D  
                    l130 0144                      l124 0074                      l133 014D  
                    l127 0153                      _ADC 00F6                      l801 00A9  
                    l803 00B2                      l731 0028                      l813 00C8  
                    l805 00B4                      l733 002D                      l725 0017  
                    l823 014F                      l815 00CD                      l807 00BA  
                    l751 004F                      l735 0033                      l727 001D  
                    l817 0144                      l809 00C3                      l761 0065  
                    l753 0055                      l737 0038                      l729 0022  
                    l819 014A                      l763 006A                      l755 005B  
                    l851 0129                      l739 003D                      l765 006D  
                    l757 005E                      l749 0047                      l845 0114  
                    l861 008C                      l853 0075                      l767 0070  
                    l759 0064                      l847 0119                      l871 009F  
                    l863 0094                      l855 0079                      l769 0073  
                    l849 0128                      l865 009A                      l857 007A  
                    l881 00DF                      l873 00D1                      l867 009B  
                    l859 0086                      l883 00E7                      l875 00D6  
                    l869 009C                      l885 00EC                      l877 00D9  
                    l799 00A3                      l879 00DA                      u100 00A9  
                    u101 00A8                      u110 00B2                      u111 00B1  
                    u120 00C3                      u121 00C2                      u130 014A  
                    u131 0149                      u160 00EC                      u161 00EB  
                    u177 012B                      u187 00B6                      u197 00CA  
                    _isr 012F                     ?_ADC 0070                     ?_isr 0070  
                   i1l54 013D                     i1l84 0113                     u8_20 0101  
                   u8_21 0100                     u9_20 010F                     u9_21 010E  
                   _main 00D1                     _read 0077                     btemp 007E  
                   start 000C                    ??_ADC 0070                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l825 012F  
                  i1l771 00F6                    i1l827 0135                    i1l773 0101  
                  i1l829 013A                    i1l775 0106                    i1l777 010F  
                  u14_20 0135                    u14_21 0134                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
           InitMSSP@Modo 0073                    _cont1 0079                    _cont2 0078  
        __end_of_initOsc 0046                    _setup 0075                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00F6         __end_of_InitMSSP 0075         __end_of_ReadMSSP 014E  
                 ??_main 0076                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _SSPCON 0014                   _SSPBUF 0013  
              ??_initOsc 0073                   saved_w 007E  __end_of__initialization 0012  
     __size_of_WriteMSSP 0006           __pcstackCOMMON 0070            __end_of_setup 00A3  
                ??_setup 0076                ?_InitMSSP 0070                ?_ReadMSSP 0070  
             __pmaintext 00D1               __pintentry 0004        __end_of_WriteMSSP 0154  
           initOsc@Valor 0073               _config_ADC 0114               ??_InitMSSP 0073  
             ??_ReadMSSP 0073               _conversion 00A3                  __ptext1 0075  
                __ptext2 0016                  __ptext3 0114                  __ptext4 0046  
                __ptext5 00A3                  __ptext6 014E                  __ptext7 0144  
                __ptext8 012F                  __ptext9 00F6             __size_of_ADC 001E  
                _initOsc 0016             __size_of_isr 0015     end_of_initialization 0012  
            ?_config_ADC 0073                _TRISAbits 0085                _TRISCbits 0087  
            ?_conversion 0070            WriteMSSP@Data 0073      start_initialization 000F  
            __end_of_ADC 0114              __end_of_isr 0144        __size_of_InitMSSP 002F  
      __size_of_ReadMSSP 000A      __size_of_config_ADC 001B      __size_of_conversion 002E  
            __pbssCOMMON 0077                ___latbits 0002                _WriteMSSP 014E  
      config_ADC@channel 0073                 ?_initOsc 0070               ?_WriteMSSP 0070  
         __size_of_setup 002E        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
           ??_config_ADC 0075                 _InitMSSP 0046                 _ReadMSSP 0144  
           ??_conversion 0073       __end_of_config_ADC 012F       __end_of_conversion 00D1  
       __size_of_initOsc 0030              ??_WriteMSSP 0073            __size_of_main 0025  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _SSPCONbits 0014  
