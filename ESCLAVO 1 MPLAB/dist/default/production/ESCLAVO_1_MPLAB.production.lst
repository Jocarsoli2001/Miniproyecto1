

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 17:10:37 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  008F                     	;# 
   410  0090                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0095                     	;# 
   418  0096                     	;# 
   419  0097                     	;# 
   420  0098                     	;# 
   421  0099                     	;# 
   422  009A                     	;# 
   423  009B                     	;# 
   424  009C                     	;# 
   425  009D                     	;# 
   426  009E                     	;# 
   427  009F                     	;# 
   428  0105                     	;# 
   429  0107                     	;# 
   430  0108                     	;# 
   431  0109                     	;# 
   432  010C                     	;# 
   433  010C                     	;# 
   434  010D                     	;# 
   435  010E                     	;# 
   436  010F                     	;# 
   437  0185                     	;# 
   438  0187                     	;# 
   439  0188                     	;# 
   440  0189                     	;# 
   441  018C                     	;# 
   442  018D                     	;# 
   443  0013                     _SSPBUF	set	19
   444  0014                     _SSPCONbits	set	20
   445  0014                     _SSPCON	set	20
   446  001E                     _ADRESH	set	30
   447  000B                     _INTCONbits	set	11
   448  0009                     _PORTE	set	9
   449  0008                     _PORTD	set	8
   450  0006                     _PORTB	set	6
   451  001F                     _ADCON0bits	set	31
   452  000C                     _PIR1bits	set	12
   453  0094                     _SSPSTATbits	set	148
   454  0085                     _TRISAbits	set	133
   455  0087                     _TRISCbits	set	135
   456  0094                     _SSPSTAT	set	148
   457  008F                     _OSCCONbits	set	143
   458  009F                     _ADCON1bits	set	159
   459  008C                     _PIE1bits	set	140
   460  0089                     _TRISE	set	137
   461  0088                     _TRISD	set	136
   462  0086                     _TRISB	set	134
   463  0085                     _TRISA	set	133
   464  0189                     _ANSELH	set	393
   465  0188                     _ANSEL	set	392
   466                           
   467                           	psect	cinit
   468  000F                     start_initialization:	
   469                           ; #config settings
   470                           
   471  000F                     __initialization:
   472                           
   473                           ; Clear objects allocated to COMMON
   474  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   475  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   476  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   477  0012                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480  0012                     __end_of__initialization:
   481  0012  0183               	clrf	3
   482  0013  120A  118A  290B   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	bssCOMMON
   485  0076                     __pbssCOMMON:
   486  0076                     _read:
   487  0076                     	ds	1
   488  0077                     _cont2:
   489  0077                     	ds	1
   490  0078                     _cont1:
   491  0078                     	ds	1
   492                           
   493                           	psect	cstackCOMMON
   494  0070                     __pcstackCOMMON:
   495  0070                     ?_ADC:
   496  0070                     ??_ADC:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_setup:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_conversion:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_initOsc:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_InitMSSP:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_isr:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_main:	
   515                           ; 1 bytes @ 0x0
   516                           
   517                           
   518                           ; 1 bytes @ 0x0
   519  0070                     	ds	1
   520  0071                     ??_isr:
   521                           
   522                           ; 1 bytes @ 0x1
   523  0071                     	ds	2
   524  0073                     ??_conversion:
   525  0073                     ??_initOsc:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     ?_config_ADC:	
   529                           ; 1 bytes @ 0x3
   530                           
   531  0073                     ??_InitMSSP:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     initOsc@Valor:	
   535                           ; 1 bytes @ 0x3
   536                           
   537  0073                     InitMSSP@Modo:	
   538                           ; 1 bytes @ 0x3
   539                           
   540  0073                     config_ADC@channel:	
   541                           ; 1 bytes @ 0x3
   542                           
   543                           
   544                           ; 2 bytes @ 0x3
   545  0073                     	ds	2
   546  0075                     ??_config_ADC:
   547                           
   548                           ; 1 bytes @ 0x5
   549  0075                     	ds	1
   550  0076                     ??_setup:
   551  0076                     ??_main:	
   552                           ; 1 bytes @ 0x6
   553                           
   554                           
   555                           	psect	maintext
   556  010B                     __pmaintext:	
   557                           ; 1 bytes @ 0x6
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 62 in file "ESCLAVO1.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;		None
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0, pclath, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : B00/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   577 ;;      Params:         0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0
   580 ;;      Totals:         0       0       0       0       0
   581 ;;Total ram usage:        0 bytes
   582 ;; Hardware stack levels required when called: 4
   583 ;; This function calls:
   584 ;;		_conversion
   585 ;;		_setup
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           
   592                           ;psect for function _main
   593  010B                     _main:
   594  010B                     l874:	
   595                           ;incstack = 0
   596                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   597                           
   598                           
   599                           ;ESCLAVO1.c: 63:     setup();
   600  010B  120A  118A  2079  120A  118A  	fcall	_setup
   601  0110                     l876:
   602                           
   603                           ;ESCLAVO1.c: 64:     ADCON0bits.GO = 1;
   604  0110  1283               	bcf	3,5	;RP0=0, select bank0
   605  0111  1303               	bcf	3,6	;RP1=0, select bank0
   606  0112  149F               	bsf	31,1	;volatile
   607  0113                     l878:
   608                           
   609                           ;ESCLAVO1.c: 65:     read = 0;
   610  0113  01F6               	clrf	_read
   611  0114                     l880:
   612                           
   613                           ;ESCLAVO1.c: 71:         conversion();
   614  0114  120A  118A  20A7  120A  118A  	fcall	_conversion
   615  0119                     l882:
   616                           
   617                           ;ESCLAVO1.c: 82:         PORTB = cont1;
   618  0119  0878               	movf	_cont1,w
   619  011A  1283               	bcf	3,5	;RP0=0, select bank0
   620  011B  1303               	bcf	3,6	;RP1=0, select bank0
   621  011C  0086               	movwf	6	;volatile
   622  011D  2914               	goto	l880
   623  011E  120A  118A  280C   	ljmp	start
   624  0121                     __end_of_main:
   625                           
   626                           	psect	text1
   627  0079                     __ptext1:	
   628 ;; *************** function _setup *****************
   629 ;; Defined at:
   630 ;;		line 89 in file "ESCLAVO1.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 3
   651 ;; This function calls:
   652 ;;		_InitMSSP
   653 ;;		_config_ADC
   654 ;;		_initOsc
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _setup
   662  0079                     _setup:
   663  0079                     l854:	
   664                           ;incstack = 0
   665                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   666                           
   667                           
   668                           ;ESCLAVO1.c: 92:     ANSEL = 0b0011;
   669  0079  3003               	movlw	3
   670  007A  1683               	bsf	3,5	;RP0=1, select bank3
   671  007B  1703               	bsf	3,6	;RP1=1, select bank3
   672  007C  0088               	movwf	8	;volatile
   673  007D                     l856:
   674                           
   675                           ;ESCLAVO1.c: 93:     ANSELH = 0;
   676  007D  0189               	clrf	9	;volatile
   677  007E                     l858:
   678                           
   679                           ;ESCLAVO1.c: 95:     TRISA = 0b0011;
   680  007E  3003               	movlw	3
   681  007F  1683               	bsf	3,5	;RP0=1, select bank1
   682  0080  1303               	bcf	3,6	;RP1=0, select bank1
   683  0081  0085               	movwf	5	;volatile
   684                           
   685                           ;ESCLAVO1.c: 96:     TRISB = 0;
   686  0082  0186               	clrf	6	;volatile
   687                           
   688                           ;ESCLAVO1.c: 97:     TRISD = 0;
   689  0083  0188               	clrf	8	;volatile
   690                           
   691                           ;ESCLAVO1.c: 98:     TRISE = 0;
   692  0084  0189               	clrf	9	;volatile
   693                           
   694                           ;ESCLAVO1.c: 100:     PORTD = 0;
   695  0085  1283               	bcf	3,5	;RP0=0, select bank0
   696  0086  1303               	bcf	3,6	;RP1=0, select bank0
   697  0087  0188               	clrf	8	;volatile
   698                           
   699                           ;ESCLAVO1.c: 101:     PORTE = 0;
   700  0088  0189               	clrf	9	;volatile
   701                           
   702                           ;ESCLAVO1.c: 102:     PORTB = 0;
   703  0089  0186               	clrf	6	;volatile
   704  008A                     l860:
   705                           
   706                           ;ESCLAVO1.c: 105:     initOsc(4);
   707  008A  3004               	movlw	4
   708  008B  120A  118A  2049  120A  118A  	fcall	_initOsc
   709  0090                     l862:
   710                           
   711                           ;ESCLAVO1.c: 108:     config_ADC(0);
   712  0090  3000               	movlw	0
   713  0091  00F3               	movwf	config_ADC@channel
   714  0092  00F4               	movwf	config_ADC@channel+1
   715  0093  120A  118A  20D5  120A  118A  	fcall	_config_ADC
   716  0098                     l864:
   717                           
   718                           ;ESCLAVO1.c: 111:     InitMSSP(SPI_SLAVE_SS_EN);
   719  0098  3004               	movlw	4
   720  0099  120A  118A  2016  120A  118A  	fcall	_InitMSSP
   721  009E                     l866:
   722                           
   723                           ;ESCLAVO1.c: 114:     INTCONbits.GIE = 1;
   724  009E  178B               	bsf	11,7	;volatile
   725  009F                     l868:
   726                           
   727                           ;ESCLAVO1.c: 115:     INTCONbits.PEIE = 1;
   728  009F  170B               	bsf	11,6	;volatile
   729  00A0                     l870:
   730                           
   731                           ;ESCLAVO1.c: 116:     PIR1bits.ADIF = 0;
   732  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   733  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   734  00A2  130C               	bcf	12,6	;volatile
   735  00A3                     l872:
   736                           
   737                           ;ESCLAVO1.c: 117:     PIE1bits.ADIE = 1;
   738  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   739  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   740  00A5  170C               	bsf	12,6	;volatile
   741  00A6                     l61:
   742  00A6  0008               	return
   743  00A7                     __end_of_setup:
   744                           
   745                           	psect	text2
   746  0049                     __ptext2:	
   747 ;; *************** function _initOsc *****************
   748 ;; Defined at:
   749 ;;		line 12 in file "Oscilador.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;  Valor           1    wreg     unsigned char 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  Valor           1    3[COMMON] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         1       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0
   766 ;;      Totals:         1       0       0       0       0
   767 ;;Total ram usage:        1 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 2
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_setup
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           
   778                           ;psect for function _initOsc
   779  0049                     _initOsc:
   780                           
   781                           ;incstack = 0
   782                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   783                           ;initOsc@Valor stored from wreg
   784  0049  00F3               	movwf	initOsc@Valor
   785  004A                     l722:
   786                           
   787                           ;Oscilador.c: 14:     if(Valor == 8){
   788  004A  3008               	movlw	8
   789  004B  0673               	xorwf	initOsc@Valor,w
   790  004C  1D03               	btfss	3,2
   791  004D  284F               	goto	u11
   792  004E  2850               	goto	u10
   793  004F                     u11:
   794  004F  2855               	goto	l726
   795  0050                     u10:
   796  0050                     l724:
   797                           
   798                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   799  0050  1683               	bsf	3,5	;RP0=1, select bank1
   800  0051  1303               	bcf	3,6	;RP1=0, select bank1
   801  0052  160F               	bsf	15,4	;volatile
   802                           
   803                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   804  0053  168F               	bsf	15,5	;volatile
   805                           
   806                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   807  0054  170F               	bsf	15,6	;volatile
   808  0055                     l726:
   809                           
   810                           ;Oscilador.c: 19:     if(Valor == 4){
   811  0055  3004               	movlw	4
   812  0056  0673               	xorwf	initOsc@Valor,w
   813  0057  1D03               	btfss	3,2
   814  0058  285A               	goto	u21
   815  0059  285B               	goto	u20
   816  005A                     u21:
   817  005A  2860               	goto	l730
   818  005B                     u20:
   819  005B                     l728:
   820                           
   821                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   822  005B  1683               	bsf	3,5	;RP0=1, select bank1
   823  005C  1303               	bcf	3,6	;RP1=0, select bank1
   824  005D  120F               	bcf	15,4	;volatile
   825                           
   826                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   827  005E  168F               	bsf	15,5	;volatile
   828                           
   829                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   830  005F  170F               	bsf	15,6	;volatile
   831  0060                     l730:
   832                           
   833                           ;Oscilador.c: 24:     if(Valor == 2){
   834  0060  3002               	movlw	2
   835  0061  0673               	xorwf	initOsc@Valor,w
   836  0062  1D03               	btfss	3,2
   837  0063  2865               	goto	u31
   838  0064  2866               	goto	u30
   839  0065                     u31:
   840  0065  286B               	goto	l734
   841  0066                     u30:
   842  0066                     l732:
   843                           
   844                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   845  0066  1683               	bsf	3,5	;RP0=1, select bank1
   846  0067  1303               	bcf	3,6	;RP1=0, select bank1
   847  0068  160F               	bsf	15,4	;volatile
   848                           
   849                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   850  0069  128F               	bcf	15,5	;volatile
   851                           
   852                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   853  006A  170F               	bsf	15,6	;volatile
   854  006B                     l734:
   855                           
   856                           ;Oscilador.c: 29:     if(Valor == 1){
   857  006B  0373               	decf	initOsc@Valor,w
   858  006C  1D03               	btfss	3,2
   859  006D  286F               	goto	u41
   860  006E  2870               	goto	u40
   861  006F                     u41:
   862  006F  2875               	goto	l97
   863  0070                     u40:
   864  0070                     l736:
   865                           
   866                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   867  0070  1683               	bsf	3,5	;RP0=1, select bank1
   868  0071  1303               	bcf	3,6	;RP1=0, select bank1
   869  0072  120F               	bcf	15,4	;volatile
   870                           
   871                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   872  0073  128F               	bcf	15,5	;volatile
   873                           
   874                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   875  0074  170F               	bsf	15,6	;volatile
   876  0075                     l97:	
   877                           ;Oscilador.c: 33:     }
   878                           
   879                           
   880                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   881  0075  1683               	bsf	3,5	;RP0=1, select bank1
   882  0076  1303               	bcf	3,6	;RP1=0, select bank1
   883  0077  140F               	bsf	15,0	;volatile
   884  0078                     l98:
   885  0078  0008               	return
   886  0079                     __end_of_initOsc:
   887                           
   888                           	psect	text3
   889  00D5                     __ptext3:	
   890 ;; *************** function _config_ADC *****************
   891 ;; Defined at:
   892 ;;		line 36 in file "ADC.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  channel         2    3[COMMON] int 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         2       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          1       0       0       0       0
   909 ;;      Totals:         3       0       0       0       0
   910 ;;Total ram usage:        3 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 2
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_setup
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _config_ADC
   922  00D5                     _config_ADC:
   923  00D5                     l846:	
   924                           ;incstack = 0
   925                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
   926                           
   927                           
   928                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
   929  00D5  1683               	bsf	3,5	;RP0=1, select bank1
   930  00D6  1303               	bcf	3,6	;RP1=0, select bank1
   931  00D7  139F               	bcf	31,7	;volatile
   932                           
   933                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
   934  00D8  121F               	bcf	31,4	;volatile
   935                           
   936                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
   937  00D9  129F               	bcf	31,5	;volatile
   938  00DA                     l848:
   939                           
   940                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
   941  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   942  00DB  1303               	bcf	3,6	;RP1=0, select bank0
   943  00DC  081F               	movf	31,w	;volatile
   944  00DD  393F               	andlw	-193
   945  00DE  3840               	iorlw	64
   946  00DF  009F               	movwf	31	;volatile
   947                           
   948                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
   949  00E0  0873               	movf	config_ADC@channel,w
   950  00E1  00F5               	movwf	??_config_ADC
   951  00E2  0DF5               	rlf	??_config_ADC,f
   952  00E3  0DF5               	rlf	??_config_ADC,f
   953  00E4  081F               	movf	31,w	;volatile
   954  00E5  0675               	xorwf	??_config_ADC,w
   955  00E6  39C3               	andlw	-61
   956  00E7  0675               	xorwf	??_config_ADC,w
   957  00E8  009F               	movwf	31	;volatile
   958  00E9                     l850:
   959                           
   960                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
   961  00E9  141F               	bsf	31,0	;volatile
   962  00EA                     l852:
   963                           
   964                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   965  00EA  3010               	movlw	16
   966  00EB  00F5               	movwf	??_config_ADC
   967  00EC                     u157:
   968  00EC  0BF5               	decfsz	??_config_ADC,f
   969  00ED  28EC               	goto	u157
   970  00EE  0000               	nop
   971  00EF                     l89:
   972  00EF  0008               	return
   973  00F0                     __end_of_config_ADC:
   974                           
   975                           	psect	text4
   976  0016                     __ptext4:	
   977 ;; *************** function _InitMSSP *****************
   978 ;; Defined at:
   979 ;;		line 10 in file "SPI.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  Modo            1    wreg     enum E1264
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  Modo            1    3[COMMON] enum E1264
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         0       0       0       0       0
   994 ;;      Locals:         1       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0
   996 ;;      Totals:         1       0       0       0       0
   997 ;;Total ram usage:        1 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 2
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_setup
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _InitMSSP
  1009  0016                     _InitMSSP:
  1010                           
  1011                           ;incstack = 0
  1012                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1013                           ;InitMSSP@Modo stored from wreg
  1014  0016  00F3               	movwf	InitMSSP@Modo
  1015  0017                     l746:
  1016                           
  1017                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1018  0017  1683               	bsf	3,5	;RP0=1, select bank1
  1019  0018  1303               	bcf	3,6	;RP1=0, select bank1
  1020  0019  0194               	clrf	20	;volatile
  1021                           
  1022                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1023  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  001C  0194               	clrf	20	;volatile
  1026  001D                     l748:
  1027                           
  1028                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1029  001D  1294               	bcf	20,5	;volatile
  1030  001E                     l750:
  1031                           
  1032                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1033  001E  1694               	bsf	20,5	;volatile
  1034  001F                     l752:
  1035                           
  1036                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1037  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1038  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1039  0021  1287               	bcf	7,5	;volatile
  1040  0022                     l754:
  1041                           
  1042                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1043  0022  1607               	bsf	7,4	;volatile
  1044  0023                     l756:
  1045                           
  1046                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1047  0023  3006               	movlw	6
  1048  0024  0273               	subwf	InitMSSP@Modo,w
  1049  0025  1803               	skipnc
  1050  0026  2828               	goto	u51
  1051  0027  2829               	goto	u50
  1052  0028                     u51:
  1053  0028  2832               	goto	l762
  1054  0029                     u50:
  1055  0029                     l758:
  1056                           
  1057                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1058  0029  3004               	movlw	4
  1059  002A  0273               	subwf	InitMSSP@Modo,w
  1060  002B  1803               	skipnc
  1061  002C  282E               	goto	u61
  1062  002D  282F               	goto	u60
  1063  002E                     u61:
  1064  002E  2831               	goto	l118
  1065  002F                     u60:
  1066  002F                     l760:
  1067                           
  1068                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1069  002F  1187               	bcf	7,3	;volatile
  1070                           
  1071                           ;SPI.c: 29:         }
  1072  0030  2832               	goto	l762
  1073  0031                     l118:	
  1074                           ;SPI.c: 30:         else {
  1075                           
  1076                           
  1077                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1078  0031  1587               	bsf	7,3	;volatile
  1079  0032                     l762:
  1080                           
  1081                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1082  0032  3004               	movlw	4
  1083  0033  0673               	xorwf	InitMSSP@Modo,w
  1084  0034  1D03               	btfss	3,2
  1085  0035  2837               	goto	u71
  1086  0036  2838               	goto	u70
  1087  0037                     u71:
  1088  0037  2839               	goto	l766
  1089  0038                     u70:
  1090  0038                     l764:
  1091  0038  1685               	bsf	5,5	;volatile
  1092  0039                     l766:
  1093                           
  1094                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1095  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1096  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1097  003B  0814               	movf	20,w	;volatile
  1098  003C  0473               	iorwf	InitMSSP@Modo,w	;volatile
  1099  003D  0094               	movwf	20	;volatile
  1100  003E                     l768:
  1101                           
  1102                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  1103  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1104  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1105  0040  118C               	bcf	12,3	;volatile
  1106  0041                     l770:
  1107                           
  1108                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1109  0041  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0042  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0043  1214               	bcf	20,4	;volatile
  1112  0044                     l772:
  1113                           
  1114                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1115  0044  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0045  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0046  1314               	bcf	20,6	;volatile
  1118  0047                     l774:
  1119                           
  1120                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1121  0047  1394               	bcf	20,7	;volatile
  1122  0048                     l121:
  1123  0048  0008               	return
  1124  0049                     __end_of_InitMSSP:
  1125                           
  1126                           	psect	text5
  1127  00A7                     __ptext5:	
  1128 ;; *************** function _conversion *****************
  1129 ;; Defined at:
  1130 ;;		line 21 in file "ADC.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0       0       0       0       0
  1146 ;;      Temps:          1       0       0       0       0
  1147 ;;      Totals:         1       0       0       0       0
  1148 ;;Total ram usage:        1 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 2
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           
  1159                           ;psect for function _conversion
  1160  00A7                     _conversion:
  1161  00A7                     l804:	
  1162                           ;incstack = 0
  1163                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1164                           
  1165                           
  1166                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1167  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1168  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1169  00A9  189F               	btfsc	31,1	;volatile
  1170  00AA  28AC               	goto	u101
  1171  00AB  28AD               	goto	u100
  1172  00AC                     u101:
  1173  00AC  28D4               	goto	l86
  1174  00AD                     u100:
  1175  00AD                     l806:
  1176                           
  1177                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1178  00AD  0C1F               	rrf	31,w	;volatile
  1179  00AE  00F3               	movwf	??_conversion
  1180  00AF  0C73               	rrf	??_conversion,w
  1181  00B0  390F               	andlw	15
  1182  00B1  3A01               	xorlw	1
  1183  00B2  1D03               	skipz
  1184  00B3  28B5               	goto	u111
  1185  00B4  28B6               	goto	u110
  1186  00B5                     u111:
  1187  00B5  28BE               	goto	l812
  1188  00B6                     u110:
  1189  00B6                     l808:
  1190                           
  1191                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1192  00B6  30C3               	movlw	-61
  1193  00B7  059F               	andwf	31,f	;volatile
  1194  00B8                     l810:
  1195                           
  1196                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1197  00B8  3010               	movlw	16
  1198  00B9  00F3               	movwf	??_conversion
  1199  00BA                     u167:
  1200  00BA  0BF3               	decfsz	??_conversion,f
  1201  00BB  28BA               	goto	u167
  1202  00BC  0000               	nop
  1203                           
  1204                           ;ADC.c: 26:         }
  1205  00BD  28CC               	goto	l818
  1206  00BE                     l812:
  1207  00BE  0C1F               	rrf	31,w	;volatile
  1208  00BF  00F3               	movwf	??_conversion
  1209  00C0  0C73               	rrf	??_conversion,w
  1210  00C1  390F               	andlw	15
  1211  00C2  3A00               	xorlw	0
  1212  00C3  1D03               	skipz
  1213  00C4  28C6               	goto	u121
  1214  00C5  28C7               	goto	u120
  1215  00C6                     u121:
  1216  00C6  28CC               	goto	l818
  1217  00C7                     u120:
  1218  00C7                     l814:
  1219                           
  1220                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1221  00C7  081F               	movf	31,w	;volatile
  1222  00C8  39C3               	andlw	-61
  1223  00C9  3804               	iorlw	4
  1224  00CA  009F               	movwf	31	;volatile
  1225  00CB  28B8               	goto	l810
  1226  00CC                     l818:
  1227                           
  1228                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1229  00CC  3010               	movlw	16
  1230  00CD  00F3               	movwf	??_conversion
  1231  00CE                     u177:
  1232  00CE  0BF3               	decfsz	??_conversion,f
  1233  00CF  28CE               	goto	u177
  1234  00D0  0000               	nop
  1235  00D1                     l820:
  1236                           
  1237                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1238  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1239  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1240  00D3  149F               	bsf	31,1	;volatile
  1241  00D4                     l86:
  1242  00D4  0008               	return
  1243  00D5                     __end_of_conversion:
  1244                           
  1245                           	psect	text6
  1246  0121                     __ptext6:	
  1247 ;; *************** function _isr *****************
  1248 ;; Defined at:
  1249 ;;		line 54 in file "ESCLAVO1.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          2       0       0       0       0
  1266 ;;      Totals:         2       0       0       0       0
  1267 ;;Total ram usage:        2 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 1
  1270 ;; This function calls:
  1271 ;;		_ADC
  1272 ;; This function is called by:
  1273 ;;		Interrupt level 1
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _isr
  1279  0121                     _isr:
  1280  0121                     i1l822:
  1281                           
  1282                           ;ESCLAVO1.c: 55:     if(PIR1bits.ADIF){
  1283  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0123  1F0C               	btfss	12,6	;volatile
  1286  0124  2926               	goto	u13_21
  1287  0125  2927               	goto	u13_20
  1288  0126                     u13_21:
  1289  0126  292F               	goto	i1l50
  1290  0127                     u13_20:
  1291  0127                     i1l824:
  1292                           
  1293                           ;ESCLAVO1.c: 56:         ADC();
  1294  0127  120A  118A  20F0  120A  118A  	fcall	_ADC
  1295  012C                     i1l826:
  1296                           
  1297                           ;ESCLAVO1.c: 57:         PIR1bits.ADIF = 0;
  1298  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1299  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1300  012E  130C               	bcf	12,6	;volatile
  1301  012F                     i1l50:
  1302  012F  0872               	movf	??_isr+1,w
  1303  0130  008A               	movwf	10
  1304  0131  0E71               	swapf	??_isr,w
  1305  0132  0083               	movwf	3
  1306  0133  0EFE               	swapf	btemp,f
  1307  0134  0E7E               	swapf	btemp,w
  1308  0135  0009               	retfie
  1309  0136                     __end_of_isr:
  1310                           
  1311                           	psect	intentry
  1312  0004                     __pintentry:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1315                           
  1316  0004                     interrupt_function:
  1317  007E                     saved_w	set	btemp
  1318  0004  00FE               	movwf	btemp
  1319  0005  0E03               	swapf	3,w
  1320  0006  00F1               	movwf	??_isr
  1321  0007  080A               	movf	10,w
  1322  0008  00F2               	movwf	??_isr+1
  1323  0009  120A  118A  2921   	ljmp	_isr
  1324                           
  1325                           	psect	text7
  1326  00F0                     __ptext7:	
  1327 ;; *************** function _ADC *****************
  1328 ;; Defined at:
  1329 ;;		line 11 in file "ADC.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0
  1345 ;;      Temps:          1       0       0       0       0
  1346 ;;      Totals:         1       0       0       0       0
  1347 ;;Total ram usage:        1 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_isr
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _ADC
  1358  00F0                     _ADC:
  1359  00F0                     i1l776:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1362                           
  1363                           
  1364                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1365  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1366  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1367  00F2  0C1F               	rrf	31,w	;volatile
  1368  00F3  00F0               	movwf	??_ADC
  1369  00F4  0C70               	rrf	??_ADC,w
  1370  00F5  390F               	andlw	15
  1371  00F6  3A00               	xorlw	0
  1372  00F7  1D03               	skipz
  1373  00F8  28FA               	goto	u8_21
  1374  00F9  28FB               	goto	u8_20
  1375  00FA                     u8_21:
  1376  00FA  2900               	goto	i1l780
  1377  00FB                     u8_20:
  1378  00FB                     i1l778:
  1379                           
  1380                           ;ADC.c: 13:         cont1 = ADRESH;
  1381  00FB  081E               	movf	30,w	;volatile
  1382  00FC  00F0               	movwf	??_ADC
  1383  00FD  0870               	movf	??_ADC,w
  1384  00FE  00F8               	movwf	_cont1
  1385                           
  1386                           ;ADC.c: 14:     }
  1387  00FF  290A               	goto	i1l79
  1388  0100                     i1l780:
  1389  0100  0C1F               	rrf	31,w	;volatile
  1390  0101  00F0               	movwf	??_ADC
  1391  0102  0C70               	rrf	??_ADC,w
  1392  0103  390F               	andlw	15
  1393  0104  3A01               	xorlw	1
  1394  0105  1D03               	skipz
  1395  0106  2908               	goto	u9_21
  1396  0107  2909               	goto	u9_20
  1397  0108                     u9_21:
  1398  0108  290A               	goto	i1l79
  1399  0109                     u9_20:
  1400  0109  28FB               	goto	i1l778
  1401  010A                     i1l79:
  1402  010A  0008               	return
  1403  010B                     __end_of_ADC:
  1404  007E                     btemp	set	126	;btemp
  1405  007E                     wtemp0	set	126
  1406                           
  1407                           	psect	config
  1408                           
  1409                           ;Config register CONFIG1 @ 0x2007
  1410                           ;	Oscillator Selection bits
  1411                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1412                           ;	Watchdog Timer Enable bit
  1413                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1414                           ;	Power-up Timer Enable bit
  1415                           ;	PWRTE = OFF, PWRT disabled
  1416                           ;	RE3/MCLR pin function select bit
  1417                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1418                           ;	Code Protection bit
  1419                           ;	CP = OFF, Program memory code protection is disabled
  1420                           ;	Data Code Protection bit
  1421                           ;	CPD = OFF, Data memory code protection is disabled
  1422                           ;	Brown Out Reset Selection bits
  1423                           ;	BOREN = OFF, BOR disabled
  1424                           ;	Internal External Switchover bit
  1425                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1426                           ;	Fail-Safe Clock Monitor Enabled bit
  1427                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1428                           ;	Low Voltage Programming Enable bit
  1429                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1430                           ;	In-Circuit Debugger Mode bit
  1431                           ;	DEBUG = 0x1, unprogrammed default
  1432  2007                     	org	8199
  1433  2007  20D4               	dw	8404
  1434                           
  1435                           ;Config register CONFIG2 @ 0x2008
  1436                           ;	Brown-out Reset Selection bit
  1437                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1438                           ;	Flash Program Memory Self Write Enable bits
  1439                           ;	WRT = OFF, Write protection off
  1440  2008                     	org	8200
  1441  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_config_ADC

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     218
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     218
                           _InitMSSP
                         _config_ADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                                _ADC
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _conversion
   _setup
     _InitMSSP
     _config_ADC
     _initOsc

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 17:10:37 2022

            _SSPSTATbits 0094                       l61 00A6                       l86 00D4  
                     l89 00EF                       l97 0075                       l98 0078  
                     u10 0050                       u11 004F                       u20 005B  
                     u21 005A                       u30 0066                       u31 0065  
                     u40 0070                       u41 006F                       u50 0029  
                     u51 0028                       u60 002F                       u61 002E  
                     u70 0038                       u71 0037                      l121 0048  
                    l118 0031                      _ADC 00F0                      l810 00B8  
                    l730 0060                      l722 004A                      l820 00D1  
                    l812 00BE                      l804 00A7                      l732 0066  
                    l724 0050                      l814 00C7                      l806 00AD  
                    l750 001E                      l734 006B                      l726 0055  
                    l808 00B6                      l760 002F                      l752 001F  
                    l736 0070                      l728 005B                      l818 00CC  
                    l770 0041                      l762 0032                      l754 0022  
                    l746 0017                      l850 00E9                      l772 0044  
                    l764 0038                      l756 0023                      l748 001D  
                    l852 00EA                      l860 008A                      l774 0047  
                    l766 0039                      l758 0029                      l846 00D5  
                    l870 00A0                      l862 0090                      l854 0079  
                    l768 003E                      l848 00DA                      l872 00A3  
                    l864 0098                      l856 007D                      l880 0114  
                    l866 009E                      l858 007E                      l882 0119  
                    l874 010B                      l868 009F                      l876 0110  
                    l878 0113                      u100 00AD                      u101 00AC  
                    u110 00B6                      u111 00B5                      u120 00C7  
                    u121 00C6                      u157 00EC                      u167 00BA  
                    u177 00CE                      _isr 0121                     ?_ADC 0070  
                   ?_isr 0070                     i1l50 012F                     i1l79 010A  
                   u8_20 00FB                     u8_21 00FA                     u9_20 0109  
                   u9_21 0108                     _main 010B                     _read 0076  
                   btemp 007E                     start 000C                    ??_ADC 0070  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l822 0121                    i1l824 0127                    i1l826 012C  
                  i1l780 0100                    i1l776 00F0                    i1l778 00FB  
                  u13_20 0127                    u13_21 0126                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
           InitMSSP@Modo 0073                    _cont1 0078                    _cont2 0077  
        __end_of_initOsc 0079                    _setup 0079                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0121         __end_of_InitMSSP 0049                   ??_main 0076  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
                 _SSPCON 0014                   _SSPBUF 0013                ??_initOsc 0073  
                 saved_w 007E  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 00A7                  ??_setup 0076                ?_InitMSSP 0070  
             __pmaintext 010B               __pintentry 0004             initOsc@Valor 0073  
             _config_ADC 00D5                  _SSPSTAT 0094               ??_InitMSSP 0073  
             _conversion 00A7                  __ptext1 0079                  __ptext2 0049  
                __ptext3 00D5                  __ptext4 0016                  __ptext5 00A7  
                __ptext6 0121                  __ptext7 00F0             __size_of_ADC 001B  
                _initOsc 0049             __size_of_isr 0015     end_of_initialization 0012  
            ?_config_ADC 0073                _TRISAbits 0085                _TRISCbits 0087  
            ?_conversion 0070      start_initialization 000F              __end_of_ADC 010B  
            __end_of_isr 0136        __size_of_InitMSSP 0033      __size_of_config_ADC 001B  
    __size_of_conversion 002E              __pbssCOMMON 0076                ___latbits 0002  
      config_ADC@channel 0073                 ?_initOsc 0070           __size_of_setup 002E  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F             ??_config_ADC 0075  
               _InitMSSP 0016             ??_conversion 0073       __end_of_config_ADC 00F0  
     __end_of_conversion 00D5         __size_of_initOsc 0030            __size_of_main 0016  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _SSPCONbits 0014  
