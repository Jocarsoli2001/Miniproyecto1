

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 16:40:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0000                     	;# 
   283  0001                     	;# 
   284  0002                     	;# 
   285  0003                     	;# 
   286  0004                     	;# 
   287  0005                     	;# 
   288  0006                     	;# 
   289  0007                     	;# 
   290  0008                     	;# 
   291  0009                     	;# 
   292  000A                     	;# 
   293  000B                     	;# 
   294  000C                     	;# 
   295  000D                     	;# 
   296  000E                     	;# 
   297  000E                     	;# 
   298  000F                     	;# 
   299  0010                     	;# 
   300  0011                     	;# 
   301  0012                     	;# 
   302  0013                     	;# 
   303  0014                     	;# 
   304  0015                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001B                     	;# 
   313  001C                     	;# 
   314  001D                     	;# 
   315  001E                     	;# 
   316  001F                     	;# 
   317  0081                     	;# 
   318  0085                     	;# 
   319  0086                     	;# 
   320  0087                     	;# 
   321  0088                     	;# 
   322  0089                     	;# 
   323  008C                     	;# 
   324  008D                     	;# 
   325  008E                     	;# 
   326  008F                     	;# 
   327  0090                     	;# 
   328  0091                     	;# 
   329  0092                     	;# 
   330  0093                     	;# 
   331  0093                     	;# 
   332  0093                     	;# 
   333  0094                     	;# 
   334  0095                     	;# 
   335  0096                     	;# 
   336  0097                     	;# 
   337  0098                     	;# 
   338  0099                     	;# 
   339  009A                     	;# 
   340  009B                     	;# 
   341  009C                     	;# 
   342  009D                     	;# 
   343  009E                     	;# 
   344  009F                     	;# 
   345  0105                     	;# 
   346  0107                     	;# 
   347  0108                     	;# 
   348  0109                     	;# 
   349  010C                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  0185                     	;# 
   355  0187                     	;# 
   356  0188                     	;# 
   357  0189                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0013                     _SSPBUF	set	19
   361  0014                     _SSPCON	set	20
   362  0014                     _SSPCONbits	set	20
   363  0005                     _PORTA	set	5
   364  0008                     _PORTD	set	8
   365  0009                     _PORTE	set	9
   366  0006                     _PORTB	set	6
   367  0008                     _PORTDbits	set	8
   368  0043                     _RD3	set	67
   369  0042                     _RD2	set	66
   370  0094                     _SSPSTATbits	set	148
   371  008C                     _PIE1bits	set	140
   372  0085                     _TRISAbits	set	133
   373  0087                     _TRISCbits	set	135
   374  008F                     _OSCCONbits	set	143
   375  0089                     _TRISE	set	137
   376  0088                     _TRISD	set	136
   377  0086                     _TRISB	set	134
   378  0085                     _TRISA	set	133
   379  0189                     _ANSELH	set	393
   380  0188                     _ANSEL	set	392
   381                           
   382                           	psect	cinit
   383  07FB                     start_initialization:	
   384                           ; #config settings
   385                           
   386  07FB                     __initialization:
   387                           
   388                           ; Clear objects allocated to COMMON
   389  07FB  01F3               	clrf	__pbssCOMMON& (0+127)
   390  07FC                     end_of_initialization:	
   391                           ;End of C runtime variable initialization code
   392                           
   393  07FC                     __end_of__initialization:
   394  07FC  0183               	clrf	3
   395  07FD  120A  118A  2F7A   	ljmp	_main	;jump to C main() function
   396                           
   397                           	psect	bssCOMMON
   398  0073                     __pbssCOMMON:
   399  0073                     _read1:
   400  0073                     	ds	1
   401                           
   402                           	psect	cstackCOMMON
   403  0071                     __pcstackCOMMON:
   404  0071                     ?_setup:
   405  0071                     ?_initOsc:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0071                     ??_initOsc:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0071                     ?_InitMSSP:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0071                     ??_InitMSSP:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0071                     ?_main:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0071                     initOsc@Valor:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0071                     InitMSSP@Modo:	
   424                           ; 1 bytes @ 0x0
   425                           
   426                           
   427                           ; 1 bytes @ 0x0
   428  0071                     	ds	1
   429  0072                     ??_setup:
   430  0072                     ??_main:	
   431                           ; 1 bytes @ 0x1
   432                           
   433                           
   434                           ; 1 bytes @ 0x1
   435  0072                     	ds	1
   436                           
   437                           	psect	maintext
   438  077A                     __pmaintext:	
   439 ;;
   440 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   441 ;;
   442 ;; *************** function _main *****************
   443 ;; Defined at:
   444 ;;		line 60 in file "ESCLAVO2.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : B00/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          1       0       0       0       0
   461 ;;      Totals:         1       0       0       0       0
   462 ;;Total ram usage:        1 bytes
   463 ;; Hardware stack levels required when called: 2
   464 ;; This function calls:
   465 ;;		_setup
   466 ;; This function is called by:
   467 ;;		Startup code after reset
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _main
   473  077A                     _main:
   474  077A                     l740:	
   475                           ;incstack = 0
   476                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   477                           
   478                           
   479                           ;ESCLAVO2.c: 61:     setup();
   480  077A  120A  118A  275C  120A  118A  	fcall	_setup
   481  077F                     l742:
   482                           
   483                           ;ESCLAVO2.c: 62:     read1 = 0;
   484  077F  01F3               	clrf	_read1
   485  0780                     l744:
   486                           
   487                           ;ESCLAVO2.c: 68:         if(PORTDbits.RD2){
   488  0780  1283               	bcf	3,5	;RP0=0, select bank0
   489  0781  1303               	bcf	3,6	;RP1=0, select bank0
   490  0782  1D08               	btfss	8,2	;volatile
   491  0783  2F85               	goto	u81
   492  0784  2F86               	goto	u80
   493  0785                     u81:
   494  0785  2F8C               	goto	l750
   495  0786                     u80:
   496  0786                     l41:
   497  0786  1908               	btfsc	8,2	;volatile
   498  0787  2F89               	goto	u91
   499  0788  2F8A               	goto	u90
   500  0789                     u91:
   501  0789  2F86               	goto	l41
   502  078A                     u90:
   503  078A                     l748:
   504                           
   505                           ;ESCLAVO2.c: 70:             PORTB--;
   506  078A  3001               	movlw	1
   507  078B  0286               	subwf	6,f	;volatile
   508  078C                     l750:
   509                           
   510                           ;ESCLAVO2.c: 72:         if(PORTDbits.RD3){
   511  078C  1D88               	btfss	8,3	;volatile
   512  078D  2F8F               	goto	u101
   513  078E  2F90               	goto	u100
   514  078F                     u101:
   515  078F  2F80               	goto	l744
   516  0790                     u100:
   517  0790                     l45:
   518  0790  1988               	btfsc	8,3	;volatile
   519  0791  2F93               	goto	u111
   520  0792  2F94               	goto	u110
   521  0793                     u111:
   522  0793  2F90               	goto	l45
   523  0794                     u110:
   524  0794                     l754:
   525                           
   526                           ;ESCLAVO2.c: 74:             PORTB++;
   527  0794  3001               	movlw	1
   528  0795  00F2               	movwf	??_main
   529  0796  0872               	movf	??_main,w
   530  0797  0786               	addwf	6,f	;volatile
   531  0798  2F80               	goto	l744
   532  0799  120A  118A  2801   	ljmp	start
   533  079C                     __end_of_main:
   534                           
   535                           	psect	text1
   536  075C                     __ptext1:	
   537 ;; *************** function _setup *****************
   538 ;; Defined at:
   539 ;;		line 88 in file "ESCLAVO2.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 1
   560 ;; This function calls:
   561 ;;		_InitMSSP
   562 ;;		_initOsc
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _setup
   570  075C                     _setup:
   571  075C                     l722:	
   572                           ;incstack = 0
   573                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;ESCLAVO2.c: 91:     ANSEL = 0;
   577  075C  1683               	bsf	3,5	;RP0=1, select bank3
   578  075D  1703               	bsf	3,6	;RP1=1, select bank3
   579  075E  0188               	clrf	8	;volatile
   580                           
   581                           ;ESCLAVO2.c: 92:     ANSELH = 0;
   582  075F  0189               	clrf	9	;volatile
   583                           
   584                           ;ESCLAVO2.c: 94:     TRISA = 0;
   585  0760  1683               	bsf	3,5	;RP0=1, select bank1
   586  0761  1303               	bcf	3,6	;RP1=0, select bank1
   587  0762  0185               	clrf	5	;volatile
   588                           
   589                           ;ESCLAVO2.c: 95:     TRISB = 0;
   590  0763  0186               	clrf	6	;volatile
   591  0764                     l724:
   592                           
   593                           ;ESCLAVO2.c: 96:     TRISD = 0b01100;
   594  0764  300C               	movlw	12
   595  0765  0088               	movwf	8	;volatile
   596  0766                     l726:
   597                           
   598                           ;ESCLAVO2.c: 97:     TRISE = 0;
   599  0766  0189               	clrf	9	;volatile
   600  0767                     l728:
   601                           
   602                           ;ESCLAVO2.c: 99:     PORTE = 0;
   603  0767  1283               	bcf	3,5	;RP0=0, select bank0
   604  0768  1303               	bcf	3,6	;RP1=0, select bank0
   605  0769  0189               	clrf	9	;volatile
   606  076A                     l730:
   607                           
   608                           ;ESCLAVO2.c: 100:     PORTD = 0;
   609  076A  0188               	clrf	8	;volatile
   610  076B                     l732:
   611                           
   612                           ;ESCLAVO2.c: 101:     PORTA = 0;
   613  076B  0185               	clrf	5	;volatile
   614  076C                     l734:
   615                           
   616                           ;ESCLAVO2.c: 102:     PORTB = 0;
   617  076C  0186               	clrf	6	;volatile
   618  076D                     l736:
   619                           
   620                           ;ESCLAVO2.c: 105:     initOsc(4);
   621  076D  3004               	movlw	4
   622  076E  120A  118A  27CB  120A  118A  	fcall	_initOsc
   623  0773                     l738:
   624                           
   625                           ;ESCLAVO2.c: 108:     InitMSSP(SPI_SLAVE_SS_EN);
   626  0773  3004               	movlw	4
   627  0774  120A  118A  279C  120A  118A  	fcall	_InitMSSP
   628  0779                     l53:
   629  0779  0008               	return
   630  077A                     __end_of_setup:
   631                           
   632                           	psect	text2
   633  07CB                     __ptext2:	
   634 ;; *************** function _initOsc *****************
   635 ;; Defined at:
   636 ;;		line 12 in file "Oscilador.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  Valor           1    wreg     unsigned char 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  Valor           1    0[COMMON] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         0       0       0       0       0
   651 ;;      Locals:         1       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0
   653 ;;      Totals:         1       0       0       0       0
   654 ;;Total ram usage:        1 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_setup
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _initOsc
   665  07CB                     _initOsc:
   666                           
   667                           ;incstack = 0
   668                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   669                           ;initOsc@Valor stored from wreg
   670  07CB  00F1               	movwf	initOsc@Valor
   671  07CC                     l684:
   672                           
   673                           ;Oscilador.c: 14:     if(Valor == 8){
   674  07CC  3008               	movlw	8
   675  07CD  0671               	xorwf	initOsc@Valor,w
   676  07CE  1D03               	btfss	3,2
   677  07CF  2FD1               	goto	u11
   678  07D0  2FD2               	goto	u10
   679  07D1                     u11:
   680  07D1  2FD7               	goto	l688
   681  07D2                     u10:
   682  07D2                     l686:
   683                           
   684                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   685  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   686  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   687  07D4  160F               	bsf	15,4	;volatile
   688                           
   689                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   690  07D5  168F               	bsf	15,5	;volatile
   691                           
   692                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   693  07D6  170F               	bsf	15,6	;volatile
   694  07D7                     l688:
   695                           
   696                           ;Oscilador.c: 19:     if(Valor == 4){
   697  07D7  3004               	movlw	4
   698  07D8  0671               	xorwf	initOsc@Valor,w
   699  07D9  1D03               	btfss	3,2
   700  07DA  2FDC               	goto	u21
   701  07DB  2FDD               	goto	u20
   702  07DC                     u21:
   703  07DC  2FE2               	goto	l692
   704  07DD                     u20:
   705  07DD                     l690:
   706                           
   707                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   708  07DD  1683               	bsf	3,5	;RP0=1, select bank1
   709  07DE  1303               	bcf	3,6	;RP1=0, select bank1
   710  07DF  120F               	bcf	15,4	;volatile
   711                           
   712                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   713  07E0  168F               	bsf	15,5	;volatile
   714                           
   715                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   716  07E1  170F               	bsf	15,6	;volatile
   717  07E2                     l692:
   718                           
   719                           ;Oscilador.c: 24:     if(Valor == 2){
   720  07E2  3002               	movlw	2
   721  07E3  0671               	xorwf	initOsc@Valor,w
   722  07E4  1D03               	btfss	3,2
   723  07E5  2FE7               	goto	u31
   724  07E6  2FE8               	goto	u30
   725  07E7                     u31:
   726  07E7  2FED               	goto	l696
   727  07E8                     u30:
   728  07E8                     l694:
   729                           
   730                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   731  07E8  1683               	bsf	3,5	;RP0=1, select bank1
   732  07E9  1303               	bcf	3,6	;RP1=0, select bank1
   733  07EA  160F               	bsf	15,4	;volatile
   734                           
   735                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   736  07EB  128F               	bcf	15,5	;volatile
   737                           
   738                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   739  07EC  170F               	bsf	15,6	;volatile
   740  07ED                     l696:
   741                           
   742                           ;Oscilador.c: 29:     if(Valor == 1){
   743  07ED  0371               	decf	initOsc@Valor,w
   744  07EE  1D03               	btfss	3,2
   745  07EF  2FF1               	goto	u41
   746  07F0  2FF2               	goto	u40
   747  07F1                     u41:
   748  07F1  2FF7               	goto	l61
   749  07F2                     u40:
   750  07F2                     l698:
   751                           
   752                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   753  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   754  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   755  07F4  120F               	bcf	15,4	;volatile
   756                           
   757                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   758  07F5  128F               	bcf	15,5	;volatile
   759                           
   760                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   761  07F6  170F               	bsf	15,6	;volatile
   762  07F7                     l61:	
   763                           ;Oscilador.c: 33:     }
   764                           
   765                           
   766                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   767  07F7  1683               	bsf	3,5	;RP0=1, select bank1
   768  07F8  1303               	bcf	3,6	;RP1=0, select bank1
   769  07F9  140F               	bsf	15,0	;volatile
   770  07FA                     l62:
   771  07FA  0008               	return
   772  07FB                     __end_of_initOsc:
   773                           
   774                           	psect	text3
   775  079C                     __ptext3:	
   776 ;; *************** function _InitMSSP *****************
   777 ;; Defined at:
   778 ;;		line 10 in file "SPI.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  Modo            1    wreg     enum E1264
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  Modo            1    0[COMMON] enum E1264
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         1       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0
   795 ;;      Totals:         1       0       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_setup
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _InitMSSP
   807  079C                     _InitMSSP:
   808                           
   809                           ;incstack = 0
   810                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
   811                           ;InitMSSP@Modo stored from wreg
   812  079C  00F1               	movwf	InitMSSP@Modo
   813  079D                     l700:
   814                           
   815                           ;SPI.c: 14:     SSPCONbits.SSPEN = 0;
   816  079D  1283               	bcf	3,5	;RP0=0, select bank0
   817  079E  1303               	bcf	3,6	;RP1=0, select bank0
   818  079F  1294               	bcf	20,5	;volatile
   819                           
   820                           ;SPI.c: 16:     SSPCONbits.SSPEN = 1;
   821  07A0  1694               	bsf	20,5	;volatile
   822                           
   823                           ;SPI.c: 19:     TRISCbits.TRISC5 = 0;
   824  07A1  1683               	bsf	3,5	;RP0=1, select bank1
   825  07A2  1303               	bcf	3,6	;RP1=0, select bank1
   826  07A3  1287               	bcf	7,5	;volatile
   827                           
   828                           ;SPI.c: 20:     TRISCbits.TRISC4 = 1;
   829  07A4  1607               	bsf	7,4	;volatile
   830  07A5                     l702:
   831                           
   832                           ;SPI.c: 21:     if (Modo < 0b00000110){
   833  07A5  3006               	movlw	6
   834  07A6  0271               	subwf	InitMSSP@Modo,w
   835  07A7  1803               	skipnc
   836  07A8  2FAA               	goto	u51
   837  07A9  2FAB               	goto	u50
   838  07AA                     u51:
   839  07AA  2FB4               	goto	l708
   840  07AB                     u50:
   841  07AB                     l704:
   842                           
   843                           ;SPI.c: 23:         if (Modo < 0b00000100){
   844  07AB  3004               	movlw	4
   845  07AC  0271               	subwf	InitMSSP@Modo,w
   846  07AD  1803               	skipnc
   847  07AE  2FB0               	goto	u61
   848  07AF  2FB1               	goto	u60
   849  07B0                     u61:
   850  07B0  2FB3               	goto	l80
   851  07B1                     u60:
   852  07B1                     l706:
   853                           
   854                           ;SPI.c: 24:             TRISCbits.TRISC3 = 0;
   855  07B1  1187               	bcf	7,3	;volatile
   856                           
   857                           ;SPI.c: 25:         }
   858  07B2  2FB4               	goto	l708
   859  07B3                     l80:	
   860                           ;SPI.c: 26:         else {
   861                           
   862                           
   863                           ;SPI.c: 27:             TRISCbits.TRISC3 = 1;
   864  07B3  1587               	bsf	7,3	;volatile
   865  07B4                     l708:
   866                           
   867                           ;SPI.c: 32:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
   868  07B4  3004               	movlw	4
   869  07B5  0671               	xorwf	InitMSSP@Modo,w
   870  07B6  1D03               	btfss	3,2
   871  07B7  2FB9               	goto	u71
   872  07B8  2FBA               	goto	u70
   873  07B9                     u71:
   874  07B9  2FBB               	goto	l712
   875  07BA                     u70:
   876  07BA                     l710:
   877  07BA  1685               	bsf	5,5	;volatile
   878  07BB                     l712:
   879                           
   880                           ;SPI.c: 36:     SSPCON = SSPCON | Modo;
   881  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   882  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   883  07BD  0814               	movf	20,w	;volatile
   884  07BE  0471               	iorwf	InitMSSP@Modo,w	;volatile
   885  07BF  0094               	movwf	20	;volatile
   886  07C0                     l714:
   887                           
   888                           ;SPI.c: 38:     PIE1bits.SSPIE = 0;
   889  07C0  1683               	bsf	3,5	;RP0=1, select bank1
   890  07C1  1303               	bcf	3,6	;RP1=0, select bank1
   891  07C2  118C               	bcf	12,3	;volatile
   892  07C3                     l716:
   893                           
   894                           ;SPI.c: 42:     SSPCONbits.CKP = 0;
   895  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   896  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   897  07C5  1214               	bcf	20,4	;volatile
   898  07C6                     l718:
   899                           
   900                           ;SPI.c: 45:     SSPSTATbits.CKE = 1;
   901  07C6  1683               	bsf	3,5	;RP0=1, select bank1
   902  07C7  1303               	bcf	3,6	;RP1=0, select bank1
   903  07C8  1714               	bsf	20,6	;volatile
   904  07C9                     l720:
   905                           
   906                           ;SPI.c: 47:     SSPSTATbits.SMP = 0;
   907  07C9  1394               	bcf	20,7	;volatile
   908  07CA                     l83:
   909  07CA  0008               	return
   910  07CB                     __end_of_InitMSSP:
   911  007E                     btemp	set	126	;btemp
   912  007E                     wtemp0	set	126
   913                           
   914                           	psect	config
   915                           
   916                           ;Config register CONFIG1 @ 0x2007
   917                           ;	Oscillator Selection bits
   918                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   919                           ;	Watchdog Timer Enable bit
   920                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   921                           ;	Power-up Timer Enable bit
   922                           ;	PWRTE = OFF, PWRT disabled
   923                           ;	RE3/MCLR pin function select bit
   924                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   925                           ;	Code Protection bit
   926                           ;	CP = OFF, Program memory code protection is disabled
   927                           ;	Data Code Protection bit
   928                           ;	CPD = OFF, Data memory code protection is disabled
   929                           ;	Brown Out Reset Selection bits
   930                           ;	BOREN = OFF, BOR disabled
   931                           ;	Internal External Switchover bit
   932                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   933                           ;	Fail-Safe Clock Monitor Enabled bit
   934                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   935                           ;	Low Voltage Programming Enable bit
   936                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   937                           ;	In-Circuit Debugger Mode bit
   938                           ;	DEBUG = 0x1, unprogrammed default
   939  2007                     	org	8199
   940  2007  20D4               	dw	8404
   941                           
   942                           ;Config register CONFIG2 @ 0x2008
   943                           ;	Brown-out Reset Selection bit
   944                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   945                           ;	Flash Program Memory Self Write Enable bits
   946                           ;	WRT = OFF, Write protection off
   947  2008                     	org	8200
   948  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_InitMSSP
    _setup->_initOsc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                              1 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     120
                           _InitMSSP
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _InitMSSP
     _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      2       3       1       23.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 16:40:02 2022

            _SSPSTATbits 0094                       l41 0786                       l61 07F7  
                     l53 0779                       l45 0790                       l62 07FA  
                     l80 07B3                       l83 07CA                       u10 07D2  
                     u11 07D1                       u20 07DD                       u21 07DC  
                     u30 07E8                       u31 07E7                       u40 07F2  
                     u41 07F1                       u50 07AB                       u51 07AA  
                     u60 07B1                       u61 07B0                       u70 07BA  
                     u71 07B9                       u80 0786                       u81 0785  
                     u90 078A                       u91 0789                      l700 079D  
                    l710 07BA                      l702 07A5                      l720 07C9  
                    l712 07BB                      l704 07AB                      l714 07C0  
                    l706 07B1                      l730 076A                      l722 075C  
                    l716 07C3                      l708 07B4                      l732 076B  
                    l724 0764                      l740 077A                      l718 07C6  
                    l734 076C                      l726 0766                      l750 078C  
                    l742 077F                      l736 076D                      l728 0767  
                    l744 0780                      l690 07DD                      l738 0773  
                    l754 0794                      l692 07E2                      l684 07CC  
                    l748 078A                      l694 07E8                      l686 07D2  
                    l696 07ED                      l688 07D7                      l698 07F2  
                    _RD2 0042                      _RD3 0043                      u100 0790  
                    u101 078F                      u110 0794                      u111 0793  
                   _main 077A                     btemp 007E                     start 0001  
                  ?_main 0071                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089             InitMSSP@Modo 0071          __end_of_initOsc 07FB  
                  _read1 0073                    _setup 075C                    status 0003  
                  wtemp0 007E          __initialization 07FB             __end_of_main 079C  
       __end_of_InitMSSP 07CB                   ??_main 0072                   ?_setup 0071  
                 _ANSELH 0189                   _SSPCON 0014                   _SSPBUF 0013  
              ??_initOsc 0071  __end_of__initialization 07FC           __pcstackCOMMON 0071  
          __end_of_setup 077A                  ??_setup 0072                ?_InitMSSP 0071  
             __pmaintext 077A             initOsc@Valor 0071               ??_InitMSSP 0071  
                __ptext1 075C                  __ptext2 07CB                  __ptext3 079C  
                _initOsc 07CB     end_of_initialization 07FC                _PORTDbits 0008  
              _TRISAbits 0085                _TRISCbits 0087      start_initialization 07FB  
      __size_of_InitMSSP 002F              __pbssCOMMON 0073                ___latbits 0002  
               ?_initOsc 0071           __size_of_setup 001E                 _PIE1bits 008C  
               _InitMSSP 079C         __size_of_initOsc 0030            __size_of_main 0022  
             _OSCCONbits 008F               _SSPCONbits 0014  
