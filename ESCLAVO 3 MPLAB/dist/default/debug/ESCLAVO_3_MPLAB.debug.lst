

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 16:49:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  0105                     	;# 
   435  0107                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0185                     	;# 
   444  0187                     	;# 
   445  0188                     	;# 
   446  0189                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0013                     _SSPBUF	set	19
   450  0014                     _SSPCON	set	20
   451  0014                     _SSPCONbits	set	20
   452  001E                     _ADRESH	set	30
   453  000B                     _INTCONbits	set	11
   454  0006                     _PORTB	set	6
   455  0009                     _PORTE	set	9
   456  0008                     _PORTD	set	8
   457  0009                     _PORTEbits	set	9
   458  001F                     _ADCON0bits	set	31
   459  000C                     _PIR1bits	set	12
   460  0094                     _SSPSTATbits	set	148
   461  0085                     _TRISAbits	set	133
   462  0087                     _TRISCbits	set	135
   463  008F                     _OSCCONbits	set	143
   464  009F                     _ADCON1bits	set	159
   465  008C                     _PIE1bits	set	140
   466  0089                     _TRISE	set	137
   467  0088                     _TRISD	set	136
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  0189                     _ANSELH	set	393
   471  0188                     _ANSEL	set	392
   472                           
   473                           	psect	cinit
   474  07F6                     start_initialization:	
   475                           ; #config settings
   476                           
   477  07F6                     __initialization:
   478                           
   479                           ; Clear objects allocated to COMMON
   480  07F6  01FA               	clrf	__pbssCOMMON& (0+127)
   481                           
   482                           ; Clear objects allocated to BANK0
   483  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   484  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   485  07F9  01AD               	clrf	__pbssBANK0& (0+127)
   486  07FA  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   487  07FB  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   488  07FC                     end_of_initialization:	
   489                           ;End of C runtime variable initialization code
   490                           
   491  07FC                     __end_of__initialization:
   492  07FC  0183               	clrf	3
   493  07FD  120A  118A  2F77   	ljmp	_main	;jump to C main() function
   494                           
   495                           	psect	bssCOMMON
   496  007A                     __pbssCOMMON:
   497  007A                     _cont2:
   498  007A                     	ds	1
   499                           
   500                           	psect	bssBANK0
   501  002D                     __pbssBANK0:
   502  002D                     _temp:
   503  002D                     	ds	1
   504  002E                     _read2:
   505  002E                     	ds	1
   506  002F                     _cont1:
   507  002F                     	ds	1
   508                           
   509                           	psect	cstackCOMMON
   510  0071                     __pcstackCOMMON:
   511  0071                     ?_ADC:
   512  0071                     ??_ADC:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0071                     ?_setup:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0071                     ?_conversion:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0071                     ?_ReadMSSP:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0071                     ?_WriteMSSP:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0071                     ?_initOsc:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0071                     ?_InitMSSP:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0071                     ?_isr:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0071                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539                           
   540                           ; 1 bytes @ 0x0
   541  0071                     	ds	1
   542  0072                     ??_isr:
   543                           
   544                           ; 1 bytes @ 0x1
   545  0072                     	ds	2
   546  0074                     ??_conversion:
   547  0074                     ??_ReadMSSP:	
   548                           ; 1 bytes @ 0x3
   549                           
   550  0074                     ??_WriteMSSP:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0074                     ??_initOsc:	
   554                           ; 1 bytes @ 0x3
   555                           
   556  0074                     ?_config_ADC:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0074                     ??_InitMSSP:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0074                     ?___wmul:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0074                     initOsc@Valor:	
   566                           ; 2 bytes @ 0x3
   567                           
   568  0074                     InitMSSP@Modo:	
   569                           ; 1 bytes @ 0x3
   570                           
   571  0074                     WriteMSSP@Data:	
   572                           ; 1 bytes @ 0x3
   573                           
   574  0074                     config_ADC@channel:	
   575                           ; 1 bytes @ 0x3
   576                           
   577  0074                     ___wmul@multiplier:	
   578                           ; 2 bytes @ 0x3
   579                           
   580                           
   581                           ; 2 bytes @ 0x3
   582  0074                     	ds	2
   583  0076                     ??_config_ADC:
   584  0076                     ___wmul@multiplicand:	
   585                           ; 1 bytes @ 0x5
   586                           
   587                           
   588                           ; 2 bytes @ 0x5
   589  0076                     	ds	1
   590  0077                     ??_setup:
   591                           
   592                           ; 1 bytes @ 0x6
   593  0077                     	ds	1
   594  0078                     ??___wmul:
   595  0078                     ___wmul@product:	
   596                           ; 1 bytes @ 0x7
   597                           
   598                           
   599                           ; 2 bytes @ 0x7
   600  0078                     	ds	2
   601                           
   602                           	psect	cstackBANK0
   603  0020                     __pcstackBANK0:
   604  0020                     ?___awdiv:
   605  0020                     ___awdiv@divisor:	
   606                           ; 2 bytes @ 0x0
   607                           
   608                           
   609                           ; 2 bytes @ 0x0
   610  0020                     	ds	2
   611  0022                     ___awdiv@dividend:
   612                           
   613                           ; 2 bytes @ 0x2
   614  0022                     	ds	2
   615  0024                     ??___awdiv:
   616                           
   617                           ; 1 bytes @ 0x4
   618  0024                     	ds	1
   619  0025                     ___awdiv@counter:
   620                           
   621                           ; 1 bytes @ 0x5
   622  0025                     	ds	1
   623  0026                     ___awdiv@sign:
   624                           
   625                           ; 1 bytes @ 0x6
   626  0026                     	ds	1
   627  0027                     ___awdiv@quotient:
   628                           
   629                           ; 2 bytes @ 0x7
   630  0027                     	ds	2
   631  0029                     ??_main:
   632                           
   633                           ; 1 bytes @ 0x9
   634  0029                     	ds	2
   635  002B                     _main$1150:
   636                           
   637                           ; 2 bytes @ 0xB
   638  002B                     	ds	2
   639                           
   640                           	psect	maintext
   641  0777                     __pmaintext:	
   642 ;;
   643 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   644 ;;
   645 ;; *************** function _main *****************
   646 ;; Defined at:
   647 ;;		line 65 in file "ESCLAVO3.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : B00/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       2       0       0       0
   663 ;;      Temps:          0       2       0       0       0
   664 ;;      Totals:         0       4       0       0       0
   665 ;;Total ram usage:        4 bytes
   666 ;; Hardware stack levels required when called: 4
   667 ;; This function calls:
   668 ;;		_ReadMSSP
   669 ;;		_WriteMSSP
   670 ;;		___awdiv
   671 ;;		___wmul
   672 ;;		_conversion
   673 ;;		_setup
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _main
   681  0777                     _main:
   682  0777                     l1165:	
   683                           ;incstack = 0
   684                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   685                           
   686                           
   687                           ;ESCLAVO3.c: 66:     setup();
   688  0777  120A  118A  2681  120A  118A  	fcall	_setup
   689  077C                     l1167:
   690                           
   691                           ;ESCLAVO3.c: 67:     ADCON0bits.GO = 1;
   692  077C  1283               	bcf	3,5	;RP0=0, select bank0
   693  077D  1303               	bcf	3,6	;RP1=0, select bank0
   694  077E  149F               	bsf	31,1	;volatile
   695  077F                     l1169:
   696                           
   697                           ;ESCLAVO3.c: 68:     read2 = 0;
   698  077F  01AE               	clrf	_read2
   699  0780                     l1171:
   700                           
   701                           ;ESCLAVO3.c: 74:         conversion();
   702  0780  120A  118A  2653  120A  118A  	fcall	_conversion
   703  0785                     l1173:
   704                           
   705                           ;ESCLAVO3.c: 76:         temp = ((cont1*5000)/1023)/10;
   706  0785  30FF               	movlw	255
   707  0786  1283               	bcf	3,5	;RP0=0, select bank0
   708  0787  1303               	bcf	3,6	;RP1=0, select bank0
   709  0788  00A0               	movwf	___awdiv@divisor
   710  0789  3003               	movlw	3
   711  078A  00A1               	movwf	___awdiv@divisor+1
   712  078B  082F               	movf	_cont1,w
   713  078C  00A9               	movwf	??_main
   714  078D  01AA               	clrf	??_main+1
   715  078E  0829               	movf	??_main,w
   716  078F  00F4               	movwf	___wmul@multiplier
   717  0790  082A               	movf	??_main+1,w
   718  0791  00F5               	movwf	___wmul@multiplier+1
   719  0792  3088               	movlw	136
   720  0793  00F6               	movwf	___wmul@multiplicand
   721  0794  3013               	movlw	19
   722  0795  00F7               	movwf	___wmul@multiplicand+1
   723  0796  120A  118A  262E  120A  118A  	fcall	___wmul
   724  079B  0875               	movf	?___wmul+1,w
   725  079C  1283               	bcf	3,5	;RP0=0, select bank0
   726  079D  1303               	bcf	3,6	;RP1=0, select bank0
   727  079E  00A3               	movwf	___awdiv@dividend+1
   728  079F  0874               	movf	?___wmul,w
   729  07A0  00A2               	movwf	___awdiv@dividend
   730  07A1  120A  118A  270E  120A  118A  	fcall	___awdiv
   731  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   732  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   733  07A8  0821               	movf	?___awdiv+1,w
   734  07A9  00AC               	movwf	_main$1150+1
   735  07AA  0820               	movf	?___awdiv,w
   736  07AB  00AB               	movwf	_main$1150
   737  07AC                     l1175:
   738                           
   739                           ;ESCLAVO3.c: 76:         temp = ((cont1*5000)/1023)/10;
   740  07AC  300A               	movlw	10
   741  07AD  00A0               	movwf	___awdiv@divisor
   742  07AE  3000               	movlw	0
   743  07AF  00A1               	movwf	___awdiv@divisor+1
   744  07B0  082C               	movf	_main$1150+1,w
   745  07B1  00A3               	movwf	___awdiv@dividend+1
   746  07B2  082B               	movf	_main$1150,w
   747  07B3  00A2               	movwf	___awdiv@dividend
   748  07B4  120A  118A  270E  120A  118A  	fcall	___awdiv
   749  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   750  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   751  07BB  0820               	movf	?___awdiv,w
   752  07BC  00A9               	movwf	??_main
   753  07BD  0829               	movf	??_main,w
   754  07BE  00AD               	movwf	_temp
   755  07BF                     l1177:
   756                           
   757                           ;ESCLAVO3.c: 78:         if(temp < 24){
   758  07BF  3018               	movlw	24
   759  07C0  022D               	subwf	_temp,w
   760  07C1  1803               	skipnc
   761  07C2  2FC4               	goto	u751
   762  07C3  2FC5               	goto	u750
   763  07C4                     u751:
   764  07C4  2FC9               	goto	l1181
   765  07C5                     u750:
   766  07C5                     l1179:
   767                           
   768                           ;ESCLAVO3.c: 79:             PORTEbits.RE2 = 1;
   769  07C5  1509               	bsf	9,2	;volatile
   770                           
   771                           ;ESCLAVO3.c: 80:             PORTEbits.RE1 = 0;
   772  07C6  1089               	bcf	9,1	;volatile
   773                           
   774                           ;ESCLAVO3.c: 81:             PORTEbits.RE0 = 0;
   775  07C7  1009               	bcf	9,0	;volatile
   776                           
   777                           ;ESCLAVO3.c: 82:         }
   778  07C8  2FE2               	goto	l1191
   779  07C9                     l1181:
   780  07C9  3019               	movlw	25
   781  07CA  022D               	subwf	_temp,w
   782  07CB  1C03               	skipc
   783  07CC  2FCE               	goto	u761
   784  07CD  2FCF               	goto	u760
   785  07CE                     u761:
   786  07CE  2FD9               	goto	l1187
   787  07CF                     u760:
   788  07CF                     l1183:
   789  07CF  301B               	movlw	27
   790  07D0  022D               	subwf	_temp,w
   791  07D1  1803               	skipnc
   792  07D2  2FD4               	goto	u771
   793  07D3  2FD5               	goto	u770
   794  07D4                     u771:
   795  07D4  2FD9               	goto	l1187
   796  07D5                     u770:
   797  07D5                     l1185:
   798                           
   799                           ;ESCLAVO3.c: 84:             PORTEbits.RE1 = 1;
   800  07D5  1489               	bsf	9,1	;volatile
   801                           
   802                           ;ESCLAVO3.c: 85:             PORTEbits.RE2 = 0;
   803  07D6  1109               	bcf	9,2	;volatile
   804                           
   805                           ;ESCLAVO3.c: 86:             PORTEbits.RE0 = 0;
   806  07D7  1009               	bcf	9,0	;volatile
   807                           
   808                           ;ESCLAVO3.c: 87:         }
   809  07D8  2FE2               	goto	l1191
   810  07D9                     l1187:
   811  07D9  301C               	movlw	28
   812  07DA  022D               	subwf	_temp,w
   813  07DB  1C03               	skipc
   814  07DC  2FDE               	goto	u781
   815  07DD  2FDF               	goto	u780
   816  07DE                     u781:
   817  07DE  2FE2               	goto	l1191
   818  07DF                     u780:
   819  07DF                     l1189:
   820                           
   821                           ;ESCLAVO3.c: 89:             PORTEbits.RE1 = 0;
   822  07DF  1089               	bcf	9,1	;volatile
   823                           
   824                           ;ESCLAVO3.c: 90:             PORTEbits.RE2 = 0;
   825  07E0  1109               	bcf	9,2	;volatile
   826                           
   827                           ;ESCLAVO3.c: 91:             PORTEbits.RE0 = 1;
   828  07E1  1409               	bsf	9,0	;volatile
   829  07E2                     l1191:
   830                           
   831                           ;ESCLAVO3.c: 99:         read2 = ReadMSSP();
   832  07E2  120A  118A  25D6  120A  118A  	fcall	_ReadMSSP
   833  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   834  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   835  07E9  00A9               	movwf	??_main
   836  07EA  0829               	movf	??_main,w
   837  07EB  00AE               	movwf	_read2
   838  07EC                     l1193:
   839                           
   840                           ;ESCLAVO3.c: 100:         WriteMSSP(temp);
   841  07EC  082D               	movf	_temp,w
   842  07ED  120A  118A  25D0  120A  118A  	fcall	_WriteMSSP
   843  07F2  2F80               	goto	l1171
   844  07F3  120A  118A  280C   	ljmp	start
   845  07F6                     __end_of_main:
   846                           
   847                           	psect	text1
   848  0681                     __ptext1:	
   849 ;; *************** function _setup *****************
   850 ;; Defined at:
   851 ;;		line 107 in file "ESCLAVO3.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used: 1
   871 ;; Hardware stack levels required when called: 3
   872 ;; This function calls:
   873 ;;		_InitMSSP
   874 ;;		_config_ADC
   875 ;;		_initOsc
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _setup
   883  0681                     _setup:
   884  0681                     l981:	
   885                           ;incstack = 0
   886                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   887                           
   888                           
   889                           ;ESCLAVO3.c: 110:     ANSEL = 0b0011;
   890  0681  3003               	movlw	3
   891  0682  1683               	bsf	3,5	;RP0=1, select bank3
   892  0683  1703               	bsf	3,6	;RP1=1, select bank3
   893  0684  0088               	movwf	8	;volatile
   894  0685                     l983:
   895                           
   896                           ;ESCLAVO3.c: 111:     ANSELH = 0;
   897  0685  0189               	clrf	9	;volatile
   898  0686                     l985:
   899                           
   900                           ;ESCLAVO3.c: 113:     TRISA = 0b0011;
   901  0686  3003               	movlw	3
   902  0687  1683               	bsf	3,5	;RP0=1, select bank1
   903  0688  1303               	bcf	3,6	;RP1=0, select bank1
   904  0689  0085               	movwf	5	;volatile
   905                           
   906                           ;ESCLAVO3.c: 114:     TRISB = 0;
   907  068A  0186               	clrf	6	;volatile
   908                           
   909                           ;ESCLAVO3.c: 115:     TRISD = 0;
   910  068B  0188               	clrf	8	;volatile
   911                           
   912                           ;ESCLAVO3.c: 116:     TRISE = 0;
   913  068C  0189               	clrf	9	;volatile
   914                           
   915                           ;ESCLAVO3.c: 118:     PORTD = 0;
   916  068D  1283               	bcf	3,5	;RP0=0, select bank0
   917  068E  1303               	bcf	3,6	;RP1=0, select bank0
   918  068F  0188               	clrf	8	;volatile
   919                           
   920                           ;ESCLAVO3.c: 119:     PORTE = 0;
   921  0690  0189               	clrf	9	;volatile
   922                           
   923                           ;ESCLAVO3.c: 120:     PORTB = 0;
   924  0691  0186               	clrf	6	;volatile
   925  0692                     l987:
   926                           
   927                           ;ESCLAVO3.c: 123:     initOsc(4);
   928  0692  3004               	movlw	4
   929  0693  120A  118A  26DE  120A  118A  	fcall	_initOsc
   930  0698                     l989:
   931                           
   932                           ;ESCLAVO3.c: 126:     config_ADC(0);
   933  0698  3000               	movlw	0
   934  0699  00F4               	movwf	config_ADC@channel
   935  069A  00F5               	movwf	config_ADC@channel+1
   936  069B  120A  118A  25F5  120A  118A  	fcall	_config_ADC
   937  06A0                     l991:
   938                           
   939                           ;ESCLAVO3.c: 129:     InitMSSP(SPI_SLAVE_SS_EN);
   940  06A0  3004               	movlw	4
   941  06A1  120A  118A  26AF  120A  118A  	fcall	_InitMSSP
   942  06A6                     l993:
   943                           
   944                           ;ESCLAVO3.c: 132:     INTCONbits.GIE = 1;
   945  06A6  178B               	bsf	11,7	;volatile
   946  06A7                     l995:
   947                           
   948                           ;ESCLAVO3.c: 133:     INTCONbits.PEIE = 1;
   949  06A7  170B               	bsf	11,6	;volatile
   950  06A8                     l997:
   951                           
   952                           ;ESCLAVO3.c: 134:     PIR1bits.ADIF = 0;
   953  06A8  1283               	bcf	3,5	;RP0=0, select bank0
   954  06A9  1303               	bcf	3,6	;RP1=0, select bank0
   955  06AA  130C               	bcf	12,6	;volatile
   956  06AB                     l999:
   957                           
   958                           ;ESCLAVO3.c: 135:     PIE1bits.ADIE = 1;
   959  06AB  1683               	bsf	3,5	;RP0=1, select bank1
   960  06AC  1303               	bcf	3,6	;RP1=0, select bank1
   961  06AD  170C               	bsf	12,6	;volatile
   962  06AE                     l74:
   963  06AE  0008               	return
   964  06AF                     __end_of_setup:
   965                           
   966                           	psect	text2
   967  06DE                     __ptext2:	
   968 ;; *************** function _initOsc *****************
   969 ;; Defined at:
   970 ;;		line 12 in file "Oscilador.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  Valor           1    wreg     unsigned char 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  Valor           1    3[COMMON] unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         1       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0
   987 ;;      Totals:         1       0       0       0       0
   988 ;;Total ram usage:        1 bytes
   989 ;; Hardware stack levels used: 1
   990 ;; Hardware stack levels required when called: 2
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_setup
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _initOsc
  1000  06DE                     _initOsc:
  1001                           
  1002                           ;incstack = 0
  1003                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1004                           ;initOsc@Valor stored from wreg
  1005  06DE  00F4               	movwf	initOsc@Valor
  1006  06DF                     l927:
  1007                           
  1008                           ;Oscilador.c: 14:     if(Valor == 8){
  1009  06DF  3008               	movlw	8
  1010  06E0  0674               	xorwf	initOsc@Valor,w
  1011  06E1  1D03               	btfss	3,2
  1012  06E2  2EE4               	goto	u331
  1013  06E3  2EE5               	goto	u330
  1014  06E4                     u331:
  1015  06E4  2EEA               	goto	l931
  1016  06E5                     u330:
  1017  06E5                     l929:
  1018                           
  1019                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1020  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1021  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1022  06E7  160F               	bsf	15,4	;volatile
  1023                           
  1024                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1025  06E8  168F               	bsf	15,5	;volatile
  1026                           
  1027                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1028  06E9  170F               	bsf	15,6	;volatile
  1029  06EA                     l931:
  1030                           
  1031                           ;Oscilador.c: 19:     if(Valor == 4){
  1032  06EA  3004               	movlw	4
  1033  06EB  0674               	xorwf	initOsc@Valor,w
  1034  06EC  1D03               	btfss	3,2
  1035  06ED  2EEF               	goto	u341
  1036  06EE  2EF0               	goto	u340
  1037  06EF                     u341:
  1038  06EF  2EF5               	goto	l935
  1039  06F0                     u340:
  1040  06F0                     l933:
  1041                           
  1042                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1043  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1044  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1045  06F2  120F               	bcf	15,4	;volatile
  1046                           
  1047                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1048  06F3  168F               	bsf	15,5	;volatile
  1049                           
  1050                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1051  06F4  170F               	bsf	15,6	;volatile
  1052  06F5                     l935:
  1053                           
  1054                           ;Oscilador.c: 24:     if(Valor == 2){
  1055  06F5  3002               	movlw	2
  1056  06F6  0674               	xorwf	initOsc@Valor,w
  1057  06F7  1D03               	btfss	3,2
  1058  06F8  2EFA               	goto	u351
  1059  06F9  2EFB               	goto	u350
  1060  06FA                     u351:
  1061  06FA  2F00               	goto	l939
  1062  06FB                     u350:
  1063  06FB                     l937:
  1064                           
  1065                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1066  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  1067  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  1068  06FD  160F               	bsf	15,4	;volatile
  1069                           
  1070                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1071  06FE  128F               	bcf	15,5	;volatile
  1072                           
  1073                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1074  06FF  170F               	bsf	15,6	;volatile
  1075  0700                     l939:
  1076                           
  1077                           ;Oscilador.c: 29:     if(Valor == 1){
  1078  0700  0374               	decf	initOsc@Valor,w
  1079  0701  1D03               	btfss	3,2
  1080  0702  2F04               	goto	u361
  1081  0703  2F05               	goto	u360
  1082  0704                     u361:
  1083  0704  2F0A               	goto	l110
  1084  0705                     u360:
  1085  0705                     l941:
  1086                           
  1087                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1088  0705  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0706  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0707  120F               	bcf	15,4	;volatile
  1091                           
  1092                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1093  0708  128F               	bcf	15,5	;volatile
  1094                           
  1095                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1096  0709  170F               	bsf	15,6	;volatile
  1097  070A                     l110:	
  1098                           ;Oscilador.c: 33:     }
  1099                           
  1100                           
  1101                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1102  070A  1683               	bsf	3,5	;RP0=1, select bank1
  1103  070B  1303               	bcf	3,6	;RP1=0, select bank1
  1104  070C  140F               	bsf	15,0	;volatile
  1105  070D                     l111:
  1106  070D  0008               	return
  1107  070E                     __end_of_initOsc:
  1108                           
  1109                           	psect	text3
  1110  05F5                     __ptext3:	
  1111 ;; *************** function _config_ADC *****************
  1112 ;; Defined at:
  1113 ;;		line 36 in file "ADC.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  channel         2    3[COMMON] int 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         2       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 2
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_setup
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _config_ADC
  1143  05F5                     _config_ADC:
  1144  05F5                     l943:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1147                           
  1148                           
  1149                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1150  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  1151  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  1152  05F7  139F               	bcf	31,7	;volatile
  1153                           
  1154                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1155  05F8  121F               	bcf	31,4	;volatile
  1156                           
  1157                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1158  05F9  129F               	bcf	31,5	;volatile
  1159  05FA                     l945:
  1160                           
  1161                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1162  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1163  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1164  05FC  081F               	movf	31,w	;volatile
  1165  05FD  393F               	andlw	-193
  1166  05FE  3840               	iorlw	64
  1167  05FF  009F               	movwf	31	;volatile
  1168                           
  1169                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1170  0600  0874               	movf	config_ADC@channel,w
  1171  0601  00F6               	movwf	??_config_ADC
  1172  0602  0DF6               	rlf	??_config_ADC,f
  1173  0603  0DF6               	rlf	??_config_ADC,f
  1174  0604  081F               	movf	31,w	;volatile
  1175  0605  0676               	xorwf	??_config_ADC,w
  1176  0606  39C3               	andlw	-61
  1177  0607  0676               	xorwf	??_config_ADC,w
  1178  0608  009F               	movwf	31	;volatile
  1179  0609                     l947:
  1180                           
  1181                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1182  0609  141F               	bsf	31,0	;volatile
  1183  060A                     l949:
  1184                           
  1185                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1186  060A  3010               	movlw	16
  1187  060B  00F6               	movwf	??_config_ADC
  1188  060C                     u797:
  1189  060C  0BF6               	decfsz	??_config_ADC,f
  1190  060D  2E0C               	goto	u797
  1191  060E  0000               	nop
  1192  060F                     l102:
  1193  060F  0008               	return
  1194  0610                     __end_of_config_ADC:
  1195                           
  1196                           	psect	text4
  1197  06AF                     __ptext4:	
  1198 ;; *************** function _InitMSSP *****************
  1199 ;; Defined at:
  1200 ;;		line 10 in file "SPI.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;  Modo            1    wreg     enum E1264
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  Modo            1    3[COMMON] enum E1264
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         1       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0
  1217 ;;      Totals:         1       0       0       0       0
  1218 ;;Total ram usage:        1 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 2
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_setup
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _InitMSSP
  1230  06AF                     _InitMSSP:
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1234                           ;InitMSSP@Modo stored from wreg
  1235  06AF  00F4               	movwf	InitMSSP@Modo
  1236  06B0                     l951:
  1237                           
  1238                           ;SPI.c: 14:     SSPCONbits.SSPEN = 0;
  1239  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1240  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1241  06B2  1294               	bcf	20,5	;volatile
  1242                           
  1243                           ;SPI.c: 16:     SSPCONbits.SSPEN = 1;
  1244  06B3  1694               	bsf	20,5	;volatile
  1245                           
  1246                           ;SPI.c: 19:     TRISCbits.TRISC5 = 0;
  1247  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  1248  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  1249  06B6  1287               	bcf	7,5	;volatile
  1250                           
  1251                           ;SPI.c: 20:     TRISCbits.TRISC4 = 1;
  1252  06B7  1607               	bsf	7,4	;volatile
  1253  06B8                     l953:
  1254                           
  1255                           ;SPI.c: 21:     if (Modo < 0b00000110){
  1256  06B8  3006               	movlw	6
  1257  06B9  0274               	subwf	InitMSSP@Modo,w
  1258  06BA  1803               	skipnc
  1259  06BB  2EBD               	goto	u371
  1260  06BC  2EBE               	goto	u370
  1261  06BD                     u371:
  1262  06BD  2EC7               	goto	l959
  1263  06BE                     u370:
  1264  06BE                     l955:
  1265                           
  1266                           ;SPI.c: 23:         if (Modo < 0b00000100){
  1267  06BE  3004               	movlw	4
  1268  06BF  0274               	subwf	InitMSSP@Modo,w
  1269  06C0  1803               	skipnc
  1270  06C1  2EC3               	goto	u381
  1271  06C2  2EC4               	goto	u380
  1272  06C3                     u381:
  1273  06C3  2EC6               	goto	l129
  1274  06C4                     u380:
  1275  06C4                     l957:
  1276                           
  1277                           ;SPI.c: 24:             TRISCbits.TRISC3 = 0;
  1278  06C4  1187               	bcf	7,3	;volatile
  1279                           
  1280                           ;SPI.c: 25:         }
  1281  06C5  2EC7               	goto	l959
  1282  06C6                     l129:	
  1283                           ;SPI.c: 26:         else {
  1284                           
  1285                           
  1286                           ;SPI.c: 27:             TRISCbits.TRISC3 = 1;
  1287  06C6  1587               	bsf	7,3	;volatile
  1288  06C7                     l959:
  1289                           
  1290                           ;SPI.c: 32:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1291  06C7  3004               	movlw	4
  1292  06C8  0674               	xorwf	InitMSSP@Modo,w
  1293  06C9  1D03               	btfss	3,2
  1294  06CA  2ECC               	goto	u391
  1295  06CB  2ECD               	goto	u390
  1296  06CC                     u391:
  1297  06CC  2ECE               	goto	l963
  1298  06CD                     u390:
  1299  06CD                     l961:
  1300  06CD  1685               	bsf	5,5	;volatile
  1301  06CE                     l963:
  1302                           
  1303                           ;SPI.c: 36:     SSPCON = SSPCON | Modo;
  1304  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1305  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  1306  06D0  0814               	movf	20,w	;volatile
  1307  06D1  0474               	iorwf	InitMSSP@Modo,w	;volatile
  1308  06D2  0094               	movwf	20	;volatile
  1309  06D3                     l965:
  1310                           
  1311                           ;SPI.c: 38:     PIE1bits.SSPIE = 0;
  1312  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  1313  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  1314  06D5  118C               	bcf	12,3	;volatile
  1315  06D6                     l967:
  1316                           
  1317                           ;SPI.c: 42:     SSPCONbits.CKP = 0;
  1318  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1319  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1320  06D8  1214               	bcf	20,4	;volatile
  1321  06D9                     l969:
  1322                           
  1323                           ;SPI.c: 45:     SSPSTATbits.CKE = 1;
  1324  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  1325  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  1326  06DB  1714               	bsf	20,6	;volatile
  1327  06DC                     l971:
  1328                           
  1329                           ;SPI.c: 47:     SSPSTATbits.SMP = 0;
  1330  06DC  1394               	bcf	20,7	;volatile
  1331  06DD                     l132:
  1332  06DD  0008               	return
  1333  06DE                     __end_of_InitMSSP:
  1334                           
  1335                           	psect	text5
  1336  0653                     __ptext5:	
  1337 ;; *************** function _conversion *****************
  1338 ;; Defined at:
  1339 ;;		line 21 in file "ADC.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0
  1355 ;;      Temps:          1       0       0       0       0
  1356 ;;      Totals:         1       0       0       0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 2
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _conversion
  1369  0653                     _conversion:
  1370  0653                     l1001:	
  1371                           ;incstack = 0
  1372                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1373                           
  1374                           
  1375                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1376  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0655  189F               	btfsc	31,1	;volatile
  1379  0656  2E58               	goto	u421
  1380  0657  2E59               	goto	u420
  1381  0658                     u421:
  1382  0658  2E80               	goto	l99
  1383  0659                     u420:
  1384  0659                     l1003:
  1385                           
  1386                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1387  0659  0C1F               	rrf	31,w	;volatile
  1388  065A  00F4               	movwf	??_conversion
  1389  065B  0C74               	rrf	??_conversion,w
  1390  065C  390F               	andlw	15
  1391  065D  3A01               	xorlw	1
  1392  065E  1D03               	skipz
  1393  065F  2E61               	goto	u431
  1394  0660  2E62               	goto	u430
  1395  0661                     u431:
  1396  0661  2E6A               	goto	l1009
  1397  0662                     u430:
  1398  0662                     l1005:
  1399                           
  1400                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1401  0662  30C3               	movlw	-61
  1402  0663  059F               	andwf	31,f	;volatile
  1403  0664                     l1007:
  1404                           
  1405                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1406  0664  3010               	movlw	16
  1407  0665  00F4               	movwf	??_conversion
  1408  0666                     u807:
  1409  0666  0BF4               	decfsz	??_conversion,f
  1410  0667  2E66               	goto	u807
  1411  0668  0000               	nop
  1412                           
  1413                           ;ADC.c: 26:         }
  1414  0669  2E78               	goto	l1015
  1415  066A                     l1009:
  1416  066A  0C1F               	rrf	31,w	;volatile
  1417  066B  00F4               	movwf	??_conversion
  1418  066C  0C74               	rrf	??_conversion,w
  1419  066D  390F               	andlw	15
  1420  066E  3A00               	xorlw	0
  1421  066F  1D03               	skipz
  1422  0670  2E72               	goto	u441
  1423  0671  2E73               	goto	u440
  1424  0672                     u441:
  1425  0672  2E78               	goto	l1015
  1426  0673                     u440:
  1427  0673                     l1011:
  1428                           
  1429                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1430  0673  081F               	movf	31,w	;volatile
  1431  0674  39C3               	andlw	-61
  1432  0675  3804               	iorlw	4
  1433  0676  009F               	movwf	31	;volatile
  1434  0677  2E64               	goto	l1007
  1435  0678                     l1015:
  1436                           
  1437                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1438  0678  3010               	movlw	16
  1439  0679  00F4               	movwf	??_conversion
  1440  067A                     u817:
  1441  067A  0BF4               	decfsz	??_conversion,f
  1442  067B  2E7A               	goto	u817
  1443  067C  0000               	nop
  1444  067D                     l1017:
  1445                           
  1446                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1447  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1448  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1449  067F  149F               	bsf	31,1	;volatile
  1450  0680                     l99:
  1451  0680  0008               	return
  1452  0681                     __end_of_conversion:
  1453                           
  1454                           	psect	text6
  1455  062E                     __ptext6:	
  1456 ;; *************** function ___wmul *****************
  1457 ;; Defined at:
  1458 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  multiplier      2    3[COMMON] unsigned int 
  1461 ;;  multiplicand    2    5[COMMON] unsigned int 
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;  product         2    7[COMMON] unsigned int 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  2    3[COMMON] unsigned int 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         4       0       0       0       0
  1474 ;;      Locals:         2       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         6       0       0       0       0
  1477 ;;Total ram usage:        6 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; Hardware stack levels required when called: 2
  1480 ;; This function calls:
  1481 ;;		Nothing
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function ___wmul
  1489  062E                     ___wmul:
  1490  062E                     l1027:	
  1491                           ;incstack = 0
  1492                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1493                           
  1494  062E  01F8               	clrf	___wmul@product
  1495  062F  01F9               	clrf	___wmul@product+1
  1496  0630                     l1029:
  1497  0630  1C74               	btfss	___wmul@multiplier,0
  1498  0631  2E33               	goto	u461
  1499  0632  2E34               	goto	u460
  1500  0633                     u461:
  1501  0633  2E3A               	goto	l227
  1502  0634                     u460:
  1503  0634                     l1031:
  1504  0634  0876               	movf	___wmul@multiplicand,w
  1505  0635  07F8               	addwf	___wmul@product,f
  1506  0636  1803               	skipnc
  1507  0637  0AF9               	incf	___wmul@product+1,f
  1508  0638  0877               	movf	___wmul@multiplicand+1,w
  1509  0639  07F9               	addwf	___wmul@product+1,f
  1510  063A                     l227:
  1511  063A  3001               	movlw	1
  1512  063B                     u475:
  1513  063B  1003               	clrc
  1514  063C  0DF6               	rlf	___wmul@multiplicand,f
  1515  063D  0DF7               	rlf	___wmul@multiplicand+1,f
  1516  063E  3EFF               	addlw	-1
  1517  063F  1D03               	skipz
  1518  0640  2E3B               	goto	u475
  1519  0641                     l1033:
  1520  0641  3001               	movlw	1
  1521  0642                     u485:
  1522  0642  1003               	clrc
  1523  0643  0CF5               	rrf	___wmul@multiplier+1,f
  1524  0644  0CF4               	rrf	___wmul@multiplier,f
  1525  0645  3EFF               	addlw	-1
  1526  0646  1D03               	skipz
  1527  0647  2E42               	goto	u485
  1528  0648                     l1035:
  1529  0648  0874               	movf	___wmul@multiplier,w
  1530  0649  0475               	iorwf	___wmul@multiplier+1,w
  1531  064A  1D03               	btfss	3,2
  1532  064B  2E4D               	goto	u491
  1533  064C  2E4E               	goto	u490
  1534  064D                     u491:
  1535  064D  2E30               	goto	l1029
  1536  064E                     u490:
  1537  064E                     l1037:
  1538  064E  0879               	movf	___wmul@product+1,w
  1539  064F  00F5               	movwf	?___wmul+1
  1540  0650  0878               	movf	___wmul@product,w
  1541  0651  00F4               	movwf	?___wmul
  1542  0652                     l229:
  1543  0652  0008               	return
  1544  0653                     __end_of___wmul:
  1545                           
  1546                           	psect	text7
  1547  070E                     __ptext7:	
  1548 ;; *************** function ___awdiv *****************
  1549 ;; Defined at:
  1550 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  divisor         2    0[BANK0 ] int 
  1553 ;;  dividend        2    2[BANK0 ] int 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  quotient        2    7[BANK0 ] int 
  1556 ;;  sign            1    6[BANK0 ] unsigned char 
  1557 ;;  counter         1    5[BANK0 ] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  2    0[BANK0 ] int 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         0       4       0       0       0
  1568 ;;      Locals:         0       4       0       0       0
  1569 ;;      Temps:          0       1       0       0       0
  1570 ;;      Totals:         0       9       0       0       0
  1571 ;;Total ram usage:        9 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 2
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_main
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function ___awdiv
  1583  070E                     ___awdiv:
  1584  070E                     l1121:	
  1585                           ;incstack = 0
  1586                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1587                           
  1588  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1589  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0710  01A6               	clrf	___awdiv@sign
  1591  0711                     l1123:
  1592  0711  1FA1               	btfss	___awdiv@divisor+1,7
  1593  0712  2F14               	goto	u651
  1594  0713  2F15               	goto	u650
  1595  0714                     u651:
  1596  0714  2F1C               	goto	l1129
  1597  0715                     u650:
  1598  0715                     l1125:
  1599  0715  09A0               	comf	___awdiv@divisor,f
  1600  0716  09A1               	comf	___awdiv@divisor+1,f
  1601  0717  0AA0               	incf	___awdiv@divisor,f
  1602  0718  1903               	skipnz
  1603  0719  0AA1               	incf	___awdiv@divisor+1,f
  1604  071A                     l1127:
  1605  071A  01A6               	clrf	___awdiv@sign
  1606  071B  0AA6               	incf	___awdiv@sign,f
  1607  071C                     l1129:
  1608  071C  1FA3               	btfss	___awdiv@dividend+1,7
  1609  071D  2F1F               	goto	u661
  1610  071E  2F20               	goto	u660
  1611  071F                     u661:
  1612  071F  2F29               	goto	l1135
  1613  0720                     u660:
  1614  0720                     l1131:
  1615  0720  09A2               	comf	___awdiv@dividend,f
  1616  0721  09A3               	comf	___awdiv@dividend+1,f
  1617  0722  0AA2               	incf	___awdiv@dividend,f
  1618  0723  1903               	skipnz
  1619  0724  0AA3               	incf	___awdiv@dividend+1,f
  1620  0725                     l1133:
  1621  0725  3001               	movlw	1
  1622  0726  00A4               	movwf	??___awdiv
  1623  0727  0824               	movf	??___awdiv,w
  1624  0728  06A6               	xorwf	___awdiv@sign,f
  1625  0729                     l1135:
  1626  0729  01A7               	clrf	___awdiv@quotient
  1627  072A  01A8               	clrf	___awdiv@quotient+1
  1628  072B                     l1137:
  1629  072B  0820               	movf	___awdiv@divisor,w
  1630  072C  0421               	iorwf	___awdiv@divisor+1,w
  1631  072D  1903               	btfsc	3,2
  1632  072E  2F30               	goto	u671
  1633  072F  2F31               	goto	u670
  1634  0730                     u671:
  1635  0730  2F68               	goto	l1157
  1636  0731                     u670:
  1637  0731                     l1139:
  1638  0731  01A5               	clrf	___awdiv@counter
  1639  0732  0AA5               	incf	___awdiv@counter,f
  1640  0733  2F3F               	goto	l1145
  1641  0734                     l1141:
  1642  0734  3001               	movlw	1
  1643  0735                     u685:
  1644  0735  1003               	clrc
  1645  0736  0DA0               	rlf	___awdiv@divisor,f
  1646  0737  0DA1               	rlf	___awdiv@divisor+1,f
  1647  0738  3EFF               	addlw	-1
  1648  0739  1D03               	skipz
  1649  073A  2F35               	goto	u685
  1650  073B                     l1143:
  1651  073B  3001               	movlw	1
  1652  073C  00A4               	movwf	??___awdiv
  1653  073D  0824               	movf	??___awdiv,w
  1654  073E  07A5               	addwf	___awdiv@counter,f
  1655  073F                     l1145:
  1656  073F  1FA1               	btfss	___awdiv@divisor+1,7
  1657  0740  2F42               	goto	u691
  1658  0741  2F43               	goto	u690
  1659  0742                     u691:
  1660  0742  2F34               	goto	l1141
  1661  0743                     u690:
  1662  0743                     l1147:
  1663  0743  3001               	movlw	1
  1664  0744                     u705:
  1665  0744  1003               	clrc
  1666  0745  0DA7               	rlf	___awdiv@quotient,f
  1667  0746  0DA8               	rlf	___awdiv@quotient+1,f
  1668  0747  3EFF               	addlw	-1
  1669  0748  1D03               	skipz
  1670  0749  2F44               	goto	u705
  1671  074A  0821               	movf	___awdiv@divisor+1,w
  1672  074B  0223               	subwf	___awdiv@dividend+1,w
  1673  074C  1D03               	skipz
  1674  074D  2F50               	goto	u715
  1675  074E  0820               	movf	___awdiv@divisor,w
  1676  074F  0222               	subwf	___awdiv@dividend,w
  1677  0750                     u715:
  1678  0750  1C03               	skipc
  1679  0751  2F53               	goto	u711
  1680  0752  2F54               	goto	u710
  1681  0753                     u711:
  1682  0753  2F5B               	goto	l1153
  1683  0754                     u710:
  1684  0754                     l1149:
  1685  0754  0820               	movf	___awdiv@divisor,w
  1686  0755  02A2               	subwf	___awdiv@dividend,f
  1687  0756  0821               	movf	___awdiv@divisor+1,w
  1688  0757  1C03               	skipc
  1689  0758  03A3               	decf	___awdiv@dividend+1,f
  1690  0759  02A3               	subwf	___awdiv@dividend+1,f
  1691  075A                     l1151:
  1692  075A  1427               	bsf	___awdiv@quotient,0
  1693  075B                     l1153:
  1694  075B  3001               	movlw	1
  1695  075C                     u725:
  1696  075C  1003               	clrc
  1697  075D  0CA1               	rrf	___awdiv@divisor+1,f
  1698  075E  0CA0               	rrf	___awdiv@divisor,f
  1699  075F  3EFF               	addlw	-1
  1700  0760  1D03               	skipz
  1701  0761  2F5C               	goto	u725
  1702  0762                     l1155:
  1703  0762  3001               	movlw	1
  1704  0763  02A5               	subwf	___awdiv@counter,f
  1705  0764  1D03               	btfss	3,2
  1706  0765  2F67               	goto	u731
  1707  0766  2F68               	goto	u730
  1708  0767                     u731:
  1709  0767  2F43               	goto	l1147
  1710  0768                     u730:
  1711  0768                     l1157:
  1712  0768  0826               	movf	___awdiv@sign,w
  1713  0769  1903               	btfsc	3,2
  1714  076A  2F6C               	goto	u741
  1715  076B  2F6D               	goto	u740
  1716  076C                     u741:
  1717  076C  2F72               	goto	l1161
  1718  076D                     u740:
  1719  076D                     l1159:
  1720  076D  09A7               	comf	___awdiv@quotient,f
  1721  076E  09A8               	comf	___awdiv@quotient+1,f
  1722  076F  0AA7               	incf	___awdiv@quotient,f
  1723  0770  1903               	skipnz
  1724  0771  0AA8               	incf	___awdiv@quotient+1,f
  1725  0772                     l1161:
  1726  0772  0828               	movf	___awdiv@quotient+1,w
  1727  0773  00A1               	movwf	?___awdiv+1
  1728  0774  0827               	movf	___awdiv@quotient,w
  1729  0775  00A0               	movwf	?___awdiv
  1730  0776                     l380:
  1731  0776  0008               	return
  1732  0777                     __end_of___awdiv:
  1733                           
  1734                           	psect	text8
  1735  05D0                     __ptext8:	
  1736 ;; *************** function _WriteMSSP *****************
  1737 ;; Defined at:
  1738 ;;		line 51 in file "SPI.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  Data            1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  Data            1    3[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         1       0       0       0       0
  1756 ;;Total ram usage:        1 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _WriteMSSP
  1768  05D0                     _WriteMSSP:
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _WriteMSSP: [wreg]
  1772                           ;WriteMSSP@Data stored from wreg
  1773  05D0  00F4               	movwf	WriteMSSP@Data
  1774  05D1                     l1025:
  1775                           
  1776                           ;SPI.c: 55:     SSPBUF = Data;
  1777  05D1  0874               	movf	WriteMSSP@Data,w
  1778  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1779  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1780  05D4  0093               	movwf	19	;volatile
  1781  05D5                     l135:
  1782  05D5  0008               	return
  1783  05D6                     __end_of_WriteMSSP:
  1784                           
  1785                           	psect	text9
  1786  05D6                     __ptext9:	
  1787 ;; *************** function _ReadMSSP *****************
  1788 ;; Defined at:
  1789 ;;		line 59 in file "SPI.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      unsigned char 
  1796 ;; Registers used:
  1797 ;;		wreg
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 2
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _ReadMSSP
  1819  05D6                     _ReadMSSP:
  1820  05D6                     l1019:	
  1821                           ;incstack = 0
  1822                           ; Regs used in _ReadMSSP: [wreg]
  1823                           
  1824  05D6                     l138:	
  1825                           ;SPI.c: 60:     while(SSPSTATbits.BF == 0){}
  1826                           
  1827  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1828  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1829  05D8  1C14               	btfss	20,0	;volatile
  1830  05D9  2DDB               	goto	u451
  1831  05DA  2DDC               	goto	u450
  1832  05DB                     u451:
  1833  05DB  2DD6               	goto	l138
  1834  05DC                     u450:
  1835  05DC                     l1021:
  1836                           
  1837                           ;SPI.c: 61:     return(SSPBUF);
  1838  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1839  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1840  05DE  0813               	movf	19,w	;volatile
  1841  05DF                     l141:
  1842  05DF  0008               	return
  1843  05E0                     __end_of_ReadMSSP:
  1844                           
  1845                           	psect	text10
  1846  05E0                     __ptext10:	
  1847 ;; *************** function _isr *****************
  1848 ;; Defined at:
  1849 ;;		line 57 in file "ESCLAVO3.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0
  1865 ;;      Temps:          2       0       0       0       0
  1866 ;;      Totals:         2       0       0       0       0
  1867 ;;Total ram usage:        2 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 1
  1870 ;; This function calls:
  1871 ;;		_ADC
  1872 ;; This function is called by:
  1873 ;;		Interrupt level 1
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _isr
  1879  05E0                     _isr:
  1880  05E0                     i1l1085:
  1881                           
  1882                           ;ESCLAVO3.c: 58:     if(PIR1bits.ADIF){
  1883  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1884  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1885  05E2  1F0C               	btfss	12,6	;volatile
  1886  05E3  2DE5               	goto	u60_21
  1887  05E4  2DE6               	goto	u60_20
  1888  05E5                     u60_21:
  1889  05E5  2DEE               	goto	i1l58
  1890  05E6                     u60_20:
  1891  05E6                     i1l1087:
  1892                           
  1893                           ;ESCLAVO3.c: 59:         ADC();
  1894  05E6  120A  118A  2610  120A  118A  	fcall	_ADC
  1895  05EB                     i1l1089:
  1896                           
  1897                           ;ESCLAVO3.c: 60:         PIR1bits.ADIF = 0;
  1898  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1899  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1900  05ED  130C               	bcf	12,6	;volatile
  1901  05EE                     i1l58:
  1902  05EE  0873               	movf	??_isr+1,w
  1903  05EF  008A               	movwf	10
  1904  05F0  0E72               	swapf	??_isr,w
  1905  05F1  0083               	movwf	3
  1906  05F2  0EFE               	swapf	btemp,f
  1907  05F3  0E7E               	swapf	btemp,w
  1908  05F4  0009               	retfie
  1909  05F5                     __end_of_isr:
  1910                           
  1911                           	psect	intentry
  1912  0004                     __pintentry:	
  1913                           ;incstack = 0
  1914                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1915                           
  1916  0004                     interrupt_function:
  1917  007E                     saved_w	set	btemp
  1918  0004  00FE               	movwf	btemp
  1919  0005  0E03               	swapf	3,w
  1920  0006  00F2               	movwf	??_isr
  1921  0007  080A               	movf	10,w
  1922  0008  00F3               	movwf	??_isr+1
  1923  0009  120A  118A  2DE0   	ljmp	_isr
  1924                           
  1925                           	psect	text11
  1926  0610                     __ptext11:	
  1927 ;; *************** function _ADC *****************
  1928 ;; Defined at:
  1929 ;;		line 11 in file "ADC.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          1       0       0       0       0
  1946 ;;      Totals:         1       0       0       0       0
  1947 ;;Total ram usage:        1 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_isr
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _ADC
  1958  0610                     _ADC:
  1959  0610                     i1l973:	
  1960                           ;incstack = 0
  1961                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1962                           
  1963                           
  1964                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1965  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0612  0C1F               	rrf	31,w	;volatile
  1968  0613  00F1               	movwf	??_ADC
  1969  0614  0C71               	rrf	??_ADC,w
  1970  0615  390F               	andlw	15
  1971  0616  3A00               	xorlw	0
  1972  0617  1D03               	skipz
  1973  0618  2E1A               	goto	u40_21
  1974  0619  2E1B               	goto	u40_20
  1975  061A                     u40_21:
  1976  061A  2E20               	goto	i1l977
  1977  061B                     u40_20:
  1978  061B                     i1l975:
  1979                           
  1980                           ;ADC.c: 13:         cont1 = ADRESH;
  1981  061B  081E               	movf	30,w	;volatile
  1982  061C  00F1               	movwf	??_ADC
  1983  061D  0871               	movf	??_ADC,w
  1984  061E  00AF               	movwf	_cont1
  1985                           
  1986                           ;ADC.c: 14:     }
  1987  061F  2E2D               	goto	i1l92
  1988  0620                     i1l977:
  1989  0620  0C1F               	rrf	31,w	;volatile
  1990  0621  00F1               	movwf	??_ADC
  1991  0622  0C71               	rrf	??_ADC,w
  1992  0623  390F               	andlw	15
  1993  0624  3A01               	xorlw	1
  1994  0625  1D03               	skipz
  1995  0626  2E28               	goto	u41_21
  1996  0627  2E29               	goto	u41_20
  1997  0628                     u41_21:
  1998  0628  2E2D               	goto	i1l92
  1999  0629                     u41_20:
  2000  0629                     i1l979:
  2001                           
  2002                           ;ADC.c: 16:         cont2 = ADRESH;
  2003  0629  081E               	movf	30,w	;volatile
  2004  062A  00F1               	movwf	??_ADC
  2005  062B  0871               	movf	??_ADC,w
  2006  062C  00FA               	movwf	_cont2
  2007  062D                     i1l92:
  2008  062D  0008               	return
  2009  062E                     __end_of_ADC:
  2010  007E                     btemp	set	126	;btemp
  2011  007E                     wtemp0	set	126
  2012                           
  2013                           	psect	config
  2014                           
  2015                           ;Config register CONFIG1 @ 0x2007
  2016                           ;	Oscillator Selection bits
  2017                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2018                           ;	Watchdog Timer Enable bit
  2019                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2020                           ;	Power-up Timer Enable bit
  2021                           ;	PWRTE = OFF, PWRT disabled
  2022                           ;	RE3/MCLR pin function select bit
  2023                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2024                           ;	Code Protection bit
  2025                           ;	CP = OFF, Program memory code protection is disabled
  2026                           ;	Data Code Protection bit
  2027                           ;	CPD = OFF, Data memory code protection is disabled
  2028                           ;	Brown Out Reset Selection bits
  2029                           ;	BOREN = OFF, BOR disabled
  2030                           ;	Internal External Switchover bit
  2031                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2032                           ;	Fail-Safe Clock Monitor Enabled bit
  2033                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2034                           ;	Low Voltage Programming Enable bit
  2035                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2036                           ;	In-Circuit Debugger Mode bit
  2037                           ;	DEBUG = 0x1, unprogrammed default
  2038  2007                     	org	8199
  2039  2007  20D4               	dw	8404
  2040                           
  2041                           ;Config register CONFIG2 @ 0x2008
  2042                           ;	Brown-out Reset Selection bit
  2043                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2044                           ;	Flash Program Memory Self Write Enable bits
  2045                           ;	WRT = OFF, Write protection off
  2046  2008                     	org	8200
  2047  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      9      10
    BANK0            80     13      16
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul
    _setup->_config_ADC
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1379
                                              9 BANK0      4     4      0
                           _ReadMSSP
                          _WriteMSSP
                            ___awdiv
                             ___wmul
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     274
                           _InitMSSP
                         _config_ADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              0 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                                _ADC
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _conversion
   _setup
     _InitMSSP
     _config_ADC
     _initOsc

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      9       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 16:49:02 2022

            _SSPSTATbits 0094                       l74 06AE                       l99 0680  
           ___awdiv@sign 0026      ___wmul@multiplicand 0076                      l102 060F  
                    l110 070A                      l111 070D                      l132 06DD  
                    l141 05DF                      l135 05D5                      l129 06C6  
                    l138 05D6                      l227 063A                      l229 0652  
                    _ADC 0610                      l380 0776                      l931 06EA  
                    l941 0705                      l933 06F0                      l951 06B0  
                    l943 05F5                      l935 06F5                      l927 06DF  
                    l961 06CD                      l953 06B8                      l945 05FA  
                    l937 06FB                      l929 06E5                      l971 06DC  
                    l963 06CE                      l955 06BE                      l947 0609  
                    l939 0700                      l965 06D3                      l957 06C4  
                    l949 060A                      l981 0681                      l967 06D6  
                    l959 06C7                      l991 06A0                      l983 0685  
                    l969 06D9                      l993 06A6                      l985 0686  
                    l995 06A7                      l987 0692                      l997 06A8  
                    l989 0698                      l999 06AB                      u330 06E5  
                    u331 06E4                      u420 0659                      u340 06F0  
                    u421 0658                      u341 06EF                      u430 0662  
                    u350 06FB                      u431 0661                      u351 06FA  
                    u440 0673                      u360 0705                      u441 0672  
                    u361 0704                      u450 05DC                      u370 06BE  
                    u451 05DB                      u371 06BD                      u460 0634  
                    u380 06C4                      u461 0633                      u381 06C3  
                    u710 0754                      u390 06CD                      u711 0753  
                    u391 06CC                      u705 0744                      u730 0768  
                    u650 0715                      u490 064E                      u731 0767  
                    u715 0750                      u651 0714                      u491 064D  
                    u475 063B                      u740 076D                      u660 0720  
                    u741 076C                      u725 075C                      u661 071F  
                    u485 0642                      u670 0731                      u750 07C5  
                    u671 0730                      u807 0666                      u751 07C4  
                    u760 07CF                      u817 067A                      u761 07CE  
                    u690 0743                      u770 07D5                      u691 0742  
                    u771 07D4                      u780 07DF                      u685 0735  
                    u781 07DE                      u797 060C                      _isr 05E0  
                   ?_ADC 0071                     l1001 0653                     l1011 0673  
                   l1003 0659                     l1021 05DC                     l1005 0662  
                   l1031 0634                     l1015 0678                     l1007 0664  
                   l1025 05D1                     l1121 070E                     l1033 0641  
                   l1017 067D                     l1009 066A                     l1019 05D6  
                   l1131 0720                     l1123 0711                     l1035 0648  
                   l1027 062E                     l1141 0734                     l1133 0725  
                   l1125 0715                     l1037 064E                     l1029 0630  
                   l1151 075A                     l1143 073B                     l1135 0729  
                   l1127 071A                     l1161 0772                     l1153 075B  
                   l1145 073F                     l1137 072B                     l1129 071C  
                   l1155 0762                     l1147 0743                     l1139 0731  
                   l1171 0780                     l1149 0754                     l1157 0768  
                   l1181 07C9                     l1173 0785                     l1165 0777  
                   l1159 076D                     l1183 07CF                     l1191 07E2  
                   l1175 07AC                     l1167 077C                     l1193 07EC  
                   l1185 07D5                     l1177 07BF                     l1169 077F  
                   l1187 07D9                     l1179 07C5                     l1189 07DF  
                   ?_isr 0071                     i1l58 05EE                     i1l92 062D  
                   _main 0777                     _temp 002D                     btemp 007E  
                   start 000C                    ??_ADC 0071                    ??_isr 0072  
                  ?_main 0071          __end_of___awdiv 0777                    _ANSEL 0188  
        ___awdiv@divisor 0020                    i1l973 0610                    i1l975 061B  
                  i1l977 0620                    i1l979 0629          ___awdiv@counter 0025  
                  u40_20 061B                    u40_21 061A                    u41_20 0629  
                  u41_21 0628                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    u60_20 05E6                    u60_21 05E5  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089             InitMSSP@Modo 0074                    _cont1 002F  
                  _cont2 007A          __end_of_initOsc 070E                    _read2 002E  
                  _setup 0681                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F6             __end_of_main 07F6  
       __end_of_InitMSSP 06DE         __end_of_ReadMSSP 05E0                   ??_main 0029  
                 _ADRESH 001E         ___awdiv@dividend 0022                   ?_setup 0071  
                 _ANSELH 0189                   i1l1085 05E0                   i1l1087 05E6  
                 i1l1089 05EB                   _SSPCON 0014                   _SSPBUF 0013  
                 ___wmul 062E                ??___awdiv 0024         ___awdiv@quotient 0027  
              ??_initOsc 0074                   saved_w 007E  __end_of__initialization 07FC  
     __size_of_WriteMSSP 0006           __pcstackCOMMON 0071            __end_of_setup 06AF  
                ??_setup 0077               __pbssBANK0 002D                ?_InitMSSP 0071  
              ?_ReadMSSP 0071               __pmaintext 0777                  ?___wmul 0074  
             __pintentry 0004        __end_of_WriteMSSP 05D6             initOsc@Valor 0074  
             _config_ADC 05F5               ??_InitMSSP 0074               ??_ReadMSSP 0074  
             _conversion 0653                  ___awdiv 070E          __size_of___wmul 0025  
                __ptext1 0681                  __ptext2 06DE                  __ptext3 05F5  
                __ptext4 06AF                  __ptext5 0653                  __ptext6 062E  
                __ptext7 070E                  __ptext8 05D0                  __ptext9 05D6  
           __size_of_ADC 001E                  _initOsc 06DE             __size_of_isr 0015  
   end_of_initialization 07FC                _PORTEbits 0009              ?_config_ADC 0074  
              _TRISAbits 0085                _TRISCbits 0087              ?_conversion 0071  
          WriteMSSP@Data 0074           __end_of___wmul 0653      start_initialization 07F6  
            __end_of_ADC 062E              __end_of_isr 05F5        __size_of_InitMSSP 002F  
      __size_of_ReadMSSP 000A      __size_of_config_ADC 001B                 ??___wmul 0078  
    __size_of_conversion 002E              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                _WriteMSSP 05D0                _main$1150 002B  
               ?___awdiv 0020        config_ADC@channel 0074                 ?_initOsc 0071  
             ?_WriteMSSP 0071           __size_of_setup 002E        interrupt_function 0004  
         ___wmul@product 0078                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0074  
           ??_config_ADC 0076                 _InitMSSP 06AF                 _ReadMSSP 05D6  
           ??_conversion 0074       __end_of_config_ADC 0610         __size_of___awdiv 0069  
     __end_of_conversion 0681         __size_of_initOsc 0030              ??_WriteMSSP 0074  
               __ptext10 05E0                 __ptext11 0610            __size_of_main 007F  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
             _SSPCONbits 0014  
