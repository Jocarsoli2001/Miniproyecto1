

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 16:51:52 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  008F                     	;# 
   416  0090                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0094                     	;# 
   423  0095                     	;# 
   424  0096                     	;# 
   425  0097                     	;# 
   426  0098                     	;# 
   427  0099                     	;# 
   428  009A                     	;# 
   429  009B                     	;# 
   430  009C                     	;# 
   431  009D                     	;# 
   432  009E                     	;# 
   433  009F                     	;# 
   434  0105                     	;# 
   435  0107                     	;# 
   436  0108                     	;# 
   437  0109                     	;# 
   438  010C                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0185                     	;# 
   444  0187                     	;# 
   445  0188                     	;# 
   446  0189                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0013                     _SSPBUF	set	19
   450  0014                     _SSPCON	set	20
   451  0014                     _SSPCONbits	set	20
   452  001E                     _ADRESH	set	30
   453  000B                     _INTCONbits	set	11
   454  0006                     _PORTB	set	6
   455  0009                     _PORTE	set	9
   456  0008                     _PORTD	set	8
   457  0009                     _PORTEbits	set	9
   458  001F                     _ADCON0bits	set	31
   459  000C                     _PIR1bits	set	12
   460  0094                     _SSPSTATbits	set	148
   461  0085                     _TRISAbits	set	133
   462  0087                     _TRISCbits	set	135
   463  008F                     _OSCCONbits	set	143
   464  009F                     _ADCON1bits	set	159
   465  008C                     _PIE1bits	set	140
   466  0089                     _TRISE	set	137
   467  0088                     _TRISD	set	136
   468  0086                     _TRISB	set	134
   469  0085                     _TRISA	set	133
   470  0094                     _SSPSTAT	set	148
   471  0189                     _ANSELH	set	393
   472  0188                     _ANSEL	set	392
   473                           
   474                           	psect	cinit
   475  000F                     start_initialization:	
   476                           ; #config settings
   477                           
   478  000F                     __initialization:
   479                           
   480                           ; Clear objects allocated to COMMON
   481  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   482                           
   483                           ; Clear objects allocated to BANK0
   484  0010  1283               	bcf	3,5	;RP0=0, select bank0
   485  0011  1303               	bcf	3,6	;RP1=0, select bank0
   486  0012  01AC               	clrf	__pbssBANK0& (0+127)
   487  0013  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   488  0014  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   489  0015                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492  0015                     __end_of__initialization:
   493  0015  0183               	clrf	3
   494  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	bssCOMMON
   497  007A                     __pbssCOMMON:
   498  007A                     _cont2:
   499  007A                     	ds	1
   500                           
   501                           	psect	bssBANK0
   502  002C                     __pbssBANK0:
   503  002C                     _temp:
   504  002C                     	ds	1
   505  002D                     _read2:
   506  002D                     	ds	1
   507  002E                     _cont1:
   508  002E                     	ds	1
   509                           
   510                           	psect	cstackCOMMON
   511  0070                     __pcstackCOMMON:
   512  0070                     ?_ADC:
   513  0070                     ??_ADC:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_setup:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_conversion:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_ReadMSSP:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_WriteMSSP:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_initOsc:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_InitMSSP:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_isr:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540                           
   541                           ; 1 bytes @ 0x0
   542  0070                     	ds	1
   543  0071                     ??_isr:
   544                           
   545                           ; 1 bytes @ 0x1
   546  0071                     	ds	2
   547  0073                     ??_conversion:
   548  0073                     ??_ReadMSSP:	
   549                           ; 1 bytes @ 0x3
   550                           
   551  0073                     ??_WriteMSSP:	
   552                           ; 1 bytes @ 0x3
   553                           
   554  0073                     ??_initOsc:	
   555                           ; 1 bytes @ 0x3
   556                           
   557  0073                     ?_config_ADC:	
   558                           ; 1 bytes @ 0x3
   559                           
   560  0073                     ??_InitMSSP:	
   561                           ; 1 bytes @ 0x3
   562                           
   563  0073                     ?___wmul:	
   564                           ; 1 bytes @ 0x3
   565                           
   566  0073                     initOsc@Valor:	
   567                           ; 2 bytes @ 0x3
   568                           
   569  0073                     InitMSSP@Modo:	
   570                           ; 1 bytes @ 0x3
   571                           
   572  0073                     WriteMSSP@Data:	
   573                           ; 1 bytes @ 0x3
   574                           
   575  0073                     config_ADC@channel:	
   576                           ; 1 bytes @ 0x3
   577                           
   578  0073                     ___wmul@multiplier:	
   579                           ; 2 bytes @ 0x3
   580                           
   581                           
   582                           ; 2 bytes @ 0x3
   583  0073                     	ds	2
   584  0075                     ??_config_ADC:
   585  0075                     ___wmul@multiplicand:	
   586                           ; 1 bytes @ 0x5
   587                           
   588                           
   589                           ; 2 bytes @ 0x5
   590  0075                     	ds	1
   591  0076                     ??_setup:
   592                           
   593                           ; 1 bytes @ 0x6
   594  0076                     	ds	1
   595  0077                     ??___wmul:
   596  0077                     ___wmul@product:	
   597                           ; 1 bytes @ 0x7
   598                           
   599                           
   600                           ; 2 bytes @ 0x7
   601  0077                     	ds	2
   602  0079                     ??___awdiv:
   603                           
   604                           ; 1 bytes @ 0x9
   605  0079                     	ds	1
   606                           
   607                           	psect	cstackBANK0
   608  0020                     __pcstackBANK0:
   609  0020                     ?___awdiv:
   610  0020                     ___awdiv@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613                           
   614                           ; 2 bytes @ 0x0
   615  0020                     	ds	2
   616  0022                     ___awdiv@dividend:
   617                           
   618                           ; 2 bytes @ 0x2
   619  0022                     	ds	2
   620  0024                     ___awdiv@counter:
   621                           
   622                           ; 1 bytes @ 0x4
   623  0024                     	ds	1
   624  0025                     ___awdiv@sign:
   625                           
   626                           ; 1 bytes @ 0x5
   627  0025                     	ds	1
   628  0026                     ___awdiv@quotient:
   629                           
   630                           ; 2 bytes @ 0x6
   631  0026                     	ds	2
   632  0028                     ??_main:
   633                           
   634                           ; 1 bytes @ 0x8
   635  0028                     	ds	2
   636  002A                     _main$1151:
   637                           
   638                           ; 2 bytes @ 0xA
   639  002A                     	ds	2
   640                           
   641                           	psect	maintext
   642  0019                     __pmaintext:	
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   645 ;;
   646 ;; *************** function _main *****************
   647 ;; Defined at:
   648 ;;		line 65 in file "ESCLAVO3.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : B00/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       2       0       0       0
   664 ;;      Temps:          0       2       0       0       0
   665 ;;      Totals:         0       4       0       0       0
   666 ;;Total ram usage:        4 bytes
   667 ;; Hardware stack levels required when called: 4
   668 ;; This function calls:
   669 ;;		_ReadMSSP
   670 ;;		_WriteMSSP
   671 ;;		___awdiv
   672 ;;		___wmul
   673 ;;		_conversion
   674 ;;		_setup
   675 ;; This function is called by:
   676 ;;		Startup code after reset
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           
   681                           ;psect for function _main
   682  0019                     _main:
   683  0019                     l1094:	
   684                           ;incstack = 0
   685                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   686                           
   687                           
   688                           ;ESCLAVO3.c: 66:     setup();
   689  0019  120A  118A  2167  120A  118A  	fcall	_setup
   690  001E                     l1096:
   691                           
   692                           ;ESCLAVO3.c: 67:     ADCON0bits.GO = 1;
   693  001E  1283               	bcf	3,5	;RP0=0, select bank0
   694  001F  1303               	bcf	3,6	;RP1=0, select bank0
   695  0020  149F               	bsf	31,1	;volatile
   696  0021                     l1098:
   697                           
   698                           ;ESCLAVO3.c: 68:     read2 = 0;
   699  0021  01AD               	clrf	_read2
   700  0022                     l1100:
   701                           
   702                           ;ESCLAVO3.c: 74:         conversion();
   703  0022  120A  118A  2195  120A  118A  	fcall	_conversion
   704  0027                     l1102:
   705                           
   706                           ;ESCLAVO3.c: 76:         temp = ((cont1*5000)/1023)/10;
   707  0027  30FF               	movlw	255
   708  0028  1283               	bcf	3,5	;RP0=0, select bank0
   709  0029  1303               	bcf	3,6	;RP1=0, select bank0
   710  002A  00A0               	movwf	___awdiv@divisor
   711  002B  3003               	movlw	3
   712  002C  00A1               	movwf	___awdiv@divisor+1
   713  002D  082E               	movf	_cont1,w
   714  002E  00A8               	movwf	??_main
   715  002F  01A9               	clrf	??_main+1
   716  0030  0828               	movf	??_main,w
   717  0031  00F3               	movwf	___wmul@multiplier
   718  0032  0829               	movf	??_main+1,w
   719  0033  00F4               	movwf	___wmul@multiplier+1
   720  0034  3088               	movlw	136
   721  0035  00F5               	movwf	___wmul@multiplicand
   722  0036  3013               	movlw	19
   723  0037  00F6               	movwf	___wmul@multiplicand+1
   724  0038  120A  118A  21C3  120A  118A  	fcall	___wmul
   725  003D  0874               	movf	?___wmul+1,w
   726  003E  1283               	bcf	3,5	;RP0=0, select bank0
   727  003F  1303               	bcf	3,6	;RP1=0, select bank0
   728  0040  00A3               	movwf	___awdiv@dividend+1
   729  0041  0873               	movf	?___wmul,w
   730  0042  00A2               	movwf	___awdiv@dividend
   731  0043  120A  118A  209F  120A  118A  	fcall	___awdiv
   732  0048  1283               	bcf	3,5	;RP0=0, select bank0
   733  0049  1303               	bcf	3,6	;RP1=0, select bank0
   734  004A  0821               	movf	?___awdiv+1,w
   735  004B  00AB               	movwf	_main$1151+1
   736  004C  0820               	movf	?___awdiv,w
   737  004D  00AA               	movwf	_main$1151
   738  004E                     l1104:
   739                           
   740                           ;ESCLAVO3.c: 76:         temp = ((cont1*5000)/1023)/10;
   741  004E  300A               	movlw	10
   742  004F  00A0               	movwf	___awdiv@divisor
   743  0050  3000               	movlw	0
   744  0051  00A1               	movwf	___awdiv@divisor+1
   745  0052  082B               	movf	_main$1151+1,w
   746  0053  00A3               	movwf	___awdiv@dividend+1
   747  0054  082A               	movf	_main$1151,w
   748  0055  00A2               	movwf	___awdiv@dividend
   749  0056  120A  118A  209F  120A  118A  	fcall	___awdiv
   750  005B  1283               	bcf	3,5	;RP0=0, select bank0
   751  005C  1303               	bcf	3,6	;RP1=0, select bank0
   752  005D  0820               	movf	?___awdiv,w
   753  005E  00A8               	movwf	??_main
   754  005F  0828               	movf	??_main,w
   755  0060  00AC               	movwf	_temp
   756  0061                     l1106:
   757                           
   758                           ;ESCLAVO3.c: 78:         if(temp < 24){
   759  0061  3018               	movlw	24
   760  0062  022C               	subwf	_temp,w
   761  0063  1803               	skipnc
   762  0064  2866               	goto	u621
   763  0065  2867               	goto	u620
   764  0066                     u621:
   765  0066  286B               	goto	l1110
   766  0067                     u620:
   767  0067                     l1108:
   768                           
   769                           ;ESCLAVO3.c: 79:             PORTEbits.RE2 = 1;
   770  0067  1509               	bsf	9,2	;volatile
   771                           
   772                           ;ESCLAVO3.c: 80:             PORTEbits.RE1 = 0;
   773  0068  1089               	bcf	9,1	;volatile
   774                           
   775                           ;ESCLAVO3.c: 81:             PORTEbits.RE0 = 0;
   776  0069  1009               	bcf	9,0	;volatile
   777                           
   778                           ;ESCLAVO3.c: 82:         }
   779  006A  2884               	goto	l67
   780  006B                     l1110:
   781  006B  3019               	movlw	25
   782  006C  022C               	subwf	_temp,w
   783  006D  1C03               	skipc
   784  006E  2870               	goto	u631
   785  006F  2871               	goto	u630
   786  0070                     u631:
   787  0070  287B               	goto	l1116
   788  0071                     u630:
   789  0071                     l1112:
   790  0071  301B               	movlw	27
   791  0072  022C               	subwf	_temp,w
   792  0073  1803               	skipnc
   793  0074  2876               	goto	u641
   794  0075  2877               	goto	u640
   795  0076                     u641:
   796  0076  287B               	goto	l1116
   797  0077                     u640:
   798  0077                     l1114:
   799                           
   800                           ;ESCLAVO3.c: 84:             PORTEbits.RE1 = 1;
   801  0077  1489               	bsf	9,1	;volatile
   802                           
   803                           ;ESCLAVO3.c: 85:             PORTEbits.RE2 = 0;
   804  0078  1109               	bcf	9,2	;volatile
   805                           
   806                           ;ESCLAVO3.c: 86:             PORTEbits.RE0 = 0;
   807  0079  1009               	bcf	9,0	;volatile
   808                           
   809                           ;ESCLAVO3.c: 87:         }
   810  007A  2884               	goto	l67
   811  007B                     l1116:
   812  007B  301C               	movlw	28
   813  007C  022C               	subwf	_temp,w
   814  007D  1C03               	skipc
   815  007E  2880               	goto	u651
   816  007F  2881               	goto	u650
   817  0080                     u651:
   818  0080  2884               	goto	l67
   819  0081                     u650:
   820  0081                     l1118:
   821                           
   822                           ;ESCLAVO3.c: 89:             PORTEbits.RE1 = 0;
   823  0081  1089               	bcf	9,1	;volatile
   824                           
   825                           ;ESCLAVO3.c: 90:             PORTEbits.RE2 = 0;
   826  0082  1109               	bcf	9,2	;volatile
   827                           
   828                           ;ESCLAVO3.c: 91:             PORTEbits.RE0 = 1;
   829  0083  1409               	bsf	9,0	;volatile
   830  0084                     l67:
   831                           
   832                           ;ESCLAVO3.c: 99:         if (SSPSTAT & 0b00000001) {
   833  0084  1683               	bsf	3,5	;RP0=1, select bank1
   834  0085  1303               	bcf	3,6	;RP1=0, select bank1
   835  0086  1C14               	btfss	20,0	;volatile
   836  0087  2889               	goto	u661
   837  0088  288A               	goto	u660
   838  0089                     u661:
   839  0089  2894               	goto	l1122
   840  008A                     u660:
   841  008A                     l1120:
   842                           
   843                           ;ESCLAVO3.c: 100:             read2 = ReadMSSP();
   844  008A  120A  118A  2236  120A  118A  	fcall	_ReadMSSP
   845  008F  1283               	bcf	3,5	;RP0=0, select bank0
   846  0090  1303               	bcf	3,6	;RP1=0, select bank0
   847  0091  00A8               	movwf	??_main
   848  0092  0828               	movf	??_main,w
   849  0093  00AD               	movwf	_read2
   850  0094                     l1122:
   851                           
   852                           ;ESCLAVO3.c: 102:         WriteMSSP(temp);
   853  0094  1283               	bcf	3,5	;RP0=0, select bank0
   854  0095  082C               	movf	_temp,w
   855  0096  120A  118A  2240  120A  118A  	fcall	_WriteMSSP
   856  009B  2822               	goto	l1100
   857  009C  120A  118A  280C   	ljmp	start
   858  009F                     __end_of_main:
   859                           
   860                           	psect	text1
   861  0167                     __ptext1:	
   862 ;; *************** function _setup *****************
   863 ;; Defined at:
   864 ;;		line 109 in file "ESCLAVO3.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 3
   885 ;; This function calls:
   886 ;;		_InitMSSP
   887 ;;		_config_ADC
   888 ;;		_initOsc
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _setup
   896  0167                     _setup:
   897  0167                     l984:	
   898                           ;incstack = 0
   899                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   900                           
   901                           
   902                           ;ESCLAVO3.c: 112:     ANSEL = 0b0011;
   903  0167  3003               	movlw	3
   904  0168  1683               	bsf	3,5	;RP0=1, select bank3
   905  0169  1703               	bsf	3,6	;RP1=1, select bank3
   906  016A  0088               	movwf	8	;volatile
   907  016B                     l986:
   908                           
   909                           ;ESCLAVO3.c: 113:     ANSELH = 0;
   910  016B  0189               	clrf	9	;volatile
   911  016C                     l988:
   912                           
   913                           ;ESCLAVO3.c: 115:     TRISA = 0b0011;
   914  016C  3003               	movlw	3
   915  016D  1683               	bsf	3,5	;RP0=1, select bank1
   916  016E  1303               	bcf	3,6	;RP1=0, select bank1
   917  016F  0085               	movwf	5	;volatile
   918                           
   919                           ;ESCLAVO3.c: 116:     TRISB = 0;
   920  0170  0186               	clrf	6	;volatile
   921                           
   922                           ;ESCLAVO3.c: 117:     TRISD = 0;
   923  0171  0188               	clrf	8	;volatile
   924                           
   925                           ;ESCLAVO3.c: 118:     TRISE = 0;
   926  0172  0189               	clrf	9	;volatile
   927                           
   928                           ;ESCLAVO3.c: 120:     PORTD = 0;
   929  0173  1283               	bcf	3,5	;RP0=0, select bank0
   930  0174  1303               	bcf	3,6	;RP1=0, select bank0
   931  0175  0188               	clrf	8	;volatile
   932                           
   933                           ;ESCLAVO3.c: 121:     PORTE = 0;
   934  0176  0189               	clrf	9	;volatile
   935                           
   936                           ;ESCLAVO3.c: 122:     PORTB = 0;
   937  0177  0186               	clrf	6	;volatile
   938  0178                     l990:
   939                           
   940                           ;ESCLAVO3.c: 125:     initOsc(4);
   941  0178  3004               	movlw	4
   942  0179  120A  118A  2108  120A  118A  	fcall	_initOsc
   943  017E                     l992:
   944                           
   945                           ;ESCLAVO3.c: 128:     config_ADC(0);
   946  017E  3000               	movlw	0
   947  017F  00F3               	movwf	config_ADC@channel
   948  0180  00F4               	movwf	config_ADC@channel+1
   949  0181  120A  118A  2206  120A  118A  	fcall	_config_ADC
   950  0186                     l994:
   951                           
   952                           ;ESCLAVO3.c: 131:     InitMSSP(SPI_SLAVE_SS_EN);
   953  0186  3004               	movlw	4
   954  0187  120A  118A  2138  120A  118A  	fcall	_InitMSSP
   955  018C                     l996:
   956                           
   957                           ;ESCLAVO3.c: 134:     INTCONbits.GIE = 1;
   958  018C  178B               	bsf	11,7	;volatile
   959  018D                     l998:
   960                           
   961                           ;ESCLAVO3.c: 135:     INTCONbits.PEIE = 1;
   962  018D  170B               	bsf	11,6	;volatile
   963  018E                     l1000:
   964                           
   965                           ;ESCLAVO3.c: 136:     PIR1bits.ADIF = 0;
   966  018E  1283               	bcf	3,5	;RP0=0, select bank0
   967  018F  1303               	bcf	3,6	;RP1=0, select bank0
   968  0190  130C               	bcf	12,6	;volatile
   969  0191                     l1002:
   970                           
   971                           ;ESCLAVO3.c: 137:     PIE1bits.ADIE = 1;
   972  0191  1683               	bsf	3,5	;RP0=1, select bank1
   973  0192  1303               	bcf	3,6	;RP1=0, select bank1
   974  0193  170C               	bsf	12,6	;volatile
   975  0194                     l77:
   976  0194  0008               	return
   977  0195                     __end_of_setup:
   978                           
   979                           	psect	text2
   980  0108                     __ptext2:	
   981 ;; *************** function _initOsc *****************
   982 ;; Defined at:
   983 ;;		line 12 in file "Oscilador.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  Valor           1    wreg     unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  Valor           1    3[COMMON] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         1       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         1       0       0       0       0
  1001 ;;Total ram usage:        1 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 2
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_setup
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _initOsc
  1013  0108                     _initOsc:
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1017                           ;initOsc@Valor stored from wreg
  1018  0108  00F3               	movwf	initOsc@Valor
  1019  0109                     l930:
  1020                           
  1021                           ;Oscilador.c: 14:     if(Valor == 8){
  1022  0109  3008               	movlw	8
  1023  010A  0673               	xorwf	initOsc@Valor,w
  1024  010B  1D03               	btfss	3,2
  1025  010C  290E               	goto	u341
  1026  010D  290F               	goto	u340
  1027  010E                     u341:
  1028  010E  2914               	goto	l934
  1029  010F                     u340:
  1030  010F                     l932:
  1031                           
  1032                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1033  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1034  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1035  0111  160F               	bsf	15,4	;volatile
  1036                           
  1037                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1038  0112  168F               	bsf	15,5	;volatile
  1039                           
  1040                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1041  0113  170F               	bsf	15,6	;volatile
  1042  0114                     l934:
  1043                           
  1044                           ;Oscilador.c: 19:     if(Valor == 4){
  1045  0114  3004               	movlw	4
  1046  0115  0673               	xorwf	initOsc@Valor,w
  1047  0116  1D03               	btfss	3,2
  1048  0117  2919               	goto	u351
  1049  0118  291A               	goto	u350
  1050  0119                     u351:
  1051  0119  291F               	goto	l938
  1052  011A                     u350:
  1053  011A                     l936:
  1054                           
  1055                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1056  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1057  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1058  011C  120F               	bcf	15,4	;volatile
  1059                           
  1060                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1061  011D  168F               	bsf	15,5	;volatile
  1062                           
  1063                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1064  011E  170F               	bsf	15,6	;volatile
  1065  011F                     l938:
  1066                           
  1067                           ;Oscilador.c: 24:     if(Valor == 2){
  1068  011F  3002               	movlw	2
  1069  0120  0673               	xorwf	initOsc@Valor,w
  1070  0121  1D03               	btfss	3,2
  1071  0122  2924               	goto	u361
  1072  0123  2925               	goto	u360
  1073  0124                     u361:
  1074  0124  292A               	goto	l942
  1075  0125                     u360:
  1076  0125                     l940:
  1077                           
  1078                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1079  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1080  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1081  0127  160F               	bsf	15,4	;volatile
  1082                           
  1083                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1084  0128  128F               	bcf	15,5	;volatile
  1085                           
  1086                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1087  0129  170F               	bsf	15,6	;volatile
  1088  012A                     l942:
  1089                           
  1090                           ;Oscilador.c: 29:     if(Valor == 1){
  1091  012A  0373               	decf	initOsc@Valor,w
  1092  012B  1D03               	btfss	3,2
  1093  012C  292E               	goto	u371
  1094  012D  292F               	goto	u370
  1095  012E                     u371:
  1096  012E  2934               	goto	l113
  1097  012F                     u370:
  1098  012F                     l944:
  1099                           
  1100                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1101  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0131  120F               	bcf	15,4	;volatile
  1104                           
  1105                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1106  0132  128F               	bcf	15,5	;volatile
  1107                           
  1108                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1109  0133  170F               	bsf	15,6	;volatile
  1110  0134                     l113:	
  1111                           ;Oscilador.c: 33:     }
  1112                           
  1113                           
  1114                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1115  0134  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0135  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0136  140F               	bsf	15,0	;volatile
  1118  0137                     l114:
  1119  0137  0008               	return
  1120  0138                     __end_of_initOsc:
  1121                           
  1122                           	psect	text3
  1123  0206                     __ptext3:	
  1124 ;; *************** function _config_ADC *****************
  1125 ;; Defined at:
  1126 ;;		line 36 in file "ADC.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  channel         2    3[COMMON] int 
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         2       0       0       0       0
  1141 ;;      Locals:         0       0       0       0       0
  1142 ;;      Temps:          1       0       0       0       0
  1143 ;;      Totals:         3       0       0       0       0
  1144 ;;Total ram usage:        3 bytes
  1145 ;; Hardware stack levels used: 1
  1146 ;; Hardware stack levels required when called: 2
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_setup
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _config_ADC
  1156  0206                     _config_ADC:
  1157  0206                     l946:	
  1158                           ;incstack = 0
  1159                           ; Regs used in _config_ADC: [wreg+status,2+status,0]
  1160                           
  1161                           
  1162                           ;ADC.c: 37:     ADCON1bits.ADFM = 0;
  1163  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1164  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1165  0208  139F               	bcf	31,7	;volatile
  1166                           
  1167                           ;ADC.c: 38:     ADCON1bits.VCFG0 = 0;
  1168  0209  121F               	bcf	31,4	;volatile
  1169                           
  1170                           ;ADC.c: 39:     ADCON1bits.VCFG1 = 0;
  1171  020A  129F               	bcf	31,5	;volatile
  1172  020B                     l948:
  1173                           
  1174                           ;ADC.c: 41:     ADCON0bits.ADCS = 0b01;
  1175  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1176  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1177  020D  081F               	movf	31,w	;volatile
  1178  020E  393F               	andlw	-193
  1179  020F  3840               	iorlw	64
  1180  0210  009F               	movwf	31	;volatile
  1181                           
  1182                           ;ADC.c: 42:     ADCON0bits.CHS = channel;
  1183  0211  0873               	movf	config_ADC@channel,w
  1184  0212  00F5               	movwf	??_config_ADC
  1185  0213  0DF5               	rlf	??_config_ADC,f
  1186  0214  0DF5               	rlf	??_config_ADC,f
  1187  0215  081F               	movf	31,w	;volatile
  1188  0216  0675               	xorwf	??_config_ADC,w
  1189  0217  39C3               	andlw	-61
  1190  0218  0675               	xorwf	??_config_ADC,w
  1191  0219  009F               	movwf	31	;volatile
  1192  021A                     l950:
  1193                           
  1194                           ;ADC.c: 43:     ADCON0bits.ADON = 1;
  1195  021A  141F               	bsf	31,0	;volatile
  1196  021B                     l952:
  1197                           
  1198                           ;ADC.c: 44:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1199  021B  3010               	movlw	16
  1200  021C  00F5               	movwf	??_config_ADC
  1201  021D                     u677:
  1202  021D  0BF5               	decfsz	??_config_ADC,f
  1203  021E  2A1D               	goto	u677
  1204  021F  0000               	nop
  1205  0220                     l105:
  1206  0220  0008               	return
  1207  0221                     __end_of_config_ADC:
  1208                           
  1209                           	psect	text4
  1210  0138                     __ptext4:	
  1211 ;; *************** function _InitMSSP *****************
  1212 ;; Defined at:
  1213 ;;		line 10 in file "SPI.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  Modo            1    wreg     enum E1264
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  Modo            1    3[COMMON] enum E1264
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, status,2, status,0
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         1       0       0       0       0
  1229 ;;      Temps:          0       0       0       0       0
  1230 ;;      Totals:         1       0       0       0       0
  1231 ;;Total ram usage:        1 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 2
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_setup
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _InitMSSP
  1243  0138                     _InitMSSP:
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1247                           ;InitMSSP@Modo stored from wreg
  1248  0138  00F3               	movwf	InitMSSP@Modo
  1249  0139                     l954:
  1250                           
  1251                           ;SPI.c: 14:     SSPCONbits.SSPEN = 0;
  1252  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1253  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1254  013B  1294               	bcf	20,5	;volatile
  1255                           
  1256                           ;SPI.c: 16:     SSPCONbits.SSPEN = 1;
  1257  013C  1694               	bsf	20,5	;volatile
  1258                           
  1259                           ;SPI.c: 19:     TRISCbits.TRISC5 = 0;
  1260  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1261  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1262  013F  1287               	bcf	7,5	;volatile
  1263                           
  1264                           ;SPI.c: 20:     TRISCbits.TRISC4 = 1;
  1265  0140  1607               	bsf	7,4	;volatile
  1266  0141                     l956:
  1267                           
  1268                           ;SPI.c: 21:     if (Modo < 0b00000110){
  1269  0141  3006               	movlw	6
  1270  0142  0273               	subwf	InitMSSP@Modo,w
  1271  0143  1803               	skipnc
  1272  0144  2946               	goto	u381
  1273  0145  2947               	goto	u380
  1274  0146                     u381:
  1275  0146  2950               	goto	l962
  1276  0147                     u380:
  1277  0147                     l958:
  1278                           
  1279                           ;SPI.c: 23:         if (Modo < 0b00000100){
  1280  0147  3004               	movlw	4
  1281  0148  0273               	subwf	InitMSSP@Modo,w
  1282  0149  1803               	skipnc
  1283  014A  294C               	goto	u391
  1284  014B  294D               	goto	u390
  1285  014C                     u391:
  1286  014C  294F               	goto	l132
  1287  014D                     u390:
  1288  014D                     l960:
  1289                           
  1290                           ;SPI.c: 24:             TRISCbits.TRISC3 = 0;
  1291  014D  1187               	bcf	7,3	;volatile
  1292                           
  1293                           ;SPI.c: 25:         }
  1294  014E  2950               	goto	l962
  1295  014F                     l132:	
  1296                           ;SPI.c: 26:         else {
  1297                           
  1298                           
  1299                           ;SPI.c: 27:             TRISCbits.TRISC3 = 1;
  1300  014F  1587               	bsf	7,3	;volatile
  1301  0150                     l962:
  1302                           
  1303                           ;SPI.c: 32:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1304  0150  3004               	movlw	4
  1305  0151  0673               	xorwf	InitMSSP@Modo,w
  1306  0152  1D03               	btfss	3,2
  1307  0153  2955               	goto	u401
  1308  0154  2956               	goto	u400
  1309  0155                     u401:
  1310  0155  2957               	goto	l966
  1311  0156                     u400:
  1312  0156                     l964:
  1313  0156  1685               	bsf	5,5	;volatile
  1314  0157                     l966:
  1315                           
  1316                           ;SPI.c: 36:     SSPCON = SSPCON | Modo;
  1317  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0159  0814               	movf	20,w	;volatile
  1320  015A  0473               	iorwf	InitMSSP@Modo,w	;volatile
  1321  015B  0094               	movwf	20	;volatile
  1322  015C                     l968:
  1323                           
  1324                           ;SPI.c: 38:     PIE1bits.SSPIE = 0;
  1325  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1326  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1327  015E  118C               	bcf	12,3	;volatile
  1328  015F                     l970:
  1329                           
  1330                           ;SPI.c: 42:     SSPCONbits.CKP = 0;
  1331  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0161  1214               	bcf	20,4	;volatile
  1334  0162                     l972:
  1335                           
  1336                           ;SPI.c: 45:     SSPSTATbits.CKE = 1;
  1337  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0164  1714               	bsf	20,6	;volatile
  1340  0165                     l974:
  1341                           
  1342                           ;SPI.c: 47:     SSPSTATbits.SMP = 0;
  1343  0165  1394               	bcf	20,7	;volatile
  1344  0166                     l135:
  1345  0166  0008               	return
  1346  0167                     __end_of_InitMSSP:
  1347                           
  1348                           	psect	text5
  1349  0195                     __ptext5:	
  1350 ;; *************** function _conversion *****************
  1351 ;; Defined at:
  1352 ;;		line 21 in file "ADC.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0
  1368 ;;      Temps:          1       0       0       0       0
  1369 ;;      Totals:         1       0       0       0       0
  1370 ;;Total ram usage:        1 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 2
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           
  1381                           ;psect for function _conversion
  1382  0195                     _conversion:
  1383  0195                     l1004:	
  1384                           ;incstack = 0
  1385                           ; Regs used in _conversion: [wreg+status,2+status,0]
  1386                           
  1387                           
  1388                           ;ADC.c: 22:     if(ADCON0bits.GO == 0){
  1389  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0197  189F               	btfsc	31,1	;volatile
  1392  0198  299A               	goto	u431
  1393  0199  299B               	goto	u430
  1394  019A                     u431:
  1395  019A  29C2               	goto	l102
  1396  019B                     u430:
  1397  019B                     l1006:
  1398                           
  1399                           ;ADC.c: 23:         if(ADCON0bits.CHS == 1){
  1400  019B  0C1F               	rrf	31,w	;volatile
  1401  019C  00F3               	movwf	??_conversion
  1402  019D  0C73               	rrf	??_conversion,w
  1403  019E  390F               	andlw	15
  1404  019F  3A01               	xorlw	1
  1405  01A0  1D03               	skipz
  1406  01A1  29A3               	goto	u441
  1407  01A2  29A4               	goto	u440
  1408  01A3                     u441:
  1409  01A3  29AC               	goto	l1012
  1410  01A4                     u440:
  1411  01A4                     l1008:
  1412                           
  1413                           ;ADC.c: 24:             ADCON0bits.CHS = 0;
  1414  01A4  30C3               	movlw	-61
  1415  01A5  059F               	andwf	31,f	;volatile
  1416  01A6                     l1010:
  1417                           
  1418                           ;ADC.c: 25:             _delay((unsigned long)((50)*(4000000/4000000.0)));
  1419  01A6  3010               	movlw	16
  1420  01A7  00F3               	movwf	??_conversion
  1421  01A8                     u687:
  1422  01A8  0BF3               	decfsz	??_conversion,f
  1423  01A9  29A8               	goto	u687
  1424  01AA  0000               	nop
  1425                           
  1426                           ;ADC.c: 26:         }
  1427  01AB  29BA               	goto	l1018
  1428  01AC                     l1012:
  1429  01AC  0C1F               	rrf	31,w	;volatile
  1430  01AD  00F3               	movwf	??_conversion
  1431  01AE  0C73               	rrf	??_conversion,w
  1432  01AF  390F               	andlw	15
  1433  01B0  3A00               	xorlw	0
  1434  01B1  1D03               	skipz
  1435  01B2  29B4               	goto	u451
  1436  01B3  29B5               	goto	u450
  1437  01B4                     u451:
  1438  01B4  29BA               	goto	l1018
  1439  01B5                     u450:
  1440  01B5                     l1014:
  1441                           
  1442                           ;ADC.c: 28:             ADCON0bits.CHS = 1;
  1443  01B5  081F               	movf	31,w	;volatile
  1444  01B6  39C3               	andlw	-61
  1445  01B7  3804               	iorlw	4
  1446  01B8  009F               	movwf	31	;volatile
  1447  01B9  29A6               	goto	l1010
  1448  01BA                     l1018:
  1449                           
  1450                           ;ADC.c: 31:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  1451  01BA  3010               	movlw	16
  1452  01BB  00F3               	movwf	??_conversion
  1453  01BC                     u697:
  1454  01BC  0BF3               	decfsz	??_conversion,f
  1455  01BD  29BC               	goto	u697
  1456  01BE  0000               	nop
  1457  01BF                     l1020:
  1458                           
  1459                           ;ADC.c: 32:         ADCON0bits.GO = 1;
  1460  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1461  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1462  01C1  149F               	bsf	31,1	;volatile
  1463  01C2                     l102:
  1464  01C2  0008               	return
  1465  01C3                     __end_of_conversion:
  1466                           
  1467                           	psect	text6
  1468  01C3                     __ptext6:	
  1469 ;; *************** function ___wmul *****************
  1470 ;; Defined at:
  1471 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  multiplier      2    3[COMMON] unsigned int 
  1474 ;;  multiplicand    2    5[COMMON] unsigned int 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  product         2    7[COMMON] unsigned int 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    3[COMMON] unsigned int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         4       0       0       0       0
  1487 ;;      Locals:         2       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         6       0       0       0       0
  1490 ;;Total ram usage:        6 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 2
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           
  1501                           ;psect for function ___wmul
  1502  01C3                     ___wmul:
  1503  01C3                     l1030:	
  1504                           ;incstack = 0
  1505                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1506                           
  1507  01C3  01F7               	clrf	___wmul@product
  1508  01C4  01F8               	clrf	___wmul@product+1
  1509  01C5                     l1032:
  1510  01C5  1C73               	btfss	___wmul@multiplier,0
  1511  01C6  29C8               	goto	u471
  1512  01C7  29C9               	goto	u470
  1513  01C8                     u471:
  1514  01C8  29CF               	goto	l230
  1515  01C9                     u470:
  1516  01C9                     l1034:
  1517  01C9  0875               	movf	___wmul@multiplicand,w
  1518  01CA  07F7               	addwf	___wmul@product,f
  1519  01CB  1803               	skipnc
  1520  01CC  0AF8               	incf	___wmul@product+1,f
  1521  01CD  0876               	movf	___wmul@multiplicand+1,w
  1522  01CE  07F8               	addwf	___wmul@product+1,f
  1523  01CF                     l230:
  1524  01CF  3001               	movlw	1
  1525  01D0                     u485:
  1526  01D0  1003               	clrc
  1527  01D1  0DF5               	rlf	___wmul@multiplicand,f
  1528  01D2  0DF6               	rlf	___wmul@multiplicand+1,f
  1529  01D3  3EFF               	addlw	-1
  1530  01D4  1D03               	skipz
  1531  01D5  29D0               	goto	u485
  1532  01D6                     l1036:
  1533  01D6  3001               	movlw	1
  1534  01D7                     u495:
  1535  01D7  1003               	clrc
  1536  01D8  0CF4               	rrf	___wmul@multiplier+1,f
  1537  01D9  0CF3               	rrf	___wmul@multiplier,f
  1538  01DA  3EFF               	addlw	-1
  1539  01DB  1D03               	skipz
  1540  01DC  29D7               	goto	u495
  1541  01DD                     l1038:
  1542  01DD  0873               	movf	___wmul@multiplier,w
  1543  01DE  0474               	iorwf	___wmul@multiplier+1,w
  1544  01DF  1D03               	btfss	3,2
  1545  01E0  29E2               	goto	u501
  1546  01E1  29E3               	goto	u500
  1547  01E2                     u501:
  1548  01E2  29C5               	goto	l1032
  1549  01E3                     u500:
  1550  01E3                     l1040:
  1551  01E3  0878               	movf	___wmul@product+1,w
  1552  01E4  00F4               	movwf	?___wmul+1
  1553  01E5  0877               	movf	___wmul@product,w
  1554  01E6  00F3               	movwf	?___wmul
  1555  01E7                     l232:
  1556  01E7  0008               	return
  1557  01E8                     __end_of___wmul:
  1558                           
  1559                           	psect	text7
  1560  009F                     __ptext7:	
  1561 ;; *************** function ___awdiv *****************
  1562 ;; Defined at:
  1563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;  divisor         2    0[BANK0 ] int 
  1566 ;;  dividend        2    2[BANK0 ] int 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  quotient        2    6[BANK0 ] int 
  1569 ;;  sign            1    5[BANK0 ] unsigned char 
  1570 ;;  counter         1    4[BANK0 ] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  2    0[BANK0 ] int 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       4       0       0       0
  1581 ;;      Locals:         0       4       0       0       0
  1582 ;;      Temps:          1       0       0       0       0
  1583 ;;      Totals:         1       8       0       0       0
  1584 ;;Total ram usage:        9 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 2
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function ___awdiv
  1596  009F                     ___awdiv:
  1597  009F                     l1044:	
  1598                           ;incstack = 0
  1599                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1600                           
  1601  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1602  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1603  00A1  01A5               	clrf	___awdiv@sign
  1604  00A2                     l1046:
  1605  00A2  1FA1               	btfss	___awdiv@divisor+1,7
  1606  00A3  28A5               	goto	u511
  1607  00A4  28A6               	goto	u510
  1608  00A5                     u511:
  1609  00A5  28AD               	goto	l1052
  1610  00A6                     u510:
  1611  00A6                     l1048:
  1612  00A6  09A0               	comf	___awdiv@divisor,f
  1613  00A7  09A1               	comf	___awdiv@divisor+1,f
  1614  00A8  0AA0               	incf	___awdiv@divisor,f
  1615  00A9  1903               	skipnz
  1616  00AA  0AA1               	incf	___awdiv@divisor+1,f
  1617  00AB                     l1050:
  1618  00AB  01A5               	clrf	___awdiv@sign
  1619  00AC  0AA5               	incf	___awdiv@sign,f
  1620  00AD                     l1052:
  1621  00AD  1FA3               	btfss	___awdiv@dividend+1,7
  1622  00AE  28B0               	goto	u521
  1623  00AF  28B1               	goto	u520
  1624  00B0                     u521:
  1625  00B0  28BA               	goto	l1058
  1626  00B1                     u520:
  1627  00B1                     l1054:
  1628  00B1  09A2               	comf	___awdiv@dividend,f
  1629  00B2  09A3               	comf	___awdiv@dividend+1,f
  1630  00B3  0AA2               	incf	___awdiv@dividend,f
  1631  00B4  1903               	skipnz
  1632  00B5  0AA3               	incf	___awdiv@dividend+1,f
  1633  00B6                     l1056:
  1634  00B6  3001               	movlw	1
  1635  00B7  00F9               	movwf	??___awdiv
  1636  00B8  0879               	movf	??___awdiv,w
  1637  00B9  06A5               	xorwf	___awdiv@sign,f
  1638  00BA                     l1058:
  1639  00BA  01A6               	clrf	___awdiv@quotient
  1640  00BB  01A7               	clrf	___awdiv@quotient+1
  1641  00BC                     l1060:
  1642  00BC  0820               	movf	___awdiv@divisor,w
  1643  00BD  0421               	iorwf	___awdiv@divisor+1,w
  1644  00BE  1903               	btfsc	3,2
  1645  00BF  28C1               	goto	u531
  1646  00C0  28C2               	goto	u530
  1647  00C1                     u531:
  1648  00C1  28F9               	goto	l1080
  1649  00C2                     u530:
  1650  00C2                     l1062:
  1651  00C2  01A4               	clrf	___awdiv@counter
  1652  00C3  0AA4               	incf	___awdiv@counter,f
  1653  00C4  28D0               	goto	l1068
  1654  00C5                     l1064:
  1655  00C5  3001               	movlw	1
  1656  00C6                     u545:
  1657  00C6  1003               	clrc
  1658  00C7  0DA0               	rlf	___awdiv@divisor,f
  1659  00C8  0DA1               	rlf	___awdiv@divisor+1,f
  1660  00C9  3EFF               	addlw	-1
  1661  00CA  1D03               	skipz
  1662  00CB  28C6               	goto	u545
  1663  00CC                     l1066:
  1664  00CC  3001               	movlw	1
  1665  00CD  00F9               	movwf	??___awdiv
  1666  00CE  0879               	movf	??___awdiv,w
  1667  00CF  07A4               	addwf	___awdiv@counter,f
  1668  00D0                     l1068:
  1669  00D0  1FA1               	btfss	___awdiv@divisor+1,7
  1670  00D1  28D3               	goto	u551
  1671  00D2  28D4               	goto	u550
  1672  00D3                     u551:
  1673  00D3  28C5               	goto	l1064
  1674  00D4                     u550:
  1675  00D4                     l1070:
  1676  00D4  3001               	movlw	1
  1677  00D5                     u565:
  1678  00D5  1003               	clrc
  1679  00D6  0DA6               	rlf	___awdiv@quotient,f
  1680  00D7  0DA7               	rlf	___awdiv@quotient+1,f
  1681  00D8  3EFF               	addlw	-1
  1682  00D9  1D03               	skipz
  1683  00DA  28D5               	goto	u565
  1684  00DB  0821               	movf	___awdiv@divisor+1,w
  1685  00DC  0223               	subwf	___awdiv@dividend+1,w
  1686  00DD  1D03               	skipz
  1687  00DE  28E1               	goto	u575
  1688  00DF  0820               	movf	___awdiv@divisor,w
  1689  00E0  0222               	subwf	___awdiv@dividend,w
  1690  00E1                     u575:
  1691  00E1  1C03               	skipc
  1692  00E2  28E4               	goto	u571
  1693  00E3  28E5               	goto	u570
  1694  00E4                     u571:
  1695  00E4  28EC               	goto	l1076
  1696  00E5                     u570:
  1697  00E5                     l1072:
  1698  00E5  0820               	movf	___awdiv@divisor,w
  1699  00E6  02A2               	subwf	___awdiv@dividend,f
  1700  00E7  0821               	movf	___awdiv@divisor+1,w
  1701  00E8  1C03               	skipc
  1702  00E9  03A3               	decf	___awdiv@dividend+1,f
  1703  00EA  02A3               	subwf	___awdiv@dividend+1,f
  1704  00EB                     l1074:
  1705  00EB  1426               	bsf	___awdiv@quotient,0
  1706  00EC                     l1076:
  1707  00EC  3001               	movlw	1
  1708  00ED                     u585:
  1709  00ED  1003               	clrc
  1710  00EE  0CA1               	rrf	___awdiv@divisor+1,f
  1711  00EF  0CA0               	rrf	___awdiv@divisor,f
  1712  00F0  3EFF               	addlw	-1
  1713  00F1  1D03               	skipz
  1714  00F2  28ED               	goto	u585
  1715  00F3                     l1078:
  1716  00F3  3001               	movlw	1
  1717  00F4  02A4               	subwf	___awdiv@counter,f
  1718  00F5  1D03               	btfss	3,2
  1719  00F6  28F8               	goto	u591
  1720  00F7  28F9               	goto	u590
  1721  00F8                     u591:
  1722  00F8  28D4               	goto	l1070
  1723  00F9                     u590:
  1724  00F9                     l1080:
  1725  00F9  0825               	movf	___awdiv@sign,w
  1726  00FA  1903               	btfsc	3,2
  1727  00FB  28FD               	goto	u601
  1728  00FC  28FE               	goto	u600
  1729  00FD                     u601:
  1730  00FD  2903               	goto	l1084
  1731  00FE                     u600:
  1732  00FE                     l1082:
  1733  00FE  09A6               	comf	___awdiv@quotient,f
  1734  00FF  09A7               	comf	___awdiv@quotient+1,f
  1735  0100  0AA6               	incf	___awdiv@quotient,f
  1736  0101  1903               	skipnz
  1737  0102  0AA7               	incf	___awdiv@quotient+1,f
  1738  0103                     l1084:
  1739  0103  0827               	movf	___awdiv@quotient+1,w
  1740  0104  00A1               	movwf	?___awdiv+1
  1741  0105  0826               	movf	___awdiv@quotient,w
  1742  0106  00A0               	movwf	?___awdiv
  1743  0107                     l383:
  1744  0107  0008               	return
  1745  0108                     __end_of___awdiv:
  1746                           
  1747                           	psect	text8
  1748  0240                     __ptext8:	
  1749 ;; *************** function _WriteMSSP *****************
  1750 ;; Defined at:
  1751 ;;		line 51 in file "SPI.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  Data            1    wreg     unsigned char 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  Data            1    3[COMMON] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         1       0       0       0       0
  1769 ;;Total ram usage:        1 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 2
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _WriteMSSP
  1781  0240                     _WriteMSSP:
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _WriteMSSP: [wreg]
  1785                           ;WriteMSSP@Data stored from wreg
  1786  0240  00F3               	movwf	WriteMSSP@Data
  1787  0241                     l1028:
  1788                           
  1789                           ;SPI.c: 55:     SSPBUF = Data;
  1790  0241  0873               	movf	WriteMSSP@Data,w
  1791  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0244  0093               	movwf	19	;volatile
  1794  0245                     l138:
  1795  0245  0008               	return
  1796  0246                     __end_of_WriteMSSP:
  1797                           
  1798                           	psect	text9
  1799  0236                     __ptext9:	
  1800 ;; *************** function _ReadMSSP *****************
  1801 ;; Defined at:
  1802 ;;		line 59 in file "SPI.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;		None
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;		None
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      unsigned char 
  1809 ;; Registers used:
  1810 ;;		wreg
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         0       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         0       0       0       0       0
  1820 ;;Total ram usage:        0 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 2
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _ReadMSSP
  1832  0236                     _ReadMSSP:
  1833  0236                     l1022:	
  1834                           ;incstack = 0
  1835                           ; Regs used in _ReadMSSP: [wreg]
  1836                           
  1837  0236                     l141:	
  1838                           ;SPI.c: 60:     while(SSPSTATbits.BF == 0){}
  1839                           
  1840  0236  1683               	bsf	3,5	;RP0=1, select bank1
  1841  0237  1303               	bcf	3,6	;RP1=0, select bank1
  1842  0238  1C14               	btfss	20,0	;volatile
  1843  0239  2A3B               	goto	u461
  1844  023A  2A3C               	goto	u460
  1845  023B                     u461:
  1846  023B  2A36               	goto	l141
  1847  023C                     u460:
  1848  023C                     l1024:
  1849                           
  1850                           ;SPI.c: 61:     return(SSPBUF);
  1851  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1852  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1853  023E  0813               	movf	19,w	;volatile
  1854  023F                     l144:
  1855  023F  0008               	return
  1856  0240                     __end_of_ReadMSSP:
  1857                           
  1858                           	psect	text10
  1859  0221                     __ptext10:	
  1860 ;; *************** function _isr *****************
  1861 ;; Defined at:
  1862 ;;		line 57 in file "ESCLAVO3.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;		None
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0
  1878 ;;      Temps:          2       0       0       0       0
  1879 ;;      Totals:         2       0       0       0       0
  1880 ;;Total ram usage:        2 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 1
  1883 ;; This function calls:
  1884 ;;		_ADC
  1885 ;; This function is called by:
  1886 ;;		Interrupt level 1
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           
  1891                           ;psect for function _isr
  1892  0221                     _isr:
  1893  0221                     i1l1088:
  1894                           
  1895                           ;ESCLAVO3.c: 58:     if(PIR1bits.ADIF){
  1896  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0223  1F0C               	btfss	12,6	;volatile
  1899  0224  2A26               	goto	u61_21
  1900  0225  2A27               	goto	u61_20
  1901  0226                     u61_21:
  1902  0226  2A2F               	goto	i1l60
  1903  0227                     u61_20:
  1904  0227                     i1l1090:
  1905                           
  1906                           ;ESCLAVO3.c: 59:         ADC();
  1907  0227  120A  118A  21E8  120A  118A  	fcall	_ADC
  1908  022C                     i1l1092:
  1909                           
  1910                           ;ESCLAVO3.c: 60:         PIR1bits.ADIF = 0;
  1911  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1912  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1913  022E  130C               	bcf	12,6	;volatile
  1914  022F                     i1l60:
  1915  022F  0872               	movf	??_isr+1,w
  1916  0230  008A               	movwf	10
  1917  0231  0E71               	swapf	??_isr,w
  1918  0232  0083               	movwf	3
  1919  0233  0EFE               	swapf	btemp,f
  1920  0234  0E7E               	swapf	btemp,w
  1921  0235  0009               	retfie
  1922  0236                     __end_of_isr:
  1923                           
  1924                           	psect	intentry
  1925  0004                     __pintentry:	
  1926                           ;incstack = 0
  1927                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1928                           
  1929  0004                     interrupt_function:
  1930  007E                     saved_w	set	btemp
  1931  0004  00FE               	movwf	btemp
  1932  0005  0E03               	swapf	3,w
  1933  0006  00F1               	movwf	??_isr
  1934  0007  080A               	movf	10,w
  1935  0008  00F2               	movwf	??_isr+1
  1936  0009  120A  118A  2A21   	ljmp	_isr
  1937                           
  1938                           	psect	text11
  1939  01E8                     __ptext11:	
  1940 ;; *************** function _ADC *****************
  1941 ;; Defined at:
  1942 ;;		line 11 in file "ADC.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          1       0       0       0       0
  1959 ;;      Totals:         1       0       0       0       0
  1960 ;;Total ram usage:        1 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_isr
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           
  1970                           ;psect for function _ADC
  1971  01E8                     _ADC:
  1972  01E8                     i1l976:	
  1973                           ;incstack = 0
  1974                           ; Regs used in _ADC: [wreg+status,2+status,0]
  1975                           
  1976                           
  1977                           ;ADC.c: 12:     if(ADCON0bits.CHS == 0){
  1978  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1979  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1980  01EA  0C1F               	rrf	31,w	;volatile
  1981  01EB  00F0               	movwf	??_ADC
  1982  01EC  0C70               	rrf	??_ADC,w
  1983  01ED  390F               	andlw	15
  1984  01EE  3A00               	xorlw	0
  1985  01EF  1D03               	skipz
  1986  01F0  29F2               	goto	u41_21
  1987  01F1  29F3               	goto	u41_20
  1988  01F2                     u41_21:
  1989  01F2  29F8               	goto	i1l980
  1990  01F3                     u41_20:
  1991  01F3                     i1l978:
  1992                           
  1993                           ;ADC.c: 13:         cont1 = ADRESH;
  1994  01F3  081E               	movf	30,w	;volatile
  1995  01F4  00F0               	movwf	??_ADC
  1996  01F5  0870               	movf	??_ADC,w
  1997  01F6  00AE               	movwf	_cont1
  1998                           
  1999                           ;ADC.c: 14:     }
  2000  01F7  2A05               	goto	i1l95
  2001  01F8                     i1l980:
  2002  01F8  0C1F               	rrf	31,w	;volatile
  2003  01F9  00F0               	movwf	??_ADC
  2004  01FA  0C70               	rrf	??_ADC,w
  2005  01FB  390F               	andlw	15
  2006  01FC  3A01               	xorlw	1
  2007  01FD  1D03               	skipz
  2008  01FE  2A00               	goto	u42_21
  2009  01FF  2A01               	goto	u42_20
  2010  0200                     u42_21:
  2011  0200  2A05               	goto	i1l95
  2012  0201                     u42_20:
  2013  0201                     i1l982:
  2014                           
  2015                           ;ADC.c: 16:         cont2 = ADRESH;
  2016  0201  081E               	movf	30,w	;volatile
  2017  0202  00F0               	movwf	??_ADC
  2018  0203  0870               	movf	??_ADC,w
  2019  0204  00FA               	movwf	_cont2
  2020  0205                     i1l95:
  2021  0205  0008               	return
  2022  0206                     __end_of_ADC:
  2023  007E                     btemp	set	126	;btemp
  2024  007E                     wtemp0	set	126
  2025                           
  2026                           	psect	config
  2027                           
  2028                           ;Config register CONFIG1 @ 0x2007
  2029                           ;	Oscillator Selection bits
  2030                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2031                           ;	Watchdog Timer Enable bit
  2032                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2033                           ;	Power-up Timer Enable bit
  2034                           ;	PWRTE = OFF, PWRT disabled
  2035                           ;	RE3/MCLR pin function select bit
  2036                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2037                           ;	Code Protection bit
  2038                           ;	CP = OFF, Program memory code protection is disabled
  2039                           ;	Data Code Protection bit
  2040                           ;	CPD = OFF, Data memory code protection is disabled
  2041                           ;	Brown Out Reset Selection bits
  2042                           ;	BOREN = OFF, BOR disabled
  2043                           ;	Internal External Switchover bit
  2044                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2045                           ;	Fail-Safe Clock Monitor Enabled bit
  2046                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2047                           ;	Low Voltage Programming Enable bit
  2048                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2049                           ;	In-Circuit Debugger Mode bit
  2050                           ;	DEBUG = 0x1, unprogrammed default
  2051  2007                     	org	8199
  2052  2007  20D4               	dw	8404
  2053                           
  2054                           ;Config register CONFIG2 @ 0x2008
  2055                           ;	Brown-out Reset Selection bit
  2056                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2057                           ;	Flash Program Memory Self Write Enable bits
  2058                           ;	WRT = OFF, Write protection off
  2059  2008                     	org	8200
  2060  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     12      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _setup->_config_ADC
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    _isr->_ADC

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1167
                                              8 BANK0      4     4      0
                           _ReadMSSP
                          _WriteMSSP
                            ___awdiv
                             ___wmul
                         _conversion
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     274
                           _InitMSSP
                         _config_ADC
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _config_ADC                                           3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                                _ADC
 ---------------------------------------------------------------------------------
 (4) _ADC                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _conversion
   _setup
     _InitMSSP
     _config_ADC
     _initOsc

 _isr (ROOT)
   _ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 16:51:52 2022

            _SSPSTATbits 0094                       l67 0084                       l77 0194  
           ___awdiv@sign 0025      ___wmul@multiplicand 0075                      l102 01C2  
                    l105 0220                      l113 0134                      l114 0137  
                    l132 014F                      l141 0236                      l230 01CF  
                    l135 0166                      l144 023F                      l232 01E7  
                    l138 0245                      _ADC 01E8                      l383 0107  
                    l930 0109                      l940 0125                      l932 010F  
                    l950 021A                      l942 012A                      l934 0114  
                    l960 014D                      l952 021B                      l944 012F  
                    l936 011A                      l970 015F                      l962 0150  
                    l954 0139                      l946 0206                      l938 011F  
                    l972 0162                      l964 0156                      l956 0141  
                    l948 020B                      l974 0165                      l966 0157  
                    l958 0147                      l990 0178                      l968 015C  
                    l992 017E                      l984 0167                      l994 0186  
                    l986 016B                      l996 018C                      l988 016C  
                    l998 018D                      u400 0156                      u401 0155  
                    u500 01E3                      u340 010F                      u501 01E2  
                    u341 010E                      u510 00A6                      u430 019B  
                    u350 011A                      u511 00A5                      u431 019A  
                    u351 0119                      u600 00FE                      u520 00B1  
                    u440 01A4                      u360 0125                      u601 00FD  
                    u521 00B0                      u441 01A3                      u361 0124  
                    u530 00C2                      u450 01B5                      u370 012F  
                    u531 00C1                      u451 01B4                      u371 012E  
                    u460 023C                      u380 0147                      u620 0067  
                    u461 023B                      u381 0146                      u621 0066  
                    u550 00D4                      u470 01C9                      u390 014D  
                    u630 0071                      u551 00D3                      u471 01C8  
                    u391 014C                      u631 0070                      u640 0077  
                    u545 00C6                      u641 0076                      u570 00E5  
                    u650 0081                      u571 00E4                      u651 0080  
                    u660 008A                      u565 00D5                      u485 01D0  
                    u661 0089                      u590 00F9                      u591 00F8  
                    u575 00E1                      u495 01D7                      u585 00ED  
                    u677 021D                      u687 01A8                      u697 01BC  
                    _isr 0221                     ?_ADC 0070                     l1000 018E  
                   l1010 01A6                     l1002 0191                     l1020 01BF  
                   l1012 01AC                     l1004 0195                     l1100 0022  
                   l1022 0236                     l1030 01C3                     l1014 01B5  
                   l1006 019B                     l1110 006B                     l1102 0027  
                   l1024 023C                     l1040 01E3                     l1032 01C5  
                   l1008 01A4                     l1120 008A                     l1112 0071  
                   l1104 004E                     l1050 00AB                     l1034 01C9  
                   l1018 01BA                     l1122 0094                     l1114 0077  
                   l1106 0061                     l1028 0241                     l1060 00BC  
                   l1052 00AD                     l1044 009F                     l1036 01D6  
                   l1116 007B                     l1108 0067                     l1070 00D4  
                   l1062 00C2                     l1054 00B1                     l1046 00A2  
                   l1038 01DD                     l1118 0081                     l1072 00E5  
                   l1064 00C5                     l1080 00F9                     l1056 00B6  
                   l1048 00A6                     l1082 00FE                     l1074 00EB  
                   l1066 00CC                     l1058 00BA                     l1084 0103  
                   l1076 00EC                     l1068 00D0                     l1078 00F3  
                   l1094 0019                     l1096 001E                     l1098 0021  
                   ?_isr 0070                     i1l60 022F                     i1l95 0205  
                   _main 0019                     _temp 002C                     btemp 007E  
                   start 000C                    ??_ADC 0070                    ??_isr 0071  
                  ?_main 0070          __end_of___awdiv 0108                    _ANSEL 0188  
        ___awdiv@divisor 0020                    i1l980 01F8                    i1l982 0201  
                  i1l976 01E8                    i1l978 01F3          ___awdiv@counter 0024  
                  u41_20 01F3                    u41_21 01F2                    u42_20 0201  
                  u42_21 0200                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    u61_20 0227                    u61_21 0226  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089             InitMSSP@Modo 0073                    _cont1 002E  
                  _cont2 007A          __end_of_initOsc 0138                    _read2 002D  
                  _setup 0167                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 009F  
       __end_of_InitMSSP 0167         __end_of_ReadMSSP 0240                   ??_main 0028  
                 _ADRESH 001E         ___awdiv@dividend 0022                   ?_setup 0070  
                 _ANSELH 0189                   i1l1090 0227                   i1l1092 022C  
                 i1l1088 0221                   _SSPCON 0014                   _SSPBUF 0013  
                 ___wmul 01C3                ??___awdiv 0079         ___awdiv@quotient 0026  
              ??_initOsc 0073                   saved_w 007E  __end_of__initialization 0015  
     __size_of_WriteMSSP 0006           __pcstackCOMMON 0070            __end_of_setup 0195  
                ??_setup 0076               __pbssBANK0 002C                ?_InitMSSP 0070  
              ?_ReadMSSP 0070               __pmaintext 0019                  ?___wmul 0073  
             __pintentry 0004        __end_of_WriteMSSP 0246             initOsc@Valor 0073  
             _config_ADC 0206                  _SSPSTAT 0094               ??_InitMSSP 0073  
             ??_ReadMSSP 0073               _conversion 0195                  ___awdiv 009F  
        __size_of___wmul 0025                  __ptext1 0167                  __ptext2 0108  
                __ptext3 0206                  __ptext4 0138                  __ptext5 0195  
                __ptext6 01C3                  __ptext7 009F                  __ptext8 0240  
                __ptext9 0236             __size_of_ADC 001E                  _initOsc 0108  
           __size_of_isr 0015     end_of_initialization 0015                _PORTEbits 0009  
            ?_config_ADC 0073                _TRISAbits 0085                _TRISCbits 0087  
            ?_conversion 0070            WriteMSSP@Data 0073           __end_of___wmul 01E8  
    start_initialization 000F              __end_of_ADC 0206              __end_of_isr 0236  
      __size_of_InitMSSP 002F        __size_of_ReadMSSP 000A      __size_of_config_ADC 001B  
               ??___wmul 0077      __size_of_conversion 002E              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020                _WriteMSSP 0240  
              _main$1151 002A                 ?___awdiv 0020        config_ADC@channel 0073  
               ?_initOsc 0070               ?_WriteMSSP 0070           __size_of_setup 002E  
      interrupt_function 0004           ___wmul@product 0077                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0073             ??_config_ADC 0075                 _InitMSSP 0138  
               _ReadMSSP 0236             ??_conversion 0073       __end_of_config_ADC 0221  
       __size_of___awdiv 0069       __end_of_conversion 01C3         __size_of_initOsc 0030  
            ??_WriteMSSP 0073                 __ptext10 0221                 __ptext11 01E8  
          __size_of_main 0086               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F               _SSPCONbits 0014  
