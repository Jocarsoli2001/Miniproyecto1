

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 15:26:05 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  008F                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  0105                     	;# 
   428  0107                     	;# 
   429  0108                     	;# 
   430  0109                     	;# 
   431  010C                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  010F                     	;# 
   436  0185                     	;# 
   437  0187                     	;# 
   438  0188                     	;# 
   439  0189                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  000E                     	;# 
   458  000F                     	;# 
   459  0010                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001D                     	;# 
   475  001E                     	;# 
   476  001F                     	;# 
   477  0081                     	;# 
   478  0085                     	;# 
   479  0086                     	;# 
   480  0087                     	;# 
   481  0088                     	;# 
   482  0089                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  008F                     	;# 
   487  0090                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0095                     	;# 
   495  0096                     	;# 
   496  0097                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009A                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  0105                     	;# 
   506  0107                     	;# 
   507  0108                     	;# 
   508  0109                     	;# 
   509  010C                     	;# 
   510  010C                     	;# 
   511  010D                     	;# 
   512  010E                     	;# 
   513  010F                     	;# 
   514  0185                     	;# 
   515  0187                     	;# 
   516  0188                     	;# 
   517  0189                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  0006                     _PORTBbits	set	6
   521  0008                     _PORTDbits	set	8
   522  0013                     _SSPBUF	set	19
   523  0014                     _SSPCONbits	set	20
   524  0014                     _SSPCON	set	20
   525  0007                     _PORTC	set	7
   526  0006                     _PORTB	set	6
   527  0009                     _PORTE	set	9
   528  0008                     _PORTD	set	8
   529  0005                     _PORTA	set	5
   530  0007                     _PORTCbits	set	7
   531  008F                     _OSCCONbits	set	143
   532  0094                     _SSPSTATbits	set	148
   533  008C                     _PIE1bits	set	140
   534  0085                     _TRISAbits	set	133
   535  0087                     _TRISCbits	set	135
   536  0089                     _TRISE	set	137
   537  0088                     _TRISD	set	136
   538  0086                     _TRISB	set	134
   539  0085                     _TRISA	set	133
   540  0094                     _SSPSTAT	set	148
   541  0438                     _TRISC0	set	1080
   542  0439                     _TRISC1	set	1081
   543  043A                     _TRISC2	set	1082
   544  0189                     _ANSELH	set	393
   545  0188                     _ANSEL	set	392
   546                           
   547                           	psect	cinit
   548  07F4                     start_initialization:	
   549                           ; #config settings
   550                           
   551  07F4                     __initialization:
   552                           
   553                           ; Clear objects allocated to COMMON
   554  07F4  01F1               	clrf	__pbssCOMMON& (0+127)
   555  07F5  01F2               	clrf	(__pbssCOMMON+1)& (0+127)
   556  07F6  01F3               	clrf	(__pbssCOMMON+2)& (0+127)
   557  07F7  01F4               	clrf	(__pbssCOMMON+3)& (0+127)
   558  07F8  01F5               	clrf	(__pbssCOMMON+4)& (0+127)
   559  07F9  01F6               	clrf	(__pbssCOMMON+5)& (0+127)
   560  07FA  01F7               	clrf	(__pbssCOMMON+6)& (0+127)
   561  07FB  01F8               	clrf	(__pbssCOMMON+7)& (0+127)
   562  07FC                     end_of_initialization:	
   563                           ;End of C runtime variable initialization code
   564                           
   565  07FC                     __end_of__initialization:
   566  07FC  0183               	clrf	3
   567  07FD  120A  118A  2FB6   	ljmp	_main	;jump to C main() function
   568                           
   569                           	psect	bssCOMMON
   570  0071                     __pbssCOMMON:
   571  0071                     _MSSPin:
   572  0071                     	ds	2
   573  0073                     _cen_ADC:
   574  0073                     	ds	1
   575  0074                     _dec_ADC:
   576  0074                     	ds	1
   577  0075                     _uni_ADC:
   578  0075                     	ds	1
   579  0076                     _dig_ADC:
   580  0076                     	ds	1
   581  0077                     _ADC_dig:
   582  0077                     	ds	1
   583  0078                     _val_ADC:
   584  0078                     	ds	1
   585                           
   586                           	psect	cstackCOMMON
   587  0079                     __pcstackCOMMON:
   588  0079                     ?_setup:
   589  0079                     ?_WriteMSSP:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0079                     ?_ReadMSSP:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0079                     ?_initOsc:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0079                     ?_InitMSSP:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0079                     ?_isr:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0079                     ??_isr:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0079                     ?_main:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           ; 1 bytes @ 0x0
   612  0079                     	ds	2
   613  007B                     ??_WriteMSSP:
   614  007B                     ??_ReadMSSP:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  007B                     ??_initOsc:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  007B                     ??_InitMSSP:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  007B                     InitMSSP@Modo:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  007B                     WriteMSSP@Data:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  007B                     initOsc@Valor:	
   630                           ; 1 bytes @ 0x2
   631                           
   632                           
   633                           ; 1 bytes @ 0x2
   634  007B                     	ds	1
   635  007C                     ??_setup:
   636  007C                     ??_main:	
   637                           ; 1 bytes @ 0x3
   638                           
   639                           
   640                           ; 1 bytes @ 0x3
   641  007C                     	ds	2
   642                           
   643                           	psect	maintext
   644  07B6                     __pmaintext:	
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   647 ;;
   648 ;; *************** function _main *****************
   649 ;; Defined at:
   650 ;;		line 74 in file "Maestro.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, pclath, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : B00/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   664 ;;      Params:         0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0
   666 ;;      Temps:          2       0       0       0       0
   667 ;;      Totals:         2       0       0       0       0
   668 ;;Total ram usage:        2 bytes
   669 ;; Hardware stack levels required when called: 3
   670 ;; This function calls:
   671 ;;		_ReadMSSP
   672 ;;		_WriteMSSP
   673 ;;		_setup
   674 ;; This function is called by:
   675 ;;		Startup code after reset
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           
   680                           ;psect for function _main
   681  07B6                     _main:
   682  07B6                     l907:	
   683                           ;incstack = 0
   684                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   685                           
   686                           
   687                           ;Maestro.c: 75:     setup();
   688  07B6  120A  118A  2753  120A  118A  	fcall	_setup
   689  07BB                     l909:
   690                           
   691                           ;Maestro.c: 84:     val_ADC = 0;
   692  07BB  01F8               	clrf	_val_ADC
   693  07BC                     l911:
   694                           
   695                           ;Maestro.c: 93:         PORTCbits.RC2 = 0;
   696  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   697  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   698  07BE  1107               	bcf	7,2	;volatile
   699  07BF                     l913:
   700                           
   701                           ;Maestro.c: 94:         _delay((unsigned long)((1)*(4000000/4000.0)));
   702  07BF  30C7               	movlw	199
   703  07C0  00FC               	movwf	??_main
   704  07C1                     u257:
   705  07C1  2FC2               	nop2
   706  07C2  0BFC               	decfsz	??_main,f
   707  07C3  2FC1               	goto	u257
   708  07C4  2FC5               	nop2
   709  07C5  2FC6               	nop2
   710  07C6                     l915:
   711                           
   712                           ;Maestro.c: 96:         WriteMSSP(1);
   713  07C6  3001               	movlw	1
   714  07C7  120A  118A  270C  120A  118A  	fcall	_WriteMSSP
   715  07CC                     l917:
   716                           
   717                           ;Maestro.c: 97:         _delay((unsigned long)((100)*(4000000/4000.0)));
   718  07CC  3082               	movlw	130
   719  07CD  00FD               	movwf	??_main+1
   720  07CE  30DD               	movlw	221
   721  07CF  00FC               	movwf	??_main
   722  07D0                     u267:
   723  07D0  0BFC               	decfsz	??_main,f
   724  07D1  2FD0               	goto	u267
   725  07D2  0BFD               	decfsz	??_main+1,f
   726  07D3  2FD0               	goto	u267
   727  07D4  2FD5               	nop2
   728  07D5                     l919:
   729                           
   730                           ;Maestro.c: 98:         if (SSPSTAT & 0b00000001) {
   731  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   732  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   733  07D7  1C14               	btfss	20,0	;volatile
   734  07D8  2FDA               	goto	u171
   735  07D9  2FDB               	goto	u170
   736  07DA                     u171:
   737  07DA  2FE6               	goto	l923
   738  07DB                     u170:
   739  07DB                     l921:
   740                           
   741                           ;Maestro.c: 99:             MSSPin = ReadMSSP();
   742  07DB  120A  118A  2719  120A  118A  	fcall	_ReadMSSP
   743  07E0  00FC               	movwf	??_main
   744  07E1  01FD               	clrf	??_main+1
   745  07E2  087C               	movf	??_main,w
   746  07E3  00F1               	movwf	_MSSPin
   747  07E4  087D               	movf	??_main+1,w
   748  07E5  00F2               	movwf	_MSSPin+1
   749  07E6                     l923:
   750                           
   751                           ;Maestro.c: 102:         _delay((unsigned long)((1)*(4000000/4000.0)));
   752  07E6  30C7               	movlw	199
   753  07E7  00FC               	movwf	??_main
   754  07E8                     u277:
   755  07E8  2FE9               	nop2
   756  07E9  0BFC               	decfsz	??_main,f
   757  07EA  2FE8               	goto	u277
   758  07EB  2FEC               	nop2
   759  07EC  2FED               	nop2
   760  07ED                     l925:
   761                           
   762                           ;Maestro.c: 103:         PORTCbits.RC2 = 1;
   763  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   764  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   765  07EF  1507               	bsf	7,2	;volatile
   766  07F0  2FBC               	goto	l911
   767  07F1  120A  118A  280C   	ljmp	start
   768  07F4                     __end_of_main:
   769                           
   770                           	psect	text1
   771  0753                     __ptext1:	
   772 ;; *************** function _setup *****************
   773 ;; Defined at:
   774 ;;		line 131 in file "Maestro.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, pclath, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used: 1
   794 ;; Hardware stack levels required when called: 2
   795 ;; This function calls:
   796 ;;		_InitMSSP
   797 ;;		_initOsc
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _setup
   805  0753                     _setup:
   806  0753                     l861:	
   807                           ;incstack = 0
   808                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   809                           
   810                           
   811                           ;Maestro.c: 134:     ANSEL = 0;
   812  0753  1683               	bsf	3,5	;RP0=1, select bank3
   813  0754  1703               	bsf	3,6	;RP1=1, select bank3
   814  0755  0188               	clrf	8	;volatile
   815                           
   816                           ;Maestro.c: 135:     ANSELH = 0;
   817  0756  0189               	clrf	9	;volatile
   818                           
   819                           ;Maestro.c: 137:     TRISA = 0;
   820  0757  1683               	bsf	3,5	;RP0=1, select bank1
   821  0758  1303               	bcf	3,6	;RP1=0, select bank1
   822  0759  0185               	clrf	5	;volatile
   823                           
   824                           ;Maestro.c: 138:     TRISB = 0;
   825  075A  0186               	clrf	6	;volatile
   826                           
   827                           ;Maestro.c: 139:     TRISD = 0;
   828  075B  0188               	clrf	8	;volatile
   829                           
   830                           ;Maestro.c: 140:     TRISE = 0;
   831  075C  0189               	clrf	9	;volatile
   832                           
   833                           ;Maestro.c: 142:     PORTA = 0;
   834  075D  1283               	bcf	3,5	;RP0=0, select bank0
   835  075E  1303               	bcf	3,6	;RP1=0, select bank0
   836  075F  0185               	clrf	5	;volatile
   837                           
   838                           ;Maestro.c: 143:     PORTD = 0;
   839  0760  0188               	clrf	8	;volatile
   840                           
   841                           ;Maestro.c: 144:     PORTE = 0;
   842  0761  0189               	clrf	9	;volatile
   843                           
   844                           ;Maestro.c: 145:     PORTB = 0;
   845  0762  0186               	clrf	6	;volatile
   846                           
   847                           ;Maestro.c: 146:     PORTC = 0;
   848  0763  0187               	clrf	7	;volatile
   849  0764                     l863:
   850                           
   851                           ;Maestro.c: 149:     TRISC2 = 0;
   852  0764  1683               	bsf	3,5	;RP0=1, select bank1
   853  0765  1303               	bcf	3,6	;RP1=0, select bank1
   854  0766  1107               	bcf	7,2	;volatile
   855  0767                     l865:
   856                           
   857                           ;Maestro.c: 150:     PORTCbits.RC2 = 1;
   858  0767  1283               	bcf	3,5	;RP0=0, select bank0
   859  0768  1303               	bcf	3,6	;RP1=0, select bank0
   860  0769  1507               	bsf	7,2	;volatile
   861  076A                     l867:
   862                           
   863                           ;Maestro.c: 152:     TRISC1 = 0;
   864  076A  1683               	bsf	3,5	;RP0=1, select bank1
   865  076B  1303               	bcf	3,6	;RP1=0, select bank1
   866  076C  1087               	bcf	7,1	;volatile
   867  076D                     l869:
   868                           
   869                           ;Maestro.c: 153:     PORTCbits.RC1 = 1;
   870  076D  1283               	bcf	3,5	;RP0=0, select bank0
   871  076E  1303               	bcf	3,6	;RP1=0, select bank0
   872  076F  1487               	bsf	7,1	;volatile
   873  0770                     l871:
   874                           
   875                           ;Maestro.c: 155:     TRISC0 = 0;
   876  0770  1683               	bsf	3,5	;RP0=1, select bank1
   877  0771  1303               	bcf	3,6	;RP1=0, select bank1
   878  0772  1007               	bcf	7,0	;volatile
   879  0773                     l873:
   880                           
   881                           ;Maestro.c: 156:     PORTCbits.RC0 = 1;
   882  0773  1283               	bcf	3,5	;RP0=0, select bank0
   883  0774  1303               	bcf	3,6	;RP1=0, select bank0
   884  0775  1407               	bsf	7,0	;volatile
   885  0776                     l875:
   886                           
   887                           ;Maestro.c: 159:     initOsc(4);
   888  0776  3004               	movlw	4
   889  0777  120A  118A  2723  120A  118A  	fcall	_initOsc
   890  077C                     l877:
   891                           
   892                           ;Maestro.c: 162:     InitMSSP(SPI_MASTER_FOSC4);
   893  077C  3000               	movlw	0
   894  077D  120A  118A  2783  120A  118A  	fcall	_InitMSSP
   895  0782                     l75:
   896  0782  0008               	return
   897  0783                     __end_of_setup:
   898                           
   899                           	psect	text2
   900  0723                     __ptext2:	
   901 ;; *************** function _initOsc *****************
   902 ;; Defined at:
   903 ;;		line 12 in file "Oscilador.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  Valor           1    wreg     unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  Valor           1    2[COMMON] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0
   920 ;;      Totals:         1       0       0       0       0
   921 ;;Total ram usage:        1 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 1
   924 ;; This function calls:
   925 ;;		Nothing
   926 ;; This function is called by:
   927 ;;		_setup
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _initOsc
   933  0723                     _initOsc:
   934                           
   935                           ;incstack = 0
   936                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   937                           ;initOsc@Valor stored from wreg
   938  0723  00FB               	movwf	initOsc@Valor
   939  0724                     l809:
   940                           
   941                           ;Oscilador.c: 14:     if(Valor == 8){
   942  0724  3008               	movlw	8
   943  0725  067B               	xorwf	initOsc@Valor,w
   944  0726  1D03               	btfss	3,2
   945  0727  2F29               	goto	u11
   946  0728  2F2A               	goto	u10
   947  0729                     u11:
   948  0729  2F2F               	goto	l813
   949  072A                     u10:
   950  072A                     l811:
   951                           
   952                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   953  072A  1683               	bsf	3,5	;RP0=1, select bank1
   954  072B  1303               	bcf	3,6	;RP1=0, select bank1
   955  072C  160F               	bsf	15,4	;volatile
   956                           
   957                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   958  072D  168F               	bsf	15,5	;volatile
   959                           
   960                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   961  072E  170F               	bsf	15,6	;volatile
   962  072F                     l813:
   963                           
   964                           ;Oscilador.c: 19:     if(Valor == 4){
   965  072F  3004               	movlw	4
   966  0730  067B               	xorwf	initOsc@Valor,w
   967  0731  1D03               	btfss	3,2
   968  0732  2F34               	goto	u21
   969  0733  2F35               	goto	u20
   970  0734                     u21:
   971  0734  2F3A               	goto	l817
   972  0735                     u20:
   973  0735                     l815:
   974                           
   975                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   976  0735  1683               	bsf	3,5	;RP0=1, select bank1
   977  0736  1303               	bcf	3,6	;RP1=0, select bank1
   978  0737  120F               	bcf	15,4	;volatile
   979                           
   980                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   981  0738  168F               	bsf	15,5	;volatile
   982                           
   983                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   984  0739  170F               	bsf	15,6	;volatile
   985  073A                     l817:
   986                           
   987                           ;Oscilador.c: 24:     if(Valor == 2){
   988  073A  3002               	movlw	2
   989  073B  067B               	xorwf	initOsc@Valor,w
   990  073C  1D03               	btfss	3,2
   991  073D  2F3F               	goto	u31
   992  073E  2F40               	goto	u30
   993  073F                     u31:
   994  073F  2F45               	goto	l821
   995  0740                     u30:
   996  0740                     l819:
   997                           
   998                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   999  0740  1683               	bsf	3,5	;RP0=1, select bank1
  1000  0741  1303               	bcf	3,6	;RP1=0, select bank1
  1001  0742  160F               	bsf	15,4	;volatile
  1002                           
  1003                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1004  0743  128F               	bcf	15,5	;volatile
  1005                           
  1006                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1007  0744  170F               	bsf	15,6	;volatile
  1008  0745                     l821:
  1009                           
  1010                           ;Oscilador.c: 29:     if(Valor == 1){
  1011  0745  037B               	decf	initOsc@Valor,w
  1012  0746  1D03               	btfss	3,2
  1013  0747  2F49               	goto	u41
  1014  0748  2F4A               	goto	u40
  1015  0749                     u41:
  1016  0749  2F4F               	goto	l184
  1017  074A                     u40:
  1018  074A                     l823:
  1019                           
  1020                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1021  074A  1683               	bsf	3,5	;RP0=1, select bank1
  1022  074B  1303               	bcf	3,6	;RP1=0, select bank1
  1023  074C  120F               	bcf	15,4	;volatile
  1024                           
  1025                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1026  074D  128F               	bcf	15,5	;volatile
  1027                           
  1028                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1029  074E  170F               	bsf	15,6	;volatile
  1030  074F                     l184:	
  1031                           ;Oscilador.c: 33:     }
  1032                           
  1033                           
  1034                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1035  074F  1683               	bsf	3,5	;RP0=1, select bank1
  1036  0750  1303               	bcf	3,6	;RP1=0, select bank1
  1037  0751  140F               	bsf	15,0	;volatile
  1038  0752                     l185:
  1039  0752  0008               	return
  1040  0753                     __end_of_initOsc:
  1041                           
  1042                           	psect	text3
  1043  0783                     __ptext3:	
  1044 ;; *************** function _InitMSSP *****************
  1045 ;; Defined at:
  1046 ;;		line 10 in file "SPI.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  Modo            1    wreg     enum E1264
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  Modo            1    2[COMMON] enum E1264
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         1       0       0       0       0
  1064 ;;Total ram usage:        1 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_setup
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _InitMSSP
  1076  0783                     _InitMSSP:
  1077                           
  1078                           ;incstack = 0
  1079                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1080                           ;InitMSSP@Modo stored from wreg
  1081  0783  00FB               	movwf	InitMSSP@Modo
  1082  0784                     l825:
  1083                           
  1084                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1085  0784  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0785  1303               	bcf	3,6	;RP1=0, select bank1
  1087  0786  0194               	clrf	20	;volatile
  1088                           
  1089                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1090  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0789  0194               	clrf	20	;volatile
  1093  078A                     l827:
  1094                           
  1095                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1096  078A  1294               	bcf	20,5	;volatile
  1097  078B                     l829:
  1098                           
  1099                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1100  078B  1694               	bsf	20,5	;volatile
  1101  078C                     l831:
  1102                           
  1103                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1104  078C  1683               	bsf	3,5	;RP0=1, select bank1
  1105  078D  1303               	bcf	3,6	;RP1=0, select bank1
  1106  078E  1287               	bcf	7,5	;volatile
  1107  078F                     l833:
  1108                           
  1109                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1110  078F  1607               	bsf	7,4	;volatile
  1111  0790                     l835:
  1112                           
  1113                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1114  0790  3006               	movlw	6
  1115  0791  027B               	subwf	InitMSSP@Modo,w
  1116  0792  1803               	skipnc
  1117  0793  2F95               	goto	u51
  1118  0794  2F96               	goto	u50
  1119  0795                     u51:
  1120  0795  2F9F               	goto	l841
  1121  0796                     u50:
  1122  0796                     l837:
  1123                           
  1124                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1125  0796  3004               	movlw	4
  1126  0797  027B               	subwf	InitMSSP@Modo,w
  1127  0798  1803               	skipnc
  1128  0799  2F9B               	goto	u61
  1129  079A  2F9C               	goto	u60
  1130  079B                     u61:
  1131  079B  2F9E               	goto	l111
  1132  079C                     u60:
  1133  079C                     l839:
  1134                           
  1135                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1136  079C  1187               	bcf	7,3	;volatile
  1137                           
  1138                           ;SPI.c: 29:         }
  1139  079D  2F9F               	goto	l841
  1140  079E                     l111:	
  1141                           ;SPI.c: 30:         else {
  1142                           
  1143                           
  1144                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1145  079E  1587               	bsf	7,3	;volatile
  1146  079F                     l841:
  1147                           
  1148                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1149  079F  3004               	movlw	4
  1150  07A0  067B               	xorwf	InitMSSP@Modo,w
  1151  07A1  1D03               	btfss	3,2
  1152  07A2  2FA4               	goto	u71
  1153  07A3  2FA5               	goto	u70
  1154  07A4                     u71:
  1155  07A4  2FA6               	goto	l845
  1156  07A5                     u70:
  1157  07A5                     l843:
  1158  07A5  1685               	bsf	5,5	;volatile
  1159  07A6                     l845:
  1160                           
  1161                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1162  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1163  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1164  07A8  0814               	movf	20,w	;volatile
  1165  07A9  047B               	iorwf	InitMSSP@Modo,w	;volatile
  1166  07AA  0094               	movwf	20	;volatile
  1167  07AB                     l847:
  1168                           
  1169                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  1170  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  1171  07AC  1303               	bcf	3,6	;RP1=0, select bank1
  1172  07AD  118C               	bcf	12,3	;volatile
  1173  07AE                     l849:
  1174                           
  1175                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1176  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1177  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1178  07B0  1214               	bcf	20,4	;volatile
  1179  07B1                     l851:
  1180                           
  1181                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1182  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  1183  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  1184  07B3  1314               	bcf	20,6	;volatile
  1185  07B4                     l853:
  1186                           
  1187                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1188  07B4  1394               	bcf	20,7	;volatile
  1189  07B5                     l114:
  1190  07B5  0008               	return
  1191  07B6                     __end_of_InitMSSP:
  1192                           
  1193                           	psect	text4
  1194  070C                     __ptext4:	
  1195 ;; *************** function _WriteMSSP *****************
  1196 ;; Defined at:
  1197 ;;		line 55 in file "SPI.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  Data            1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  Data            1    2[COMMON] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         1       0       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _WriteMSSP
  1227  070C                     _WriteMSSP:
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _WriteMSSP: [wreg]
  1231                           ;WriteMSSP@Data stored from wreg
  1232  070C  00FB               	movwf	WriteMSSP@Data
  1233  070D                     l879:
  1234                           
  1235                           ;SPI.c: 59:     SSPBUF = Data;
  1236  070D  087B               	movf	WriteMSSP@Data,w
  1237  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1238  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0710  0093               	movwf	19	;volatile
  1240  0711                     l117:
  1241  0711  0008               	return
  1242  0712                     __end_of_WriteMSSP:
  1243                           
  1244                           	psect	text5
  1245  0719                     __ptext5:	
  1246 ;; *************** function _ReadMSSP *****************
  1247 ;; Defined at:
  1248 ;;		line 63 in file "SPI.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      unsigned char 
  1255 ;; Registers used:
  1256 ;;		wreg
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0
  1265 ;;      Totals:         0       0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           
  1277                           ;psect for function _ReadMSSP
  1278  0719                     _ReadMSSP:
  1279  0719                     l881:	
  1280                           ;incstack = 0
  1281                           ; Regs used in _ReadMSSP: [wreg]
  1282                           
  1283  0719                     l120:	
  1284                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  1285                           
  1286  0719  1683               	bsf	3,5	;RP0=1, select bank1
  1287  071A  1303               	bcf	3,6	;RP1=0, select bank1
  1288  071B  1C14               	btfss	20,0	;volatile
  1289  071C  2F1E               	goto	u81
  1290  071D  2F1F               	goto	u80
  1291  071E                     u81:
  1292  071E  2F19               	goto	l120
  1293  071F                     u80:
  1294  071F                     l883:
  1295                           
  1296                           ;SPI.c: 65:     return(SSPBUF);
  1297  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1298  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1299  0721  0813               	movf	19,w	;volatile
  1300  0722                     l123:
  1301  0722  0008               	return
  1302  0723                     __end_of_ReadMSSP:
  1303                           
  1304                           	psect	text6
  1305  0712                     __ptext6:	
  1306 ;; *************** function _isr *****************
  1307 ;; Defined at:
  1308 ;;		line 68 in file "Maestro.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		None
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          2       0       0       0       0
  1325 ;;      Totals:         2       0       0       0       0
  1326 ;;Total ram usage:        2 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		Interrupt level 1
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _isr
  1337  0712                     _isr:
  1338  0712                     i1l63:
  1339  0712  087A               	movf	??_isr+1,w
  1340  0713  008A               	movwf	10
  1341  0714  0E79               	swapf	??_isr,w
  1342  0715  0083               	movwf	3
  1343  0716  0EFE               	swapf	btemp,f
  1344  0717  0E7E               	swapf	btemp,w
  1345  0718  0009               	retfie
  1346  0719                     __end_of_isr:
  1347  007E                     btemp	set	126	;btemp
  1348  007E                     wtemp0	set	126
  1349                           
  1350                           	psect	intentry
  1351  0004                     __pintentry:	
  1352                           ;incstack = 0
  1353                           ; Regs used in _isr: []
  1354                           
  1355  0004                     interrupt_function:
  1356  007E                     saved_w	set	btemp
  1357  0004  00FE               	movwf	btemp
  1358  0005  0E03               	swapf	3,w
  1359  0006  00F9               	movwf	??_isr
  1360  0007  080A               	movf	10,w
  1361  0008  00FA               	movwf	??_isr+1
  1362  0009  120A  118A  2F12   	ljmp	_isr
  1363                           
  1364                           	psect	config
  1365                           
  1366                           ;Config register CONFIG1 @ 0x2007
  1367                           ;	Oscillator Selection bits
  1368                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1369                           ;	Watchdog Timer Enable bit
  1370                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1371                           ;	Power-up Timer Enable bit
  1372                           ;	PWRTE = OFF, PWRT disabled
  1373                           ;	RE3/MCLR pin function select bit
  1374                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1375                           ;	Code Protection bit
  1376                           ;	CP = OFF, Program memory code protection is disabled
  1377                           ;	Data Code Protection bit
  1378                           ;	CPD = OFF, Data memory code protection is disabled
  1379                           ;	Brown Out Reset Selection bits
  1380                           ;	BOREN = OFF, BOR disabled
  1381                           ;	Internal External Switchover bit
  1382                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1383                           ;	Fail-Safe Clock Monitor Enabled bit
  1384                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1385                           ;	Low Voltage Programming Enable bit
  1386                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1387                           ;	In-Circuit Debugger Mode bit
  1388                           ;	DEBUG = 0x1, unprogrammed default
  1389  2007                     	org	8199
  1390  2007  20D4               	dw	8404
  1391                           
  1392                           ;Config register CONFIG2 @ 0x2008
  1393                           ;	Brown-out Reset Selection bit
  1394                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1395                           ;	Flash Program Memory Self Write Enable bits
  1396                           ;	WRT = OFF, Write protection off
  1397  2008                     	org	8200
  1398  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      5      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_WriteMSSP
    _setup->_InitMSSP
    _setup->_initOsc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     135
                                              3 COMMON     2     2      0
                           _ReadMSSP
                          _WriteMSSP
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     120
                           _InitMSSP
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   _setup
     _InitMSSP
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      5       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 15:26:05 2022

            _SSPSTATbits 0094                       l75 0782                       u10 072A  
                     u11 0729                       u20 0735                       u21 0734  
                     u30 0740                       u31 073F                       u40 074A  
                     u41 0749                       u50 0796                       u51 0795  
                     u60 079C                       u61 079B                       u70 07A5  
                     u71 07A4                       u80 071F                       u81 071E  
                    l111 079E                      l120 0719                      l114 07B5  
                    l123 0722                      l117 0711                      l184 074F  
                    l185 0752                      l811 072A                      l821 0745  
                    l813 072F                      l831 078C                      l823 074A  
                    l815 0735                      l911 07BC                      l841 079F  
                    l833 078F                      l825 0784                      l817 073A  
                    l809 0724                      l921 07DB                      l913 07BF  
                    l851 07B1                      l843 07A5                      l835 0790  
                    l827 078A                      l819 0740                      l923 07E6  
                    l915 07C6                      l907 07B6                      l853 07B4  
                    l845 07A6                      l837 0796                      l829 078B  
                    l861 0753                      l925 07ED                      l917 07CC  
                    l909 07BB                      l847 07AB                      l839 079C  
                    l871 0770                      l863 0764                      l919 07D5  
                    l881 0719                      l849 07AE                      l873 0773  
                    l865 0767                      l883 071F                      l875 0776  
                    l867 076A                      l877 077C                      l869 076D  
                    l879 070D                      u170 07DB                      u171 07DA  
                    u257 07C1                      u267 07D0                      u277 07E8  
                    _isr 0712                     ?_isr 0079                     i1l63 0712  
                   _main 07B6                     btemp 007E                     start 000C  
                  ??_isr 0079                    ?_main 0079                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _TRISE 0089  
           InitMSSP@Modo 007B          __end_of_initOsc 0753                    _setup 0753  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07F4             __end_of_main 07F4         __end_of_InitMSSP 07B6  
       __end_of_ReadMSSP 0723                   ??_main 007C                   ?_setup 0079  
                 _ANSELH 0189                   _MSSPin 0071                   _TRISC0 0438  
                 _TRISC1 0439                   _TRISC2 043A                   _SSPCON 0014  
                 _SSPBUF 0013                ??_initOsc 007B                   saved_w 007E  
__end_of__initialization 07FC       __size_of_WriteMSSP 0006           __pcstackCOMMON 0079  
          __end_of_setup 0783                  ??_setup 007C                ?_InitMSSP 0079  
              ?_ReadMSSP 0079               __pmaintext 07B6               __pintentry 0004  
                _ADC_dig 0077        __end_of_WriteMSSP 0712             initOsc@Valor 007B  
                _SSPSTAT 0094               ??_InitMSSP 007B               ??_ReadMSSP 007B  
                _dec_ADC 0074                  _cen_ADC 0073                  _dig_ADC 0076  
                __ptext1 0753                  __ptext2 0723                  __ptext3 0783  
                __ptext4 070C                  __ptext5 0719                  __ptext6 0712  
                _initOsc 0723             __size_of_isr 0007                  _val_ADC 0078  
                _uni_ADC 0075     end_of_initialization 07FC                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _TRISAbits 0085  
              _TRISCbits 0087            WriteMSSP@Data 007B      start_initialization 07F4  
            __end_of_isr 0719        __size_of_InitMSSP 0033        __size_of_ReadMSSP 000A  
            __pbssCOMMON 0071                ___latbits 0002                _WriteMSSP 070C  
               ?_initOsc 0079               ?_WriteMSSP 0079           __size_of_setup 0030  
      interrupt_function 0004                 _PIE1bits 008C                 _InitMSSP 0783  
               _ReadMSSP 0719         __size_of_initOsc 0030              ??_WriteMSSP 007B  
          __size_of_main 003E                 intlevel1 0000               _OSCCONbits 008F  
             _SSPCONbits 0014  
