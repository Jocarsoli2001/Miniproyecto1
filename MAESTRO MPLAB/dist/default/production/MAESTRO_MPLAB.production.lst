

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Feb 08 11:33:44 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  0105                     	;# 
   509  0107                     	;# 
   510  0108                     	;# 
   511  0109                     	;# 
   512  010C                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0187                     	;# 
   519  0188                     	;# 
   520  0189                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0006                     _PORTBbits	set	6
   524  0008                     _PORTDbits	set	8
   525  0013                     _SSPBUF	set	19
   526  0014                     _SSPCON	set	20
   527  0006                     _PORTB	set	6
   528  0009                     _PORTE	set	9
   529  0008                     _PORTD	set	8
   530  0005                     _PORTA	set	5
   531  0007                     _PORTCbits	set	7
   532  008F                     _OSCCONbits	set	143
   533  0094                     _SSPSTATbits	set	148
   534  0094                     _SSPSTAT	set	148
   535  0089                     _TRISE	set	137
   536  0088                     _TRISD	set	136
   537  0086                     _TRISB	set	134
   538  0085                     _TRISA	set	133
   539  043B                     _TRISC3	set	1083
   540  043D                     _TRISC5	set	1085
   541  043A                     _TRISC2	set	1082
   542  0189                     _ANSELH	set	393
   543  0188                     _ANSEL	set	392
   544                           
   545                           	psect	cinit
   546  000F                     start_initialization:	
   547                           ; #config settings
   548                           
   549  000F                     __initialization:
   550                           
   551                           ; Clear objects allocated to COMMON
   552  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   553  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   554  0011                     end_of_initialization:	
   555                           ;End of C runtime variable initialization code
   556                           
   557  0011                     __end_of__initialization:
   558  0011  0183               	clrf	3
   559  0012  120A  118A  28ED   	ljmp	_main	;jump to C main() function
   560                           
   561                           	psect	bssCOMMON
   562  007A                     __pbssCOMMON:
   563  007A                     _val_ADC:
   564  007A                     	ds	1
   565  007B                     _ADC_dig:
   566  007B                     	ds	1
   567                           
   568                           	psect	cstackCOMMON
   569  0070                     __pcstackCOMMON:
   570  0070                     ?_setup:
   571  0070                     ?_spiRead:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_initOsc:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_isr:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_isr:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_main:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_spiReceiveWait:	
   587                           ; 1 bytes @ 0x0
   588                           
   589                           
   590                           ; 1 bytes @ 0x0
   591  0070                     	ds	2
   592  0072                     ??_spiRead:
   593  0072                     ??_initOsc:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     ?_spiInit:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ??_spiReceiveWait:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ?___awdiv:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     spiInit@sDataSample:	
   606                           ; 2 bytes @ 0x2
   607                           
   608  0072                     initOsc@Valor:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ___awdiv@divisor:	
   612                           ; 1 bytes @ 0x2
   613                           
   614                           
   615                           ; 2 bytes @ 0x2
   616  0072                     	ds	1
   617  0073                     spiInit@sClockIdle:
   618                           
   619                           ; 1 bytes @ 0x3
   620  0073                     	ds	1
   621  0074                     spiInit@sTransmitEdge:
   622  0074                     ___awdiv@dividend:	
   623                           ; 1 bytes @ 0x4
   624                           
   625                           
   626                           ; 2 bytes @ 0x4
   627  0074                     	ds	1
   628  0075                     ??_spiInit:
   629  0075                     spiInit@sType:	
   630                           ; 1 bytes @ 0x5
   631                           
   632                           
   633                           ; 1 bytes @ 0x5
   634  0075                     	ds	1
   635  0076                     ??_setup:
   636  0076                     ??___awdiv:	
   637                           ; 1 bytes @ 0x6
   638                           
   639                           
   640                           ; 1 bytes @ 0x6
   641  0076                     	ds	1
   642  0077                     ?_divisor_hex:
   643  0077                     divisor_hex@dig:	
   644                           ; 1 bytes @ 0x7
   645                           
   646                           
   647                           ; 1 bytes @ 0x7
   648  0077                     	ds	1
   649  0078                     ??_divisor_hex:
   650                           
   651                           ; 1 bytes @ 0x8
   652  0078                     	ds	2
   653                           
   654                           	psect	cstackBANK0
   655  0020                     __pcstackBANK0:
   656  0020                     ___awdiv@counter:
   657                           
   658                           ; 1 bytes @ 0x0
   659  0020                     	ds	1
   660  0021                     ___awdiv@sign:
   661                           
   662                           ; 1 bytes @ 0x1
   663  0021                     	ds	1
   664  0022                     ___awdiv@quotient:
   665                           
   666                           ; 2 bytes @ 0x2
   667  0022                     	ds	2
   668  0024                     divisor_hex@a:
   669                           
   670                           ; 1 bytes @ 0x4
   671  0024                     	ds	1
   672  0025                     divisor_hex@i:
   673                           
   674                           ; 2 bytes @ 0x5
   675  0025                     	ds	2
   676  0027                     ??_main:
   677                           
   678                           ; 1 bytes @ 0x7
   679  0027                     	ds	1
   680                           
   681                           	psect	maintext
   682  00ED                     __pmaintext:	
   683 ;;
   684 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   685 ;;
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 66 in file "Maestro.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : B00/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       1       0       0       0
   705 ;;      Totals:         0       1       0       0       0
   706 ;;Total ram usage:        1 bytes
   707 ;; Hardware stack levels required when called: 3
   708 ;; This function calls:
   709 ;;		_divisor_hex
   710 ;;		_setup
   711 ;;		_spiRead
   712 ;; This function is called by:
   713 ;;		Startup code after reset
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _main
   719  00ED                     _main:
   720  00ED                     l1172:	
   721                           ;incstack = 0
   722                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   723                           
   724                           
   725                           ;Maestro.c: 67:     setup();
   726  00ED  120A  118A  2115  120A  118A  	fcall	_setup
   727  00F2                     l1174:
   728                           
   729                           ;Maestro.c: 73:         PORTCbits.RC2 = 0;
   730  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   731  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   732  00F4  1107               	bcf	7,2	;volatile
   733  00F5                     l1176:
   734                           
   735                           ;Maestro.c: 74:         _delay((unsigned long)((1)*(4000000/4000.0)));
   736  00F5  30C7               	movlw	199
   737  00F6  1283               	bcf	3,5	;RP0=0, select bank0
   738  00F7  1303               	bcf	3,6	;RP1=0, select bank0
   739  00F8  00A7               	movwf	??_main
   740  00F9                     u547:
   741  00F9  28FA               	nop2
   742  00FA  0BA7               	decfsz	??_main,f
   743  00FB  28F9               	goto	u547
   744  00FC  28FD               	nop2
   745  00FD                     l1178:
   746                           
   747                           ;Maestro.c: 76:         val_ADC = spiRead();
   748  00FD  120A  118A  2151  120A  118A  	fcall	_spiRead
   749  0102  1283               	bcf	3,5	;RP0=0, select bank0
   750  0103  1303               	bcf	3,6	;RP1=0, select bank0
   751  0104  00A7               	movwf	??_main
   752  0105  0827               	movf	??_main,w
   753  0106  00FA               	movwf	_val_ADC
   754  0107                     l1180:
   755                           
   756                           ;Maestro.c: 77:         divisor_hex(val_ADC, ADC_dig);
   757  0107  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
   758  0108  00A7               	movwf	??_main
   759  0109  0827               	movf	??_main,w
   760  010A  00F7               	movwf	divisor_hex@dig
   761  010B  087A               	movf	_val_ADC,w
   762  010C  120A  118A  207E  120A  118A  	fcall	_divisor_hex
   763  0111  28F2               	goto	l1174
   764  0112  120A  118A  280C   	ljmp	start
   765  0115                     __end_of_main:
   766                           
   767                           	psect	text1
   768  0151                     __ptext1:	
   769 ;; *************** function _spiRead *****************
   770 ;; Defined at:
   771 ;;		line 45 in file "SPI.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      unsigned char 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 2
   792 ;; This function calls:
   793 ;;		_spiReceiveWait
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _spiRead
   801  0151                     _spiRead:
   802  0151                     l858:	
   803                           ;incstack = 0
   804                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   805                           
   806                           
   807                           ;SPI.c: 47:     spiReceiveWait();
   808  0151  120A  118A  215A  120A  118A  	fcall	_spiReceiveWait
   809  0156                     l860:
   810                           
   811                           ;SPI.c: 48:     return(SSPBUF);
   812  0156  1283               	bcf	3,5	;RP0=0, select bank0
   813  0157  1303               	bcf	3,6	;RP1=0, select bank0
   814  0158  0813               	movf	19,w	;volatile
   815  0159                     l95:
   816  0159  0008               	return
   817  015A                     __end_of_spiRead:
   818                           
   819                           	psect	text2
   820  015A                     __ptext2:	
   821 ;; *************** function _spiReceiveWait *****************
   822 ;; Defined at:
   823 ;;		line 27 in file "SPI.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		None
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_spiRead
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _spiReceiveWait
   853  015A                     _spiReceiveWait:
   854  015A                     l796:	
   855                           ;incstack = 0
   856                           ; Regs used in _spiReceiveWait: []
   857                           
   858  015A                     l81:	
   859                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
   860                           
   861  015A  1683               	bsf	3,5	;RP0=1, select bank1
   862  015B  1303               	bcf	3,6	;RP1=0, select bank1
   863  015C  1C14               	btfss	20,0	;volatile
   864  015D  295F               	goto	u61
   865  015E  2960               	goto	u60
   866  015F                     u61:
   867  015F  295A               	goto	l81
   868  0160                     u60:
   869  0160                     l84:
   870  0160  0008               	return
   871  0161                     __end_of_spiReceiveWait:
   872                           
   873                           	psect	text3
   874  0115                     __ptext3:	
   875 ;; *************** function _setup *****************
   876 ;; Defined at:
   877 ;;		line 84 in file "Maestro.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0
   894 ;;      Totals:         0       0       0       0       0
   895 ;;Total ram usage:        0 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 2
   898 ;; This function calls:
   899 ;;		_initOsc
   900 ;;		_spiInit
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           
   907                           ;psect for function _setup
   908  0115                     _setup:
   909  0115                     l1080:	
   910                           ;incstack = 0
   911                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   912                           
   913                           
   914                           ;Maestro.c: 87:     ANSEL = 0;
   915  0115  1683               	bsf	3,5	;RP0=1, select bank3
   916  0116  1703               	bsf	3,6	;RP1=1, select bank3
   917  0117  0188               	clrf	8	;volatile
   918                           
   919                           ;Maestro.c: 88:     ANSELH = 0;
   920  0118  0189               	clrf	9	;volatile
   921                           
   922                           ;Maestro.c: 90:     TRISA = 0;
   923  0119  1683               	bsf	3,5	;RP0=1, select bank1
   924  011A  1303               	bcf	3,6	;RP1=0, select bank1
   925  011B  0185               	clrf	5	;volatile
   926                           
   927                           ;Maestro.c: 91:     TRISB = 0;
   928  011C  0186               	clrf	6	;volatile
   929                           
   930                           ;Maestro.c: 92:     TRISD = 0;
   931  011D  0188               	clrf	8	;volatile
   932                           
   933                           ;Maestro.c: 93:     TRISE = 0;
   934  011E  0189               	clrf	9	;volatile
   935                           
   936                           ;Maestro.c: 95:     PORTA = 0;
   937  011F  1283               	bcf	3,5	;RP0=0, select bank0
   938  0120  1303               	bcf	3,6	;RP1=0, select bank0
   939  0121  0185               	clrf	5	;volatile
   940                           
   941                           ;Maestro.c: 96:     PORTD = 0;
   942  0122  0188               	clrf	8	;volatile
   943                           
   944                           ;Maestro.c: 97:     PORTE = 0;
   945  0123  0189               	clrf	9	;volatile
   946                           
   947                           ;Maestro.c: 98:     PORTB = 0;
   948  0124  0186               	clrf	6	;volatile
   949  0125                     l1082:
   950                           
   951                           ;Maestro.c: 101:     TRISC2 = 0;
   952  0125  1683               	bsf	3,5	;RP0=1, select bank1
   953  0126  1303               	bcf	3,6	;RP1=0, select bank1
   954  0127  1107               	bcf	7,2	;volatile
   955  0128                     l1084:
   956                           
   957                           ;Maestro.c: 102:     PORTCbits.RC2 = 1;
   958  0128  1283               	bcf	3,5	;RP0=0, select bank0
   959  0129  1303               	bcf	3,6	;RP1=0, select bank0
   960  012A  1507               	bsf	7,2	;volatile
   961  012B                     l1086:
   962                           
   963                           ;Maestro.c: 105:     initOsc(4);
   964  012B  3004               	movlw	4
   965  012C  120A  118A  20BD  120A  118A  	fcall	_initOsc
   966  0131                     l1088:
   967                           
   968                           ;Maestro.c: 108:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
   969  0131  01F2               	clrf	spiInit@sDataSample
   970  0132  01F3               	clrf	spiInit@sClockIdle
   971  0133  01F4               	clrf	spiInit@sTransmitEdge
   972  0134  3020               	movlw	32
   973  0135  120A  118A  213B  120A  118A  	fcall	_spiInit
   974  013A                     l56:
   975  013A  0008               	return
   976  013B                     __end_of_setup:
   977                           
   978                           	psect	text4
   979  013B                     __ptext4:	
   980 ;; *************** function _spiInit *****************
   981 ;; Defined at:
   982 ;;		line 10 in file "SPI.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  sType           1    wreg     enum E1264
   985 ;;  sDataSample     1    2[COMMON] enum E1272
   986 ;;  sClockIdle      1    3[COMMON] enum E1276
   987 ;;  sTransmitEdg    1    4[COMMON] enum E1280
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  sType           1    5[COMMON] enum E1264
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, status,2, status,0
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   999 ;;      Params:         3       0       0       0       0
  1000 ;;      Locals:         1       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0
  1002 ;;      Totals:         4       0       0       0       0
  1003 ;;Total ram usage:        4 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_setup
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _spiInit
  1015  013B                     _spiInit:
  1016                           
  1017                           ;incstack = 0
  1018                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1019                           ;spiInit@sType stored from wreg
  1020  013B  00F5               	movwf	spiInit@sType
  1021  013C                     l1026:
  1022                           
  1023                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_polarity
      +                           sClockIdle, Spi_Clock_edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1024  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1025  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1026  013E  1287               	bcf	7,5	;volatile
  1027                           
  1028                           ;SPI.c: 13:     if(sType & 0b00000100)
  1029  013F  1D75               	btfss	spiInit@sType,2
  1030  0140  2942               	goto	u311
  1031  0141  2943               	goto	u310
  1032  0142                     u311:
  1033  0142  2947               	goto	l1032
  1034  0143                     u310:
  1035  0143                     l1028:
  1036                           
  1037                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1038  0143  0874               	movf	spiInit@sTransmitEdge,w
  1039  0144  0094               	movwf	20	;volatile
  1040  0145                     l1030:
  1041                           
  1042                           ;SPI.c: 16:         TRISC3 = 1;
  1043  0145  1587               	bsf	7,3	;volatile
  1044                           
  1045                           ;SPI.c: 17:     }
  1046  0146  294B               	goto	l77
  1047  0147                     l1032:
  1048                           
  1049                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1050  0147  0872               	movf	spiInit@sDataSample,w
  1051  0148  0474               	iorwf	spiInit@sTransmitEdge,w
  1052  0149  0094               	movwf	20	;volatile
  1053  014A                     l1034:
  1054                           
  1055                           ;SPI.c: 21:         TRISC3 = 0;
  1056  014A  1187               	bcf	7,3	;volatile
  1057  014B                     l77:	
  1058                           ;SPI.c: 22:     }
  1059                           
  1060                           
  1061                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1062  014B  0875               	movf	spiInit@sType,w
  1063  014C  0473               	iorwf	spiInit@sClockIdle,w
  1064  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1065  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1066  014F  0094               	movwf	20	;volatile
  1067  0150                     l78:
  1068  0150  0008               	return
  1069  0151                     __end_of_spiInit:
  1070                           
  1071                           	psect	text5
  1072  00BD                     __ptext5:	
  1073 ;; *************** function _initOsc *****************
  1074 ;; Defined at:
  1075 ;;		line 12 in file "Oscilador.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  Valor           1    wreg     unsigned char 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  Valor           1    2[COMMON] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         1       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0
  1092 ;;      Totals:         1       0       0       0       0
  1093 ;;Total ram usage:        1 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_setup
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _initOsc
  1105  00BD                     _initOsc:
  1106                           
  1107                           ;incstack = 0
  1108                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1109                           ;initOsc@Valor stored from wreg
  1110  00BD  00F2               	movwf	initOsc@Valor
  1111  00BE                     l770:
  1112                           
  1113                           ;Oscilador.c: 14:     if(Valor == 8){
  1114  00BE  3008               	movlw	8
  1115  00BF  0672               	xorwf	initOsc@Valor,w
  1116  00C0  1D03               	btfss	3,2
  1117  00C1  28C3               	goto	u11
  1118  00C2  28C4               	goto	u10
  1119  00C3                     u11:
  1120  00C3  28C9               	goto	l774
  1121  00C4                     u10:
  1122  00C4                     l772:
  1123                           
  1124                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1125  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1126  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1127  00C6  160F               	bsf	15,4	;volatile
  1128                           
  1129                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1130  00C7  168F               	bsf	15,5	;volatile
  1131                           
  1132                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1133  00C8  170F               	bsf	15,6	;volatile
  1134  00C9                     l774:
  1135                           
  1136                           ;Oscilador.c: 19:     if(Valor == 4){
  1137  00C9  3004               	movlw	4
  1138  00CA  0672               	xorwf	initOsc@Valor,w
  1139  00CB  1D03               	btfss	3,2
  1140  00CC  28CE               	goto	u21
  1141  00CD  28CF               	goto	u20
  1142  00CE                     u21:
  1143  00CE  28D4               	goto	l778
  1144  00CF                     u20:
  1145  00CF                     l776:
  1146                           
  1147                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1148  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1149  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1150  00D1  120F               	bcf	15,4	;volatile
  1151                           
  1152                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1153  00D2  168F               	bsf	15,5	;volatile
  1154                           
  1155                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1156  00D3  170F               	bsf	15,6	;volatile
  1157  00D4                     l778:
  1158                           
  1159                           ;Oscilador.c: 24:     if(Valor == 2){
  1160  00D4  3002               	movlw	2
  1161  00D5  0672               	xorwf	initOsc@Valor,w
  1162  00D6  1D03               	btfss	3,2
  1163  00D7  28D9               	goto	u31
  1164  00D8  28DA               	goto	u30
  1165  00D9                     u31:
  1166  00D9  28DF               	goto	l782
  1167  00DA                     u30:
  1168  00DA                     l780:
  1169                           
  1170                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1171  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1172  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1173  00DC  160F               	bsf	15,4	;volatile
  1174                           
  1175                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1176  00DD  128F               	bcf	15,5	;volatile
  1177                           
  1178                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1179  00DE  170F               	bsf	15,6	;volatile
  1180  00DF                     l782:
  1181                           
  1182                           ;Oscilador.c: 29:     if(Valor == 1){
  1183  00DF  0372               	decf	initOsc@Valor,w
  1184  00E0  1D03               	btfss	3,2
  1185  00E1  28E3               	goto	u41
  1186  00E2  28E4               	goto	u40
  1187  00E3                     u41:
  1188  00E3  28E9               	goto	l155
  1189  00E4                     u40:
  1190  00E4                     l784:
  1191                           
  1192                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1193  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1194  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1195  00E6  120F               	bcf	15,4	;volatile
  1196                           
  1197                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1198  00E7  128F               	bcf	15,5	;volatile
  1199                           
  1200                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1201  00E8  170F               	bsf	15,6	;volatile
  1202  00E9                     l155:	
  1203                           ;Oscilador.c: 33:     }
  1204                           
  1205                           
  1206                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1207  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  1208  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  1209  00EB  140F               	bsf	15,0	;volatile
  1210  00EC                     l156:
  1211  00EC  0008               	return
  1212  00ED                     __end_of_initOsc:
  1213                           
  1214                           	psect	text6
  1215  007E                     __ptext6:	
  1216 ;; *************** function _divisor_hex *****************
  1217 ;; Defined at:
  1218 ;;		line 112 in file "Maestro.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  a               1    wreg     unsigned char 
  1221 ;;  dig             1    7[COMMON] PTR unsigned char 
  1222 ;;		 -> ADC_dig(1), 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  a               1    4[BANK0 ] unsigned char 
  1225 ;;  i               2    5[BANK0 ] int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1235 ;;      Params:         1       0       0       0       0
  1236 ;;      Locals:         0       3       0       0       0
  1237 ;;      Temps:          2       0       0       0       0
  1238 ;;      Totals:         3       3       0       0       0
  1239 ;;Total ram usage:        6 bytes
  1240 ;; Hardware stack levels used: 1
  1241 ;; Hardware stack levels required when called: 2
  1242 ;; This function calls:
  1243 ;;		___awdiv
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           
  1250                           ;psect for function _divisor_hex
  1251  007E                     _divisor_hex:
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _divisor_hex: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1255                           ;divisor_hex@a stored from wreg
  1256  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1257  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0080  00A4               	movwf	divisor_hex@a
  1259  0081                     l1158:
  1260                           
  1261                           ;Maestro.c: 113:     for(int i = 0; i<3 ; i++){
  1262  0081  01A5               	clrf	divisor_hex@i
  1263  0082  01A6               	clrf	divisor_hex@i+1
  1264  0083                     l1164:
  1265                           
  1266                           ;Maestro.c: 114:         dig[i] = a % 16;
  1267  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0085  0824               	movf	divisor_hex@a,w
  1270  0086  390F               	andlw	15
  1271  0087  00F8               	movwf	??_divisor_hex
  1272  0088  0825               	movf	divisor_hex@i,w
  1273  0089  0777               	addwf	divisor_hex@dig,w
  1274  008A  00F9               	movwf	??_divisor_hex+1
  1275  008B  0879               	movf	??_divisor_hex+1,w
  1276  008C  0084               	movwf	4
  1277  008D  0878               	movf	??_divisor_hex,w
  1278  008E  0080               	movwf	0
  1279  008F                     l1166:
  1280                           
  1281                           ;Maestro.c: 115:         a = (a - dig[i])/16;
  1282  008F  3010               	movlw	16
  1283  0090  00F2               	movwf	___awdiv@divisor
  1284  0091  3000               	movlw	0
  1285  0092  00F3               	movwf	___awdiv@divisor+1
  1286  0093  0825               	movf	divisor_hex@i,w
  1287  0094  0777               	addwf	divisor_hex@dig,w
  1288  0095  00F8               	movwf	??_divisor_hex
  1289  0096  0878               	movf	??_divisor_hex,w
  1290  0097  0084               	movwf	4
  1291  0098  0800               	movf	0,w
  1292  0099  0224               	subwf	divisor_hex@a,w
  1293  009A  00F4               	movwf	___awdiv@dividend
  1294  009B  01F5               	clrf	___awdiv@dividend+1
  1295  009C  1C03               	skipc
  1296  009D  03F5               	decf	___awdiv@dividend+1,f
  1297  009E  120A  118A  2015  120A  118A  	fcall	___awdiv
  1298  00A3  0872               	movf	?___awdiv,w
  1299  00A4  00F9               	movwf	??_divisor_hex+1
  1300  00A5  0879               	movf	??_divisor_hex+1,w
  1301  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1302  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1303  00A8  00A4               	movwf	divisor_hex@a
  1304  00A9                     l1168:
  1305                           
  1306                           ;Maestro.c: 116:     }
  1307  00A9  3001               	movlw	1
  1308  00AA  07A5               	addwf	divisor_hex@i,f
  1309  00AB  1803               	skipnc
  1310  00AC  0AA6               	incf	divisor_hex@i+1,f
  1311  00AD  3000               	movlw	0
  1312  00AE  07A6               	addwf	divisor_hex@i+1,f
  1313  00AF                     l1170:
  1314  00AF  0826               	movf	divisor_hex@i+1,w
  1315  00B0  3A80               	xorlw	128
  1316  00B1  00FF               	movwf	btemp+1
  1317  00B2  3080               	movlw	128
  1318  00B3  027F               	subwf	btemp+1,w
  1319  00B4  1D03               	skipz
  1320  00B5  28B8               	goto	u535
  1321  00B6  3003               	movlw	3
  1322  00B7  0225               	subwf	divisor_hex@i,w
  1323  00B8                     u535:
  1324  00B8  1C03               	skipc
  1325  00B9  28BB               	goto	u531
  1326  00BA  28BC               	goto	u530
  1327  00BB                     u531:
  1328  00BB  2883               	goto	l1164
  1329  00BC                     u530:
  1330  00BC                     l61:
  1331  00BC  0008               	return
  1332  00BD                     __end_of_divisor_hex:
  1333                           
  1334                           	psect	text7
  1335  0015                     __ptext7:	
  1336 ;; *************** function ___awdiv *****************
  1337 ;; Defined at:
  1338 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  divisor         2    2[COMMON] int 
  1341 ;;  dividend        2    4[COMMON] int 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  quotient        2    2[BANK0 ] int 
  1344 ;;  sign            1    1[BANK0 ] unsigned char 
  1345 ;;  counter         1    0[BANK0 ] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  2    2[COMMON] int 
  1348 ;; Registers used:
  1349 ;;		wreg, status,2, status,0
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         4       0       0       0       0
  1356 ;;      Locals:         0       4       0       0       0
  1357 ;;      Temps:          1       0       0       0       0
  1358 ;;      Totals:         5       4       0       0       0
  1359 ;;Total ram usage:        9 bytes
  1360 ;; Hardware stack levels used: 1
  1361 ;; Hardware stack levels required when called: 1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_divisor_hex
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function ___awdiv
  1371  0015                     ___awdiv:
  1372  0015                     l1114:	
  1373                           ;incstack = 0
  1374                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1375                           
  1376  0015  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0016  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0017  01A1               	clrf	___awdiv@sign
  1379  0018                     l1116:
  1380  0018  1FF3               	btfss	___awdiv@divisor+1,7
  1381  0019  281B               	goto	u431
  1382  001A  281C               	goto	u430
  1383  001B                     u431:
  1384  001B  2823               	goto	l1122
  1385  001C                     u430:
  1386  001C                     l1118:
  1387  001C  09F2               	comf	___awdiv@divisor,f
  1388  001D  09F3               	comf	___awdiv@divisor+1,f
  1389  001E  0AF2               	incf	___awdiv@divisor,f
  1390  001F  1903               	skipnz
  1391  0020  0AF3               	incf	___awdiv@divisor+1,f
  1392  0021                     l1120:
  1393  0021  01A1               	clrf	___awdiv@sign
  1394  0022  0AA1               	incf	___awdiv@sign,f
  1395  0023                     l1122:
  1396  0023  1FF5               	btfss	___awdiv@dividend+1,7
  1397  0024  2826               	goto	u441
  1398  0025  2827               	goto	u440
  1399  0026                     u441:
  1400  0026  2830               	goto	l1128
  1401  0027                     u440:
  1402  0027                     l1124:
  1403  0027  09F4               	comf	___awdiv@dividend,f
  1404  0028  09F5               	comf	___awdiv@dividend+1,f
  1405  0029  0AF4               	incf	___awdiv@dividend,f
  1406  002A  1903               	skipnz
  1407  002B  0AF5               	incf	___awdiv@dividend+1,f
  1408  002C                     l1126:
  1409  002C  3001               	movlw	1
  1410  002D  00F6               	movwf	??___awdiv
  1411  002E  0876               	movf	??___awdiv,w
  1412  002F  06A1               	xorwf	___awdiv@sign,f
  1413  0030                     l1128:
  1414  0030  01A2               	clrf	___awdiv@quotient
  1415  0031  01A3               	clrf	___awdiv@quotient+1
  1416  0032                     l1130:
  1417  0032  0872               	movf	___awdiv@divisor,w
  1418  0033  0473               	iorwf	___awdiv@divisor+1,w
  1419  0034  1903               	btfsc	3,2
  1420  0035  2837               	goto	u451
  1421  0036  2838               	goto	u450
  1422  0037                     u451:
  1423  0037  286F               	goto	l1150
  1424  0038                     u450:
  1425  0038                     l1132:
  1426  0038  01A0               	clrf	___awdiv@counter
  1427  0039  0AA0               	incf	___awdiv@counter,f
  1428  003A  2846               	goto	l1138
  1429  003B                     l1134:
  1430  003B  3001               	movlw	1
  1431  003C                     u465:
  1432  003C  1003               	clrc
  1433  003D  0DF2               	rlf	___awdiv@divisor,f
  1434  003E  0DF3               	rlf	___awdiv@divisor+1,f
  1435  003F  3EFF               	addlw	-1
  1436  0040  1D03               	skipz
  1437  0041  283C               	goto	u465
  1438  0042                     l1136:
  1439  0042  3001               	movlw	1
  1440  0043  00F6               	movwf	??___awdiv
  1441  0044  0876               	movf	??___awdiv,w
  1442  0045  07A0               	addwf	___awdiv@counter,f
  1443  0046                     l1138:
  1444  0046  1FF3               	btfss	___awdiv@divisor+1,7
  1445  0047  2849               	goto	u471
  1446  0048  284A               	goto	u470
  1447  0049                     u471:
  1448  0049  283B               	goto	l1134
  1449  004A                     u470:
  1450  004A                     l1140:
  1451  004A  3001               	movlw	1
  1452  004B                     u485:
  1453  004B  1003               	clrc
  1454  004C  0DA2               	rlf	___awdiv@quotient,f
  1455  004D  0DA3               	rlf	___awdiv@quotient+1,f
  1456  004E  3EFF               	addlw	-1
  1457  004F  1D03               	skipz
  1458  0050  284B               	goto	u485
  1459  0051  0873               	movf	___awdiv@divisor+1,w
  1460  0052  0275               	subwf	___awdiv@dividend+1,w
  1461  0053  1D03               	skipz
  1462  0054  2857               	goto	u495
  1463  0055  0872               	movf	___awdiv@divisor,w
  1464  0056  0274               	subwf	___awdiv@dividend,w
  1465  0057                     u495:
  1466  0057  1C03               	skipc
  1467  0058  285A               	goto	u491
  1468  0059  285B               	goto	u490
  1469  005A                     u491:
  1470  005A  2862               	goto	l1146
  1471  005B                     u490:
  1472  005B                     l1142:
  1473  005B  0872               	movf	___awdiv@divisor,w
  1474  005C  02F4               	subwf	___awdiv@dividend,f
  1475  005D  0873               	movf	___awdiv@divisor+1,w
  1476  005E  1C03               	skipc
  1477  005F  03F5               	decf	___awdiv@dividend+1,f
  1478  0060  02F5               	subwf	___awdiv@dividend+1,f
  1479  0061                     l1144:
  1480  0061  1422               	bsf	___awdiv@quotient,0
  1481  0062                     l1146:
  1482  0062  3001               	movlw	1
  1483  0063                     u505:
  1484  0063  1003               	clrc
  1485  0064  0CF3               	rrf	___awdiv@divisor+1,f
  1486  0065  0CF2               	rrf	___awdiv@divisor,f
  1487  0066  3EFF               	addlw	-1
  1488  0067  1D03               	skipz
  1489  0068  2863               	goto	u505
  1490  0069                     l1148:
  1491  0069  3001               	movlw	1
  1492  006A  02A0               	subwf	___awdiv@counter,f
  1493  006B  1D03               	btfss	3,2
  1494  006C  286E               	goto	u511
  1495  006D  286F               	goto	u510
  1496  006E                     u511:
  1497  006E  284A               	goto	l1140
  1498  006F                     u510:
  1499  006F                     l1150:
  1500  006F  0821               	movf	___awdiv@sign,w
  1501  0070  1903               	btfsc	3,2
  1502  0071  2873               	goto	u521
  1503  0072  2874               	goto	u520
  1504  0073                     u521:
  1505  0073  2879               	goto	l1154
  1506  0074                     u520:
  1507  0074                     l1152:
  1508  0074  09A2               	comf	___awdiv@quotient,f
  1509  0075  09A3               	comf	___awdiv@quotient+1,f
  1510  0076  0AA2               	incf	___awdiv@quotient,f
  1511  0077  1903               	skipnz
  1512  0078  0AA3               	incf	___awdiv@quotient+1,f
  1513  0079                     l1154:
  1514  0079  0823               	movf	___awdiv@quotient+1,w
  1515  007A  00F3               	movwf	?___awdiv+1
  1516  007B  0822               	movf	___awdiv@quotient,w
  1517  007C  00F2               	movwf	?___awdiv
  1518  007D                     l417:
  1519  007D  0008               	return
  1520  007E                     __end_of___awdiv:
  1521                           
  1522                           	psect	text8
  1523  0161                     __ptext8:	
  1524 ;; *************** function _isr *****************
  1525 ;; Defined at:
  1526 ;;		line 60 in file "Maestro.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		None
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0
  1542 ;;      Temps:          2       0       0       0       0
  1543 ;;      Totals:         2       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		Interrupt level 1
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           
  1554                           ;psect for function _isr
  1555  0161                     _isr:
  1556  0161                     i1l45:
  1557  0161  0871               	movf	??_isr+1,w
  1558  0162  008A               	movwf	10
  1559  0163  0E70               	swapf	??_isr,w
  1560  0164  0083               	movwf	3
  1561  0165  0EFE               	swapf	btemp,f
  1562  0166  0E7E               	swapf	btemp,w
  1563  0167  0009               	retfie
  1564  0168                     __end_of_isr:
  1565  007E                     btemp	set	126	;btemp
  1566  007E                     wtemp0	set	126
  1567                           
  1568                           	psect	intentry
  1569  0004                     __pintentry:	
  1570                           ;incstack = 0
  1571                           ; Regs used in _isr: []
  1572                           
  1573  0004                     interrupt_function:
  1574  007E                     saved_w	set	btemp
  1575  0004  00FE               	movwf	btemp
  1576  0005  0E03               	swapf	3,w
  1577  0006  00F0               	movwf	??_isr
  1578  0007  080A               	movf	10,w
  1579  0008  00F1               	movwf	??_isr+1
  1580  0009  120A  118A  2961   	ljmp	_isr
  1581                           
  1582                           	psect	config
  1583                           
  1584                           ;Config register CONFIG1 @ 0x2007
  1585                           ;	Oscillator Selection bits
  1586                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1587                           ;	Watchdog Timer Enable bit
  1588                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1589                           ;	Power-up Timer Enable bit
  1590                           ;	PWRTE = OFF, PWRT disabled
  1591                           ;	RE3/MCLR pin function select bit
  1592                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1593                           ;	Code Protection bit
  1594                           ;	CP = OFF, Program memory code protection is disabled
  1595                           ;	Data Code Protection bit
  1596                           ;	CPD = OFF, Data memory code protection is disabled
  1597                           ;	Brown Out Reset Selection bits
  1598                           ;	BOREN = OFF, BOR disabled
  1599                           ;	Internal External Switchover bit
  1600                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1601                           ;	Fail-Safe Clock Monitor Enabled bit
  1602                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1603                           ;	Low Voltage Programming Enable bit
  1604                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1605                           ;	In-Circuit Debugger Mode bit
  1606                           ;	DEBUG = 0x1, unprogrammed default
  1607  2007                     	org	8199
  1608  2007  20D4               	dw	8404
  1609                           
  1610                           ;Config register CONFIG2 @ 0x2008
  1611                           ;	Brown-out Reset Selection bit
  1612                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1613                           ;	Flash Program Memory Self Write Enable bits
  1614                           ;	WRT = OFF, Write protection off
  1615  2008                     	org	8200
  1616  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      8       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_hex@dig	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_divisor_hex
    _setup->_spiInit
    _divisor_hex->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_hex
    _divisor_hex->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1392
                                              7 BANK0      1     1      0
                        _divisor_hex
                              _setup
                            _spiRead
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     420
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _divisor_hex                                          6     5      1     972
                                              7 COMMON     3     2      1
                                              4 BANK0      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _divisor_hex
     ___awdiv
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Feb 08 11:33:44 2022

            _SSPSTATbits 0094                       l61 00BC                       l56 013A  
                     l81 015A                       l84 0160                       l77 014B  
                     l78 0150                       l95 0159                       u10 00C4  
                     u11 00C3                       u20 00CF                       u21 00CE  
                     u30 00DA                       u31 00D9                       u40 00E4  
                     u41 00E3                       u60 0160                       u61 015F  
           ___awdiv@sign 0021                      l155 00E9                      l156 00EC  
                    l417 007D             ?_divisor_hex 0077                      l770 00BE  
                    l780 00DA                      l772 00C4                      l860 0156  
                    l782 00DF                      l774 00C9                      l784 00E4  
                    l776 00CF                      l778 00D4                      l858 0151  
                    l796 015A                      u310 0143                      u311 0142  
                    u510 006F                      u430 001C                      u511 006E  
                    u431 001B                      u520 0074                      u440 0027  
                    u521 0073                      u505 0063                      u441 0026  
                    u450 0038                      u530 00BC                      u451 0037  
                    u531 00BB                      u470 004A                      u471 0049  
                    u535 00B8                      u465 003C                      u490 005B  
                    u491 005A                      u547 00F9                      u485 004B  
                    u495 0057                      _isr 0161                      fsr0 0004  
                    indf 0000                     l1030 0145                     l1120 0021  
                   l1032 0147                     l1130 0032                     l1122 0023  
                   l1114 0015                     l1034 014A                     l1026 013C  
                   l1140 004A                     l1132 0038                     l1124 0027  
                   l1116 0018                     l1028 0143                     l1142 005B  
                   l1134 003B                     l1150 006F                     l1126 002C  
                   l1118 001C                     l1152 0074                     l1144 0061  
                   l1136 0042                     l1128 0030                     l1080 0115  
                   l1154 0079                     l1146 0062                     l1138 0046  
                   l1170 00AF                     l1082 0125                     l1148 0069  
                   l1164 0083                     l1084 0128                     l1180 0107  
                   l1172 00ED                     l1166 008F                     l1158 0081  
                   l1086 012B                     l1174 00F2                     l1168 00A9  
                   l1088 0131                     l1176 00F5                     l1178 00FD  
                   ?_isr 0070                     i1l45 0161                     _main 00ED  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 007E                    _ANSEL 0188  
        ___awdiv@divisor 0072          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089          __end_of_initOsc 00ED                    _setup 0115  
                  pclath 000A          __end_of_spiInit 0151          __end_of_spiRead 015A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0115                   ??_main 0027             divisor_hex@a 0024  
           divisor_hex@i 0025         ___awdiv@dividend 0074                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
              ??___awdiv 0076         ___awdiv@quotient 0022                ??_initOsc 0072  
                 saved_w 007E     __size_of_divisor_hex 003F                ??_spiInit 0075  
              ??_spiRead 0072  __end_of__initialization 0011           __pcstackCOMMON 0070  
          __end_of_setup 013B                  ??_setup 0076               __pmaintext 00ED  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _ADC_dig 007B  
           initOsc@Valor 0072                  _SSPSTAT 0094                  ___awdiv 0015  
                __ptext1 0151                  __ptext2 015A                  __ptext3 0115  
                __ptext4 013B                  __ptext5 00BD                  __ptext6 007E  
                __ptext7 0015                  __ptext8 0161                  _initOsc 00BD  
           __size_of_isr 0007                  _val_ADC 007A                  _spiInit 013B  
                _spiRead 0151     end_of_initialization 0011                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008           _spiReceiveWait 015A  
          ??_divisor_hex 0078      start_initialization 000F              __end_of_isr 0168  
 __end_of_spiReceiveWait 0161              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020           divisor_hex@dig 0077      __end_of_divisor_hex 00BD  
        ?_spiReceiveWait 0070                 ?___awdiv 0072                 ?_initOsc 0070  
               ?_spiInit 0072                 ?_spiRead 0070           __size_of_setup 0026  
   spiInit@sTransmitEdge 0074        interrupt_function 0004       spiInit@sDataSample 0072  
            _divisor_hex 007E         __size_of___awdiv 0069         __size_of_initOsc 0030  
       __size_of_spiInit 0016         __size_of_spiRead 0009            __size_of_main 0028  
           spiInit@sType 0075        spiInit@sClockIdle 0073                 intlevel1 0000  
       ??_spiReceiveWait 0072               _OSCCONbits 008F  
