

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Feb 14 18:01:46 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  008F                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  0105                     	;# 
   517  0107                     	;# 
   518  0108                     	;# 
   519  0109                     	;# 
   520  010C                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0187                     	;# 
   527  0188                     	;# 
   528  0189                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  0006                     _PORTBbits	set	6
   532  0008                     _PORTDbits	set	8
   533  0013                     _SSPBUF	set	19
   534  0014                     _SSPCON	set	20
   535  0006                     _PORTB	set	6
   536  0009                     _PORTE	set	9
   537  0008                     _PORTD	set	8
   538  0005                     _PORTA	set	5
   539  0007                     _PORTCbits	set	7
   540  008F                     _OSCCONbits	set	143
   541  0094                     _SSPSTATbits	set	148
   542  0094                     _SSPSTAT	set	148
   543  0089                     _TRISE	set	137
   544  0088                     _TRISD	set	136
   545  0086                     _TRISB	set	134
   546  0085                     _TRISA	set	133
   547  043B                     _TRISC3	set	1083
   548  043D                     _TRISC5	set	1085
   549  043A                     _TRISC2	set	1082
   550  0189                     _ANSELH	set	393
   551  0188                     _ANSEL	set	392
   552                           
   553                           	psect	strings
   554  02E0                     __pstrings:
   555  02E0                     stringtab:
   556  02E0                     __stringtab:
   557  02E0                     stringcode:	
   558                           ;	String table - string pointers are 1 byte each
   559                           
   560  02E0                     stringdir:
   561  02E0  3002               	movlw	high stringdir
   562  02E1  008A               	movwf	10
   563  02E2  0804               	movf	4,w
   564  02E3  0A84               	incf	4,f
   565  02E4  0782               	addwf	2,f
   566  02E5                     __stringbase:
   567  02E5  3400               	retlw	0
   568  02E6                     __end_of__stringtab:
   569  02E6                     STR_1:
   570  02E6  3441               	retlw	65	;'A'
   571  02E7  3444               	retlw	68	;'D'
   572  02E8  3443               	retlw	67	;'C'
   573  02E9  343A               	retlw	58	;':'
   574  02EA  3400               	retlw	0
   575                           
   576                           	psect	cinit
   577  000F                     start_initialization:	
   578                           ; #config settings
   579                           
   580  000F                     __initialization:
   581                           
   582                           ; Clear objects allocated to COMMON
   583  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   584  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   585                           
   586                           ; Clear objects allocated to BANK0
   587  0011  1283               	bcf	3,5	;RP0=0, select bank0
   588  0012  1303               	bcf	3,6	;RP1=0, select bank0
   589  0013  01AA               	clrf	__pbssBANK0& (0+127)
   590  0014  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   591  0015  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   592  0016                     end_of_initialization:	
   593                           ;End of C runtime variable initialization code
   594                           
   595  0016                     __end_of__initialization:
   596  0016  0183               	clrf	3
   597  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   598                           
   599                           	psect	bssCOMMON
   600  007A                     __pbssCOMMON:
   601  007A                     _val_ADC:
   602  007A                     	ds	1
   603  007B                     _ADC_dig:
   604  007B                     	ds	1
   605                           
   606                           	psect	bssBANK0
   607  002A                     __pbssBANK0:
   608  002A                     _cen_ADC:
   609  002A                     	ds	1
   610  002B                     _dec_ADC:
   611  002B                     	ds	1
   612  002C                     _uni_ADC:
   613  002C                     	ds	1
   614                           
   615                           	psect	cstackCOMMON
   616  0070                     __pcstackCOMMON:
   617  0070                     ?_setup:
   618  0070                     ?_spiRead:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_Escribir_stringLCD:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_Escribir_caracterLCD:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_initOsc:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_isr:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??_isr:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_main:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_spiReceiveWait:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_prender_ELCD:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_Escribir_comandoLCD:	
   646                           ; 1 bytes @ 0x0
   647                           
   648                           
   649                           ; 1 bytes @ 0x0
   650  0070                     	ds	2
   651  0072                     ??_spiRead:
   652  0072                     ??_initOsc:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0072                     ?_spiInit:	
   656                           ; 1 bytes @ 0x2
   657                           
   658  0072                     ??_spiReceiveWait:	
   659                           ; 1 bytes @ 0x2
   660                           
   661  0072                     ??_prender_ELCD:	
   662                           ; 1 bytes @ 0x2
   663                           
   664  0072                     ?_tabla_numASCII:	
   665                           ; 1 bytes @ 0x2
   666                           
   667  0072                     ?___awdiv:	
   668                           ; 2 bytes @ 0x2
   669                           
   670  0072                     spiInit@sDataSample:	
   671                           ; 2 bytes @ 0x2
   672                           
   673  0072                     initOsc@Valor:	
   674                           ; 1 bytes @ 0x2
   675                           
   676  0072                     tabla_numASCII@a:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     ___awdiv@divisor:	
   680                           ; 2 bytes @ 0x2
   681                           
   682                           
   683                           ; 2 bytes @ 0x2
   684  0072                     	ds	1
   685  0073                     ??_Escribir_comandoLCD:
   686  0073                     spiInit@sClockIdle:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0073                     Escribir_comandoLCD@Comando:	
   690                           ; 1 bytes @ 0x3
   691                           
   692                           
   693                           ; 1 bytes @ 0x3
   694  0073                     	ds	1
   695  0074                     ??_tabla_numASCII:
   696  0074                     ?_set_cursor:	
   697                           ; 1 bytes @ 0x4
   698                           
   699  0074                     ??_Escribir_stringLCD:	
   700                           ; 1 bytes @ 0x4
   701                           
   702  0074                     ??_Escribir_caracterLCD:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0074                     spiInit@sTransmitEdge:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     Escribir_caracterLCD@a:	
   709                           ; 1 bytes @ 0x4
   710                           
   711  0074                     set_cursor@posicion:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ___awdiv@dividend:	
   715                           ; 1 bytes @ 0x4
   716                           
   717                           
   718                           ; 2 bytes @ 0x4
   719  0074                     	ds	1
   720  0075                     ??_set_cursor:
   721  0075                     ??_spiInit:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     spiInit@sType:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     Escribir_stringLCD@d:	
   728                           ; 1 bytes @ 0x5
   729                           
   730                           
   731                           ; 1 bytes @ 0x5
   732  0075                     	ds	1
   733  0076                     ??_setup:
   734  0076                     ??___awdiv:	
   735                           ; 1 bytes @ 0x6
   736                           
   737  0076                     Escribir_stringLCD@i:	
   738                           ; 1 bytes @ 0x6
   739                           
   740                           
   741                           ; 1 bytes @ 0x6
   742  0076                     	ds	1
   743  0077                     ?_divisor_hex:
   744  0077                     set_cursor@linea:	
   745                           ; 1 bytes @ 0x7
   746                           
   747  0077                     divisor_hex@dig:	
   748                           ; 1 bytes @ 0x7
   749                           
   750                           
   751                           ; 1 bytes @ 0x7
   752  0077                     	ds	1
   753  0078                     ??_divisor_hex:
   754                           
   755                           ; 1 bytes @ 0x8
   756  0078                     	ds	2
   757                           
   758                           	psect	cstackBANK0
   759  0020                     __pcstackBANK0:
   760  0020                     ___awdiv@counter:
   761                           
   762                           ; 1 bytes @ 0x0
   763  0020                     	ds	1
   764  0021                     ___awdiv@sign:
   765                           
   766                           ; 1 bytes @ 0x1
   767  0021                     	ds	1
   768  0022                     ___awdiv@quotient:
   769                           
   770                           ; 2 bytes @ 0x2
   771  0022                     	ds	2
   772  0024                     divisor_hex@a:
   773                           
   774                           ; 1 bytes @ 0x4
   775  0024                     	ds	1
   776  0025                     divisor_hex@i:
   777                           
   778                           ; 2 bytes @ 0x5
   779  0025                     	ds	2
   780  0027                     ??_main:
   781                           
   782                           ; 1 bytes @ 0x7
   783  0027                     	ds	3
   784                           
   785                           	psect	maintext
   786  001A                     __pmaintext:	
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 68 in file "Maestro.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : B00/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   806 ;;      Params:         0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0
   808 ;;      Temps:          0       3       0       0       0
   809 ;;      Totals:         0       3       0       0       0
   810 ;;Total ram usage:        3 bytes
   811 ;; Hardware stack levels required when called: 4
   812 ;; This function calls:
   813 ;;		_Escribir_caracterLCD
   814 ;;		_Escribir_stringLCD
   815 ;;		_divisor_hex
   816 ;;		_set_cursor
   817 ;;		_setup
   818 ;;		_spiRead
   819 ;;		_tabla_numASCII
   820 ;; This function is called by:
   821 ;;		Startup code after reset
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _main
   827  001A                     _main:
   828  001A                     l1580:	
   829                           ;incstack = 0
   830                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   831                           
   832                           
   833                           ;Maestro.c: 69:     setup();
   834  001A  120A  118A  225F  120A  118A  	fcall	_setup
   835  001F                     l1582:
   836                           
   837                           ;Maestro.c: 75:         PORTCbits.RC2 = 0;
   838  001F  1283               	bcf	3,5	;RP0=0, select bank0
   839  0020  1303               	bcf	3,6	;RP1=0, select bank0
   840  0021  1107               	bcf	7,2	;volatile
   841  0022                     l1584:
   842                           
   843                           ;Maestro.c: 76:         _delay((unsigned long)((1)*(4000000/4000.0)));
   844  0022  30C7               	movlw	199
   845  0023  1283               	bcf	3,5	;RP0=0, select bank0
   846  0024  1303               	bcf	3,6	;RP1=0, select bank0
   847  0025  00A7               	movwf	??_main
   848  0026                     u757:
   849  0026  2827               	nop2
   850  0027  0BA7               	decfsz	??_main,f
   851  0028  2826               	goto	u757
   852  0029  282A               	nop2
   853  002A                     l1586:
   854                           
   855                           ;Maestro.c: 78:         val_ADC = spiRead();
   856  002A  120A  118A  22EB  120A  118A  	fcall	_spiRead
   857  002F  1283               	bcf	3,5	;RP0=0, select bank0
   858  0030  1303               	bcf	3,6	;RP1=0, select bank0
   859  0031  00A7               	movwf	??_main
   860  0032  0827               	movf	??_main,w
   861  0033  00FA               	movwf	_val_ADC
   862  0034                     l1588:
   863                           
   864                           ;Maestro.c: 79:         divisor_hex(val_ADC, ADC_dig);
   865  0034  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
   866  0035  00A7               	movwf	??_main
   867  0036  0827               	movf	??_main,w
   868  0037  00F7               	movwf	divisor_hex@dig
   869  0038  087A               	movf	_val_ADC,w
   870  0039  120A  118A  21F0  120A  118A  	fcall	_divisor_hex
   871  003E                     l1590:
   872                           
   873                           ;Maestro.c: 81:         uni_ADC = tabla_numASCII(ADC_dig[0]);
   874  003E  087B               	movf	_ADC_dig,w
   875  003F  1283               	bcf	3,5	;RP0=0, select bank0
   876  0040  1303               	bcf	3,6	;RP1=0, select bank0
   877  0041  00A7               	movwf	??_main
   878  0042  01A8               	clrf	??_main+1
   879  0043  0827               	movf	??_main,w
   880  0044  00F2               	movwf	tabla_numASCII@a
   881  0045  0828               	movf	??_main+1,w
   882  0046  00F3               	movwf	tabla_numASCII@a+1
   883  0047  120A  118A  2111  120A  118A  	fcall	_tabla_numASCII
   884  004C  0872               	movf	?_tabla_numASCII,w
   885  004D  1283               	bcf	3,5	;RP0=0, select bank0
   886  004E  1303               	bcf	3,6	;RP1=0, select bank0
   887  004F  00A9               	movwf	??_main+2
   888  0050  0829               	movf	??_main+2,w
   889  0051  00AC               	movwf	_uni_ADC
   890  0052                     l1592:
   891                           
   892                           ;Maestro.c: 82:         dec_ADC = tabla_numASCII(ADC_dig[1]);
   893  0052  087C               	movf	_ADC_dig+1,w
   894  0053  00A7               	movwf	??_main
   895  0054  01A8               	clrf	??_main+1
   896  0055  0827               	movf	??_main,w
   897  0056  00F2               	movwf	tabla_numASCII@a
   898  0057  0828               	movf	??_main+1,w
   899  0058  00F3               	movwf	tabla_numASCII@a+1
   900  0059  120A  118A  2111  120A  118A  	fcall	_tabla_numASCII
   901  005E  0872               	movf	?_tabla_numASCII,w
   902  005F  1283               	bcf	3,5	;RP0=0, select bank0
   903  0060  1303               	bcf	3,6	;RP1=0, select bank0
   904  0061  00A9               	movwf	??_main+2
   905  0062  0829               	movf	??_main+2,w
   906  0063  00AB               	movwf	_dec_ADC
   907  0064                     l1594:
   908                           
   909                           ;Maestro.c: 83:         cen_ADC = tabla_numASCII(ADC_dig[2]);
   910  0064  087D               	movf	_ADC_dig+2,w
   911  0065  00A7               	movwf	??_main
   912  0066  01A8               	clrf	??_main+1
   913  0067  0827               	movf	??_main,w
   914  0068  00F2               	movwf	tabla_numASCII@a
   915  0069  0828               	movf	??_main+1,w
   916  006A  00F3               	movwf	tabla_numASCII@a+1
   917  006B  120A  118A  2111  120A  118A  	fcall	_tabla_numASCII
   918  0070  0872               	movf	?_tabla_numASCII,w
   919  0071  1283               	bcf	3,5	;RP0=0, select bank0
   920  0072  1303               	bcf	3,6	;RP1=0, select bank0
   921  0073  00A9               	movwf	??_main+2
   922  0074  0829               	movf	??_main+2,w
   923  0075  00AA               	movwf	_cen_ADC
   924  0076                     l1596:
   925                           
   926                           ;Maestro.c: 94:         set_cursor(1,1);
   927  0076  01F4               	clrf	set_cursor@posicion
   928  0077  0AF4               	incf	set_cursor@posicion,f
   929  0078  3001               	movlw	1
   930  0079  120A  118A  216A  120A  118A  	fcall	_set_cursor
   931  007E                     l1598:
   932                           
   933                           ;Maestro.c: 95:         Escribir_stringLCD("ADC:");
   934  007E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   935  007F  120A  118A  2285  120A  118A  	fcall	_Escribir_stringLCD
   936  0084                     l1600:
   937                           
   938                           ;Maestro.c: 96:         set_cursor(2,1);
   939  0084  01F4               	clrf	set_cursor@posicion
   940  0085  0AF4               	incf	set_cursor@posicion,f
   941  0086  3002               	movlw	2
   942  0087  120A  118A  216A  120A  118A  	fcall	_set_cursor
   943  008C                     l1602:
   944                           
   945                           ;Maestro.c: 97:         Escribir_caracterLCD(uni_ADC);
   946  008C  1283               	bcf	3,5	;RP0=0, select bank0
   947  008D  1303               	bcf	3,6	;RP1=0, select bank0
   948  008E  082C               	movf	_uni_ADC,w
   949  008F  120A  118A  22C1  120A  118A  	fcall	_Escribir_caracterLCD
   950  0094                     l1604:
   951                           
   952                           ;Maestro.c: 98:         Escribir_caracterLCD(dec_ADC);
   953  0094  1283               	bcf	3,5	;RP0=0, select bank0
   954  0095  1303               	bcf	3,6	;RP1=0, select bank0
   955  0096  082B               	movf	_dec_ADC,w
   956  0097  120A  118A  22C1  120A  118A  	fcall	_Escribir_caracterLCD
   957  009C                     l1606:
   958                           
   959                           ;Maestro.c: 99:         Escribir_caracterLCD(cen_ADC);
   960  009C  1283               	bcf	3,5	;RP0=0, select bank0
   961  009D  1303               	bcf	3,6	;RP1=0, select bank0
   962  009E  082A               	movf	_cen_ADC,w
   963  009F  120A  118A  22C1  120A  118A  	fcall	_Escribir_caracterLCD
   964  00A4  281F               	goto	l1582
   965  00A5  120A  118A  280C   	ljmp	start
   966  00A8                     __end_of_main:
   967                           
   968                           	psect	text1
   969  0111                     __ptext1:	
   970 ;; *************** function _tabla_numASCII *****************
   971 ;; Defined at:
   972 ;;		line 134 in file "Maestro.c"
   973 ;; Parameters:    Size  Location     Type
   974 ;;  a               2    2[COMMON] int 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;		None
   977 ;; Return value:  Size  Location     Type
   978 ;;                  2    2[COMMON] int 
   979 ;; Registers used:
   980 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         2       0       0       0       0
   987 ;;      Locals:         0       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         2       0       0       0       0
   990 ;;Total ram usage:        2 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; Hardware stack levels required when called: 1
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _tabla_numASCII
  1002  0111                     _tabla_numASCII:
  1003  0111                     l1318:	
  1004                           ;incstack = 0
  1005                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1006                           
  1007                           
  1008                           ;Maestro.c: 135:     switch(a){
  1009  0111  2944               	goto	l1382
  1010  0112                     l1320:
  1011                           
  1012                           ;Maestro.c: 137:             return 48;
  1013  0112  3030               	movlw	48
  1014  0113  00F2               	movwf	?_tabla_numASCII
  1015  0114  3000               	movlw	0
  1016  0115  00F3               	movwf	?_tabla_numASCII+1
  1017  0116  2969               	goto	l75
  1018  0117                     l1326:
  1019                           
  1020                           ;Maestro.c: 140:             return 49;
  1021  0117  3031               	movlw	49
  1022  0118  00F2               	movwf	?_tabla_numASCII
  1023  0119  3000               	movlw	0
  1024  011A  00F3               	movwf	?_tabla_numASCII+1
  1025  011B  2969               	goto	l75
  1026  011C                     l1332:
  1027                           
  1028                           ;Maestro.c: 143:             return 50;
  1029  011C  3032               	movlw	50
  1030  011D  00F2               	movwf	?_tabla_numASCII
  1031  011E  3000               	movlw	0
  1032  011F  00F3               	movwf	?_tabla_numASCII+1
  1033  0120  2969               	goto	l75
  1034  0121                     l1338:
  1035                           
  1036                           ;Maestro.c: 146:             return 51;
  1037  0121  3033               	movlw	51
  1038  0122  00F2               	movwf	?_tabla_numASCII
  1039  0123  3000               	movlw	0
  1040  0124  00F3               	movwf	?_tabla_numASCII+1
  1041  0125  2969               	goto	l75
  1042  0126                     l1344:
  1043                           
  1044                           ;Maestro.c: 149:             return 52;
  1045  0126  3034               	movlw	52
  1046  0127  00F2               	movwf	?_tabla_numASCII
  1047  0128  3000               	movlw	0
  1048  0129  00F3               	movwf	?_tabla_numASCII+1
  1049  012A  2969               	goto	l75
  1050  012B                     l1350:
  1051                           
  1052                           ;Maestro.c: 152:             return 53;
  1053  012B  3035               	movlw	53
  1054  012C  00F2               	movwf	?_tabla_numASCII
  1055  012D  3000               	movlw	0
  1056  012E  00F3               	movwf	?_tabla_numASCII+1
  1057  012F  2969               	goto	l75
  1058  0130                     l1356:
  1059                           
  1060                           ;Maestro.c: 155:             return 54;
  1061  0130  3036               	movlw	54
  1062  0131  00F2               	movwf	?_tabla_numASCII
  1063  0132  3000               	movlw	0
  1064  0133  00F3               	movwf	?_tabla_numASCII+1
  1065  0134  2969               	goto	l75
  1066  0135                     l1362:
  1067                           
  1068                           ;Maestro.c: 158:             return 55;
  1069  0135  3037               	movlw	55
  1070  0136  00F2               	movwf	?_tabla_numASCII
  1071  0137  3000               	movlw	0
  1072  0138  00F3               	movwf	?_tabla_numASCII+1
  1073  0139  2969               	goto	l75
  1074  013A                     l1368:
  1075                           
  1076                           ;Maestro.c: 161:             return 56;
  1077  013A  3038               	movlw	56
  1078  013B  00F2               	movwf	?_tabla_numASCII
  1079  013C  3000               	movlw	0
  1080  013D  00F3               	movwf	?_tabla_numASCII+1
  1081  013E  2969               	goto	l75
  1082  013F                     l1374:
  1083                           
  1084                           ;Maestro.c: 164:             return 57;
  1085  013F  3039               	movlw	57
  1086  0140  00F2               	movwf	?_tabla_numASCII
  1087  0141  3000               	movlw	0
  1088  0142  00F3               	movwf	?_tabla_numASCII+1
  1089  0143  2969               	goto	l75
  1090  0144                     l1382:
  1091                           
  1092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1093                           ; Switch size 1, requested type "simple"
  1094                           ; Number of cases is 1, Range of values is 0 to 0
  1095                           ; switch strategies available:
  1096                           ; Name         Instructions Cycles
  1097                           ; simple_byte            4     3 (average)
  1098                           ; direct_byte           11     8 (fixed)
  1099                           ; jumptable            260     6 (fixed)
  1100                           ;	Chosen strategy is simple_byte
  1101  0144  0873               	movf	tabla_numASCII@a+1,w
  1102  0145  3A00               	xorlw	0	; case 0
  1103  0146  1903               	skipnz
  1104  0147  2949               	goto	l1642
  1105  0148  2969               	goto	l75
  1106  0149                     l1642:
  1107                           
  1108                           ; Switch size 1, requested type "simple"
  1109                           ; Number of cases is 10, Range of values is 0 to 9
  1110                           ; switch strategies available:
  1111                           ; Name         Instructions Cycles
  1112                           ; simple_byte           31    16 (average)
  1113                           ; direct_byte           38     8 (fixed)
  1114                           ; jumptable            260     6 (fixed)
  1115                           ;	Chosen strategy is simple_byte
  1116  0149  0872               	movf	tabla_numASCII@a,w
  1117  014A  3A00               	xorlw	0	; case 0
  1118  014B  1903               	skipnz
  1119  014C  2912               	goto	l1320
  1120  014D  3A01               	xorlw	1	; case 1
  1121  014E  1903               	skipnz
  1122  014F  2917               	goto	l1326
  1123  0150  3A03               	xorlw	3	; case 2
  1124  0151  1903               	skipnz
  1125  0152  291C               	goto	l1332
  1126  0153  3A01               	xorlw	1	; case 3
  1127  0154  1903               	skipnz
  1128  0155  2921               	goto	l1338
  1129  0156  3A07               	xorlw	7	; case 4
  1130  0157  1903               	skipnz
  1131  0158  2926               	goto	l1344
  1132  0159  3A01               	xorlw	1	; case 5
  1133  015A  1903               	skipnz
  1134  015B  292B               	goto	l1350
  1135  015C  3A03               	xorlw	3	; case 6
  1136  015D  1903               	skipnz
  1137  015E  2930               	goto	l1356
  1138  015F  3A01               	xorlw	1	; case 7
  1139  0160  1903               	skipnz
  1140  0161  2935               	goto	l1362
  1141  0162  3A0F               	xorlw	15	; case 8
  1142  0163  1903               	skipnz
  1143  0164  293A               	goto	l1368
  1144  0165  3A01               	xorlw	1	; case 9
  1145  0166  1903               	skipnz
  1146  0167  293F               	goto	l1374
  1147  0168  2969               	goto	l75
  1148  0169                     l75:
  1149  0169  0008               	return
  1150  016A                     __end_of_tabla_numASCII:
  1151                           
  1152                           	psect	text2
  1153  02EB                     __ptext2:	
  1154 ;; *************** function _spiRead *****************
  1155 ;; Defined at:
  1156 ;;		line 45 in file "SPI.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      unsigned char 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 2
  1177 ;; This function calls:
  1178 ;;		_spiReceiveWait
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _spiRead
  1186  02EB                     _spiRead:
  1187  02EB                     l1298:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1190                           
  1191                           
  1192                           ;SPI.c: 47:     spiReceiveWait();
  1193  02EB  120A  118A  22F4  120A  118A  	fcall	_spiReceiveWait
  1194  02F0                     l1300:
  1195                           
  1196                           ;SPI.c: 48:     return(SSPBUF);
  1197  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1198  02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1199  02F2  0813               	movf	19,w	;volatile
  1200  02F3                     l120:
  1201  02F3  0008               	return
  1202  02F4                     __end_of_spiRead:
  1203                           
  1204                           	psect	text3
  1205  02F4                     __ptext3:	
  1206 ;; *************** function _spiReceiveWait *****************
  1207 ;; Defined at:
  1208 ;;		line 27 in file "SPI.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;		None
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;		None
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		None
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       0       0       0       0
  1224 ;;      Temps:          0       0       0       0       0
  1225 ;;      Totals:         0       0       0       0       0
  1226 ;;Total ram usage:        0 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_spiRead
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _spiReceiveWait
  1238  02F4                     _spiReceiveWait:
  1239  02F4                     l1222:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _spiReceiveWait: []
  1242                           
  1243  02F4                     l106:	
  1244                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
  1245                           
  1246  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1247  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1248  02F6  1C14               	btfss	20,0	;volatile
  1249  02F7  2AF9               	goto	u371
  1250  02F8  2AFA               	goto	u370
  1251  02F9                     u371:
  1252  02F9  2AF4               	goto	l106
  1253  02FA                     u370:
  1254  02FA                     l109:
  1255  02FA  0008               	return
  1256  02FB                     __end_of_spiReceiveWait:
  1257                           
  1258                           	psect	text4
  1259  025F                     __ptext4:	
  1260 ;; *************** function _setup *****************
  1261 ;; Defined at:
  1262 ;;		line 105 in file "Maestro.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, pclath, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 2
  1283 ;; This function calls:
  1284 ;;		_initOsc
  1285 ;;		_spiInit
  1286 ;; This function is called by:
  1287 ;;		_main
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           
  1292                           ;psect for function _setup
  1293  025F                     _setup:
  1294  025F                     l1288:	
  1295                           ;incstack = 0
  1296                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1297                           
  1298                           
  1299                           ;Maestro.c: 108:     ANSEL = 0;
  1300  025F  1683               	bsf	3,5	;RP0=1, select bank3
  1301  0260  1703               	bsf	3,6	;RP1=1, select bank3
  1302  0261  0188               	clrf	8	;volatile
  1303                           
  1304                           ;Maestro.c: 109:     ANSELH = 0;
  1305  0262  0189               	clrf	9	;volatile
  1306                           
  1307                           ;Maestro.c: 111:     TRISA = 0;
  1308  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0265  0185               	clrf	5	;volatile
  1311                           
  1312                           ;Maestro.c: 112:     TRISB = 0;
  1313  0266  0186               	clrf	6	;volatile
  1314                           
  1315                           ;Maestro.c: 113:     TRISD = 0;
  1316  0267  0188               	clrf	8	;volatile
  1317                           
  1318                           ;Maestro.c: 114:     TRISE = 0;
  1319  0268  0189               	clrf	9	;volatile
  1320                           
  1321                           ;Maestro.c: 116:     PORTA = 0;
  1322  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1323  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1324  026B  0185               	clrf	5	;volatile
  1325                           
  1326                           ;Maestro.c: 117:     PORTD = 0;
  1327  026C  0188               	clrf	8	;volatile
  1328                           
  1329                           ;Maestro.c: 118:     PORTE = 0;
  1330  026D  0189               	clrf	9	;volatile
  1331                           
  1332                           ;Maestro.c: 119:     PORTB = 0;
  1333  026E  0186               	clrf	6	;volatile
  1334  026F                     l1290:
  1335                           
  1336                           ;Maestro.c: 122:     TRISC2 = 0;
  1337  026F  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0270  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0271  1107               	bcf	7,2	;volatile
  1340  0272                     l1292:
  1341                           
  1342                           ;Maestro.c: 123:     PORTCbits.RC2 = 1;
  1343  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0274  1507               	bsf	7,2	;volatile
  1346  0275                     l1294:
  1347                           
  1348                           ;Maestro.c: 126:     initOsc(4);
  1349  0275  3004               	movlw	4
  1350  0276  120A  118A  222F  120A  118A  	fcall	_initOsc
  1351  027B                     l1296:
  1352                           
  1353                           ;Maestro.c: 129:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
  1354  027B  01F2               	clrf	spiInit@sDataSample
  1355  027C  01F3               	clrf	spiInit@sClockIdle
  1356  027D  01F4               	clrf	spiInit@sTransmitEdge
  1357  027E  3020               	movlw	32
  1358  027F  120A  118A  22AB  120A  118A  	fcall	_spiInit
  1359  0284                     l70:
  1360  0284  0008               	return
  1361  0285                     __end_of_setup:
  1362                           
  1363                           	psect	text5
  1364  02AB                     __ptext5:	
  1365 ;; *************** function _spiInit *****************
  1366 ;; Defined at:
  1367 ;;		line 10 in file "SPI.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  sType           1    wreg     enum E1264
  1370 ;;  sDataSample     1    2[COMMON] enum E1272
  1371 ;;  sClockIdle      1    3[COMMON] enum E1276
  1372 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  sType           1    5[COMMON] enum E1264
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         3       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0
  1387 ;;      Totals:         4       0       0       0       0
  1388 ;;Total ram usage:        4 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_setup
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _spiInit
  1400  02AB                     _spiInit:
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1404                           ;spiInit@sType stored from wreg
  1405  02AB  00F5               	movwf	spiInit@sType
  1406  02AC                     l1212:
  1407                           
  1408                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_polarity
      +                           sClockIdle, Spi_Clock_edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1409  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  1410  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  1411  02AE  1287               	bcf	7,5	;volatile
  1412                           
  1413                           ;SPI.c: 13:     if(sType & 0b00000100)
  1414  02AF  1D75               	btfss	spiInit@sType,2
  1415  02B0  2AB2               	goto	u361
  1416  02B1  2AB3               	goto	u360
  1417  02B2                     u361:
  1418  02B2  2AB7               	goto	l1218
  1419  02B3                     u360:
  1420  02B3                     l1214:
  1421                           
  1422                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1423  02B3  0874               	movf	spiInit@sTransmitEdge,w
  1424  02B4  0094               	movwf	20	;volatile
  1425  02B5                     l1216:
  1426                           
  1427                           ;SPI.c: 16:         TRISC3 = 1;
  1428  02B5  1587               	bsf	7,3	;volatile
  1429                           
  1430                           ;SPI.c: 17:     }
  1431  02B6  2ABB               	goto	l102
  1432  02B7                     l1218:
  1433                           
  1434                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1435  02B7  0872               	movf	spiInit@sDataSample,w
  1436  02B8  0474               	iorwf	spiInit@sTransmitEdge,w
  1437  02B9  0094               	movwf	20	;volatile
  1438  02BA                     l1220:
  1439                           
  1440                           ;SPI.c: 21:         TRISC3 = 0;
  1441  02BA  1187               	bcf	7,3	;volatile
  1442  02BB                     l102:	
  1443                           ;SPI.c: 22:     }
  1444                           
  1445                           
  1446                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1447  02BB  0875               	movf	spiInit@sType,w
  1448  02BC  0473               	iorwf	spiInit@sClockIdle,w
  1449  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1450  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1451  02BF  0094               	movwf	20	;volatile
  1452  02C0                     l103:
  1453  02C0  0008               	return
  1454  02C1                     __end_of_spiInit:
  1455                           
  1456                           	psect	text6
  1457  022F                     __ptext6:	
  1458 ;; *************** function _initOsc *****************
  1459 ;; Defined at:
  1460 ;;		line 12 in file "Oscilador.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  Valor           1    wreg     unsigned char 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  Valor           1    2[COMMON] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, status,2, status,0
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         1       0       0       0       0
  1476 ;;      Temps:          0       0       0       0       0
  1477 ;;      Totals:         1       0       0       0       0
  1478 ;;Total ram usage:        1 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_setup
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _initOsc
  1490  022F                     _initOsc:
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1494                           ;initOsc@Valor stored from wreg
  1495  022F  00F2               	movwf	initOsc@Valor
  1496  0230                     l1196:
  1497                           
  1498                           ;Oscilador.c: 14:     if(Valor == 8){
  1499  0230  3008               	movlw	8
  1500  0231  0672               	xorwf	initOsc@Valor,w
  1501  0232  1D03               	btfss	3,2
  1502  0233  2A35               	goto	u321
  1503  0234  2A36               	goto	u320
  1504  0235                     u321:
  1505  0235  2A3B               	goto	l1200
  1506  0236                     u320:
  1507  0236                     l1198:
  1508                           
  1509                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1510  0236  1683               	bsf	3,5	;RP0=1, select bank1
  1511  0237  1303               	bcf	3,6	;RP1=0, select bank1
  1512  0238  160F               	bsf	15,4	;volatile
  1513                           
  1514                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1515  0239  168F               	bsf	15,5	;volatile
  1516                           
  1517                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1518  023A  170F               	bsf	15,6	;volatile
  1519  023B                     l1200:
  1520                           
  1521                           ;Oscilador.c: 19:     if(Valor == 4){
  1522  023B  3004               	movlw	4
  1523  023C  0672               	xorwf	initOsc@Valor,w
  1524  023D  1D03               	btfss	3,2
  1525  023E  2A40               	goto	u331
  1526  023F  2A41               	goto	u330
  1527  0240                     u331:
  1528  0240  2A46               	goto	l1204
  1529  0241                     u330:
  1530  0241                     l1202:
  1531                           
  1532                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1533  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0243  120F               	bcf	15,4	;volatile
  1536                           
  1537                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1538  0244  168F               	bsf	15,5	;volatile
  1539                           
  1540                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1541  0245  170F               	bsf	15,6	;volatile
  1542  0246                     l1204:
  1543                           
  1544                           ;Oscilador.c: 24:     if(Valor == 2){
  1545  0246  3002               	movlw	2
  1546  0247  0672               	xorwf	initOsc@Valor,w
  1547  0248  1D03               	btfss	3,2
  1548  0249  2A4B               	goto	u341
  1549  024A  2A4C               	goto	u340
  1550  024B                     u341:
  1551  024B  2A51               	goto	l1208
  1552  024C                     u340:
  1553  024C                     l1206:
  1554                           
  1555                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1556  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1557  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1558  024E  160F               	bsf	15,4	;volatile
  1559                           
  1560                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1561  024F  128F               	bcf	15,5	;volatile
  1562                           
  1563                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1564  0250  170F               	bsf	15,6	;volatile
  1565  0251                     l1208:
  1566                           
  1567                           ;Oscilador.c: 29:     if(Valor == 1){
  1568  0251  0372               	decf	initOsc@Valor,w
  1569  0252  1D03               	btfss	3,2
  1570  0253  2A55               	goto	u351
  1571  0254  2A56               	goto	u350
  1572  0255                     u351:
  1573  0255  2A5B               	goto	l183
  1574  0256                     u350:
  1575  0256                     l1210:
  1576                           
  1577                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1578  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0258  120F               	bcf	15,4	;volatile
  1581                           
  1582                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1583  0259  128F               	bcf	15,5	;volatile
  1584                           
  1585                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1586  025A  170F               	bsf	15,6	;volatile
  1587  025B                     l183:	
  1588                           ;Oscilador.c: 33:     }
  1589                           
  1590                           
  1591                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1592  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1593  025C  1303               	bcf	3,6	;RP1=0, select bank1
  1594  025D  140F               	bsf	15,0	;volatile
  1595  025E                     l184:
  1596  025E  0008               	return
  1597  025F                     __end_of_initOsc:
  1598                           
  1599                           	psect	text7
  1600  016A                     __ptext7:	
  1601 ;; *************** function _set_cursor *****************
  1602 ;; Defined at:
  1603 ;;		line 79 in file "LCD.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  linea           1    wreg     unsigned char 
  1606 ;;  posicion        1    4[COMMON] unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  linea           1    7[COMMON] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, pclath, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1618 ;;      Params:         1       0       0       0       0
  1619 ;;      Locals:         1       0       0       0       0
  1620 ;;      Temps:          2       0       0       0       0
  1621 ;;      Totals:         4       0       0       0       0
  1622 ;;Total ram usage:        4 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 3
  1625 ;; This function calls:
  1626 ;;		_Escribir_comandoLCD
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           
  1633                           ;psect for function _set_cursor
  1634  016A                     _set_cursor:
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1638                           ;set_cursor@linea stored from wreg
  1639  016A  00F7               	movwf	set_cursor@linea
  1640  016B                     l1388:
  1641                           
  1642                           ;LCD.c: 80:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1643  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1644  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1645  016D  1287               	bcf	7,5	;volatile
  1646  016E  1208               	bcf	8,4	;volatile
  1647  016F                     l1390:
  1648                           
  1649                           ;LCD.c: 83:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1650  016F  0377               	decf	set_cursor@linea,w
  1651  0170  1D03               	btfss	3,2
  1652  0171  2973               	goto	u571
  1653  0172  2974               	goto	u570
  1654  0173                     u571:
  1655  0173  297B               	goto	l1394
  1656  0174                     u570:
  1657  0174                     l1392:
  1658  0174  3080               	movlw	128
  1659  0175  120A  118A  21AD  120A  118A  	fcall	_Escribir_comandoLCD
  1660  017A  2987               	goto	l1398
  1661  017B                     l1394:
  1662  017B  3002               	movlw	2
  1663  017C  0677               	xorwf	set_cursor@linea,w
  1664  017D  1D03               	btfss	3,2
  1665  017E  2980               	goto	u581
  1666  017F  2981               	goto	u580
  1667  0180                     u581:
  1668  0180  2987               	goto	l1398
  1669  0181                     u580:
  1670  0181                     l1396:
  1671  0181  30C0               	movlw	192
  1672  0182  120A  118A  21AD  120A  118A  	fcall	_Escribir_comandoLCD
  1673  0187                     l1398:
  1674                           
  1675                           ;LCD.c: 86:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1676  0187  3068               	movlw	104
  1677  0188  00F6               	movwf	??_set_cursor+1
  1678  0189  30E4               	movlw	228
  1679  018A  00F5               	movwf	??_set_cursor
  1680  018B                     u767:
  1681  018B  0BF5               	decfsz	??_set_cursor,f
  1682  018C  298B               	goto	u767
  1683  018D  0BF6               	decfsz	??_set_cursor+1,f
  1684  018E  298B               	goto	u767
  1685  018F  0000               	nop
  1686  0190                     l1400:
  1687                           
  1688                           ;LCD.c: 88:     if (posicion != 0){
  1689  0190  0874               	movf	set_cursor@posicion,w
  1690  0191  1903               	btfsc	3,2
  1691  0192  2994               	goto	u591
  1692  0193  2995               	goto	u590
  1693  0194                     u591:
  1694  0194  29AC               	goto	l175
  1695  0195                     u590:
  1696  0195  299E               	goto	l1408
  1697  0196                     l1404:
  1698                           
  1699                           ;LCD.c: 90:             Escribir_comandoLCD(0b00010100);
  1700  0196  3014               	movlw	20
  1701  0197  120A  118A  21AD  120A  118A  	fcall	_Escribir_comandoLCD
  1702  019C                     l1406:
  1703                           
  1704                           ;LCD.c: 91:             posicion--;
  1705  019C  3001               	movlw	1
  1706  019D  02F4               	subwf	set_cursor@posicion,f
  1707  019E                     l1408:
  1708                           
  1709                           ;LCD.c: 89:         while(posicion > 0){
  1710  019E  0874               	movf	set_cursor@posicion,w
  1711  019F  1D03               	btfss	3,2
  1712  01A0  29A2               	goto	u601
  1713  01A1  29A3               	goto	u600
  1714  01A2                     u601:
  1715  01A2  2996               	goto	l1404
  1716  01A3                     u600:
  1717  01A3                     l1410:
  1718                           
  1719                           ;LCD.c: 94:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1720  01A3  3068               	movlw	104
  1721  01A4  00F6               	movwf	??_set_cursor+1
  1722  01A5  30E4               	movlw	228
  1723  01A6  00F5               	movwf	??_set_cursor
  1724  01A7                     u777:
  1725  01A7  0BF5               	decfsz	??_set_cursor,f
  1726  01A8  29A7               	goto	u777
  1727  01A9  0BF6               	decfsz	??_set_cursor+1,f
  1728  01AA  29A7               	goto	u777
  1729  01AB  0000               	nop
  1730  01AC                     l175:
  1731  01AC  0008               	return
  1732  01AD                     __end_of_set_cursor:
  1733                           
  1734                           	psect	text8
  1735  01F0                     __ptext8:	
  1736 ;; *************** function _divisor_hex *****************
  1737 ;; Defined at:
  1738 ;;		line 69 in file "7SEG-hex.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  a               1    wreg     unsigned char 
  1741 ;;  dig             1    7[COMMON] PTR unsigned char 
  1742 ;;		 -> ADC_dig(1), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  a               1    4[BANK0 ] unsigned char 
  1745 ;;  i               2    5[BANK0 ] int 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1755 ;;      Params:         1       0       0       0       0
  1756 ;;      Locals:         0       3       0       0       0
  1757 ;;      Temps:          2       0       0       0       0
  1758 ;;      Totals:         3       3       0       0       0
  1759 ;;Total ram usage:        6 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 2
  1762 ;; This function calls:
  1763 ;;		___awdiv
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           
  1770                           ;psect for function _divisor_hex
  1771  01F0                     _divisor_hex:
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in _divisor_hex: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1775                           ;divisor_hex@a stored from wreg
  1776  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1777  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1778  01F2  00A4               	movwf	divisor_hex@a
  1779  01F3                     l1566:
  1780  01F3  01A5               	clrf	divisor_hex@i
  1781  01F4  01A6               	clrf	divisor_hex@i+1
  1782  01F5                     l1572:
  1783  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1784  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1785  01F7  0824               	movf	divisor_hex@a,w
  1786  01F8  390F               	andlw	15
  1787  01F9  00F8               	movwf	??_divisor_hex
  1788  01FA  0825               	movf	divisor_hex@i,w
  1789  01FB  0777               	addwf	divisor_hex@dig,w
  1790  01FC  00F9               	movwf	??_divisor_hex+1
  1791  01FD  0879               	movf	??_divisor_hex+1,w
  1792  01FE  0084               	movwf	4
  1793  01FF  0878               	movf	??_divisor_hex,w
  1794  0200  0080               	movwf	0
  1795  0201                     l1574:
  1796  0201  3010               	movlw	16
  1797  0202  00F2               	movwf	___awdiv@divisor
  1798  0203  3000               	movlw	0
  1799  0204  00F3               	movwf	___awdiv@divisor+1
  1800  0205  0825               	movf	divisor_hex@i,w
  1801  0206  0777               	addwf	divisor_hex@dig,w
  1802  0207  00F8               	movwf	??_divisor_hex
  1803  0208  0878               	movf	??_divisor_hex,w
  1804  0209  0084               	movwf	4
  1805  020A  0800               	movf	0,w
  1806  020B  0224               	subwf	divisor_hex@a,w
  1807  020C  00F4               	movwf	___awdiv@dividend
  1808  020D  01F5               	clrf	___awdiv@dividend+1
  1809  020E  1C03               	skipc
  1810  020F  03F5               	decf	___awdiv@dividend+1,f
  1811  0210  120A  118A  20A8  120A  118A  	fcall	___awdiv
  1812  0215  0872               	movf	?___awdiv,w
  1813  0216  00F9               	movwf	??_divisor_hex+1
  1814  0217  0879               	movf	??_divisor_hex+1,w
  1815  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1817  021A  00A4               	movwf	divisor_hex@a
  1818  021B                     l1576:
  1819  021B  3001               	movlw	1
  1820  021C  07A5               	addwf	divisor_hex@i,f
  1821  021D  1803               	skipnc
  1822  021E  0AA6               	incf	divisor_hex@i+1,f
  1823  021F  3000               	movlw	0
  1824  0220  07A6               	addwf	divisor_hex@i+1,f
  1825  0221                     l1578:
  1826  0221  0826               	movf	divisor_hex@i+1,w
  1827  0222  3A80               	xorlw	128
  1828  0223  00FF               	movwf	btemp+1
  1829  0224  3080               	movlw	128
  1830  0225  027F               	subwf	btemp+1,w
  1831  0226  1D03               	skipz
  1832  0227  2A2A               	goto	u735
  1833  0228  3003               	movlw	3
  1834  0229  0225               	subwf	divisor_hex@i,w
  1835  022A                     u735:
  1836  022A  1C03               	skipc
  1837  022B  2A2D               	goto	u731
  1838  022C  2A2E               	goto	u730
  1839  022D                     u731:
  1840  022D  29F5               	goto	l1572
  1841  022E                     u730:
  1842  022E                     l211:
  1843  022E  0008               	return
  1844  022F                     __end_of_divisor_hex:
  1845                           
  1846                           	psect	text9
  1847  00A8                     __ptext9:	
  1848 ;; *************** function ___awdiv *****************
  1849 ;; Defined at:
  1850 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  divisor         2    2[COMMON] int 
  1853 ;;  dividend        2    4[COMMON] int 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;  quotient        2    2[BANK0 ] int 
  1856 ;;  sign            1    1[BANK0 ] unsigned char 
  1857 ;;  counter         1    0[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2    2[COMMON] int 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         4       0       0       0       0
  1868 ;;      Locals:         0       4       0       0       0
  1869 ;;      Temps:          1       0       0       0       0
  1870 ;;      Totals:         5       4       0       0       0
  1871 ;;Total ram usage:        9 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 1
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_divisor_hex
  1878 ;;		_divisor_dec
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function ___awdiv
  1884  00A8                     ___awdiv:
  1885  00A8                     l1522:	
  1886                           ;incstack = 0
  1887                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1888                           
  1889  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1890  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1891  00AA  01A1               	clrf	___awdiv@sign
  1892  00AB                     l1524:
  1893  00AB  1FF3               	btfss	___awdiv@divisor+1,7
  1894  00AC  28AE               	goto	u631
  1895  00AD  28AF               	goto	u630
  1896  00AE                     u631:
  1897  00AE  28B6               	goto	l1530
  1898  00AF                     u630:
  1899  00AF                     l1526:
  1900  00AF  09F2               	comf	___awdiv@divisor,f
  1901  00B0  09F3               	comf	___awdiv@divisor+1,f
  1902  00B1  0AF2               	incf	___awdiv@divisor,f
  1903  00B2  1903               	skipnz
  1904  00B3  0AF3               	incf	___awdiv@divisor+1,f
  1905  00B4                     l1528:
  1906  00B4  01A1               	clrf	___awdiv@sign
  1907  00B5  0AA1               	incf	___awdiv@sign,f
  1908  00B6                     l1530:
  1909  00B6  1FF5               	btfss	___awdiv@dividend+1,7
  1910  00B7  28B9               	goto	u641
  1911  00B8  28BA               	goto	u640
  1912  00B9                     u641:
  1913  00B9  28C3               	goto	l1536
  1914  00BA                     u640:
  1915  00BA                     l1532:
  1916  00BA  09F4               	comf	___awdiv@dividend,f
  1917  00BB  09F5               	comf	___awdiv@dividend+1,f
  1918  00BC  0AF4               	incf	___awdiv@dividend,f
  1919  00BD  1903               	skipnz
  1920  00BE  0AF5               	incf	___awdiv@dividend+1,f
  1921  00BF                     l1534:
  1922  00BF  3001               	movlw	1
  1923  00C0  00F6               	movwf	??___awdiv
  1924  00C1  0876               	movf	??___awdiv,w
  1925  00C2  06A1               	xorwf	___awdiv@sign,f
  1926  00C3                     l1536:
  1927  00C3  01A2               	clrf	___awdiv@quotient
  1928  00C4  01A3               	clrf	___awdiv@quotient+1
  1929  00C5                     l1538:
  1930  00C5  0872               	movf	___awdiv@divisor,w
  1931  00C6  0473               	iorwf	___awdiv@divisor+1,w
  1932  00C7  1903               	btfsc	3,2
  1933  00C8  28CA               	goto	u651
  1934  00C9  28CB               	goto	u650
  1935  00CA                     u651:
  1936  00CA  2902               	goto	l1558
  1937  00CB                     u650:
  1938  00CB                     l1540:
  1939  00CB  01A0               	clrf	___awdiv@counter
  1940  00CC  0AA0               	incf	___awdiv@counter,f
  1941  00CD  28D9               	goto	l1546
  1942  00CE                     l1542:
  1943  00CE  3001               	movlw	1
  1944  00CF                     u665:
  1945  00CF  1003               	clrc
  1946  00D0  0DF2               	rlf	___awdiv@divisor,f
  1947  00D1  0DF3               	rlf	___awdiv@divisor+1,f
  1948  00D2  3EFF               	addlw	-1
  1949  00D3  1D03               	skipz
  1950  00D4  28CF               	goto	u665
  1951  00D5                     l1544:
  1952  00D5  3001               	movlw	1
  1953  00D6  00F6               	movwf	??___awdiv
  1954  00D7  0876               	movf	??___awdiv,w
  1955  00D8  07A0               	addwf	___awdiv@counter,f
  1956  00D9                     l1546:
  1957  00D9  1FF3               	btfss	___awdiv@divisor+1,7
  1958  00DA  28DC               	goto	u671
  1959  00DB  28DD               	goto	u670
  1960  00DC                     u671:
  1961  00DC  28CE               	goto	l1542
  1962  00DD                     u670:
  1963  00DD                     l1548:
  1964  00DD  3001               	movlw	1
  1965  00DE                     u685:
  1966  00DE  1003               	clrc
  1967  00DF  0DA2               	rlf	___awdiv@quotient,f
  1968  00E0  0DA3               	rlf	___awdiv@quotient+1,f
  1969  00E1  3EFF               	addlw	-1
  1970  00E2  1D03               	skipz
  1971  00E3  28DE               	goto	u685
  1972  00E4  0873               	movf	___awdiv@divisor+1,w
  1973  00E5  0275               	subwf	___awdiv@dividend+1,w
  1974  00E6  1D03               	skipz
  1975  00E7  28EA               	goto	u695
  1976  00E8  0872               	movf	___awdiv@divisor,w
  1977  00E9  0274               	subwf	___awdiv@dividend,w
  1978  00EA                     u695:
  1979  00EA  1C03               	skipc
  1980  00EB  28ED               	goto	u691
  1981  00EC  28EE               	goto	u690
  1982  00ED                     u691:
  1983  00ED  28F5               	goto	l1554
  1984  00EE                     u690:
  1985  00EE                     l1550:
  1986  00EE  0872               	movf	___awdiv@divisor,w
  1987  00EF  02F4               	subwf	___awdiv@dividend,f
  1988  00F0  0873               	movf	___awdiv@divisor+1,w
  1989  00F1  1C03               	skipc
  1990  00F2  03F5               	decf	___awdiv@dividend+1,f
  1991  00F3  02F5               	subwf	___awdiv@dividend+1,f
  1992  00F4                     l1552:
  1993  00F4  1422               	bsf	___awdiv@quotient,0
  1994  00F5                     l1554:
  1995  00F5  3001               	movlw	1
  1996  00F6                     u705:
  1997  00F6  1003               	clrc
  1998  00F7  0CF3               	rrf	___awdiv@divisor+1,f
  1999  00F8  0CF2               	rrf	___awdiv@divisor,f
  2000  00F9  3EFF               	addlw	-1
  2001  00FA  1D03               	skipz
  2002  00FB  28F6               	goto	u705
  2003  00FC                     l1556:
  2004  00FC  3001               	movlw	1
  2005  00FD  02A0               	subwf	___awdiv@counter,f
  2006  00FE  1D03               	btfss	3,2
  2007  00FF  2901               	goto	u711
  2008  0100  2902               	goto	u710
  2009  0101                     u711:
  2010  0101  28DD               	goto	l1548
  2011  0102                     u710:
  2012  0102                     l1558:
  2013  0102  0821               	movf	___awdiv@sign,w
  2014  0103  1903               	btfsc	3,2
  2015  0104  2906               	goto	u721
  2016  0105  2907               	goto	u720
  2017  0106                     u721:
  2018  0106  290C               	goto	l1562
  2019  0107                     u720:
  2020  0107                     l1560:
  2021  0107  09A2               	comf	___awdiv@quotient,f
  2022  0108  09A3               	comf	___awdiv@quotient+1,f
  2023  0109  0AA2               	incf	___awdiv@quotient,f
  2024  010A  1903               	skipnz
  2025  010B  0AA3               	incf	___awdiv@quotient+1,f
  2026  010C                     l1562:
  2027  010C  0823               	movf	___awdiv@quotient+1,w
  2028  010D  00F3               	movwf	?___awdiv+1
  2029  010E  0822               	movf	___awdiv@quotient,w
  2030  010F  00F2               	movwf	?___awdiv
  2031  0110                     l455:
  2032  0110  0008               	return
  2033  0111                     __end_of___awdiv:
  2034                           
  2035                           	psect	text10
  2036  0285                     __ptext10:	
  2037 ;; *************** function _Escribir_stringLCD *****************
  2038 ;; Defined at:
  2039 ;;		line 55 in file "LCD.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  d               1    wreg     PTR const unsigned char 
  2042 ;;		 -> STR_1(5), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  d               1    5[COMMON] PTR const unsigned char 
  2045 ;;		 -> STR_1(5), 
  2046 ;;  i               1    6[COMMON] unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         2       0       0       0       0
  2058 ;;      Temps:          1       0       0       0       0
  2059 ;;      Totals:         3       0       0       0       0
  2060 ;;Total ram usage:        3 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 3
  2063 ;; This function calls:
  2064 ;;		_Escribir_comandoLCD
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _Escribir_stringLCD
  2072  0285                     _Escribir_stringLCD:
  2073                           
  2074                           ;incstack = 0
  2075                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2076                           ;Escribir_stringLCD@d stored from wreg
  2077  0285  00F5               	movwf	Escribir_stringLCD@d
  2078  0286                     l1412:
  2079                           
  2080                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  2081  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0288  1687               	bsf	7,5	;volatile
  2084  0289  1208               	bcf	8,4	;volatile
  2085  028A                     l1414:
  2086                           
  2087                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2088  028A  01F6               	clrf	Escribir_stringLCD@i
  2089  028B  2A9D               	goto	l1420
  2090  028C                     l1416:
  2091                           
  2092                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2093  028C  0876               	movf	Escribir_stringLCD@i,w
  2094  028D  0775               	addwf	Escribir_stringLCD@d,w
  2095  028E  0084               	movwf	4
  2096  028F  120A  118A  22E0  120A  118A  	fcall	stringdir
  2097  0294  120A  118A  21AD  120A  118A  	fcall	_Escribir_comandoLCD
  2098  0299                     l1418:
  2099                           
  2100                           ;LCD.c: 60:     }
  2101  0299  3001               	movlw	1
  2102  029A  00F4               	movwf	??_Escribir_stringLCD
  2103  029B  0874               	movf	??_Escribir_stringLCD,w
  2104  029C  07F6               	addwf	Escribir_stringLCD@i,f
  2105  029D                     l1420:
  2106  029D  0876               	movf	Escribir_stringLCD@i,w
  2107  029E  0775               	addwf	Escribir_stringLCD@d,w
  2108  029F  0084               	movwf	4
  2109  02A0  120A  118A  22E0  120A  118A  	fcall	stringdir
  2110  02A5  3A00               	xorlw	0
  2111  02A6  1D03               	skipz
  2112  02A7  2AA9               	goto	u611
  2113  02A8  2AAA               	goto	u610
  2114  02A9                     u611:
  2115  02A9  2A8C               	goto	l1416
  2116  02AA                     u610:
  2117  02AA                     l159:
  2118  02AA  0008               	return
  2119  02AB                     __end_of_Escribir_stringLCD:
  2120                           
  2121                           	psect	text11
  2122  02C1                     __ptext11:	
  2123 ;; *************** function _Escribir_caracterLCD *****************
  2124 ;; Defined at:
  2125 ;;		line 63 in file "LCD.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  a               1    wreg     unsigned char 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  a               1    4[COMMON] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       0       0       0       0
  2140 ;;      Locals:         1       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0
  2142 ;;      Totals:         1       0       0       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 3
  2146 ;; This function calls:
  2147 ;;		_Escribir_comandoLCD
  2148 ;;		_prender_ELCD
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _Escribir_caracterLCD
  2156  02C1                     _Escribir_caracterLCD:
  2157                           
  2158                           ;incstack = 0
  2159                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  2160                           ;Escribir_caracterLCD@a stored from wreg
  2161  02C1  00F4               	movwf	Escribir_caracterLCD@a
  2162  02C2                     l1422:
  2163                           
  2164                           ;LCD.c: 64:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  2165  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2166  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2167  02C4  1687               	bsf	7,5	;volatile
  2168  02C5  1208               	bcf	8,4	;volatile
  2169  02C6                     l1424:
  2170                           
  2171                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  2172  02C6  0874               	movf	Escribir_caracterLCD@a,w
  2173  02C7  120A  118A  21AD  120A  118A  	fcall	_Escribir_comandoLCD
  2174                           
  2175                           ;LCD.c: 68:     prender_ELCD();
  2176  02CC  120A  118A  22D2  120A  118A  	fcall	_prender_ELCD
  2177  02D1                     l162:
  2178  02D1  0008               	return
  2179  02D2                     __end_of_Escribir_caracterLCD:
  2180                           
  2181                           	psect	text12
  2182  01AD                     __ptext12:	
  2183 ;; *************** function _Escribir_comandoLCD *****************
  2184 ;; Defined at:
  2185 ;;		line 17 in file "LCD.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  Comando         1    wreg     unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  Comando         1    3[COMMON] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       0       0       0       0
  2200 ;;      Locals:         1       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         1       0       0       0       0
  2203 ;;Total ram usage:        1 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 2
  2206 ;; This function calls:
  2207 ;;		_prender_ELCD
  2208 ;; This function is called by:
  2209 ;;		_Escribir_stringLCD
  2210 ;;		_Escribir_caracterLCD
  2211 ;;		_set_cursor
  2212 ;;		_Iniciar_LCD
  2213 ;;		_Limpiar_pantallaLCD
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _Escribir_comandoLCD
  2219  01AD                     _Escribir_comandoLCD:
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2223                           ;Escribir_comandoLCD@Comando stored from wreg
  2224  01AD  00F3               	movwf	Escribir_comandoLCD@Comando
  2225  01AE                     l1224:
  2226                           
  2227                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2228  01AE  1C73               	btfss	Escribir_comandoLCD@Comando,0
  2229  01AF  29B1               	goto	u381
  2230  01B0  29B2               	goto	u380
  2231  01B1                     u381:
  2232  01B1  29B6               	goto	l134
  2233  01B2                     u380:
  2234  01B2                     l1226:
  2235  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2236  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2237  01B4  1708               	bsf	8,6	;volatile
  2238  01B5  29B9               	goto	l135
  2239  01B6                     l134:
  2240  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2241  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2242  01B8  1308               	bcf	8,6	;volatile
  2243  01B9                     l135:
  2244                           
  2245                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2246  01B9  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  2247  01BA  29BC               	goto	u391
  2248  01BB  29BD               	goto	u390
  2249  01BC                     u391:
  2250  01BC  29BF               	goto	l136
  2251  01BD                     u390:
  2252  01BD                     l1228:
  2253  01BD  1788               	bsf	8,7	;volatile
  2254  01BE  29C0               	goto	l137
  2255  01BF                     l136:
  2256  01BF  1388               	bcf	8,7	;volatile
  2257  01C0                     l137:
  2258                           
  2259                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2260  01C0  1D73               	btfss	Escribir_comandoLCD@Comando,2
  2261  01C1  29C3               	goto	u401
  2262  01C2  29C4               	goto	u400
  2263  01C3                     u401:
  2264  01C3  29C6               	goto	l138
  2265  01C4                     u400:
  2266  01C4                     l1230:
  2267  01C4  1406               	bsf	6,0	;volatile
  2268  01C5  29C7               	goto	l139
  2269  01C6                     l138:
  2270  01C6  1006               	bcf	6,0	;volatile
  2271  01C7                     l139:
  2272                           
  2273                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2274  01C7  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  2275  01C8  29CA               	goto	u411
  2276  01C9  29CB               	goto	u410
  2277  01CA                     u411:
  2278  01CA  29CD               	goto	l140
  2279  01CB                     u410:
  2280  01CB                     l1232:
  2281  01CB  1486               	bsf	6,1	;volatile
  2282  01CC  29CE               	goto	l141
  2283  01CD                     l140:
  2284  01CD  1086               	bcf	6,1	;volatile
  2285  01CE                     l141:
  2286                           
  2287                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2288  01CE  1E73               	btfss	Escribir_comandoLCD@Comando,4
  2289  01CF  29D1               	goto	u421
  2290  01D0  29D2               	goto	u420
  2291  01D1                     u421:
  2292  01D1  29D4               	goto	l142
  2293  01D2                     u420:
  2294  01D2                     l1234:
  2295  01D2  1506               	bsf	6,2	;volatile
  2296  01D3  29D5               	goto	l143
  2297  01D4                     l142:
  2298  01D4  1106               	bcf	6,2	;volatile
  2299  01D5                     l143:
  2300                           
  2301                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2302  01D5  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  2303  01D6  29D8               	goto	u431
  2304  01D7  29D9               	goto	u430
  2305  01D8                     u431:
  2306  01D8  29DB               	goto	l144
  2307  01D9                     u430:
  2308  01D9                     l1236:
  2309  01D9  1586               	bsf	6,3	;volatile
  2310  01DA  29DC               	goto	l145
  2311  01DB                     l144:
  2312  01DB  1186               	bcf	6,3	;volatile
  2313  01DC                     l145:
  2314                           
  2315                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2316  01DC  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2317  01DD  29DF               	goto	u441
  2318  01DE  29E0               	goto	u440
  2319  01DF                     u441:
  2320  01DF  29E2               	goto	l146
  2321  01E0                     u440:
  2322  01E0                     l1238:
  2323  01E0  1606               	bsf	6,4	;volatile
  2324  01E1  29E3               	goto	l147
  2325  01E2                     l146:
  2326  01E2  1206               	bcf	6,4	;volatile
  2327  01E3                     l147:
  2328                           
  2329                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2330  01E3  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2331  01E4  29E6               	goto	u451
  2332  01E5  29E7               	goto	u450
  2333  01E6                     u451:
  2334  01E6  29E9               	goto	l148
  2335  01E7                     u450:
  2336  01E7                     l1240:
  2337  01E7  1686               	bsf	6,5	;volatile
  2338  01E8  29EA               	goto	l1242
  2339  01E9                     l148:
  2340  01E9  1286               	bcf	6,5	;volatile
  2341  01EA                     l1242:
  2342                           
  2343                           ;LCD.c: 27:     prender_ELCD();
  2344  01EA  120A  118A  22D2  120A  118A  	fcall	_prender_ELCD
  2345  01EF                     l150:
  2346  01EF  0008               	return
  2347  01F0                     __end_of_Escribir_comandoLCD:
  2348                           
  2349                           	psect	text13
  2350  02D2                     __ptext13:	
  2351 ;; *************** function _prender_ELCD *****************
  2352 ;; Defined at:
  2353 ;;		line 11 in file "LCD.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;		None
  2356 ;; Auto vars:     Size  Location     Type
  2357 ;;		None
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  1    wreg      void 
  2360 ;; Registers used:
  2361 ;;		wreg
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2367 ;;      Params:         0       0       0       0       0
  2368 ;;      Locals:         0       0       0       0       0
  2369 ;;      Temps:          1       0       0       0       0
  2370 ;;      Totals:         1       0       0       0       0
  2371 ;;Total ram usage:        1 bytes
  2372 ;; Hardware stack levels used: 1
  2373 ;; Hardware stack levels required when called: 1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_Escribir_comandoLCD
  2378 ;;		_Escribir_caracterLCD
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _prender_ELCD
  2384  02D2                     _prender_ELCD:
  2385  02D2                     l1190:	
  2386                           ;incstack = 0
  2387                           ; Regs used in _prender_ELCD: [wreg]
  2388                           
  2389                           
  2390                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  2391  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2392  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2393  02D4  1688               	bsf	8,5	;volatile
  2394  02D5                     l1192:
  2395                           
  2396                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2397  02D5  30C7               	movlw	199
  2398  02D6  00F2               	movwf	??_prender_ELCD
  2399  02D7                     u787:
  2400  02D7  2AD8               	nop2
  2401  02D8  0BF2               	decfsz	??_prender_ELCD,f
  2402  02D9  2AD7               	goto	u787
  2403  02DA  2ADB               	nop2
  2404  02DB  2ADC               	nop2
  2405  02DC                     l1194:
  2406                           
  2407                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  2408  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2409  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2410  02DE  1288               	bcf	8,5	;volatile
  2411  02DF                     l131:
  2412  02DF  0008               	return
  2413  02E0                     __end_of_prender_ELCD:
  2414                           
  2415                           	psect	text14
  2416  02FB                     __ptext14:	
  2417 ;; *************** function _isr *****************
  2418 ;; Defined at:
  2419 ;;		line 62 in file "Maestro.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		None
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0
  2435 ;;      Temps:          2       0       0       0       0
  2436 ;;      Totals:         2       0       0       0       0
  2437 ;;Total ram usage:        2 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		Interrupt level 1
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _isr
  2448  02FB                     _isr:
  2449  02FB                     i1l59:
  2450  02FB  0871               	movf	??_isr+1,w
  2451  02FC  008A               	movwf	10
  2452  02FD  0E70               	swapf	??_isr,w
  2453  02FE  0083               	movwf	3
  2454  02FF  0EFE               	swapf	btemp,f
  2455  0300  0E7E               	swapf	btemp,w
  2456  0301  0009               	retfie
  2457  0302                     __end_of_isr:
  2458  007E                     btemp	set	126	;btemp
  2459  007E                     wtemp0	set	126
  2460                           
  2461                           	psect	intentry
  2462  0004                     __pintentry:	
  2463                           ;incstack = 0
  2464                           ; Regs used in _isr: []
  2465                           
  2466  0004                     interrupt_function:
  2467  007E                     saved_w	set	btemp
  2468  0004  00FE               	movwf	btemp
  2469  0005  0E03               	swapf	3,w
  2470  0006  00F0               	movwf	??_isr
  2471  0007  080A               	movf	10,w
  2472  0008  00F1               	movwf	??_isr+1
  2473  0009  120A  118A  2AFB   	ljmp	_isr
  2474                           
  2475                           	psect	config
  2476                           
  2477                           ;Config register CONFIG1 @ 0x2007
  2478                           ;	Oscillator Selection bits
  2479                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2480                           ;	Watchdog Timer Enable bit
  2481                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2482                           ;	Power-up Timer Enable bit
  2483                           ;	PWRTE = OFF, PWRT disabled
  2484                           ;	RE3/MCLR pin function select bit
  2485                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2486                           ;	Code Protection bit
  2487                           ;	CP = OFF, Program memory code protection is disabled
  2488                           ;	Data Code Protection bit
  2489                           ;	CPD = OFF, Data memory code protection is disabled
  2490                           ;	Brown Out Reset Selection bits
  2491                           ;	BOREN = OFF, BOR disabled
  2492                           ;	Internal External Switchover bit
  2493                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2494                           ;	Fail-Safe Clock Monitor Enabled bit
  2495                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2496                           ;	Low Voltage Programming Enable bit
  2497                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2498                           ;	In-Circuit Debugger Mode bit
  2499                           ;	DEBUG = 0x1, unprogrammed default
  2500  2007                     	org	8199
  2501  2007  20D4               	dw	8404
  2502                           
  2503                           ;Config register CONFIG2 @ 0x2008
  2504                           ;	Brown-out Reset Selection bit
  2505                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2506                           ;	Flash Program Memory Self Write Enable bits
  2507                           ;	WRT = OFF, Write protection off
  2508  2008                     	org	8200
  2509  2008  3FFF               	dw	16383

Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     10      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_hex@dig	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_divisor_hex
    _setup->_spiInit
    _set_cursor->_Escribir_comandoLCD
    _divisor_hex->___awdiv
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_hex
    _divisor_hex->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2764
                                              7 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                        _divisor_hex
                         _set_cursor
                              _setup
                            _spiRead
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       2     0      2     250
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     448
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     417
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_hex                                          6     5      1    1152
                                              7 COMMON     3     2      1
                                              4 BANK0      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   3     3      0     299
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
     _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _divisor_hex
     ___awdiv
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Feb 14 18:01:46 2022

                            pc 0002                    _SSPSTATbits 0094                             l70 0284  
                           l75 0169                   ___awdiv@sign 0021                             fsr 0004  
              set_cursor@linea 0077                            l102 02BB                            l103 02C0  
                          l120 02F3                            l106 02F4                            l131 02DF  
                          l211 022E                            l140 01CD                            l141 01CE  
                          l109 02FA                            l150 01EF                            l142 01D4  
                          l134 01B6                            l143 01D5                            l135 01B9  
                          l144 01DB                            l136 01BF                            l145 01DC  
                          l137 01C0                            l146 01E2                            l138 01C6  
                          l162 02D1                            l147 01E3                            l139 01C7  
                          l148 01E9                            l159 02AA                            l175 01AC  
                          l183 025B                            l184 025E                   ?_divisor_hex 0077  
                          l455 0110                            u400 01C4                            u320 0236  
                          u401 01C3                            u321 0235                            u410 01CB  
                          u330 0241                            u411 01CA                            u331 0240  
                          u420 01D2                            u340 024C                            u421 01D1  
                          u341 024B                            u430 01D9                            u350 0256  
                          u431 01D8                            u351 0255                            u440 01E0  
                          u600 01A3                            u360 02B3                            u441 01DF  
                          u601 01A2                            u361 02B2                            u450 01E7  
                          u610 02AA                            u370 02FA                            u451 01E6  
                          u611 02A9                            u371 02F9                            u380 01B2  
                          u381 01B1                            u390 01BD                            u710 0102  
                          u630 00AF                            u391 01BC                            u711 0101  
                          u631 00AE                            u720 0107                            u640 00BA  
                          u721 0106                            u705 00F6                            u641 00B9  
                          u650 00CB                            u730 022E                            u570 0174  
                          u651 00CA                            u731 022D                            u571 0173  
                          u580 0181                            u581 0180                            u670 00DD  
                          u590 0195                            u671 00DC                            u735 022A  
                          u591 0194                            u665 00CF                            u690 00EE  
                          u691 00ED                            u685 00DE                            u757 0026  
                          u695 00EA                            u767 018B                            u777 01A7  
                          u787 02D7                            _isr 02FB                            fsr0 0004  
                          indf 0000                           l1200 023B                           l1210 0256  
                         l1202 0241                           l1204 0246                           l1220 02BA  
                         l1212 02AC                           l1300 02F0                           l1230 01C4  
                         l1206 024C                           l1214 02B3                           l1222 02F4  
                         l1240 01E7                           l1232 01CB                           l1224 01AE  
                         l1400 0190                           l1208 0251                           l1216 02B5  
                         l1320 0112                           l1242 01EA                           l1234 01D2  
                         l1226 01B2                           l1410 01A3                           l1218 02B7  
                         l1236 01D9                           l1228 01BD                           l1420 029D  
                         l1412 0286                           l1404 0196                           l1332 011C  
                         l1190 02D2                           l1238 01E0                           l1422 02C2  
                         l1414 028A                           l1406 019C                           l1350 012B  
                         l1326 0117                           l1318 0111                           l1192 02D5  
                         l1424 02C6                           l1416 028C                           l1408 019E  
                         l1344 0126                           l1600 0084                           l1194 02DC  
                         l1418 0299                           l1530 00B6                           l1522 00A8  
                         l1290 026F                           l1362 0135                           l1338 0121  
                         l1602 008C                           l1540 00CB                           l1532 00BA  
                         l1524 00AB                           l1196 0230                           l1292 0272  
                         l1356 0130                           l1604 0094                           l1550 00EE  
                         l1542 00CE                           l1534 00BF                           l1526 00AF  
                         l1390 016F                           l1198 0236                           l1294 0275  
                         l1374 013F                           l1382 0144                           l1606 009C  
                         l1560 0107                           l1552 00F4                           l1544 00D5  
                         l1536 00C3                           l1528 00B4                           l1392 0174  
                         l1296 027B                           l1288 025F                           l1368 013A  
                         l1562 010C                           l1554 00F5                           l1546 00D9  
                         l1538 00C5                           l1394 017B                           l1298 02EB  
                         l1642 0149                           l1556 00FC                           l1548 00DD  
                         l1572 01F5                           l1396 0181                           l1388 016B  
                         l1580 001A                           l1558 0102                           l1574 0201  
                         l1566 01F3                           l1398 0187                           l1590 003E  
                         l1582 001F                           l1576 021B                           l1592 0052  
                         l1584 0022                           l1578 0221                           l1594 0064  
                         l1586 002A                           l1596 0076                           l1588 0034  
                         l1598 007E                           ?_isr 0070                           STR_1 02E6  
                         i1l59 02FB                           _main 001A                           btemp 007E  
                         start 000C           _Escribir_caracterLCD 02C1                          ??_isr 0070  
   __end_of_Escribir_stringLCD 02AB                          ?_main 0070                __end_of___awdiv 0111  
                        _ANSEL 0188                ___awdiv@divisor 0072                ___awdiv@counter 0020  
                        _PORTA 0005                          _PORTB 0006                          _PORTD 0008  
                        _PORTE 0009                          _TRISA 0085                          _TRISB 0086  
                        _TRISD 0088                          _TRISE 0089                __end_of_initOsc 025F  
                        _setup 025F                          pclath 000A                __end_of_spiInit 02C1  
              __end_of_spiRead 02F4                          status 0003                          wtemp0 007E  
        ?_Escribir_caracterLCD 0070                __initialization 000F                   __end_of_main 00A8  
                       ??_main 0027                   divisor_hex@a 0024                   divisor_hex@i 0025  
           set_cursor@posicion 0074               ___awdiv@dividend 0074                         ?_setup 0070  
                       _ANSELH 0189                         _TRISC2 043A                         _TRISC3 043B  
                       _TRISC5 043D                         _SSPCON 0014                         _SSPBUF 0013  
             ??_tabla_numASCII 0074                      ??___awdiv 0076               ___awdiv@quotient 0022  
                    ??_initOsc 0072                         saved_w 007E           __size_of_divisor_hex 003F  
                    ??_spiInit 0075                      ??_spiRead 0072        __end_of__initialization 0016  
       ??_Escribir_caracterLCD 0074                 __pcstackCOMMON 0070                  __end_of_setup 0285  
                      ??_setup 0076                     __pbssBANK0 002A                     __pmaintext 001A  
                   __pintentry 0004        __size_of_spiReceiveWait 0007   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 007B                   initOsc@Valor 0072                        _SSPSTAT 0094  
           _Escribir_stringLCD 0285                     __stringtab 02E0                tabla_numASCII@a 0072  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074                        ___awdiv 00A8  
                      _dec_ADC 002B                        _cen_ADC 002A                        __ptext1 0111  
                      __ptext2 02EB                        __ptext3 02F4                        __ptext4 025F  
                      __ptext5 02AB                        __ptext6 022F                        __ptext7 016A  
                      __ptext8 01F0                        __ptext9 00A8           ??_Escribir_stringLCD 0074  
                      _initOsc 022F                   __size_of_isr 0007                        _val_ADC 007A  
                ?_prender_ELCD 0070                        _uni_ADC 002C                        _spiInit 02AB  
                      _spiRead 02EB           end_of_initialization 0016                     _set_cursor 016A  
                    _PORTBbits 0006                      _PORTCbits 0007                      _PORTDbits 0008  
               ??_prender_ELCD 0072                 _spiReceiveWait 02F4                  ??_divisor_hex 0078  
          start_initialization 000F                    __end_of_isr 0302            _Escribir_comandoLCD 01AD  
   Escribir_comandoLCD@Comando 0073  __size_of_Escribir_caracterLCD 0011                    ?_set_cursor 0074  
       __end_of_spiReceiveWait 02FB           ?_Escribir_comandoLCD 0070                    __pbssCOMMON 007A  
      __size_of_tabla_numASCII 0059                      ___latbits 0002                  __pcstackBANK0 0020  
               divisor_hex@dig 0077            __end_of_divisor_hex 022F           __end_of_prender_ELCD 02E0  
              ?_spiReceiveWait 0070                       ?___awdiv 0072          ??_Escribir_comandoLCD 0073  
                    __pstrings 02E0                       ?_initOsc 0070                       ?_spiInit 0072  
                     ?_spiRead 0070            __size_of_set_cursor 0043                 __size_of_setup 0026  
         spiInit@sTransmitEdge 0074              interrupt_function 0004             spiInit@sDataSample 0072  
                  __stringbase 02E5                    _divisor_hex 01F0    __size_of_Escribir_stringLCD 0026  
          Escribir_stringLCD@d 0075            Escribir_stringLCD@i 0076               __size_of___awdiv 0069  
           __end_of__stringtab 02E6                 _tabla_numASCII 0111               __size_of_initOsc 0030  
                     __ptext10 0285                       __ptext11 02C1                       __ptext12 01AD  
                     __ptext13 02D2                       __ptext14 02FB               __size_of_spiInit 0016  
             __size_of_spiRead 0009          __size_of_prender_ELCD 000E                  __size_of_main 008E  
                 ??_set_cursor 0075                   spiInit@sType 0075              spiInit@sClockIdle 0073  
       __end_of_tabla_numASCII 016A   __end_of_Escribir_caracterLCD 02D2                   _prender_ELCD 02D2  
           __end_of_set_cursor 01AD                       intlevel1 0000               ??_spiReceiveWait 0072  
                    stringcode 02E0                     _OSCCONbits 008F                ?_tabla_numASCII 0072  
                     stringdir 02E0                       stringtab 02E0    __end_of_Escribir_comandoLCD 01F0  
