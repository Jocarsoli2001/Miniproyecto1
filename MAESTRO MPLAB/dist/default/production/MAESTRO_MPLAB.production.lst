

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 16 18:00:45 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0006                     _PORTBbits	set	6
   535  0008                     _PORTDbits	set	8
   536  0013                     _SSPBUF	set	19
   537  0014                     _SSPCON	set	20
   538  0006                     _PORTB	set	6
   539  0009                     _PORTE	set	9
   540  0007                     _PORTC	set	7
   541  0008                     _PORTD	set	8
   542  0005                     _PORTA	set	5
   543  0007                     _PORTCbits	set	7
   544  008F                     _OSCCONbits	set	143
   545  0094                     _SSPSTATbits	set	148
   546  0094                     _SSPSTAT	set	148
   547  0089                     _TRISE	set	137
   548  0088                     _TRISD	set	136
   549  0087                     _TRISC	set	135
   550  0086                     _TRISB	set	134
   551  0085                     _TRISA	set	133
   552  043B                     _TRISC3	set	1083
   553  043D                     _TRISC5	set	1085
   554  043A                     _TRISC2	set	1082
   555  0189                     _ANSELH	set	393
   556  0188                     _ANSEL	set	392
   557                           
   558                           	psect	strings
   559  033F                     __pstrings:
   560  033F                     stringtab:
   561  033F                     __stringtab:
   562  033F                     stringcode:	
   563                           ;	String table - string pointers are 1 byte each
   564                           
   565  033F                     stringdir:
   566  033F  3003               	movlw	high stringdir
   567  0340  008A               	movwf	10
   568  0341  0804               	movf	4,w
   569  0342  0A84               	incf	4,f
   570  0343  0782               	addwf	2,f
   571  0344                     __stringbase:
   572  0344  3400               	retlw	0
   573  0345                     __end_of__stringtab:
   574  0345                     STR_3:
   575  0345  3453               	retlw	83	;'S'
   576  0346  3431               	retlw	49	;'1'
   577  0347  343A               	retlw	58	;':'
   578  0348  3420               	retlw	32	;' '
   579  0349  3420               	retlw	32	;' '
   580  034A  3420               	retlw	32	;' '
   581  034B  3420               	retlw	32	;' '
   582  034C  3453               	retlw	83	;'S'
   583  034D  3432               	retlw	50	;'2'
   584  034E  343A               	retlw	58	;':'
   585  034F  3420               	retlw	32	;' '
   586  0350  3420               	retlw	32	;' '
   587  0351  3420               	retlw	32	;' '
   588  0352  3453               	retlw	83	;'S'
   589  0353  3433               	retlw	51	;'3'
   590  0354  343A               	retlw	58	;':'
   591  0355  3400               	retlw	0
   592  0356                     STR_2:
   593  0356  344A               	retlw	74	;'J'
   594  0357  346F               	retlw	111	;'o'
   595  0358  3473               	retlw	115	;'s'
   596  0359  3465               	retlw	101	;'e'
   597  035A  3420               	retlw	32	;' '
   598  035B  3453               	retlw	83	;'S'
   599  035C  3461               	retlw	97	;'a'
   600  035D  346E               	retlw	110	;'n'
   601  035E  3474               	retlw	116	;'t'
   602  035F  3469               	retlw	105	;'i'
   603  0360  347A               	retlw	122	;'z'
   604  0361  346F               	retlw	111	;'o'
   605  0362  3400               	retlw	0
   606  0363                     STR_1:
   607  0363  3448               	retlw	72	;'H'
   608  0364  346F               	retlw	111	;'o'
   609  0365  346C               	retlw	108	;'l'
   610  0366  3461               	retlw	97	;'a'
   611  0367  3400               	retlw	0
   612                           
   613                           	psect	cinit
   614  000F                     start_initialization:	
   615                           ; #config settings
   616                           
   617  000F                     __initialization:
   618                           
   619                           ; Clear objects allocated to COMMON
   620  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   621  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   622                           
   623                           ; Clear objects allocated to BANK0
   624  0011  1283               	bcf	3,5	;RP0=0, select bank0
   625  0012  1303               	bcf	3,6	;RP1=0, select bank0
   626  0013  01AE               	clrf	__pbssBANK0& (0+127)
   627  0014  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   628  0015  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   629  0016  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   630  0017  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   631  0018                     end_of_initialization:	
   632                           ;End of C runtime variable initialization code
   633                           
   634  0018                     __end_of__initialization:
   635  0018  0183               	clrf	3
   636  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   637                           
   638                           	psect	bssCOMMON
   639  007A                     __pbssCOMMON:
   640  007A                     _val_ADC:
   641  007A                     	ds	1
   642  007B                     _ADC_dig:
   643  007B                     	ds	1
   644                           
   645                           	psect	bssBANK0
   646  002E                     __pbssBANK0:
   647  002E                     _trad:
   648  002E                     	ds	1
   649  002F                     _num:
   650  002F                     	ds	1
   651  0030                     _cen_ADC:
   652  0030                     	ds	1
   653  0031                     _dec_ADC:
   654  0031                     	ds	1
   655  0032                     _uni_ADC:
   656  0032                     	ds	1
   657                           
   658                           	psect	cstackCOMMON
   659  0070                     __pcstackCOMMON:
   660  0070                     ?_setup:
   661  0070                     ?_Iniciar_LCD:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Limpiar_pantallaLCD:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Escribir_stringLCD:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_spiRead:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_tabla_numASCII:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_Escribir_caracterLCD:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_initOsc:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_isr:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_isr:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_main:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_spiReceiveWait:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_prender_ELCD:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_Escribir_comandoLCD:	
   698                           ; 1 bytes @ 0x0
   699                           
   700                           
   701                           ; 1 bytes @ 0x0
   702  0070                     	ds	2
   703  0072                     ??_spiRead:
   704  0072                     ??_tabla_numASCII:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0072                     ??_initOsc:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ?_spiInit:	
   711                           ; 1 bytes @ 0x2
   712                           
   713  0072                     ??_spiReceiveWait:	
   714                           ; 1 bytes @ 0x2
   715                           
   716  0072                     ??_prender_ELCD:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ?___awdiv:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ?___awmod:	
   723                           ; 2 bytes @ 0x2
   724                           
   725  0072                     spiInit@sDataSample:	
   726                           ; 2 bytes @ 0x2
   727                           
   728  0072                     initOsc@Valor:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     ___awdiv@divisor:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0072                     ___awmod@divisor:	
   735                           ; 2 bytes @ 0x2
   736                           
   737                           
   738                           ; 2 bytes @ 0x2
   739  0072                     	ds	1
   740  0073                     ??_Escribir_comandoLCD:
   741  0073                     spiInit@sClockIdle:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0073                     Escribir_comandoLCD@Comando:	
   745                           ; 1 bytes @ 0x3
   746                           
   747                           
   748                           ; 1 bytes @ 0x3
   749  0073                     	ds	1
   750  0074                     ??_Iniciar_LCD:
   751  0074                     ??_Limpiar_pantallaLCD:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ?_set_cursor:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     ??_Escribir_stringLCD:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ??_Escribir_caracterLCD:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     tabla_numASCII@a:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     spiInit@sTransmitEdge:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     Escribir_caracterLCD@a:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     set_cursor@posicion:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ___awdiv@dividend:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ___awmod@dividend:	
   779                           ; 2 bytes @ 0x4
   780                           
   781                           
   782                           ; 2 bytes @ 0x4
   783  0074                     	ds	1
   784  0075                     ??_set_cursor:
   785  0075                     ??_spiInit:	
   786                           ; 1 bytes @ 0x5
   787                           
   788  0075                     spiInit@sType:	
   789                           ; 1 bytes @ 0x5
   790                           
   791  0075                     Escribir_stringLCD@i:	
   792                           ; 1 bytes @ 0x5
   793                           
   794                           
   795                           ; 1 bytes @ 0x5
   796  0075                     	ds	1
   797  0076                     ??_setup:
   798  0076                     ??___awdiv:	
   799                           ; 1 bytes @ 0x6
   800                           
   801  0076                     ??___awmod:	
   802                           ; 1 bytes @ 0x6
   803                           
   804  0076                     Escribir_stringLCD@d:	
   805                           ; 1 bytes @ 0x6
   806                           
   807                           
   808                           ; 1 bytes @ 0x6
   809  0076                     	ds	1
   810  0077                     set_cursor@linea:
   811  0077                     ___awmod@counter:	
   812                           ; 1 bytes @ 0x7
   813                           
   814                           
   815                           ; 1 bytes @ 0x7
   816  0077                     	ds	1
   817  0078                     ___awmod@sign:
   818                           
   819                           ; 1 bytes @ 0x8
   820  0078                     	ds	1
   821  0079                     ?_divisor_dec:
   822  0079                     divisor_dec@dig1:	
   823                           ; 1 bytes @ 0x9
   824                           
   825                           
   826                           ; 1 bytes @ 0x9
   827  0079                     	ds	1
   828                           
   829                           	psect	cstackBANK0
   830  0020                     __pcstackBANK0:
   831  0020                     ___awdiv@counter:
   832                           
   833                           ; 1 bytes @ 0x0
   834  0020                     	ds	1
   835  0021                     ___awdiv@sign:
   836                           
   837                           ; 1 bytes @ 0x1
   838  0021                     	ds	1
   839  0022                     ___awdiv@quotient:
   840                           
   841                           ; 2 bytes @ 0x2
   842  0022                     	ds	2
   843  0024                     ??_divisor_dec:
   844                           
   845                           ; 1 bytes @ 0x4
   846  0024                     	ds	4
   847  0028                     divisor_dec@b:
   848                           
   849                           ; 1 bytes @ 0x8
   850  0028                     	ds	1
   851  0029                     divisor_dec@n:
   852                           
   853                           ; 2 bytes @ 0x9
   854  0029                     	ds	2
   855  002B                     ??_main:
   856                           
   857                           ; 1 bytes @ 0xB
   858  002B                     	ds	3
   859                           
   860                           	psect	maintext
   861  001C                     __pmaintext:	
   862 ;;
   863 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   864 ;;
   865 ;; *************** function _main *****************
   866 ;; Defined at:
   867 ;;		line 70 in file "Maestro.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : B00/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       3       0       0       0
   884 ;;      Totals:         0       3       0       0       0
   885 ;;Total ram usage:        3 bytes
   886 ;; Hardware stack levels required when called: 4
   887 ;; This function calls:
   888 ;;		_Escribir_caracterLCD
   889 ;;		_Escribir_stringLCD
   890 ;;		_Iniciar_LCD
   891 ;;		_Limpiar_pantallaLCD
   892 ;;		_divisor_dec
   893 ;;		_set_cursor
   894 ;;		_setup
   895 ;;		_spiRead
   896 ;;		_tabla_numASCII
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _main
   904  001C                     _main:
   905  001C                     l1678:	
   906                           ;incstack = 0
   907                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   908                           
   909                           
   910                           ;Maestro.c: 71:     setup();
   911  001C  120A  118A  2368  120A  118A  	fcall	_setup
   912                           
   913                           ;Maestro.c: 72:     Iniciar_LCD();
   914  0021  120A  118A  2143  120A  118A  	fcall	_Iniciar_LCD
   915                           
   916                           ;Maestro.c: 73:     Limpiar_pantallaLCD();
   917  0026  120A  118A  23B6  120A  118A  	fcall	_Limpiar_pantallaLCD
   918                           
   919                           ;Maestro.c: 74:     set_cursor(1,0);
   920  002B  01F4               	clrf	set_cursor@posicion
   921  002C  3001               	movlw	1
   922  002D  120A  118A  224A  120A  118A  	fcall	_set_cursor
   923  0032                     l1680:
   924                           
   925                           ;Maestro.c: 75:     Escribir_stringLCD("Hola");
   926  0032  301F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   927  0033  120A  118A  2390  120A  118A  	fcall	_Escribir_stringLCD
   928  0038                     l1682:
   929                           
   930                           ;Maestro.c: 76:     set_cursor(2,2);
   931  0038  3002               	movlw	2
   932  0039  1283               	bcf	3,5	;RP0=0, select bank0
   933  003A  1303               	bcf	3,6	;RP1=0, select bank0
   934  003B  00AB               	movwf	??_main
   935  003C  082B               	movf	??_main,w
   936  003D  00F4               	movwf	set_cursor@posicion
   937  003E  3002               	movlw	2
   938  003F  120A  118A  224A  120A  118A  	fcall	_set_cursor
   939                           
   940                           ;Maestro.c: 77:     Escribir_stringLCD("Jose Santizo");
   941  0044  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   942  0045  120A  118A  2390  120A  118A  	fcall	_Escribir_stringLCD
   943  004A                     l1684:
   944                           
   945                           ;Maestro.c: 78:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   946  004A  301A               	movlw	26
   947  004B  1283               	bcf	3,5	;RP0=0, select bank0
   948  004C  1303               	bcf	3,6	;RP1=0, select bank0
   949  004D  00AD               	movwf	??_main+2
   950  004E  305E               	movlw	94
   951  004F  00AC               	movwf	??_main+1
   952  0050  306D               	movlw	109
   953  0051  00AB               	movwf	??_main
   954  0052                     u937:
   955  0052  0BAB               	decfsz	??_main,f
   956  0053  2852               	goto	u937
   957  0054  0BAC               	decfsz	??_main+1,f
   958  0055  2852               	goto	u937
   959  0056  0BAD               	decfsz	??_main+2,f
   960  0057  2852               	goto	u937
   961  0058  2859               	nop2
   962  0059                     l1686:
   963                           
   964                           ;Maestro.c: 79:     Limpiar_pantallaLCD();
   965  0059  120A  118A  23B6  120A  118A  	fcall	_Limpiar_pantallaLCD
   966  005E                     l1688:
   967                           
   968                           ;Maestro.c: 81:         set_cursor(1,0);
   969  005E  01F4               	clrf	set_cursor@posicion
   970  005F  3001               	movlw	1
   971  0060  120A  118A  224A  120A  118A  	fcall	_set_cursor
   972  0065                     l1690:
   973                           
   974                           ;Maestro.c: 82:         Escribir_stringLCD("S1:    S2:   S3:");
   975  0065  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   976  0066  120A  118A  2390  120A  118A  	fcall	_Escribir_stringLCD
   977  006B                     l1692:
   978                           
   979                           ;Maestro.c: 88:         PORTCbits.RC2 = 0;
   980  006B  1283               	bcf	3,5	;RP0=0, select bank0
   981  006C  1303               	bcf	3,6	;RP1=0, select bank0
   982  006D  1107               	bcf	7,2	;volatile
   983                           
   984                           ;Maestro.c: 89:         _delay((unsigned long)((1)*(4000000/4000.0)));
   985  006E  30C7               	movlw	199
   986  006F  1283               	bcf	3,5	;RP0=0, select bank0
   987  0070  1303               	bcf	3,6	;RP1=0, select bank0
   988  0071  00AB               	movwf	??_main
   989  0072                     u947:
   990  0072  2873               	nop2
   991  0073  0BAB               	decfsz	??_main,f
   992  0074  2872               	goto	u947
   993  0075  2876               	nop2
   994  0076                     l1694:
   995                           
   996                           ;Maestro.c: 91:         val_ADC = spiRead();
   997  0076  120A  118A  23FE  120A  118A  	fcall	_spiRead
   998  007B  1283               	bcf	3,5	;RP0=0, select bank0
   999  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1000  007D  00AB               	movwf	??_main
  1001  007E  082B               	movf	??_main,w
  1002  007F  00FA               	movwf	_val_ADC
  1003  0080                     l1696:
  1004                           
  1005                           ;Maestro.c: 93:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1006  0080  30C7               	movlw	199
  1007  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0083  00AB               	movwf	??_main
  1010  0084                     u957:
  1011  0084  2885               	nop2
  1012  0085  0BAB               	decfsz	??_main,f
  1013  0086  2884               	goto	u957
  1014  0087  2888               	nop2
  1015  0088                     l1698:
  1016                           
  1017                           ;Maestro.c: 94:         PORTCbits.RC2 = 1;
  1018  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1020  008A  1507               	bsf	7,2	;volatile
  1021  008B                     l1700:
  1022                           
  1023                           ;Maestro.c: 96:         divisor_dec(val_ADC, ADC_dig);
  1024  008B  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
  1025  008C  00AB               	movwf	??_main
  1026  008D  082B               	movf	??_main,w
  1027  008E  00F9               	movwf	divisor_dec@dig1
  1028  008F  087A               	movf	_val_ADC,w
  1029  0090  120A  118A  21FA  120A  118A  	fcall	_divisor_dec
  1030  0095                     l1702:
  1031                           
  1032                           ;Maestro.c: 98:         uni_ADC = tabla_numASCII(ADC_dig[0]);
  1033  0095  087B               	movf	_ADC_dig,w
  1034  0096  120A  118A  22D0  120A  118A  	fcall	_tabla_numASCII
  1035  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1036  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1037  009D  00AB               	movwf	??_main
  1038  009E  082B               	movf	??_main,w
  1039  009F  00B2               	movwf	_uni_ADC
  1040  00A0                     l1704:
  1041                           
  1042                           ;Maestro.c: 99:         dec_ADC = tabla_numASCII(ADC_dig[1]);
  1043  00A0  087C               	movf	_ADC_dig+1,w
  1044  00A1  120A  118A  22D0  120A  118A  	fcall	_tabla_numASCII
  1045  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1046  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1047  00A8  00AB               	movwf	??_main
  1048  00A9  082B               	movf	??_main,w
  1049  00AA  00B1               	movwf	_dec_ADC
  1050  00AB                     l1706:
  1051                           
  1052                           ;Maestro.c: 100:         cen_ADC = tabla_numASCII(ADC_dig[2]);
  1053  00AB  087D               	movf	_ADC_dig+2,w
  1054  00AC  120A  118A  22D0  120A  118A  	fcall	_tabla_numASCII
  1055  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1056  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1057  00B3  00AB               	movwf	??_main
  1058  00B4  082B               	movf	??_main,w
  1059  00B5  00B0               	movwf	_cen_ADC
  1060  00B6                     l1708:
  1061                           
  1062                           ;Maestro.c: 112:         set_cursor(2,1);
  1063  00B6  01F4               	clrf	set_cursor@posicion
  1064  00B7  0AF4               	incf	set_cursor@posicion,f
  1065  00B8  3002               	movlw	2
  1066  00B9  120A  118A  224A  120A  118A  	fcall	_set_cursor
  1067  00BE                     l1710:
  1068                           
  1069                           ;Maestro.c: 113:         Escribir_caracterLCD(uni_ADC);
  1070  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1071  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1072  00C0  0832               	movf	_uni_ADC,w
  1073  00C1  120A  118A  23E6  120A  118A  	fcall	_Escribir_caracterLCD
  1074  00C6                     l1712:
  1075                           
  1076                           ;Maestro.c: 114:         Escribir_caracterLCD(dec_ADC);
  1077  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1078  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1079  00C8  0831               	movf	_dec_ADC,w
  1080  00C9  120A  118A  23E6  120A  118A  	fcall	_Escribir_caracterLCD
  1081  00CE                     l1714:
  1082                           
  1083                           ;Maestro.c: 115:         Escribir_caracterLCD(cen_ADC);
  1084  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1085  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1086  00D0  0830               	movf	_cen_ADC,w
  1087  00D1  120A  118A  23E6  120A  118A  	fcall	_Escribir_caracterLCD
  1088  00D6  285E               	goto	l1688
  1089  00D7  120A  118A  280C   	ljmp	start
  1090  00DA                     __end_of_main:
  1091                           
  1092                           	psect	text1
  1093  02D0                     __ptext1:	
  1094 ;; *************** function _tabla_numASCII *****************
  1095 ;; Defined at:
  1096 ;;		line 152 in file "Maestro.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  a               1    wreg     unsigned char 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  a               1    4[COMMON] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      unsigned char 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0
  1112 ;;      Temps:          2       0       0       0       0
  1113 ;;      Totals:         3       0       0       0       0
  1114 ;;Total ram usage:        3 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _tabla_numASCII
  1126  02D0                     _tabla_numASCII:
  1127                           
  1128                           ;incstack = 0
  1129                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1130                           ;tabla_numASCII@a stored from wreg
  1131  02D0  00F4               	movwf	tabla_numASCII@a
  1132  02D1                     l1478:
  1133                           
  1134                           ;Maestro.c: 153:     switch(a){
  1135  02D1  2AE6               	goto	l1542
  1136  02D2                     l1480:
  1137                           
  1138                           ;Maestro.c: 155:             return 48;
  1139  02D2  3030               	movlw	48
  1140  02D3  2B0E               	goto	l87
  1141  02D4                     l1486:
  1142                           
  1143                           ;Maestro.c: 158:             return 49;
  1144  02D4  3031               	movlw	49
  1145  02D5  2B0E               	goto	l87
  1146  02D6                     l1492:
  1147                           
  1148                           ;Maestro.c: 161:             return 50;
  1149  02D6  3032               	movlw	50
  1150  02D7  2B0E               	goto	l87
  1151  02D8                     l1498:
  1152                           
  1153                           ;Maestro.c: 164:             return 51;
  1154  02D8  3033               	movlw	51
  1155  02D9  2B0E               	goto	l87
  1156  02DA                     l1504:
  1157                           
  1158                           ;Maestro.c: 167:             return 52;
  1159  02DA  3034               	movlw	52
  1160  02DB  2B0E               	goto	l87
  1161  02DC                     l1510:
  1162                           
  1163                           ;Maestro.c: 170:             return 53;
  1164  02DC  3035               	movlw	53
  1165  02DD  2B0E               	goto	l87
  1166  02DE                     l1516:
  1167                           
  1168                           ;Maestro.c: 173:             return 54;
  1169  02DE  3036               	movlw	54
  1170  02DF  2B0E               	goto	l87
  1171  02E0                     l1522:
  1172                           
  1173                           ;Maestro.c: 176:             return 55;
  1174  02E0  3037               	movlw	55
  1175  02E1  2B0E               	goto	l87
  1176  02E2                     l1528:
  1177                           
  1178                           ;Maestro.c: 179:             return 56;
  1179  02E2  3038               	movlw	56
  1180  02E3  2B0E               	goto	l87
  1181  02E4                     l1534:
  1182                           
  1183                           ;Maestro.c: 182:             return 57;
  1184  02E4  3039               	movlw	57
  1185  02E5  2B0E               	goto	l87
  1186  02E6                     l1542:
  1187  02E6  0874               	movf	tabla_numASCII@a,w
  1188  02E7  00F2               	movwf	??_tabla_numASCII
  1189  02E8  01F3               	clrf	??_tabla_numASCII+1
  1190                           
  1191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1192                           ; Switch size 1, requested type "simple"
  1193                           ; Number of cases is 1, Range of values is 0 to 0
  1194                           ; switch strategies available:
  1195                           ; Name         Instructions Cycles
  1196                           ; simple_byte            4     3 (average)
  1197                           ; direct_byte           11     8 (fixed)
  1198                           ; jumptable            260     6 (fixed)
  1199                           ;	Chosen strategy is simple_byte
  1200  02E9  0873               	movf	??_tabla_numASCII+1,w
  1201  02EA  3A00               	xorlw	0	; case 0
  1202  02EB  1903               	skipnz
  1203  02EC  2AEE               	goto	l1748
  1204  02ED  2B0E               	goto	l87
  1205  02EE                     l1748:
  1206                           
  1207                           ; Switch size 1, requested type "simple"
  1208                           ; Number of cases is 10, Range of values is 0 to 9
  1209                           ; switch strategies available:
  1210                           ; Name         Instructions Cycles
  1211                           ; simple_byte           31    16 (average)
  1212                           ; direct_byte           38     8 (fixed)
  1213                           ; jumptable            260     6 (fixed)
  1214                           ;	Chosen strategy is simple_byte
  1215  02EE  0872               	movf	??_tabla_numASCII,w
  1216  02EF  3A00               	xorlw	0	; case 0
  1217  02F0  1903               	skipnz
  1218  02F1  2AD2               	goto	l1480
  1219  02F2  3A01               	xorlw	1	; case 1
  1220  02F3  1903               	skipnz
  1221  02F4  2AD4               	goto	l1486
  1222  02F5  3A03               	xorlw	3	; case 2
  1223  02F6  1903               	skipnz
  1224  02F7  2AD6               	goto	l1492
  1225  02F8  3A01               	xorlw	1	; case 3
  1226  02F9  1903               	skipnz
  1227  02FA  2AD8               	goto	l1498
  1228  02FB  3A07               	xorlw	7	; case 4
  1229  02FC  1903               	skipnz
  1230  02FD  2ADA               	goto	l1504
  1231  02FE  3A01               	xorlw	1	; case 5
  1232  02FF  1903               	skipnz
  1233  0300  2ADC               	goto	l1510
  1234  0301  3A03               	xorlw	3	; case 6
  1235  0302  1903               	skipnz
  1236  0303  2ADE               	goto	l1516
  1237  0304  3A01               	xorlw	1	; case 7
  1238  0305  1903               	skipnz
  1239  0306  2AE0               	goto	l1522
  1240  0307  3A0F               	xorlw	15	; case 8
  1241  0308  1903               	skipnz
  1242  0309  2AE2               	goto	l1528
  1243  030A  3A01               	xorlw	1	; case 9
  1244  030B  1903               	skipnz
  1245  030C  2AE4               	goto	l1534
  1246  030D  2B0E               	goto	l87
  1247  030E                     l87:
  1248  030E  0008               	return
  1249  030F                     __end_of_tabla_numASCII:
  1250                           
  1251                           	psect	text2
  1252  03FE                     __ptext2:	
  1253 ;; *************** function _spiRead *****************
  1254 ;; Defined at:
  1255 ;;		line 45 in file "SPI.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;		None
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         0       0       0       0       0
  1273 ;;Total ram usage:        0 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 2
  1276 ;; This function calls:
  1277 ;;		_spiReceiveWait
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _spiRead
  1285  03FE                     _spiRead:
  1286  03FE                     l1460:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1289                           
  1290                           
  1291                           ;SPI.c: 47:     spiReceiveWait();
  1292  03FE  120A  118A  2407  120A  118A  	fcall	_spiReceiveWait
  1293  0403                     l1462:
  1294                           
  1295                           ;SPI.c: 48:     return(SSPBUF);
  1296  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0405  0813               	movf	19,w	;volatile
  1299  0406                     l132:
  1300  0406  0008               	return
  1301  0407                     __end_of_spiRead:
  1302                           
  1303                           	psect	text3
  1304  0407                     __ptext3:	
  1305 ;; *************** function _spiReceiveWait *****************
  1306 ;; Defined at:
  1307 ;;		line 27 in file "SPI.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		None
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_spiRead
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _spiReceiveWait
  1337  0407                     _spiReceiveWait:
  1338  0407                     l1278:	
  1339                           ;incstack = 0
  1340                           ; Regs used in _spiReceiveWait: []
  1341                           
  1342  0407                     l118:	
  1343                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
  1344                           
  1345  0407  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0408  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0409  1C14               	btfss	20,0	;volatile
  1348  040A  2C0C               	goto	u461
  1349  040B  2C0D               	goto	u460
  1350  040C                     u461:
  1351  040C  2C07               	goto	l118
  1352  040D                     u460:
  1353  040D                     l121:
  1354  040D  0008               	return
  1355  040E                     __end_of_spiReceiveWait:
  1356                           
  1357                           	psect	text4
  1358  0368                     __ptext4:	
  1359 ;; *************** function _setup *****************
  1360 ;; Defined at:
  1361 ;;		line 121 in file "Maestro.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       0       0       0       0
  1379 ;;Total ram usage:        0 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 2
  1382 ;; This function calls:
  1383 ;;		_initOsc
  1384 ;;		_spiInit
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function _setup
  1392  0368                     _setup:
  1393  0368                     l1382:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1396                           
  1397                           
  1398                           ;Maestro.c: 124:     ANSEL = 0;
  1399  0368  1683               	bsf	3,5	;RP0=1, select bank3
  1400  0369  1703               	bsf	3,6	;RP1=1, select bank3
  1401  036A  0188               	clrf	8	;volatile
  1402                           
  1403                           ;Maestro.c: 125:     ANSELH = 0;
  1404  036B  0189               	clrf	9	;volatile
  1405                           
  1406                           ;Maestro.c: 127:     TRISA = 0;
  1407  036C  1683               	bsf	3,5	;RP0=1, select bank1
  1408  036D  1303               	bcf	3,6	;RP1=0, select bank1
  1409  036E  0185               	clrf	5	;volatile
  1410                           
  1411                           ;Maestro.c: 128:     TRISB = 0;
  1412  036F  0186               	clrf	6	;volatile
  1413                           
  1414                           ;Maestro.c: 129:     TRISC = 0;
  1415  0370  0187               	clrf	7	;volatile
  1416                           
  1417                           ;Maestro.c: 130:     TRISD = 0;
  1418  0371  0188               	clrf	8	;volatile
  1419                           
  1420                           ;Maestro.c: 131:     TRISE = 0;
  1421  0372  0189               	clrf	9	;volatile
  1422                           
  1423                           ;Maestro.c: 133:     PORTA = 0;
  1424  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1425  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1426  0375  0185               	clrf	5	;volatile
  1427                           
  1428                           ;Maestro.c: 134:     PORTD = 0;
  1429  0376  0188               	clrf	8	;volatile
  1430                           
  1431                           ;Maestro.c: 135:     PORTC = 0;
  1432  0377  0187               	clrf	7	;volatile
  1433                           
  1434                           ;Maestro.c: 136:     PORTE = 0;
  1435  0378  0189               	clrf	9	;volatile
  1436                           
  1437                           ;Maestro.c: 137:     PORTB = 0;
  1438  0379  0186               	clrf	6	;volatile
  1439  037A                     l1384:
  1440                           
  1441                           ;Maestro.c: 140:     TRISC2 = 0;
  1442  037A  1683               	bsf	3,5	;RP0=1, select bank1
  1443  037B  1303               	bcf	3,6	;RP1=0, select bank1
  1444  037C  1107               	bcf	7,2	;volatile
  1445  037D                     l1386:
  1446                           
  1447                           ;Maestro.c: 141:     PORTCbits.RC2 = 1;
  1448  037D  1283               	bcf	3,5	;RP0=0, select bank0
  1449  037E  1303               	bcf	3,6	;RP1=0, select bank0
  1450  037F  1507               	bsf	7,2	;volatile
  1451  0380                     l1388:
  1452                           
  1453                           ;Maestro.c: 144:     initOsc(4);
  1454  0380  3004               	movlw	4
  1455  0381  120A  118A  230F  120A  118A  	fcall	_initOsc
  1456  0386                     l1390:
  1457                           
  1458                           ;Maestro.c: 147:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
  1459  0386  01F2               	clrf	spiInit@sDataSample
  1460  0387  01F3               	clrf	spiInit@sClockIdle
  1461  0388  01F4               	clrf	spiInit@sTransmitEdge
  1462  0389  3020               	movlw	32
  1463  038A  120A  118A  23D0  120A  118A  	fcall	_spiInit
  1464  038F                     l82:
  1465  038F  0008               	return
  1466  0390                     __end_of_setup:
  1467                           
  1468                           	psect	text5
  1469  03D0                     __ptext5:	
  1470 ;; *************** function _spiInit *****************
  1471 ;; Defined at:
  1472 ;;		line 10 in file "SPI.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  sType           1    wreg     enum E1264
  1475 ;;  sDataSample     1    2[COMMON] enum E1272
  1476 ;;  sClockIdle      1    3[COMMON] enum E1276
  1477 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  sType           1    5[COMMON] enum E1264
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         3       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0
  1492 ;;      Totals:         4       0       0       0       0
  1493 ;;Total ram usage:        4 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_setup
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _spiInit
  1505  03D0                     _spiInit:
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1509                           ;spiInit@sType stored from wreg
  1510  03D0  00F5               	movwf	spiInit@sType
  1511  03D1                     l1268:
  1512                           
  1513                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_polarity
      +                           sClockIdle, Spi_Clock_edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1514  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  1515  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  1516  03D3  1287               	bcf	7,5	;volatile
  1517                           
  1518                           ;SPI.c: 13:     if(sType & 0b00000100)
  1519  03D4  1D75               	btfss	spiInit@sType,2
  1520  03D5  2BD7               	goto	u451
  1521  03D6  2BD8               	goto	u450
  1522  03D7                     u451:
  1523  03D7  2BDC               	goto	l1274
  1524  03D8                     u450:
  1525  03D8                     l1270:
  1526                           
  1527                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1528  03D8  0874               	movf	spiInit@sTransmitEdge,w
  1529  03D9  0094               	movwf	20	;volatile
  1530  03DA                     l1272:
  1531                           
  1532                           ;SPI.c: 16:         TRISC3 = 1;
  1533  03DA  1587               	bsf	7,3	;volatile
  1534                           
  1535                           ;SPI.c: 17:     }
  1536  03DB  2BE0               	goto	l114
  1537  03DC                     l1274:
  1538                           
  1539                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1540  03DC  0872               	movf	spiInit@sDataSample,w
  1541  03DD  0474               	iorwf	spiInit@sTransmitEdge,w
  1542  03DE  0094               	movwf	20	;volatile
  1543  03DF                     l1276:
  1544                           
  1545                           ;SPI.c: 21:         TRISC3 = 0;
  1546  03DF  1187               	bcf	7,3	;volatile
  1547  03E0                     l114:	
  1548                           ;SPI.c: 22:     }
  1549                           
  1550                           
  1551                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1552  03E0  0875               	movf	spiInit@sType,w
  1553  03E1  0473               	iorwf	spiInit@sClockIdle,w
  1554  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1555  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1556  03E4  0094               	movwf	20	;volatile
  1557  03E5                     l115:
  1558  03E5  0008               	return
  1559  03E6                     __end_of_spiInit:
  1560                           
  1561                           	psect	text6
  1562  030F                     __ptext6:	
  1563 ;; *************** function _initOsc *****************
  1564 ;; Defined at:
  1565 ;;		line 12 in file "Oscilador.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;  Valor           1    wreg     unsigned char 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  Valor           1    2[COMMON] unsigned char 
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         1       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0
  1582 ;;      Totals:         1       0       0       0       0
  1583 ;;Total ram usage:        1 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 1
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_setup
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _initOsc
  1595  030F                     _initOsc:
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1599                           ;initOsc@Valor stored from wreg
  1600  030F  00F2               	movwf	initOsc@Valor
  1601  0310                     l1252:
  1602                           
  1603                           ;Oscilador.c: 14:     if(Valor == 8){
  1604  0310  3008               	movlw	8
  1605  0311  0672               	xorwf	initOsc@Valor,w
  1606  0312  1D03               	btfss	3,2
  1607  0313  2B15               	goto	u411
  1608  0314  2B16               	goto	u410
  1609  0315                     u411:
  1610  0315  2B1B               	goto	l1256
  1611  0316                     u410:
  1612  0316                     l1254:
  1613                           
  1614                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1615  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1616  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1617  0318  160F               	bsf	15,4	;volatile
  1618                           
  1619                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1620  0319  168F               	bsf	15,5	;volatile
  1621                           
  1622                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1623  031A  170F               	bsf	15,6	;volatile
  1624  031B                     l1256:
  1625                           
  1626                           ;Oscilador.c: 19:     if(Valor == 4){
  1627  031B  3004               	movlw	4
  1628  031C  0672               	xorwf	initOsc@Valor,w
  1629  031D  1D03               	btfss	3,2
  1630  031E  2B20               	goto	u421
  1631  031F  2B21               	goto	u420
  1632  0320                     u421:
  1633  0320  2B26               	goto	l1260
  1634  0321                     u420:
  1635  0321                     l1258:
  1636                           
  1637                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1638  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0323  120F               	bcf	15,4	;volatile
  1641                           
  1642                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1643  0324  168F               	bsf	15,5	;volatile
  1644                           
  1645                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1646  0325  170F               	bsf	15,6	;volatile
  1647  0326                     l1260:
  1648                           
  1649                           ;Oscilador.c: 24:     if(Valor == 2){
  1650  0326  3002               	movlw	2
  1651  0327  0672               	xorwf	initOsc@Valor,w
  1652  0328  1D03               	btfss	3,2
  1653  0329  2B2B               	goto	u431
  1654  032A  2B2C               	goto	u430
  1655  032B                     u431:
  1656  032B  2B31               	goto	l1264
  1657  032C                     u430:
  1658  032C                     l1262:
  1659                           
  1660                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1661  032C  1683               	bsf	3,5	;RP0=1, select bank1
  1662  032D  1303               	bcf	3,6	;RP1=0, select bank1
  1663  032E  160F               	bsf	15,4	;volatile
  1664                           
  1665                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1666  032F  128F               	bcf	15,5	;volatile
  1667                           
  1668                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1669  0330  170F               	bsf	15,6	;volatile
  1670  0331                     l1264:
  1671                           
  1672                           ;Oscilador.c: 29:     if(Valor == 1){
  1673  0331  0372               	decf	initOsc@Valor,w
  1674  0332  1D03               	btfss	3,2
  1675  0333  2B35               	goto	u441
  1676  0334  2B36               	goto	u440
  1677  0335                     u441:
  1678  0335  2B3B               	goto	l195
  1679  0336                     u440:
  1680  0336                     l1266:
  1681                           
  1682                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1683  0336  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0337  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0338  120F               	bcf	15,4	;volatile
  1686                           
  1687                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1688  0339  128F               	bcf	15,5	;volatile
  1689                           
  1690                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1691  033A  170F               	bsf	15,6	;volatile
  1692  033B                     l195:	
  1693                           ;Oscilador.c: 33:     }
  1694                           
  1695                           
  1696                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1697  033B  1683               	bsf	3,5	;RP0=1, select bank1
  1698  033C  1303               	bcf	3,6	;RP1=0, select bank1
  1699  033D  140F               	bsf	15,0	;volatile
  1700  033E                     l196:
  1701  033E  0008               	return
  1702  033F                     __end_of_initOsc:
  1703                           
  1704                           	psect	text7
  1705  024A                     __ptext7:	
  1706 ;; *************** function _set_cursor *****************
  1707 ;; Defined at:
  1708 ;;		line 77 in file "LCD.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  linea           1    wreg     unsigned char 
  1711 ;;  posicion        1    4[COMMON] unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  linea           1    7[COMMON] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         1       0       0       0       0
  1724 ;;      Locals:         1       0       0       0       0
  1725 ;;      Temps:          2       0       0       0       0
  1726 ;;      Totals:         4       0       0       0       0
  1727 ;;Total ram usage:        4 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 3
  1730 ;; This function calls:
  1731 ;;		_Escribir_comandoLCD
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _set_cursor
  1739  024A                     _set_cursor:
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1743                           ;set_cursor@linea stored from wreg
  1744  024A  00F7               	movwf	set_cursor@linea
  1745  024B                     l1426:
  1746                           
  1747                           ;LCD.c: 78:     PORTCbits.RC7 = 0; PORTDbits.RD4 = 0;
  1748  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1749  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1750  024D  1387               	bcf	7,7	;volatile
  1751  024E  1208               	bcf	8,4	;volatile
  1752  024F                     l1428:
  1753                           
  1754                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1755  024F  0377               	decf	set_cursor@linea,w
  1756  0250  1D03               	btfss	3,2
  1757  0251  2A53               	goto	u741
  1758  0252  2A54               	goto	u740
  1759  0253                     u741:
  1760  0253  2A5B               	goto	l1432
  1761  0254                     u740:
  1762  0254                     l1430:
  1763  0254  3080               	movlw	128
  1764  0255  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  1765  025A  2A67               	goto	l1436
  1766  025B                     l1432:
  1767  025B  3002               	movlw	2
  1768  025C  0677               	xorwf	set_cursor@linea,w
  1769  025D  1D03               	btfss	3,2
  1770  025E  2A60               	goto	u751
  1771  025F  2A61               	goto	u750
  1772  0260                     u751:
  1773  0260  2A67               	goto	l1436
  1774  0261                     u750:
  1775  0261                     l1434:
  1776  0261  30C0               	movlw	192
  1777  0262  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  1778  0267                     l1436:
  1779                           
  1780                           ;LCD.c: 84:     _delay((unsigned long)((40)*(4000000/4000.0)));
  1781  0267  3034               	movlw	52
  1782  0268  00F6               	movwf	??_set_cursor+1
  1783  0269  30F1               	movlw	241
  1784  026A  00F5               	movwf	??_set_cursor
  1785  026B                     u967:
  1786  026B  0BF5               	decfsz	??_set_cursor,f
  1787  026C  2A6B               	goto	u967
  1788  026D  0BF6               	decfsz	??_set_cursor+1,f
  1789  026E  2A6B               	goto	u967
  1790  026F  2A70               	nop2
  1791  0270                     l1438:
  1792                           
  1793                           ;LCD.c: 86:     if (posicion != 0){
  1794  0270  0874               	movf	set_cursor@posicion,w
  1795  0271  1903               	btfsc	3,2
  1796  0272  2A74               	goto	u761
  1797  0273  2A75               	goto	u760
  1798  0274                     u761:
  1799  0274  2A8C               	goto	l187
  1800  0275                     u760:
  1801  0275  2A7E               	goto	l1446
  1802  0276                     l1442:
  1803                           
  1804                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1805  0276  3014               	movlw	20
  1806  0277  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  1807  027C                     l1444:
  1808                           
  1809                           ;LCD.c: 89:             posicion--;
  1810  027C  3001               	movlw	1
  1811  027D  02F4               	subwf	set_cursor@posicion,f
  1812  027E                     l1446:
  1813                           
  1814                           ;LCD.c: 87:         while(posicion > 0){
  1815  027E  0874               	movf	set_cursor@posicion,w
  1816  027F  1D03               	btfss	3,2
  1817  0280  2A82               	goto	u771
  1818  0281  2A83               	goto	u770
  1819  0282                     u771:
  1820  0282  2A76               	goto	l1442
  1821  0283                     u770:
  1822  0283                     l1448:
  1823                           
  1824                           ;LCD.c: 92:         _delay((unsigned long)((40)*(4000000/4000.0)));
  1825  0283  3034               	movlw	52
  1826  0284  00F6               	movwf	??_set_cursor+1
  1827  0285  30F1               	movlw	241
  1828  0286  00F5               	movwf	??_set_cursor
  1829  0287                     u977:
  1830  0287  0BF5               	decfsz	??_set_cursor,f
  1831  0288  2A87               	goto	u977
  1832  0289  0BF6               	decfsz	??_set_cursor+1,f
  1833  028A  2A87               	goto	u977
  1834  028B  2A8C               	nop2
  1835  028C                     l187:
  1836  028C  0008               	return
  1837  028D                     __end_of_set_cursor:
  1838                           
  1839                           	psect	text8
  1840  01FA                     __ptext8:	
  1841 ;; *************** function _divisor_dec *****************
  1842 ;; Defined at:
  1843 ;;		line 76 in file "7SEG-hex.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  b               1    wreg     unsigned char 
  1846 ;;  dig1            1    9[COMMON] PTR unsigned char 
  1847 ;;		 -> ADC_dig(1), 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  b               1    8[BANK0 ] unsigned char 
  1850 ;;  n               2    9[BANK0 ] int 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         1       0       0       0       0
  1861 ;;      Locals:         0       3       0       0       0
  1862 ;;      Temps:          0       4       0       0       0
  1863 ;;      Totals:         1       7       0       0       0
  1864 ;;Total ram usage:        8 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 2
  1867 ;; This function calls:
  1868 ;;		___awdiv
  1869 ;;		___awmod
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _divisor_dec
  1877  01FA                     _divisor_dec:
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1881                           ;divisor_dec@b stored from wreg
  1882  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1883  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1884  01FC  00A8               	movwf	divisor_dec@b
  1885  01FD                     l1666:
  1886  01FD  01A9               	clrf	divisor_dec@n
  1887  01FE  01AA               	clrf	divisor_dec@n+1
  1888  01FF                     l1672:
  1889  01FF  300A               	movlw	10
  1890  0200  00F2               	movwf	___awmod@divisor
  1891  0201  3000               	movlw	0
  1892  0202  00F3               	movwf	___awmod@divisor+1
  1893  0203  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0204  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0205  0828               	movf	divisor_dec@b,w
  1896  0206  00A4               	movwf	??_divisor_dec
  1897  0207  01A5               	clrf	??_divisor_dec+1
  1898  0208  0824               	movf	??_divisor_dec,w
  1899  0209  00F4               	movwf	___awmod@dividend
  1900  020A  0825               	movf	??_divisor_dec+1,w
  1901  020B  00F5               	movwf	___awmod@dividend+1
  1902  020C  120A  118A  21A1  120A  118A  	fcall	___awmod
  1903  0211  0872               	movf	?___awmod,w
  1904  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0214  00A6               	movwf	??_divisor_dec+2
  1907  0215  0829               	movf	divisor_dec@n,w
  1908  0216  0779               	addwf	divisor_dec@dig1,w
  1909  0217  00A7               	movwf	??_divisor_dec+3
  1910  0218  0827               	movf	??_divisor_dec+3,w
  1911  0219  0084               	movwf	4
  1912  021A  0826               	movf	??_divisor_dec+2,w
  1913  021B  0080               	movwf	0
  1914  021C  300A               	movlw	10
  1915  021D  00F2               	movwf	___awdiv@divisor
  1916  021E  3000               	movlw	0
  1917  021F  00F3               	movwf	___awdiv@divisor+1
  1918  0220  0829               	movf	divisor_dec@n,w
  1919  0221  0779               	addwf	divisor_dec@dig1,w
  1920  0222  00A4               	movwf	??_divisor_dec
  1921  0223  0824               	movf	??_divisor_dec,w
  1922  0224  0084               	movwf	4
  1923  0225  0800               	movf	0,w
  1924  0226  0228               	subwf	divisor_dec@b,w
  1925  0227  00F4               	movwf	___awdiv@dividend
  1926  0228  01F5               	clrf	___awdiv@dividend+1
  1927  0229  1C03               	skipc
  1928  022A  03F5               	decf	___awdiv@dividend+1,f
  1929  022B  120A  118A  20DA  120A  118A  	fcall	___awdiv
  1930  0230  0872               	movf	?___awdiv,w
  1931  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0233  00A5               	movwf	??_divisor_dec+1
  1934  0234  0825               	movf	??_divisor_dec+1,w
  1935  0235  00A8               	movwf	divisor_dec@b
  1936  0236                     l1674:
  1937  0236  3001               	movlw	1
  1938  0237  07A9               	addwf	divisor_dec@n,f
  1939  0238  1803               	skipnc
  1940  0239  0AAA               	incf	divisor_dec@n+1,f
  1941  023A  3000               	movlw	0
  1942  023B  07AA               	addwf	divisor_dec@n+1,f
  1943  023C                     l1676:
  1944  023C  082A               	movf	divisor_dec@n+1,w
  1945  023D  3A80               	xorlw	128
  1946  023E  00FF               	movwf	btemp+1
  1947  023F  3080               	movlw	128
  1948  0240  027F               	subwf	btemp+1,w
  1949  0241  1D03               	skipz
  1950  0242  2A45               	goto	u915
  1951  0243  3003               	movlw	3
  1952  0244  0229               	subwf	divisor_dec@n,w
  1953  0245                     u915:
  1954  0245  1C03               	skipc
  1955  0246  2A48               	goto	u911
  1956  0247  2A49               	goto	u910
  1957  0248                     u911:
  1958  0248  29FF               	goto	l1672
  1959  0249                     u910:
  1960  0249                     l228:
  1961  0249  0008               	return
  1962  024A                     __end_of_divisor_dec:
  1963                           
  1964                           	psect	text9
  1965  01A1                     __ptext9:	
  1966 ;; *************** function ___awmod *****************
  1967 ;; Defined at:
  1968 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  divisor         2    2[COMMON] int 
  1971 ;;  dividend        2    4[COMMON] int 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  sign            1    8[COMMON] unsigned char 
  1974 ;;  counter         1    7[COMMON] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    2[COMMON] int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         4       0       0       0       0
  1985 ;;      Locals:         2       0       0       0       0
  1986 ;;      Temps:          1       0       0       0       0
  1987 ;;      Totals:         7       0       0       0       0
  1988 ;;Total ram usage:        7 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 1
  1991 ;; This function calls:
  1992 ;;		Nothing
  1993 ;; This function is called by:
  1994 ;;		_divisor_dec
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function ___awmod
  2000  01A1                     ___awmod:
  2001  01A1                     l1344:	
  2002                           ;incstack = 0
  2003                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2004                           
  2005  01A1  01F8               	clrf	___awmod@sign
  2006  01A2                     l1346:
  2007  01A2  1FF5               	btfss	___awmod@dividend+1,7
  2008  01A3  29A5               	goto	u651
  2009  01A4  29A6               	goto	u650
  2010  01A5                     u651:
  2011  01A5  29AD               	goto	l1352
  2012  01A6                     u650:
  2013  01A6                     l1348:
  2014  01A6  09F4               	comf	___awmod@dividend,f
  2015  01A7  09F5               	comf	___awmod@dividend+1,f
  2016  01A8  0AF4               	incf	___awmod@dividend,f
  2017  01A9  1903               	skipnz
  2018  01AA  0AF5               	incf	___awmod@dividend+1,f
  2019  01AB                     l1350:
  2020  01AB  01F8               	clrf	___awmod@sign
  2021  01AC  0AF8               	incf	___awmod@sign,f
  2022  01AD                     l1352:
  2023  01AD  1FF3               	btfss	___awmod@divisor+1,7
  2024  01AE  29B0               	goto	u661
  2025  01AF  29B1               	goto	u660
  2026  01B0                     u661:
  2027  01B0  29B6               	goto	l1356
  2028  01B1                     u660:
  2029  01B1                     l1354:
  2030  01B1  09F2               	comf	___awmod@divisor,f
  2031  01B2  09F3               	comf	___awmod@divisor+1,f
  2032  01B3  0AF2               	incf	___awmod@divisor,f
  2033  01B4  1903               	skipnz
  2034  01B5  0AF3               	incf	___awmod@divisor+1,f
  2035  01B6                     l1356:
  2036  01B6  0872               	movf	___awmod@divisor,w
  2037  01B7  0473               	iorwf	___awmod@divisor+1,w
  2038  01B8  1903               	btfsc	3,2
  2039  01B9  29BB               	goto	u671
  2040  01BA  29BC               	goto	u670
  2041  01BB                     u671:
  2042  01BB  29EB               	goto	l1374
  2043  01BC                     u670:
  2044  01BC                     l1358:
  2045  01BC  01F7               	clrf	___awmod@counter
  2046  01BD  0AF7               	incf	___awmod@counter,f
  2047  01BE  29CA               	goto	l1364
  2048  01BF                     l1360:
  2049  01BF  3001               	movlw	1
  2050  01C0                     u685:
  2051  01C0  1003               	clrc
  2052  01C1  0DF2               	rlf	___awmod@divisor,f
  2053  01C2  0DF3               	rlf	___awmod@divisor+1,f
  2054  01C3  3EFF               	addlw	-1
  2055  01C4  1D03               	skipz
  2056  01C5  29C0               	goto	u685
  2057  01C6                     l1362:
  2058  01C6  3001               	movlw	1
  2059  01C7  00F6               	movwf	??___awmod
  2060  01C8  0876               	movf	??___awmod,w
  2061  01C9  07F7               	addwf	___awmod@counter,f
  2062  01CA                     l1364:
  2063  01CA  1FF3               	btfss	___awmod@divisor+1,7
  2064  01CB  29CD               	goto	u691
  2065  01CC  29CE               	goto	u690
  2066  01CD                     u691:
  2067  01CD  29BF               	goto	l1360
  2068  01CE                     u690:
  2069  01CE                     l1366:
  2070  01CE  0873               	movf	___awmod@divisor+1,w
  2071  01CF  0275               	subwf	___awmod@dividend+1,w
  2072  01D0  1D03               	skipz
  2073  01D1  29D4               	goto	u705
  2074  01D2  0872               	movf	___awmod@divisor,w
  2075  01D3  0274               	subwf	___awmod@dividend,w
  2076  01D4                     u705:
  2077  01D4  1C03               	skipc
  2078  01D5  29D7               	goto	u701
  2079  01D6  29D8               	goto	u700
  2080  01D7                     u701:
  2081  01D7  29DE               	goto	l1370
  2082  01D8                     u700:
  2083  01D8                     l1368:
  2084  01D8  0872               	movf	___awmod@divisor,w
  2085  01D9  02F4               	subwf	___awmod@dividend,f
  2086  01DA  0873               	movf	___awmod@divisor+1,w
  2087  01DB  1C03               	skipc
  2088  01DC  03F5               	decf	___awmod@dividend+1,f
  2089  01DD  02F5               	subwf	___awmod@dividend+1,f
  2090  01DE                     l1370:
  2091  01DE  3001               	movlw	1
  2092  01DF                     u715:
  2093  01DF  1003               	clrc
  2094  01E0  0CF3               	rrf	___awmod@divisor+1,f
  2095  01E1  0CF2               	rrf	___awmod@divisor,f
  2096  01E2  3EFF               	addlw	-1
  2097  01E3  1D03               	skipz
  2098  01E4  29DF               	goto	u715
  2099  01E5                     l1372:
  2100  01E5  3001               	movlw	1
  2101  01E6  02F7               	subwf	___awmod@counter,f
  2102  01E7  1D03               	btfss	3,2
  2103  01E8  29EA               	goto	u721
  2104  01E9  29EB               	goto	u720
  2105  01EA                     u721:
  2106  01EA  29CE               	goto	l1366
  2107  01EB                     u720:
  2108  01EB                     l1374:
  2109  01EB  0878               	movf	___awmod@sign,w
  2110  01EC  1903               	btfsc	3,2
  2111  01ED  29EF               	goto	u731
  2112  01EE  29F0               	goto	u730
  2113  01EF                     u731:
  2114  01EF  29F5               	goto	l1378
  2115  01F0                     u730:
  2116  01F0                     l1376:
  2117  01F0  09F4               	comf	___awmod@dividend,f
  2118  01F1  09F5               	comf	___awmod@dividend+1,f
  2119  01F2  0AF4               	incf	___awmod@dividend,f
  2120  01F3  1903               	skipnz
  2121  01F4  0AF5               	incf	___awmod@dividend+1,f
  2122  01F5                     l1378:
  2123  01F5  0875               	movf	___awmod@dividend+1,w
  2124  01F6  00F3               	movwf	?___awmod+1
  2125  01F7  0874               	movf	___awmod@dividend,w
  2126  01F8  00F2               	movwf	?___awmod
  2127  01F9                     l480:
  2128  01F9  0008               	return
  2129  01FA                     __end_of___awmod:
  2130                           
  2131                           	psect	text10
  2132  00DA                     __ptext10:	
  2133 ;; *************** function ___awdiv *****************
  2134 ;; Defined at:
  2135 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  divisor         2    2[COMMON] int 
  2138 ;;  dividend        2    4[COMMON] int 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  quotient        2    2[BANK0 ] int 
  2141 ;;  sign            1    1[BANK0 ] unsigned char 
  2142 ;;  counter         1    0[BANK0 ] unsigned char 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  2    2[COMMON] int 
  2145 ;; Registers used:
  2146 ;;		wreg, status,2, status,0
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2152 ;;      Params:         4       0       0       0       0
  2153 ;;      Locals:         0       4       0       0       0
  2154 ;;      Temps:          1       0       0       0       0
  2155 ;;      Totals:         5       4       0       0       0
  2156 ;;Total ram usage:        9 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 1
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_divisor_dec
  2163 ;;		_divisor_hex
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function ___awdiv
  2169  00DA                     ___awdiv:
  2170  00DA                     l1622:	
  2171                           ;incstack = 0
  2172                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2173                           
  2174  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2175  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2176  00DC  01A1               	clrf	___awdiv@sign
  2177  00DD                     l1624:
  2178  00DD  1FF3               	btfss	___awdiv@divisor+1,7
  2179  00DE  28E0               	goto	u811
  2180  00DF  28E1               	goto	u810
  2181  00E0                     u811:
  2182  00E0  28E8               	goto	l1630
  2183  00E1                     u810:
  2184  00E1                     l1626:
  2185  00E1  09F2               	comf	___awdiv@divisor,f
  2186  00E2  09F3               	comf	___awdiv@divisor+1,f
  2187  00E3  0AF2               	incf	___awdiv@divisor,f
  2188  00E4  1903               	skipnz
  2189  00E5  0AF3               	incf	___awdiv@divisor+1,f
  2190  00E6                     l1628:
  2191  00E6  01A1               	clrf	___awdiv@sign
  2192  00E7  0AA1               	incf	___awdiv@sign,f
  2193  00E8                     l1630:
  2194  00E8  1FF5               	btfss	___awdiv@dividend+1,7
  2195  00E9  28EB               	goto	u821
  2196  00EA  28EC               	goto	u820
  2197  00EB                     u821:
  2198  00EB  28F5               	goto	l1636
  2199  00EC                     u820:
  2200  00EC                     l1632:
  2201  00EC  09F4               	comf	___awdiv@dividend,f
  2202  00ED  09F5               	comf	___awdiv@dividend+1,f
  2203  00EE  0AF4               	incf	___awdiv@dividend,f
  2204  00EF  1903               	skipnz
  2205  00F0  0AF5               	incf	___awdiv@dividend+1,f
  2206  00F1                     l1634:
  2207  00F1  3001               	movlw	1
  2208  00F2  00F6               	movwf	??___awdiv
  2209  00F3  0876               	movf	??___awdiv,w
  2210  00F4  06A1               	xorwf	___awdiv@sign,f
  2211  00F5                     l1636:
  2212  00F5  01A2               	clrf	___awdiv@quotient
  2213  00F6  01A3               	clrf	___awdiv@quotient+1
  2214  00F7                     l1638:
  2215  00F7  0872               	movf	___awdiv@divisor,w
  2216  00F8  0473               	iorwf	___awdiv@divisor+1,w
  2217  00F9  1903               	btfsc	3,2
  2218  00FA  28FC               	goto	u831
  2219  00FB  28FD               	goto	u830
  2220  00FC                     u831:
  2221  00FC  2934               	goto	l1658
  2222  00FD                     u830:
  2223  00FD                     l1640:
  2224  00FD  01A0               	clrf	___awdiv@counter
  2225  00FE  0AA0               	incf	___awdiv@counter,f
  2226  00FF  290B               	goto	l1646
  2227  0100                     l1642:
  2228  0100  3001               	movlw	1
  2229  0101                     u845:
  2230  0101  1003               	clrc
  2231  0102  0DF2               	rlf	___awdiv@divisor,f
  2232  0103  0DF3               	rlf	___awdiv@divisor+1,f
  2233  0104  3EFF               	addlw	-1
  2234  0105  1D03               	skipz
  2235  0106  2901               	goto	u845
  2236  0107                     l1644:
  2237  0107  3001               	movlw	1
  2238  0108  00F6               	movwf	??___awdiv
  2239  0109  0876               	movf	??___awdiv,w
  2240  010A  07A0               	addwf	___awdiv@counter,f
  2241  010B                     l1646:
  2242  010B  1FF3               	btfss	___awdiv@divisor+1,7
  2243  010C  290E               	goto	u851
  2244  010D  290F               	goto	u850
  2245  010E                     u851:
  2246  010E  2900               	goto	l1642
  2247  010F                     u850:
  2248  010F                     l1648:
  2249  010F  3001               	movlw	1
  2250  0110                     u865:
  2251  0110  1003               	clrc
  2252  0111  0DA2               	rlf	___awdiv@quotient,f
  2253  0112  0DA3               	rlf	___awdiv@quotient+1,f
  2254  0113  3EFF               	addlw	-1
  2255  0114  1D03               	skipz
  2256  0115  2910               	goto	u865
  2257  0116  0873               	movf	___awdiv@divisor+1,w
  2258  0117  0275               	subwf	___awdiv@dividend+1,w
  2259  0118  1D03               	skipz
  2260  0119  291C               	goto	u875
  2261  011A  0872               	movf	___awdiv@divisor,w
  2262  011B  0274               	subwf	___awdiv@dividend,w
  2263  011C                     u875:
  2264  011C  1C03               	skipc
  2265  011D  291F               	goto	u871
  2266  011E  2920               	goto	u870
  2267  011F                     u871:
  2268  011F  2927               	goto	l1654
  2269  0120                     u870:
  2270  0120                     l1650:
  2271  0120  0872               	movf	___awdiv@divisor,w
  2272  0121  02F4               	subwf	___awdiv@dividend,f
  2273  0122  0873               	movf	___awdiv@divisor+1,w
  2274  0123  1C03               	skipc
  2275  0124  03F5               	decf	___awdiv@dividend+1,f
  2276  0125  02F5               	subwf	___awdiv@dividend+1,f
  2277  0126                     l1652:
  2278  0126  1422               	bsf	___awdiv@quotient,0
  2279  0127                     l1654:
  2280  0127  3001               	movlw	1
  2281  0128                     u885:
  2282  0128  1003               	clrc
  2283  0129  0CF3               	rrf	___awdiv@divisor+1,f
  2284  012A  0CF2               	rrf	___awdiv@divisor,f
  2285  012B  3EFF               	addlw	-1
  2286  012C  1D03               	skipz
  2287  012D  2928               	goto	u885
  2288  012E                     l1656:
  2289  012E  3001               	movlw	1
  2290  012F  02A0               	subwf	___awdiv@counter,f
  2291  0130  1D03               	btfss	3,2
  2292  0131  2933               	goto	u891
  2293  0132  2934               	goto	u890
  2294  0133                     u891:
  2295  0133  290F               	goto	l1648
  2296  0134                     u890:
  2297  0134                     l1658:
  2298  0134  0821               	movf	___awdiv@sign,w
  2299  0135  1903               	btfsc	3,2
  2300  0136  2938               	goto	u901
  2301  0137  2939               	goto	u900
  2302  0138                     u901:
  2303  0138  293E               	goto	l1662
  2304  0139                     u900:
  2305  0139                     l1660:
  2306  0139  09A2               	comf	___awdiv@quotient,f
  2307  013A  09A3               	comf	___awdiv@quotient+1,f
  2308  013B  0AA2               	incf	___awdiv@quotient,f
  2309  013C  1903               	skipnz
  2310  013D  0AA3               	incf	___awdiv@quotient+1,f
  2311  013E                     l1662:
  2312  013E  0823               	movf	___awdiv@quotient+1,w
  2313  013F  00F3               	movwf	?___awdiv+1
  2314  0140  0822               	movf	___awdiv@quotient,w
  2315  0141  00F2               	movwf	?___awdiv
  2316  0142                     l467:
  2317  0142  0008               	return
  2318  0143                     __end_of___awdiv:
  2319                           
  2320                           	psect	text11
  2321  03B6                     __ptext11:	
  2322 ;; *************** function _Limpiar_pantallaLCD *****************
  2323 ;; Defined at:
  2324 ;;		line 69 in file "LCD.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0
  2340 ;;      Temps:          2       0       0       0       0
  2341 ;;      Totals:         2       0       0       0       0
  2342 ;;Total ram usage:        2 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 3
  2345 ;; This function calls:
  2346 ;;		_Escribir_comandoLCD
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _Limpiar_pantallaLCD
  2354  03B6                     _Limpiar_pantallaLCD:
  2355  03B6                     l1418:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2358                           
  2359                           
  2360                           ;LCD.c: 70:     PORTCbits.RC7 = 0; PORTDbits.RD4 = 0;
  2361  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2362  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2363  03B8  1387               	bcf	7,7	;volatile
  2364  03B9  1208               	bcf	8,4	;volatile
  2365  03BA                     l1420:
  2366                           
  2367                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2368  03BA  3001               	movlw	1
  2369  03BB  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2370  03C0                     l1422:
  2371                           
  2372                           ;LCD.c: 73:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2373  03C0  300D               	movlw	13
  2374  03C1  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2375  03C2  30FB               	movlw	251
  2376  03C3  00F4               	movwf	??_Limpiar_pantallaLCD
  2377  03C4                     u987:
  2378  03C4  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2379  03C5  2BC4               	goto	u987
  2380  03C6  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2381  03C7  2BC4               	goto	u987
  2382  03C8  2BC9               	nop2
  2383  03C9                     l1424:
  2384                           
  2385                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2386  03C9  3002               	movlw	2
  2387  03CA  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2388  03CF                     l177:
  2389  03CF  0008               	return
  2390  03D0                     __end_of_Limpiar_pantallaLCD:
  2391                           
  2392                           	psect	text12
  2393  0143                     __ptext12:	
  2394 ;; *************** function _Iniciar_LCD *****************
  2395 ;; Defined at:
  2396 ;;		line 30 in file "LCD.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0, pclath, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          2       0       0       0       0
  2413 ;;      Totals:         2       0       0       0       0
  2414 ;;Total ram usage:        2 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 3
  2417 ;; This function calls:
  2418 ;;		_Escribir_comandoLCD
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _Iniciar_LCD
  2426  0143                     _Iniciar_LCD:
  2427  0143                     l1392:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2430                           
  2431                           
  2432                           ;LCD.c: 31:     PORTCbits.RC7 = 0;
  2433  0143  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0144  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0145  1387               	bcf	7,7	;volatile
  2436                           
  2437                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2438  0146  1208               	bcf	8,4	;volatile
  2439  0147                     l1394:
  2440                           
  2441                           ;LCD.c: 34:     _delay((unsigned long)((14)*(4000000/4000.0)));
  2442  0147  3013               	movlw	19
  2443  0148  00F5               	movwf	??_Iniciar_LCD+1
  2444  0149  302D               	movlw	45
  2445  014A  00F4               	movwf	??_Iniciar_LCD
  2446  014B                     u997:
  2447  014B  0BF4               	decfsz	??_Iniciar_LCD,f
  2448  014C  294B               	goto	u997
  2449  014D  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2450  014E  294B               	goto	u997
  2451  014F                     l1396:
  2452                           
  2453                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2454  014F  3030               	movlw	48
  2455  0150  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2456  0155                     l1398:
  2457                           
  2458                           ;LCD.c: 36:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2459  0155  3006               	movlw	6
  2460  0156  00F5               	movwf	??_Iniciar_LCD+1
  2461  0157  3030               	movlw	48
  2462  0158  00F4               	movwf	??_Iniciar_LCD
  2463  0159                     u1007:
  2464  0159  0BF4               	decfsz	??_Iniciar_LCD,f
  2465  015A  2959               	goto	u1007
  2466  015B  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2467  015C  2959               	goto	u1007
  2468  015D  0000               	nop
  2469                           
  2470                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2471  015E  3030               	movlw	48
  2472  015F  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2473  0164                     l1400:
  2474                           
  2475                           ;LCD.c: 38:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2476  0164  3021               	movlw	33
  2477  0165  00F4               	movwf	??_Iniciar_LCD
  2478  0166                     u1017:
  2479  0166  0BF4               	decfsz	??_Iniciar_LCD,f
  2480  0167  2966               	goto	u1017
  2481  0168                     l1402:
  2482                           
  2483                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2484  0168  3030               	movlw	48
  2485  0169  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2486                           
  2487                           ;LCD.c: 42:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2488  016E  3021               	movlw	33
  2489  016F  00F4               	movwf	??_Iniciar_LCD
  2490  0170                     u1027:
  2491  0170  0BF4               	decfsz	??_Iniciar_LCD,f
  2492  0171  2970               	goto	u1027
  2493  0172                     l1404:
  2494                           
  2495                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2496  0172  3038               	movlw	56
  2497  0173  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2498  0178                     l1406:
  2499                           
  2500                           ;LCD.c: 44:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2501  0178  3021               	movlw	33
  2502  0179  00F4               	movwf	??_Iniciar_LCD
  2503  017A                     u1037:
  2504  017A  0BF4               	decfsz	??_Iniciar_LCD,f
  2505  017B  297A               	goto	u1037
  2506                           
  2507                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2508  017C  3008               	movlw	8
  2509  017D  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2510  0182                     l1408:
  2511                           
  2512                           ;LCD.c: 46:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2513  0182  3021               	movlw	33
  2514  0183  00F4               	movwf	??_Iniciar_LCD
  2515  0184                     u1047:
  2516  0184  0BF4               	decfsz	??_Iniciar_LCD,f
  2517  0185  2984               	goto	u1047
  2518  0186                     l1410:
  2519                           
  2520                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2521  0186  3001               	movlw	1
  2522  0187  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2523                           
  2524                           ;LCD.c: 48:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2525  018C  3021               	movlw	33
  2526  018D  00F4               	movwf	??_Iniciar_LCD
  2527  018E                     u1057:
  2528  018E  0BF4               	decfsz	??_Iniciar_LCD,f
  2529  018F  298E               	goto	u1057
  2530  0190                     l1412:
  2531                           
  2532                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2533  0190  3006               	movlw	6
  2534  0191  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2535  0196                     l1414:
  2536                           
  2537                           ;LCD.c: 50:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2538  0196  3021               	movlw	33
  2539  0197  00F4               	movwf	??_Iniciar_LCD
  2540  0198                     u1067:
  2541  0198  0BF4               	decfsz	??_Iniciar_LCD,f
  2542  0199  2998               	goto	u1067
  2543                           
  2544                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2545  019A  300C               	movlw	12
  2546  019B  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2547  01A0                     l165:
  2548  01A0  0008               	return
  2549  01A1                     __end_of_Iniciar_LCD:
  2550                           
  2551                           	psect	text13
  2552  0390                     __ptext13:	
  2553 ;; *************** function _Escribir_stringLCD *****************
  2554 ;; Defined at:
  2555 ;;		line 55 in file "LCD.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  d               1    wreg     PTR const unsigned char 
  2558 ;;		 -> STR_3(17), STR_2(13), STR_1(5), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  d               1    6[COMMON] PTR const unsigned char 
  2561 ;;		 -> STR_3(17), STR_2(13), STR_1(5), 
  2562 ;;  i               1    5[COMMON] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         2       0       0       0       0
  2574 ;;      Temps:          1       0       0       0       0
  2575 ;;      Totals:         3       0       0       0       0
  2576 ;;Total ram usage:        3 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 3
  2579 ;; This function calls:
  2580 ;;		_Escribir_comandoLCD
  2581 ;; This function is called by:
  2582 ;;		_main
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function _Escribir_stringLCD
  2588  0390                     _Escribir_stringLCD:
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2592                           ;Escribir_stringLCD@d stored from wreg
  2593  0390  00F6               	movwf	Escribir_stringLCD@d
  2594  0391                     l1450:
  2595                           
  2596                           ;LCD.c: 56:     PORTCbits.RC7 = 1; PORTDbits.RD4 = 0;
  2597  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0393  1787               	bsf	7,7	;volatile
  2600  0394  1208               	bcf	8,4	;volatile
  2601  0395                     l1452:
  2602                           
  2603                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2604  0395  01F5               	clrf	Escribir_stringLCD@i
  2605  0396  2BA8               	goto	l1458
  2606  0397                     l1454:
  2607                           
  2608                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2609  0397  0875               	movf	Escribir_stringLCD@i,w
  2610  0398  0776               	addwf	Escribir_stringLCD@d,w
  2611  0399  0084               	movwf	4
  2612  039A  120A  118A  233F  120A  118A  	fcall	stringdir
  2613  039F  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2614  03A4                     l1456:
  2615                           
  2616                           ;LCD.c: 60:     }
  2617  03A4  3001               	movlw	1
  2618  03A5  00F4               	movwf	??_Escribir_stringLCD
  2619  03A6  0874               	movf	??_Escribir_stringLCD,w
  2620  03A7  07F5               	addwf	Escribir_stringLCD@i,f
  2621  03A8                     l1458:
  2622  03A8  0875               	movf	Escribir_stringLCD@i,w
  2623  03A9  0776               	addwf	Escribir_stringLCD@d,w
  2624  03AA  0084               	movwf	4
  2625  03AB  120A  118A  233F  120A  118A  	fcall	stringdir
  2626  03B0  3A00               	xorlw	0
  2627  03B1  1D03               	skipz
  2628  03B2  2BB4               	goto	u781
  2629  03B3  2BB5               	goto	u780
  2630  03B4                     u781:
  2631  03B4  2B97               	goto	l1454
  2632  03B5                     u780:
  2633  03B5                     l171:
  2634  03B5  0008               	return
  2635  03B6                     __end_of_Escribir_stringLCD:
  2636                           
  2637                           	psect	text14
  2638  03E6                     __ptext14:	
  2639 ;; *************** function _Escribir_caracterLCD *****************
  2640 ;; Defined at:
  2641 ;;		line 63 in file "LCD.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  a               1    wreg     unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  a               1    4[COMMON] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         1       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0
  2658 ;;      Totals:         1       0       0       0       0
  2659 ;;Total ram usage:        1 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 3
  2662 ;; This function calls:
  2663 ;;		_Escribir_comandoLCD
  2664 ;; This function is called by:
  2665 ;;		_main
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function _Escribir_caracterLCD
  2671  03E6                     _Escribir_caracterLCD:
  2672                           
  2673                           ;incstack = 0
  2674                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  2675                           ;Escribir_caracterLCD@a stored from wreg
  2676  03E6  00F4               	movwf	Escribir_caracterLCD@a
  2677  03E7                     l1548:
  2678                           
  2679                           ;LCD.c: 64:     PORTCbits.RC7 = 1; PORTDbits.RD4 = 0;
  2680  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2681  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2682  03E9  1787               	bsf	7,7	;volatile
  2683  03EA  1208               	bcf	8,4	;volatile
  2684  03EB                     l1550:
  2685                           
  2686                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  2687  03EB  0874               	movf	Escribir_caracterLCD@a,w
  2688  03EC  120A  118A  228D  120A  118A  	fcall	_Escribir_comandoLCD
  2689  03F1                     l174:
  2690  03F1  0008               	return
  2691  03F2                     __end_of_Escribir_caracterLCD:
  2692                           
  2693                           	psect	text15
  2694  028D                     __ptext15:	
  2695 ;; *************** function _Escribir_comandoLCD *****************
  2696 ;; Defined at:
  2697 ;;		line 17 in file "LCD.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  Comando         1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  Comando         1    3[COMMON] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 2
  2718 ;; This function calls:
  2719 ;;		_prender_ELCD
  2720 ;; This function is called by:
  2721 ;;		_Iniciar_LCD
  2722 ;;		_Escribir_stringLCD
  2723 ;;		_Escribir_caracterLCD
  2724 ;;		_Limpiar_pantallaLCD
  2725 ;;		_set_cursor
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _Escribir_comandoLCD
  2731  028D                     _Escribir_comandoLCD:
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2735                           ;Escribir_comandoLCD@Comando stored from wreg
  2736  028D  00F3               	movwf	Escribir_comandoLCD@Comando
  2737  028E                     l1280:
  2738                           
  2739                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2740  028E  1C73               	btfss	Escribir_comandoLCD@Comando,0
  2741  028F  2A91               	goto	u471
  2742  0290  2A92               	goto	u470
  2743  0291                     u471:
  2744  0291  2A96               	goto	l146
  2745  0292                     u470:
  2746  0292                     l1282:
  2747  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0294  1708               	bsf	8,6	;volatile
  2750  0295  2A99               	goto	l147
  2751  0296                     l146:
  2752  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0298  1308               	bcf	8,6	;volatile
  2755  0299                     l147:
  2756                           
  2757                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2758  0299  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  2759  029A  2A9C               	goto	u481
  2760  029B  2A9D               	goto	u480
  2761  029C                     u481:
  2762  029C  2A9F               	goto	l148
  2763  029D                     u480:
  2764  029D                     l1284:
  2765  029D  1788               	bsf	8,7	;volatile
  2766  029E  2AA0               	goto	l149
  2767  029F                     l148:
  2768  029F  1388               	bcf	8,7	;volatile
  2769  02A0                     l149:
  2770                           
  2771                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2772  02A0  1D73               	btfss	Escribir_comandoLCD@Comando,2
  2773  02A1  2AA3               	goto	u491
  2774  02A2  2AA4               	goto	u490
  2775  02A3                     u491:
  2776  02A3  2AA6               	goto	l150
  2777  02A4                     u490:
  2778  02A4                     l1286:
  2779  02A4  1406               	bsf	6,0	;volatile
  2780  02A5  2AA7               	goto	l151
  2781  02A6                     l150:
  2782  02A6  1006               	bcf	6,0	;volatile
  2783  02A7                     l151:
  2784                           
  2785                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2786  02A7  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  2787  02A8  2AAA               	goto	u501
  2788  02A9  2AAB               	goto	u500
  2789  02AA                     u501:
  2790  02AA  2AAD               	goto	l152
  2791  02AB                     u500:
  2792  02AB                     l1288:
  2793  02AB  1486               	bsf	6,1	;volatile
  2794  02AC  2AAE               	goto	l153
  2795  02AD                     l152:
  2796  02AD  1086               	bcf	6,1	;volatile
  2797  02AE                     l153:
  2798                           
  2799                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2800  02AE  1E73               	btfss	Escribir_comandoLCD@Comando,4
  2801  02AF  2AB1               	goto	u511
  2802  02B0  2AB2               	goto	u510
  2803  02B1                     u511:
  2804  02B1  2AB4               	goto	l154
  2805  02B2                     u510:
  2806  02B2                     l1290:
  2807  02B2  1506               	bsf	6,2	;volatile
  2808  02B3  2AB5               	goto	l155
  2809  02B4                     l154:
  2810  02B4  1106               	bcf	6,2	;volatile
  2811  02B5                     l155:
  2812                           
  2813                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2814  02B5  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  2815  02B6  2AB8               	goto	u521
  2816  02B7  2AB9               	goto	u520
  2817  02B8                     u521:
  2818  02B8  2ABB               	goto	l156
  2819  02B9                     u520:
  2820  02B9                     l1292:
  2821  02B9  1586               	bsf	6,3	;volatile
  2822  02BA  2ABC               	goto	l157
  2823  02BB                     l156:
  2824  02BB  1186               	bcf	6,3	;volatile
  2825  02BC                     l157:
  2826                           
  2827                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2828  02BC  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2829  02BD  2ABF               	goto	u531
  2830  02BE  2AC0               	goto	u530
  2831  02BF                     u531:
  2832  02BF  2AC2               	goto	l158
  2833  02C0                     u530:
  2834  02C0                     l1294:
  2835  02C0  1606               	bsf	6,4	;volatile
  2836  02C1  2AC3               	goto	l159
  2837  02C2                     l158:
  2838  02C2  1206               	bcf	6,4	;volatile
  2839  02C3                     l159:
  2840                           
  2841                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2842  02C3  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2843  02C4  2AC6               	goto	u541
  2844  02C5  2AC7               	goto	u540
  2845  02C6                     u541:
  2846  02C6  2AC9               	goto	l160
  2847  02C7                     u540:
  2848  02C7                     l1296:
  2849  02C7  1686               	bsf	6,5	;volatile
  2850  02C8  2ACA               	goto	l1298
  2851  02C9                     l160:
  2852  02C9  1286               	bcf	6,5	;volatile
  2853  02CA                     l1298:
  2854                           
  2855                           ;LCD.c: 27:     prender_ELCD();
  2856  02CA  120A  118A  23F2  120A  118A  	fcall	_prender_ELCD
  2857  02CF                     l162:
  2858  02CF  0008               	return
  2859  02D0                     __end_of_Escribir_comandoLCD:
  2860                           
  2861                           	psect	text16
  2862  03F2                     __ptext16:	
  2863 ;; *************** function _prender_ELCD *****************
  2864 ;; Defined at:
  2865 ;;		line 11 in file "LCD.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2879 ;;      Params:         0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0
  2881 ;;      Temps:          1       0       0       0       0
  2882 ;;      Totals:         1       0       0       0       0
  2883 ;;Total ram usage:        1 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 1
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_Escribir_comandoLCD
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _prender_ELCD
  2895  03F2                     _prender_ELCD:
  2896  03F2                     l1246:	
  2897                           ;incstack = 0
  2898                           ; Regs used in _prender_ELCD: [wreg]
  2899                           
  2900                           
  2901                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  2902  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2903  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2904  03F4  1688               	bsf	8,5	;volatile
  2905  03F5                     l1248:
  2906                           
  2907                           ;LCD.c: 13:     _delay((unsigned long)((500)*(4000000/4000000.0)));
  2908  03F5  30A6               	movlw	166
  2909  03F6  00F2               	movwf	??_prender_ELCD
  2910  03F7                     u1077:
  2911  03F7  0BF2               	decfsz	??_prender_ELCD,f
  2912  03F8  2BF7               	goto	u1077
  2913  03F9  0000               	nop
  2914  03FA                     l1250:
  2915                           
  2916                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  2917  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2918  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2919  03FC  1288               	bcf	8,5	;volatile
  2920  03FD                     l143:
  2921  03FD  0008               	return
  2922  03FE                     __end_of_prender_ELCD:
  2923                           
  2924                           	psect	text17
  2925  040E                     __ptext17:	
  2926 ;; *************** function _isr *****************
  2927 ;; Defined at:
  2928 ;;		line 64 in file "Maestro.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		None
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0
  2944 ;;      Temps:          2       0       0       0       0
  2945 ;;      Totals:         2       0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		Interrupt level 1
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _isr
  2957  040E                     _isr:
  2958  040E                     i1l71:
  2959  040E  0871               	movf	??_isr+1,w
  2960  040F  008A               	movwf	10
  2961  0410  0E70               	swapf	??_isr,w
  2962  0411  0083               	movwf	3
  2963  0412  0EFE               	swapf	btemp,f
  2964  0413  0E7E               	swapf	btemp,w
  2965  0414  0009               	retfie
  2966  0415                     __end_of_isr:
  2967  007E                     btemp	set	126	;btemp
  2968  007E                     wtemp0	set	126
  2969                           
  2970                           	psect	intentry
  2971  0004                     __pintentry:	
  2972                           ;incstack = 0
  2973                           ; Regs used in _isr: []
  2974                           
  2975  0004                     interrupt_function:
  2976  007E                     saved_w	set	btemp
  2977  0004  00FE               	movwf	btemp
  2978  0005  0E03               	swapf	3,w
  2979  0006  00F0               	movwf	??_isr
  2980  0007  080A               	movf	10,w
  2981  0008  00F1               	movwf	??_isr+1
  2982  0009  120A  118A  2C0E   	ljmp	_isr
  2983                           
  2984                           	psect	config
  2985                           
  2986                           ;Config register CONFIG1 @ 0x2007
  2987                           ;	Oscillator Selection bits
  2988                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2989                           ;	Watchdog Timer Enable bit
  2990                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2991                           ;	Power-up Timer Enable bit
  2992                           ;	PWRTE = OFF, PWRT disabled
  2993                           ;	RE3/MCLR pin function select bit
  2994                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2995                           ;	Code Protection bit
  2996                           ;	CP = OFF, Program memory code protection is disabled
  2997                           ;	Data Code Protection bit
  2998                           ;	CPD = OFF, Data memory code protection is disabled
  2999                           ;	Brown Out Reset Selection bits
  3000                           ;	BOREN = OFF, BOR disabled
  3001                           ;	Internal External Switchover bit
  3002                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3003                           ;	Fail-Safe Clock Monitor Enabled bit
  3004                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3005                           ;	Low Voltage Programming Enable bit
  3006                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3007                           ;	In-Circuit Debugger Mode bit
  3008                           ;	DEBUG = 0x1, unprogrammed default
  3009  2007                     	org	8199
  3010  2007  20D4               	dw	8404
  3011                           
  3012                           ;Config register CONFIG2 @ 0x2008
  3013                           ;	Brown-out Reset Selection bit
  3014                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3015                           ;	Flash Program Memory Self Write Enable bits
  3016                           ;	WRT = OFF, Write protection off
  3017  2008                     	org	8200
  3018  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     14      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_spiInit
    _set_cursor->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_dec
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3554
                                             11 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                        _divisor_dec
                         _set_cursor
                              _setup
                            _spiRead
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     448
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     569
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1600
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 16 18:00:45 2022

                            pc 0002                    _SSPSTATbits 0094                             l82 038F  
                           l87 030E                   ___awdiv@sign 0021                             fsr 0004  
              set_cursor@linea 0077                   ?_divisor_dec 0079                            l121 040D  
                          l114 03E0                            l115 03E5                            l132 0406  
                          l150 02A6                            l118 0407                            l143 03FD  
                          l151 02A7                            l160 02C9                            l152 02AD  
                          l153 02AE                            l162 02CF                            l154 02B4  
                          l146 0296                            l155 02B5                            l147 0299  
                          l171 03B5                            l156 02BB                            l148 029F  
                          l228 0249                            l157 02BC                            l149 02A0  
                          l165 01A0                            l158 02C2                            l174 03F1  
                          l159 02C3                            l177 03CF                            l187 028C  
                          l195 033B                            l196 033E                            l480 01F9  
                          l467 0142                            u410 0316                            u411 0315  
                          u500 02AB                            u420 0321                            u501 02AA  
                          u421 0320                            u510 02B2                            u430 032C  
                          u511 02B1                            u431 032B                            u520 02B9  
                          u440 0336                            u521 02B8                            u441 0335  
                          u530 02C0                            u450 03D8                            u531 02BF  
                          u451 03D7                            u540 02C7                            u700 01D8  
                          u460 040D                            u541 02C6                            u701 01D7  
                          u461 040C                            u470 0292                            u471 0291  
                          u480 029D                            u720 01EB                            u481 029C  
                          u721 01EA                            u705 01D4                            u490 02A4  
                          u810 00E1                            u730 01F0                            u650 01A6  
                          u491 02A3                            u811 00E0                            u731 01EF  
                          u715 01DF                            u651 01A5                            u900 0139  
                          u820 00EC                            u660 01B1                            u740 0254  
                          u901 0138                            u821 00EB                            u661 01B0  
                          u741 0253                            u830 00FD                            u670 01BC  
                          u910 0249                            u750 0261                            u831 00FC  
                          u671 01BB                            u911 0248                            u751 0260  
                          u760 0275                            u761 0274                            u850 010F  
                          u690 01CE                            u770 0283                            u851 010E  
                          u691 01CD                            u915 0245                            u771 0282  
                          u780 03B5                            u781 03B4                            u845 0101  
                          u685 01C0                            u870 0120                            u871 011F  
                          u865 0110                            u937 0052                            u890 0134  
                          u891 0133                            u875 011C                            u947 0072  
                          u885 0128                            u957 0084                            u967 026B  
                          u977 0287                            u987 03C4                            u997 014B  
                          _isr 040E                            _num 002F                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0078                           l1400 0164  
                         l1250 03FA                           l1410 0186                           l1402 0168  
                         l1412 0190                           l1404 0172                           l1420 03BA  
                         l1260 0326                           l1252 0310                           l1246 03F2  
                         l1414 0196                           l1406 0178                           l1422 03C0  
                         l1350 01AB                           l1430 0254                           l1262 032C  
                         l1254 0316                           l1270 03D8                           l1510 02DC  
                         l1248 03F5                           l1280 028E                           l1408 0182  
                         l1424 03C9                           l1360 01BF                           l1352 01AD  
                         l1344 01A1                           l1432 025B                           l1264 0331  
                         l1256 031B                           l1272 03DA                           l1504 02DA  
                         l1290 02B2                           l1282 0292                           l1450 0391  
                         l1418 03B6                           l1370 01DE                           l1362 01C6  
                         l1354 01B1                           l1346 01A2                           l1442 0276  
                         l1434 0261                           l1426 024B                           l1266 0336  
                         l1258 0321                           l1274 03DC                           l1522 02E0  
                         l1292 02B9                           l1284 029D                           l1452 0395  
                         l1372 01E5                           l1364 01CA                           l1356 01B6  
                         l1348 01A6                           l1444 027C                           l1436 0267  
                         l1428 024F                           l1276 03DF                           l1268 03D1  
                         l1460 03FE                           l1516 02DE                           l1700 008B  
                         l1294 02C0                           l1286 02A4                           l1550 03EB  
                         l1454 0397                           l1630 00E8                           l1622 00DA  
                         l1366 01CE                           l1358 01BC                           l1374 01EB  
                         l1446 027E                           l1438 0270                           l1390 0386  
                         l1382 0368                           l1278 0407                           l1462 0403  
                         l1534 02E4                           l1542 02E6                           l1710 00BE  
                         l1702 0095                           l1296 02C7                           l1288 02AB  
                         l1456 03A4                           l1392 0143                           l1640 00FD  
                         l1632 00EC                           l1624 00DD                           l1376 01F0  
                         l1368 01D8                           l1448 0283                           l1384 037A  
                         l1528 02E2                           l1480 02D2                           l1712 00C6  
                         l1704 00A0                           l1298 02CA                           l1458 03A8  
                         l1394 0147                           l1650 0120                           l1642 0100  
                         l1634 00F1                           l1626 00E1                           l1378 01F5  
                         l1386 037D                           l1714 00CE                           l1706 00AB  
                         l1548 03E7                           l1396 014F                           l1660 0139  
                         l1652 0126                           l1644 0107                           l1636 00F5  
                         l1628 00E6                           l1388 0380                           l1492 02D6  
                         l1708 00B6                           l1398 0155                           l1662 013E  
                         l1654 0127                           l1646 010B                           l1638 00F7  
                         l1486 02D4                           l1478 02D1                           l1656 012E  
                         l1648 010F                           l1672 01FF                           l1680 0032  
                         l1658 0134                           l1674 0236                           l1666 01FD  
                         l1498 02D8                           l1690 0065                           l1682 0038  
                         l1676 023C                           l1748 02EE                           l1692 006B  
                         l1684 004A                           l1694 0076                           l1686 0059  
                         l1678 001C                           l1696 0080                           l1688 005E  
                         l1698 0088                           ?_isr 0070                           STR_1 0363  
                         STR_2 0356                           STR_3 0345                           u1007 0159  
                         u1017 0166                           u1027 0170                           u1037 017A  
                         u1047 0184                           u1057 018E                           u1067 0198  
                         u1077 03F7                           i1l71 040E                  ??_Iniciar_LCD 0074  
                         _main 001C                           _trad 002E                           btemp 007E  
                         start 000C           _Escribir_caracterLCD 03E6                          ??_isr 0070  
   __end_of_Escribir_stringLCD 03B6                          ?_main 0070                __end_of___awdiv 0143  
              __end_of___awmod 01FA                          _ANSEL 0188                ___awdiv@divisor 0072  
              ___awdiv@counter 0020                          _PORTA 0005                          _PORTB 0006  
                        _PORTC 0007                          _PORTD 0008                          _PORTE 0009  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089                __end_of_initOsc 033F  
                        _setup 0368            _Limpiar_pantallaLCD 03B6                          pclath 000A  
              __end_of_spiInit 03E6                __end_of_spiRead 0407                          status 0003  
                        wtemp0 007E          ?_Escribir_caracterLCD 0070                __initialization 000F  
          __end_of_Iniciar_LCD 01A1                   __end_of_main 00DA           ?_Limpiar_pantallaLCD 0070  
                       ??_main 002B                   divisor_dec@b 0028                   divisor_dec@n 0029  
           set_cursor@posicion 0074               ___awdiv@dividend 0074                         ?_setup 0070  
                       _ANSELH 0189                         _TRISC2 043A                         _TRISC3 043B  
                       _TRISC5 043D                         _SSPCON 0014                         _SSPBUF 0013  
             ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074                      ??___awdiv 0076  
                    ??___awmod 0076               ___awdiv@quotient 0022                ___awmod@divisor 0072  
              ___awmod@counter 0077                      ??_initOsc 0072           __size_of_divisor_dec 0050  
                       saved_w 007E                      ??_spiInit 0075                      ??_spiRead 0072  
              divisor_dec@dig1 0079        __end_of__initialization 0018                    _Iniciar_LCD 0143  
       ??_Escribir_caracterLCD 0074                 __pcstackCOMMON 0070                  __end_of_setup 0390  
                      ??_setup 0076                     __pbssBANK0 002E                     __pmaintext 001C  
                   __pintentry 0004        __size_of_spiReceiveWait 0007   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 007B                   initOsc@Valor 0072                        _SSPSTAT 0094  
           _Escribir_stringLCD 0390                     __stringtab 033F                tabla_numASCII@a 0074  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074                        ___awdiv 00DA  
                      ___awmod 01A1                        _dec_ADC 0031                        _cen_ADC 0030  
                      __ptext1 02D0                        __ptext2 03FE                        __ptext3 0407  
                      __ptext4 0368                        __ptext5 03D0                        __ptext6 030F  
                      __ptext7 024A                        __ptext8 01FA                        __ptext9 01A1  
         ??_Escribir_stringLCD 0074                        _initOsc 030F                   __size_of_isr 0007  
                      _val_ADC 007A               ___awmod@dividend 0074                  ?_prender_ELCD 0070  
                      _uni_ADC 0032                        _spiInit 03D0                        _spiRead 03FE  
         end_of_initialization 0018                     _set_cursor 024A                      _PORTBbits 0006  
                    _PORTCbits 0007                      _PORTDbits 0008                 ??_prender_ELCD 0072  
                 ?_Iniciar_LCD 0070    __end_of_Limpiar_pantallaLCD 03D0                 _spiReceiveWait 0407  
                ??_divisor_dec 0024            start_initialization 000F                    __end_of_isr 0415  
          _Escribir_comandoLCD 028D     Escribir_comandoLCD@Comando 0073  __size_of_Escribir_caracterLCD 000C  
                  ?_set_cursor 0074         __end_of_spiReceiveWait 040E           ?_Escribir_comandoLCD 0070  
                  __pbssCOMMON 007A        __size_of_tabla_numASCII 003F                      ___latbits 0002  
                __pcstackBANK0 0020            __end_of_divisor_dec 024A           __end_of_prender_ELCD 03FE  
              ?_spiReceiveWait 0070                       ?___awdiv 0072                       ?___awmod 0072  
        ??_Escribir_comandoLCD 0073                      __pstrings 033F                       ?_initOsc 0070  
                     ?_spiInit 0072                       ?_spiRead 0070            __size_of_set_cursor 0043  
               __size_of_setup 0028           spiInit@sTransmitEdge 0074              interrupt_function 0004  
         __size_of_Iniciar_LCD 005E             spiInit@sDataSample 0072                    __stringbase 0344  
                  _divisor_dec 01FA    __size_of_Escribir_stringLCD 0026            Escribir_stringLCD@d 0076  
          Escribir_stringLCD@i 0075               __size_of___awdiv 0069               __size_of___awmod 0059  
           __end_of__stringtab 0345                 _tabla_numASCII 02D0               __size_of_initOsc 0030  
                     __ptext10 00DA                       __ptext11 03B6                       __ptext12 0143  
                     __ptext13 0390                       __ptext14 03E6                       __ptext15 028D  
                     __ptext16 03F2                       __ptext17 040E               __size_of_spiInit 0016  
             __size_of_spiRead 0009          __size_of_prender_ELCD 000C                  __size_of_main 00BE  
                 ??_set_cursor 0075                   spiInit@sType 0075   __size_of_Limpiar_pantallaLCD 001A  
            spiInit@sClockIdle 0073         __end_of_tabla_numASCII 030F   __end_of_Escribir_caracterLCD 03F2  
                 _prender_ELCD 03F2             __end_of_set_cursor 028D                       intlevel1 0000  
             ??_spiReceiveWait 0072                      stringcode 033F                     _OSCCONbits 008F  
              ?_tabla_numASCII 0070                       stringdir 033F                       stringtab 033F  
  __end_of_Escribir_comandoLCD 02D0  
