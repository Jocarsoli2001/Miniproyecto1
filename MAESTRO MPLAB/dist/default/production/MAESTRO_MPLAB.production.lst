

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 18 17:12:33 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0000                     	;# 
   463  0001                     	;# 
   464  0002                     	;# 
   465  0003                     	;# 
   466  0004                     	;# 
   467  0005                     	;# 
   468  0006                     	;# 
   469  0007                     	;# 
   470  0008                     	;# 
   471  0009                     	;# 
   472  000A                     	;# 
   473  000B                     	;# 
   474  000C                     	;# 
   475  000D                     	;# 
   476  000E                     	;# 
   477  000E                     	;# 
   478  000F                     	;# 
   479  0010                     	;# 
   480  0011                     	;# 
   481  0012                     	;# 
   482  0013                     	;# 
   483  0014                     	;# 
   484  0015                     	;# 
   485  0015                     	;# 
   486  0016                     	;# 
   487  0017                     	;# 
   488  0018                     	;# 
   489  0019                     	;# 
   490  001A                     	;# 
   491  001B                     	;# 
   492  001B                     	;# 
   493  001C                     	;# 
   494  001D                     	;# 
   495  001E                     	;# 
   496  001F                     	;# 
   497  0081                     	;# 
   498  0085                     	;# 
   499  0086                     	;# 
   500  0087                     	;# 
   501  0088                     	;# 
   502  0089                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  008F                     	;# 
   507  0090                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0093                     	;# 
   512  0093                     	;# 
   513  0094                     	;# 
   514  0095                     	;# 
   515  0096                     	;# 
   516  0097                     	;# 
   517  0098                     	;# 
   518  0099                     	;# 
   519  009A                     	;# 
   520  009B                     	;# 
   521  009C                     	;# 
   522  009D                     	;# 
   523  009E                     	;# 
   524  009F                     	;# 
   525  0105                     	;# 
   526  0107                     	;# 
   527  0108                     	;# 
   528  0109                     	;# 
   529  010C                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  0185                     	;# 
   535  0187                     	;# 
   536  0188                     	;# 
   537  0189                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0000                     	;# 
   541  0001                     	;# 
   542  0002                     	;# 
   543  0003                     	;# 
   544  0004                     	;# 
   545  0005                     	;# 
   546  0006                     	;# 
   547  0007                     	;# 
   548  0008                     	;# 
   549  0009                     	;# 
   550  000A                     	;# 
   551  000B                     	;# 
   552  000C                     	;# 
   553  000D                     	;# 
   554  000E                     	;# 
   555  000E                     	;# 
   556  000F                     	;# 
   557  0010                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0015                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  0081                     	;# 
   576  0085                     	;# 
   577  0086                     	;# 
   578  0087                     	;# 
   579  0088                     	;# 
   580  0089                     	;# 
   581  008C                     	;# 
   582  008D                     	;# 
   583  008E                     	;# 
   584  008F                     	;# 
   585  0090                     	;# 
   586  0091                     	;# 
   587  0092                     	;# 
   588  0093                     	;# 
   589  0093                     	;# 
   590  0093                     	;# 
   591  0094                     	;# 
   592  0095                     	;# 
   593  0096                     	;# 
   594  0097                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009A                     	;# 
   598  009B                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  0105                     	;# 
   604  0107                     	;# 
   605  0108                     	;# 
   606  0109                     	;# 
   607  010C                     	;# 
   608  010C                     	;# 
   609  010D                     	;# 
   610  010E                     	;# 
   611  010F                     	;# 
   612  0185                     	;# 
   613  0187                     	;# 
   614  0188                     	;# 
   615  0189                     	;# 
   616  018C                     	;# 
   617  018D                     	;# 
   618                           
   619                           	psect	idataBANK0
   620  075D                     __pidataBANK0:
   621                           
   622                           ;initializer for _Bandera_s1
   623  075D  3401               	retlw	1
   624  075E  3400               	retlw	0
   625                           
   626                           ;initializer for _n
   627  075F  3413               	retlw	19
   628  0760  3400               	retlw	0
   629                           
   630                           	psect	strings
   631  0600                     __pstrings:
   632  0600                     stringtab:
   633  0600                     __stringtab:
   634  0600                     stringcode:	
   635                           ;	String table - string pointers are 1 byte each
   636                           
   637  0600                     stringdir:
   638  0600  3006               	movlw	high stringdir
   639  0601  008A               	movwf	10
   640  0602  0804               	movf	4,w
   641  0603  0A84               	incf	4,f
   642  0604  0782               	addwf	2,f
   643  0605                     __stringbase:
   644  0605  3400               	retlw	0
   645  0606                     __end_of__stringtab:
   646  0606                     _msg:
   647  0606  3453               	retlw	83
   648  0607  3431               	retlw	49
   649  0608  343A               	retlw	58
   650  0609  3420               	retlw	32
   651  060A  3420               	retlw	32
   652  060B  3420               	retlw	32
   653  060C  3420               	retlw	32
   654  060D  3453               	retlw	83
   655  060E  3432               	retlw	50
   656  060F  343A               	retlw	58
   657  0610  3420               	retlw	32
   658  0611  3420               	retlw	32
   659  0612  3420               	retlw	32
   660  0613  3453               	retlw	83
   661  0614  3433               	retlw	51
   662  0615  343A               	retlw	58
   663  0616  340A               	retlw	10
   664  0617  340D               	retlw	13
   665  0618  3400               	retlw	0
   666  0619                     __end_of_msg:
   667  0018                     _RCSTAbits	set	24
   668  0006                     _PORTBbits	set	6
   669  0008                     _PORTDbits	set	8
   670  0013                     _SSPBUF	set	19
   671  0014                     _SSPCONbits	set	20
   672  0014                     _SSPCON	set	20
   673  0019                     _TXREG	set	25
   674  000C                     _PIR1bits	set	12
   675  0007                     _PORTC	set	7
   676  0006                     _PORTB	set	6
   677  0009                     _PORTE	set	9
   678  0008                     _PORTD	set	8
   679  0005                     _PORTA	set	5
   680  0007                     _PORTCbits	set	7
   681  009A                     _SPBRGH	set	154
   682  0099                     _SPBRG	set	153
   683  0098                     _TXSTAbits	set	152
   684  008F                     _OSCCONbits	set	143
   685  0094                     _SSPSTATbits	set	148
   686  008C                     _PIE1bits	set	140
   687  0085                     _TRISAbits	set	133
   688  0087                     _TRISCbits	set	135
   689  0094                     _SSPSTAT	set	148
   690  0089                     _TRISE	set	137
   691  0088                     _TRISD	set	136
   692  0086                     _TRISB	set	134
   693  0085                     _TRISA	set	133
   694  0438                     _TRISC0	set	1080
   695  0439                     _TRISC1	set	1081
   696  043A                     _TRISC2	set	1082
   697  0187                     _BAUDCTLbits	set	391
   698  0189                     _ANSELH	set	393
   699  0188                     _ANSEL	set	392
   700  0619                     STR_1:
   701  0619  3453               	retlw	83	;'S'
   702  061A  3431               	retlw	49	;'1'
   703  061B  343A               	retlw	58	;':'
   704  061C  3420               	retlw	32	;' '
   705  061D  3420               	retlw	32	;' '
   706  061E  3420               	retlw	32	;' '
   707  061F  3420               	retlw	32	;' '
   708  0620  3453               	retlw	83	;'S'
   709  0621  3432               	retlw	50	;'2'
   710  0622  343A               	retlw	58	;':'
   711  0623  3420               	retlw	32	;' '
   712  0624  3420               	retlw	32	;' '
   713  0625  3420               	retlw	32	;' '
   714  0626  3453               	retlw	83	;'S'
   715  0627  3433               	retlw	51	;'3'
   716  0628  343A               	retlw	58	;':'
   717  0629  3400               	retlw	0
   718  062A                     STR_3:
   719  062A  344A               	retlw	74	;'J'
   720  062B  346F               	retlw	111	;'o'
   721  062C  3473               	retlw	115	;'s'
   722  062D  3465               	retlw	101	;'e'
   723  062E  3420               	retlw	32	;' '
   724  062F  3453               	retlw	83	;'S'
   725  0630  3461               	retlw	97	;'a'
   726  0631  346E               	retlw	110	;'n'
   727  0632  3474               	retlw	116	;'t'
   728  0633  3469               	retlw	105	;'i'
   729  0634  347A               	retlw	122	;'z'
   730  0635  346F               	retlw	111	;'o'
   731  0636  3400               	retlw	0
   732  0637                     STR_2:
   733  0637  3448               	retlw	72	;'H'
   734  0638  346F               	retlw	111	;'o'
   735  0639  346C               	retlw	108	;'l'
   736  063A  3461               	retlw	97	;'a'
   737  063B  3400               	retlw	0
   738  063C                     STR_4:
   739  063C  3420               	retlw	32	;' '
   740  063D  3420               	retlw	32	;' '
   741  063E  3420               	retlw	32	;' '
   742  063F  3400               	retlw	0
   743  0640                     STR_6:
   744  0640  3443               	retlw	67	;'C'
   745  0641  3400               	retlw	0
   746  063C                     
   747                           	psect	cinit
   748  000F                     start_initialization:	
   749                           ; #config settings
   750                           
   751  000F                     __initialization:
   752                           
   753                           ; Initialize objects allocated to BANK0
   754  000F  120A  118A  275D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   755  0014  00DA               	movwf	__pdataBANK0& (0+127)
   756  0015  120A  118A  275E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   757  001A  00DB               	movwf	(__pdataBANK0+1)& (0+127)
   758  001B  120A  118A  275F  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   759  0020  00DC               	movwf	(__pdataBANK0+2)& (0+127)
   760  0021  120A  118A  2760  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   761  0026  00DD               	movwf	(__pdataBANK0+3)& (0+127)
   762                           
   763                           ; Clear objects allocated to BANK0
   764  0027  1383               	bcf	3,7	;select IRP bank0
   765  0028  303E               	movlw	low __pbssBANK0
   766  0029  0084               	movwf	4
   767  002A  305A               	movlw	low (__pbssBANK0+28)
   768  002B  120A  118A  2748  120A  118A  	fcall	clear_ram0
   769                           
   770                           ; Clear objects allocated to COMMON
   771  0030  01FA               	clrf	__pbssCOMMON& (0+127)
   772  0031  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   773  0032                     end_of_initialization:	
   774                           ;End of C runtime variable initialization code
   775                           
   776  0032                     __end_of__initialization:
   777  0032  0183               	clrf	3
   778  0033  120A  118A  2836   	ljmp	_main	;jump to C main() function
   779                           
   780                           	psect	bssCOMMON
   781  007A                     __pbssCOMMON:
   782  007A                     _Cont_dig:
   783  007A                     	ds	1
   784  007B                     _ADC_dig:
   785  007B                     	ds	1
   786                           
   787                           	psect	bssBANK0
   788  003E                     __pbssBANK0:
   789  003E                     _Bandera_s3:
   790  003E                     	ds	2
   791  0040                     _Bandera_s2:
   792  0040                     	ds	2
   793  0042                     _direc:
   794  0042                     	ds	2
   795  0044                     _dato_escrito:
   796  0044                     	ds	2
   797  0046                     _Contador:
   798  0046                     	ds	2
   799  0048                     _val_ADC:
   800  0048                     	ds	2
   801  004A                     _cen_Temp:
   802  004A                     	ds	1
   803  004B                     _dec_Temp:
   804  004B                     	ds	1
   805  004C                     _uni_Temp:
   806  004C                     	ds	1
   807  004D                     _dig_Temp:
   808  004D                     	ds	1
   809  004E                     _cen_Cont:
   810  004E                     	ds	1
   811  004F                     _dec_Cont:
   812  004F                     	ds	1
   813  0050                     _uni_Cont:
   814  0050                     	ds	1
   815  0051                     _dig_Cont:
   816  0051                     	ds	1
   817  0052                     _cen_ADC:
   818  0052                     	ds	1
   819  0053                     _dec_ADC:
   820  0053                     	ds	1
   821  0054                     _uni_ADC:
   822  0054                     	ds	1
   823  0055                     _dig_ADC:
   824  0055                     	ds	1
   825  0056                     _i:
   826  0056                     	ds	1
   827  0057                     _Temp:
   828  0057                     	ds	1
   829  0058                     _Temp_dig:
   830  0058                     	ds	1
   831  0059                     _data:
   832  0059                     	ds	1
   833                           
   834                           	psect	dataBANK0
   835  005A                     __pdataBANK0:
   836  005A                     _Bandera_s1:
   837  005A                     	ds	2
   838  005C                     _n:
   839  005C                     	ds	2
   840                           
   841                           	psect	clrtext
   842  0748                     clear_ram0:	
   843                           ;	Called with FSR containing the base address, and
   844                           ;	W with the last address+1
   845                           
   846  0748  0064               	clrwdt	;clear the watchdog before getting into this loop
   847  0749                     clrloop0:
   848  0749  0180               	clrf	0	;clear RAM location pointed to by FSR
   849  074A  0A84               	incf	4,f	;increment pointer
   850  074B  0604               	xorwf	4,w	;XOR with final address
   851  074C  1903               	btfsc	3,2	;have we reached the end yet?
   852  074D  3400               	retlw	0	;all done for this memory range, return
   853  074E  0604               	xorwf	4,w	;XOR again to restore value
   854  074F  2F49               	goto	clrloop0	;do the next byte
   855                           
   856                           	psect	cstackCOMMON
   857  0070                     __pcstackCOMMON:
   858  0070                     ?_setup:
   859  0070                     ?_Escribir_stringLCD:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_imprimir_cadena:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_WriteMSSP:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_ReadMSSP:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_tabla_numASCII:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_Escribir_caracterLCD:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_initOsc:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_InitMSSP:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_Iniciar_LCD:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_Limpiar_pantallaLCD:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_isr:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ??_isr:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_main:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_prender_ELCD:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_Escribir_comandoLCD:	
   902                           ; 1 bytes @ 0x0
   903                           
   904                           
   905                           ; 1 bytes @ 0x0
   906  0070                     	ds	2
   907  0072                     ??_WriteMSSP:
   908  0072                     ??_ReadMSSP:	
   909                           ; 1 bytes @ 0x2
   910                           
   911  0072                     ??_tabla_numASCII:	
   912                           ; 1 bytes @ 0x2
   913                           
   914  0072                     ??_initOsc:	
   915                           ; 1 bytes @ 0x2
   916                           
   917  0072                     ??_InitMSSP:	
   918                           ; 1 bytes @ 0x2
   919                           
   920  0072                     ?_Config_USART:	
   921                           ; 1 bytes @ 0x2
   922                           
   923  0072                     ??_TXREG_char:	
   924                           ; 1 bytes @ 0x2
   925                           
   926  0072                     ??_prender_ELCD:	
   927                           ; 1 bytes @ 0x2
   928                           
   929  0072                     ?___awdiv:	
   930                           ; 1 bytes @ 0x2
   931                           
   932  0072                     ?___awmod:	
   933                           ; 2 bytes @ 0x2
   934                           
   935  0072                     InitMSSP@Modo:	
   936                           ; 2 bytes @ 0x2
   937                           
   938  0072                     WriteMSSP@Data:	
   939                           ; 1 bytes @ 0x2
   940                           
   941  0072                     initOsc@Valor:	
   942                           ; 1 bytes @ 0x2
   943                           
   944  0072                     Config_USART@baud_rate:	
   945                           ; 1 bytes @ 0x2
   946                           
   947  0072                     ___awdiv@divisor:	
   948                           ; 2 bytes @ 0x2
   949                           
   950  0072                     ___awmod@divisor:	
   951                           ; 2 bytes @ 0x2
   952                           
   953                           
   954                           ; 2 bytes @ 0x2
   955  0072                     	ds	1
   956  0073                     ??_Escribir_comandoLCD:
   957  0073                     Escribir_comandoLCD@Comando:	
   958                           ; 1 bytes @ 0x3
   959                           
   960                           
   961                           ; 1 bytes @ 0x3
   962  0073                     	ds	1
   963  0074                     ?_set_cursor:
   964  0074                     ??_Escribir_stringLCD:	
   965                           ; 1 bytes @ 0x4
   966                           
   967  0074                     ??_Escribir_caracterLCD:	
   968                           ; 1 bytes @ 0x4
   969                           
   970  0074                     ??_Iniciar_LCD:	
   971                           ; 1 bytes @ 0x4
   972                           
   973  0074                     ??_Limpiar_pantallaLCD:	
   974                           ; 1 bytes @ 0x4
   975                           
   976  0074                     tabla_numASCII@a:	
   977                           ; 1 bytes @ 0x4
   978                           
   979  0074                     Escribir_caracterLCD@a:	
   980                           ; 1 bytes @ 0x4
   981                           
   982  0074                     set_cursor@posicion:	
   983                           ; 1 bytes @ 0x4
   984                           
   985  0074                     Config_USART@Freq:	
   986                           ; 1 bytes @ 0x4
   987                           
   988  0074                     ___awdiv@dividend:	
   989                           ; 2 bytes @ 0x4
   990                           
   991  0074                     ___awmod@dividend:	
   992                           ; 2 bytes @ 0x4
   993                           
   994                           
   995                           ; 2 bytes @ 0x4
   996  0074                     	ds	1
   997  0075                     ??_set_cursor:
   998  0075                     Escribir_stringLCD@i:	
   999                           ; 1 bytes @ 0x5
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x5
  1003  0075                     	ds	1
  1004  0076                     ??_Config_USART:
  1005  0076                     ??___awdiv:	
  1006                           ; 1 bytes @ 0x6
  1007                           
  1008  0076                     ??___awmod:	
  1009                           ; 1 bytes @ 0x6
  1010                           
  1011  0076                     Escribir_stringLCD@d:	
  1012                           ; 1 bytes @ 0x6
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x6
  1016  0076                     	ds	1
  1017  0077                     set_cursor@linea:
  1018  0077                     ___awmod@counter:	
  1019                           ; 1 bytes @ 0x7
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x7
  1023  0077                     	ds	1
  1024  0078                     ___awmod@sign:
  1025                           
  1026                           ; 1 bytes @ 0x8
  1027  0078                     	ds	1
  1028  0079                     ?_divisor_dec:
  1029  0079                     divisor_dec@dig1:	
  1030                           ; 1 bytes @ 0x9
  1031                           
  1032                           
  1033                           ; 1 bytes @ 0x9
  1034  0079                     	ds	1
  1035                           
  1036                           	psect	cstackBANK0
  1037  0020                     __pcstackBANK0:
  1038  0020                     ??_setup:
  1039  0020                     ?_TXREG_char:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042  0020                     ___awdiv@counter:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045  0020                     TXREG_char@direccion:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048                           
  1049                           ; 2 bytes @ 0x0
  1050  0020                     	ds	1
  1051  0021                     ___awdiv@sign:
  1052                           
  1053                           ; 1 bytes @ 0x1
  1054  0021                     	ds	1
  1055  0022                     TXREG_char@uni1:
  1056  0022                     ___awdiv@quotient:	
  1057                           ; 1 bytes @ 0x2
  1058                           
  1059                           
  1060                           ; 2 bytes @ 0x2
  1061  0022                     	ds	1
  1062  0023                     TXREG_char@dec1:
  1063                           
  1064                           ; 1 bytes @ 0x3
  1065  0023                     	ds	1
  1066  0024                     ??_divisor_dec:
  1067  0024                     TXREG_char@cen1:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070                           
  1071                           ; 1 bytes @ 0x4
  1072  0024                     	ds	1
  1073  0025                     TXREG_char@e1:
  1074                           
  1075                           ; 1 bytes @ 0x5
  1076  0025                     	ds	1
  1077  0026                     TXREG_char@uni2:
  1078                           
  1079                           ; 1 bytes @ 0x6
  1080  0026                     	ds	1
  1081  0027                     TXREG_char@dec2:
  1082                           
  1083                           ; 1 bytes @ 0x7
  1084  0027                     	ds	1
  1085  0028                     TXREG_char@cen2:
  1086  0028                     divisor_dec@b:	
  1087                           ; 1 bytes @ 0x8
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x8
  1091  0028                     	ds	1
  1092  0029                     TXREG_char@e2:
  1093  0029                     divisor_dec@n:	
  1094                           ; 1 bytes @ 0x9
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x9
  1098  0029                     	ds	1
  1099  002A                     TXREG_char@uni3:
  1100                           
  1101                           ; 1 bytes @ 0xA
  1102  002A                     	ds	1
  1103  002B                     TXREG_char@dec3:
  1104                           
  1105                           ; 1 bytes @ 0xB
  1106  002B                     	ds	1
  1107  002C                     TXREG_char@cen3:
  1108                           
  1109                           ; 1 bytes @ 0xC
  1110  002C                     	ds	1
  1111  002D                     TXREG_char@e3:
  1112                           
  1113                           ; 1 bytes @ 0xD
  1114  002D                     	ds	1
  1115  002E                     TXREG_char@data:
  1116                           
  1117                           ; 1 bytes @ 0xE
  1118  002E                     	ds	1
  1119  002F                     ??_imprimir_cadena:
  1120                           
  1121                           ; 1 bytes @ 0xF
  1122  002F                     	ds	13
  1123  003C                     ??_main:
  1124                           
  1125                           ; 1 bytes @ 0x1C
  1126  003C                     	ds	2
  1127                           
  1128                           	psect	maintext
  1129  0036                     __pmaintext:	
  1130 ;;
  1131 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1132 ;;
  1133 ;; *************** function _main *****************
  1134 ;; Defined at:
  1135 ;;		line 109 in file "Maestro.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : B00/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         0       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          0       2       0       0       0
  1152 ;;      Totals:         0       2       0       0       0
  1153 ;;Total ram usage:        2 bytes
  1154 ;; Hardware stack levels required when called: 5
  1155 ;; This function calls:
  1156 ;;		_Escribir_caracterLCD
  1157 ;;		_Escribir_stringLCD
  1158 ;;		_ReadMSSP
  1159 ;;		_WriteMSSP
  1160 ;;		_divisor_dec
  1161 ;;		_imprimir_cadena
  1162 ;;		_set_cursor
  1163 ;;		_setup
  1164 ;;		_tabla_numASCII
  1165 ;; This function is called by:
  1166 ;;		Startup code after reset
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _main
  1172  0036                     _main:
  1173  0036                     l2359:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1176                           
  1177                           
  1178                           ;Maestro.c: 110:     setup();
  1179  0036  120A  118A  22FF  120A  118A  	fcall	_setup
  1180  003B                     l2361:
  1181                           
  1182                           ;Maestro.c: 111:     val_ADC = 0;
  1183  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1184  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1185  003D  01C8               	clrf	_val_ADC
  1186  003E  01C9               	clrf	_val_ADC+1
  1187  003F                     l2363:
  1188                           
  1189                           ;Maestro.c: 112:     Contador = 0;
  1190  003F  01C6               	clrf	_Contador
  1191  0040  01C7               	clrf	_Contador+1
  1192  0041                     l2365:
  1193                           
  1194                           ;Maestro.c: 113:     Temp = 0;
  1195  0041  01D7               	clrf	_Temp
  1196  0042                     l2367:
  1197                           
  1198                           ;Maestro.c: 114:     PORTCbits.RC2 = 1;
  1199  0042  1507               	bsf	7,2	;volatile
  1200  0043                     l2369:
  1201                           
  1202                           ;Maestro.c: 115:     PORTCbits.RC1 = 1;
  1203  0043  1487               	bsf	7,1	;volatile
  1204  0044                     l2371:
  1205                           
  1206                           ;Maestro.c: 116:     PORTCbits.RC0 = 1;
  1207  0044  1407               	bsf	7,0	;volatile
  1208  0045                     l2373:
  1209                           
  1210                           ;Maestro.c: 119:         set_cursor(1,0);
  1211  0045  01F4               	clrf	set_cursor@posicion
  1212  0046  3001               	movlw	1
  1213  0047  120A  118A  254B  120A  118A  	fcall	_set_cursor
  1214  004C                     l2375:
  1215                           
  1216                           ;Maestro.c: 120:         Escribir_stringLCD("S1:    S2:   S3:");
  1217  004C  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1218  004D  120A  118A  26E4  120A  118A  	fcall	_Escribir_stringLCD
  1219  0052                     l2377:
  1220                           
  1221                           ;Maestro.c: 125:         imprimir_cadena();
  1222  0052  120A  118A  2447  120A  118A  	fcall	_imprimir_cadena
  1223  0057                     l2379:
  1224                           
  1225                           ;Maestro.c: 130:         PORTCbits.RC1 = 1;
  1226  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0059  1487               	bsf	7,1	;volatile
  1229  005A                     l2381:
  1230                           
  1231                           ;Maestro.c: 131:         PORTCbits.RC0 = 1;
  1232  005A  1407               	bsf	7,0	;volatile
  1233  005B                     l2383:
  1234                           
  1235                           ;Maestro.c: 132:         PORTCbits.RC2 = 0;
  1236  005B  1107               	bcf	7,2	;volatile
  1237  005C                     l2385:
  1238                           
  1239                           ;Maestro.c: 134:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1240  005C  285D               	nop2	;2 cycle nop
  1241  005D  285E               	nop2	;2 cycle nop
  1242  005E  0000               	nop
  1243  005F                     l2387:
  1244                           
  1245                           ;Maestro.c: 136:         WriteMSSP(1);
  1246  005F  3001               	movlw	1
  1247  0060  120A  118A  2757  120A  118A  	fcall	_WriteMSSP
  1248  0065                     l2389:
  1249                           
  1250                           ;Maestro.c: 139:         val_ADC = ReadMSSP();
  1251  0065  120A  118A  273E  120A  118A  	fcall	_ReadMSSP
  1252  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1253  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1254  006C  00BC               	movwf	??_main
  1255  006D  01BD               	clrf	??_main+1
  1256  006E  083C               	movf	??_main,w
  1257  006F  00C8               	movwf	_val_ADC
  1258  0070  083D               	movf	??_main+1,w
  1259  0071  00C9               	movwf	_val_ADC+1
  1260  0072                     l2391:
  1261                           
  1262                           ;Maestro.c: 141:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1263  0072  2873               	nop2	;2 cycle nop
  1264  0073  2874               	nop2	;2 cycle nop
  1265  0074  0000               	nop
  1266  0075                     l2393:
  1267                           
  1268                           ;Maestro.c: 143:         PORTCbits.RC2 = 1;
  1269  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1270  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1271  0077  1507               	bsf	7,2	;volatile
  1272  0078                     l2395:
  1273                           
  1274                           ;Maestro.c: 144:         PORTCbits.RC1 = 1;
  1275  0078  1487               	bsf	7,1	;volatile
  1276  0079                     l2397:
  1277                           
  1278                           ;Maestro.c: 145:         PORTCbits.RC0 = 1;
  1279  0079  1407               	bsf	7,0	;volatile
  1280  007A                     l2399:
  1281                           
  1282                           ;Maestro.c: 151:         PORTCbits.RC2 = 1;
  1283  007A  1507               	bsf	7,2	;volatile
  1284  007B                     l2401:
  1285                           
  1286                           ;Maestro.c: 152:         PORTCbits.RC1 = 0;
  1287  007B  1087               	bcf	7,1	;volatile
  1288  007C                     l2403:
  1289                           
  1290                           ;Maestro.c: 153:         PORTCbits.RC0 = 1;
  1291  007C  1407               	bsf	7,0	;volatile
  1292  007D                     l2405:
  1293                           
  1294                           ;Maestro.c: 155:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1295  007D  287E               	nop2	;2 cycle nop
  1296  007E  287F               	nop2	;2 cycle nop
  1297  007F  0000               	nop
  1298  0080                     l2407:
  1299                           
  1300                           ;Maestro.c: 157:         WriteMSSP(1);
  1301  0080  3001               	movlw	1
  1302  0081  120A  118A  2757  120A  118A  	fcall	_WriteMSSP
  1303  0086                     l2409:
  1304                           
  1305                           ;Maestro.c: 160:         Contador = ReadMSSP();
  1306  0086  120A  118A  273E  120A  118A  	fcall	_ReadMSSP
  1307  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1308  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1309  008D  00BC               	movwf	??_main
  1310  008E  01BD               	clrf	??_main+1
  1311  008F  083C               	movf	??_main,w
  1312  0090  00C6               	movwf	_Contador
  1313  0091  083D               	movf	??_main+1,w
  1314  0092  00C7               	movwf	_Contador+1
  1315  0093                     l2411:
  1316                           
  1317                           ;Maestro.c: 162:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1318  0093  2894               	nop2	;2 cycle nop
  1319  0094  2895               	nop2	;2 cycle nop
  1320  0095  0000               	nop
  1321  0096                     l2413:
  1322                           
  1323                           ;Maestro.c: 164:         PORTCbits.RC1 = 1;
  1324  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0098  1487               	bsf	7,1	;volatile
  1327  0099                     l2415:
  1328                           
  1329                           ;Maestro.c: 165:         PORTCbits.RC1 = 1;
  1330  0099  1487               	bsf	7,1	;volatile
  1331  009A                     l2417:
  1332                           
  1333                           ;Maestro.c: 166:         PORTCbits.RC0 = 1;
  1334  009A  1407               	bsf	7,0	;volatile
  1335  009B                     l2419:
  1336                           
  1337                           ;Maestro.c: 172:         PORTCbits.RC2 = 1;
  1338  009B  1507               	bsf	7,2	;volatile
  1339  009C                     l2421:
  1340                           
  1341                           ;Maestro.c: 173:         PORTCbits.RC1 = 1;
  1342  009C  1487               	bsf	7,1	;volatile
  1343  009D                     l2423:
  1344                           
  1345                           ;Maestro.c: 174:         PORTCbits.RC0 = 0;
  1346  009D  1007               	bcf	7,0	;volatile
  1347  009E                     l2425:
  1348                           
  1349                           ;Maestro.c: 176:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1350  009E  289F               	nop2	;2 cycle nop
  1351  009F  28A0               	nop2	;2 cycle nop
  1352  00A0  0000               	nop
  1353  00A1                     l2427:
  1354                           
  1355                           ;Maestro.c: 178:         WriteMSSP(1);
  1356  00A1  3001               	movlw	1
  1357  00A2  120A  118A  2757  120A  118A  	fcall	_WriteMSSP
  1358  00A7                     l2429:
  1359                           
  1360                           ;Maestro.c: 181:         Temp = ReadMSSP();
  1361  00A7  120A  118A  273E  120A  118A  	fcall	_ReadMSSP
  1362  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1363  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1364  00AE  00BC               	movwf	??_main
  1365  00AF  083C               	movf	??_main,w
  1366  00B0  00D7               	movwf	_Temp
  1367  00B1                     l2431:
  1368                           
  1369                           ;Maestro.c: 183:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1370  00B1  28B2               	nop2	;2 cycle nop
  1371  00B2  28B3               	nop2	;2 cycle nop
  1372  00B3  0000               	nop
  1373  00B4                     l2433:
  1374                           
  1375                           ;Maestro.c: 185:         PORTCbits.RC1 = 1;
  1376  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1377  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1378  00B6  1487               	bsf	7,1	;volatile
  1379  00B7                     l2435:
  1380                           
  1381                           ;Maestro.c: 186:         PORTCbits.RC1 = 1;
  1382  00B7  1487               	bsf	7,1	;volatile
  1383  00B8                     l2437:
  1384                           
  1385                           ;Maestro.c: 187:         PORTCbits.RC0 = 1;
  1386  00B8  1407               	bsf	7,0	;volatile
  1387  00B9                     l2439:
  1388                           
  1389                           ;Maestro.c: 194:         divisor_dec(Contador, Cont_dig);
  1390  00B9  307A               	movlw	(low (_Cont_dig| 0))& (0+255)
  1391  00BA  00BC               	movwf	??_main
  1392  00BB  083C               	movf	??_main,w
  1393  00BC  00F9               	movwf	divisor_dec@dig1
  1394  00BD  0846               	movf	_Contador,w
  1395  00BE  120A  118A  24FA  120A  118A  	fcall	_divisor_dec
  1396  00C3                     l2441:
  1397                           
  1398                           ;Maestro.c: 196:         uni_Cont = tabla_numASCII(Cont_dig[2]);
  1399  00C3  087C               	movf	_Cont_dig+2,w
  1400  00C4  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1401  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1402  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1403  00CB  00BC               	movwf	??_main
  1404  00CC  083C               	movf	??_main,w
  1405  00CD  00D0               	movwf	_uni_Cont
  1406  00CE                     l2443:
  1407                           
  1408                           ;Maestro.c: 197:         dec_Cont = tabla_numASCII(Cont_dig[1]);
  1409  00CE  087B               	movf	_Cont_dig+1,w
  1410  00CF  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1411  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1412  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1413  00D6  00BC               	movwf	??_main
  1414  00D7  083C               	movf	??_main,w
  1415  00D8  00CF               	movwf	_dec_Cont
  1416  00D9                     l2445:
  1417                           
  1418                           ;Maestro.c: 198:         cen_Cont = tabla_numASCII(Cont_dig[0]);
  1419  00D9  087A               	movf	_Cont_dig,w
  1420  00DA  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1421  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1422  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1423  00E1  00BC               	movwf	??_main
  1424  00E2  083C               	movf	??_main,w
  1425  00E3  00CE               	movwf	_cen_Cont
  1426  00E4                     l2447:
  1427                           
  1428                           ;Maestro.c: 201:         divisor_dec(val_ADC, ADC_dig);
  1429  00E4  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
  1430  00E5  00BC               	movwf	??_main
  1431  00E6  083C               	movf	??_main,w
  1432  00E7  00F9               	movwf	divisor_dec@dig1
  1433  00E8  0848               	movf	_val_ADC,w
  1434  00E9  120A  118A  24FA  120A  118A  	fcall	_divisor_dec
  1435  00EE                     l2449:
  1436                           
  1437                           ;Maestro.c: 203:         uni_ADC = tabla_numASCII(ADC_dig[2]);
  1438  00EE  087D               	movf	_ADC_dig+2,w
  1439  00EF  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1440  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1441  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1442  00F6  00BC               	movwf	??_main
  1443  00F7  083C               	movf	??_main,w
  1444  00F8  00D4               	movwf	_uni_ADC
  1445  00F9                     l2451:
  1446                           
  1447                           ;Maestro.c: 204:         dec_ADC = tabla_numASCII(ADC_dig[1]);
  1448  00F9  087C               	movf	_ADC_dig+1,w
  1449  00FA  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1450  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0101  00BC               	movwf	??_main
  1453  0102  083C               	movf	??_main,w
  1454  0103  00D3               	movwf	_dec_ADC
  1455  0104                     l2453:
  1456                           
  1457                           ;Maestro.c: 205:         cen_ADC = tabla_numASCII(ADC_dig[0]);
  1458  0104  087B               	movf	_ADC_dig,w
  1459  0105  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1460  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1461  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1462  010C  00BC               	movwf	??_main
  1463  010D  083C               	movf	??_main,w
  1464  010E  00D2               	movwf	_cen_ADC
  1465  010F                     l2455:
  1466                           
  1467                           ;Maestro.c: 208:         divisor_dec(Temp, Temp_dig);
  1468  010F  3058               	movlw	(low (_Temp_dig| 0))& (0+255)
  1469  0110  00BC               	movwf	??_main
  1470  0111  083C               	movf	??_main,w
  1471  0112  00F9               	movwf	divisor_dec@dig1
  1472  0113  0857               	movf	_Temp,w
  1473  0114  120A  118A  24FA  120A  118A  	fcall	_divisor_dec
  1474  0119                     l2457:
  1475                           
  1476                           ;Maestro.c: 210:         uni_Temp = tabla_numASCII(Temp_dig[2]);
  1477  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1478  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1479  011B  085A               	movf	_Temp_dig+2,w
  1480  011C  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1481  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0123  00BC               	movwf	??_main
  1484  0124  083C               	movf	??_main,w
  1485  0125  00CC               	movwf	_uni_Temp
  1486  0126                     l2459:
  1487                           
  1488                           ;Maestro.c: 211:         dec_Temp = tabla_numASCII(Temp_dig[1]);
  1489  0126  0859               	movf	_Temp_dig+1,w
  1490  0127  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1491  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1492  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1493  012E  00BC               	movwf	??_main
  1494  012F  083C               	movf	??_main,w
  1495  0130  00CB               	movwf	_dec_Temp
  1496  0131                     l2461:
  1497                           
  1498                           ;Maestro.c: 212:         cen_Temp = tabla_numASCII(Temp_dig[0]);
  1499  0131  0858               	movf	_Temp_dig,w
  1500  0132  120A  118A  2642  120A  118A  	fcall	_tabla_numASCII
  1501  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0139  00BC               	movwf	??_main
  1504  013A  083C               	movf	??_main,w
  1505  013B  00CA               	movwf	_cen_Temp
  1506  013C                     l2463:
  1507                           
  1508                           ;Maestro.c: 220:         set_cursor(2,7);
  1509  013C  3007               	movlw	7
  1510  013D  00BC               	movwf	??_main
  1511  013E  083C               	movf	??_main,w
  1512  013F  00F4               	movwf	set_cursor@posicion
  1513  0140  3002               	movlw	2
  1514  0141  120A  118A  254B  120A  118A  	fcall	_set_cursor
  1515  0146                     l2465:
  1516                           
  1517                           ;Maestro.c: 221:         Escribir_caracterLCD(uni_Cont);
  1518  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0148  0850               	movf	_uni_Cont,w
  1521  0149  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1522  014E                     l2467:
  1523                           
  1524                           ;Maestro.c: 222:         Escribir_caracterLCD(dec_Cont);
  1525  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1526  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0150  084F               	movf	_dec_Cont,w
  1528  0151  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1529  0156                     l2469:
  1530                           
  1531                           ;Maestro.c: 223:         Escribir_caracterLCD(cen_Cont);
  1532  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0158  084E               	movf	_cen_Cont,w
  1535  0159  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1536  015E                     l2471:
  1537                           
  1538                           ;Maestro.c: 225:         set_cursor(2,0);
  1539  015E  01F4               	clrf	set_cursor@posicion
  1540  015F  3002               	movlw	2
  1541  0160  120A  118A  254B  120A  118A  	fcall	_set_cursor
  1542  0165                     l2473:
  1543                           
  1544                           ;Maestro.c: 226:         Escribir_caracterLCD(uni_ADC);
  1545  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0167  0854               	movf	_uni_ADC,w
  1548  0168  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1549  016D                     l2475:
  1550                           
  1551                           ;Maestro.c: 227:         Escribir_caracterLCD(dec_ADC);
  1552  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1553  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1554  016F  0853               	movf	_dec_ADC,w
  1555  0170  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1556  0175                     l2477:
  1557                           
  1558                           ;Maestro.c: 228:         Escribir_caracterLCD(cen_ADC);
  1559  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0177  0852               	movf	_cen_ADC,w
  1562  0178  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1563  017D                     l2479:
  1564                           
  1565                           ;Maestro.c: 230:         set_cursor(2,13);
  1566  017D  300D               	movlw	13
  1567  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1568  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0180  00BC               	movwf	??_main
  1570  0181  083C               	movf	??_main,w
  1571  0182  00F4               	movwf	set_cursor@posicion
  1572  0183  3002               	movlw	2
  1573  0184  120A  118A  254B  120A  118A  	fcall	_set_cursor
  1574  0189                     l2481:
  1575                           
  1576                           ;Maestro.c: 231:         Escribir_caracterLCD(uni_Temp);
  1577  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1578  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1579  018B  084C               	movf	_uni_Temp,w
  1580  018C  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1581  0191                     l2483:
  1582                           
  1583                           ;Maestro.c: 232:         Escribir_caracterLCD(dec_Temp);
  1584  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0193  084B               	movf	_dec_Temp,w
  1587  0194  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1588  0199                     l2485:
  1589                           
  1590                           ;Maestro.c: 233:         Escribir_caracterLCD(cen_Temp);
  1591  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1592  019A  1303               	bcf	3,6	;RP1=0, select bank0
  1593  019B  084A               	movf	_cen_Temp,w
  1594  019C  120A  118A  2732  120A  118A  	fcall	_Escribir_caracterLCD
  1595  01A1  2845               	goto	l2373
  1596  01A2  120A  118A  280C   	ljmp	start
  1597  01A5                     __end_of_main:
  1598                           
  1599                           	psect	text1
  1600  0642                     __ptext1:	
  1601 ;; *************** function _tabla_numASCII *****************
  1602 ;; Defined at:
  1603 ;;		line 288 in file "Maestro.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  a               1    wreg     unsigned char 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  a               1    4[COMMON] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      unsigned char 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         1       0       0       0       0
  1619 ;;      Temps:          2       0       0       0       0
  1620 ;;      Totals:         3       0       0       0       0
  1621 ;;Total ram usage:        3 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 1
  1624 ;; This function calls:
  1625 ;;		Nothing
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _tabla_numASCII
  1633  0642                     _tabla_numASCII:
  1634                           
  1635                           ;incstack = 0
  1636                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1637                           ;tabla_numASCII@a stored from wreg
  1638  0642  00F4               	movwf	tabla_numASCII@a
  1639  0643                     l2013:
  1640                           
  1641                           ;Maestro.c: 289:     switch(a){
  1642  0643  2E58               	goto	l2077
  1643  0644                     l2015:
  1644                           
  1645                           ;Maestro.c: 291:             return 48;
  1646  0644  3030               	movlw	48
  1647  0645  2E80               	goto	l141
  1648  0646                     l2021:
  1649                           
  1650                           ;Maestro.c: 294:             return 49;
  1651  0646  3031               	movlw	49
  1652  0647  2E80               	goto	l141
  1653  0648                     l2027:
  1654                           
  1655                           ;Maestro.c: 297:             return 50;
  1656  0648  3032               	movlw	50
  1657  0649  2E80               	goto	l141
  1658  064A                     l2033:
  1659                           
  1660                           ;Maestro.c: 300:             return 51;
  1661  064A  3033               	movlw	51
  1662  064B  2E80               	goto	l141
  1663  064C                     l2039:
  1664                           
  1665                           ;Maestro.c: 303:             return 52;
  1666  064C  3034               	movlw	52
  1667  064D  2E80               	goto	l141
  1668  064E                     l2045:
  1669                           
  1670                           ;Maestro.c: 306:             return 53;
  1671  064E  3035               	movlw	53
  1672  064F  2E80               	goto	l141
  1673  0650                     l2051:
  1674                           
  1675                           ;Maestro.c: 309:             return 54;
  1676  0650  3036               	movlw	54
  1677  0651  2E80               	goto	l141
  1678  0652                     l2057:
  1679                           
  1680                           ;Maestro.c: 312:             return 55;
  1681  0652  3037               	movlw	55
  1682  0653  2E80               	goto	l141
  1683  0654                     l2063:
  1684                           
  1685                           ;Maestro.c: 315:             return 56;
  1686  0654  3038               	movlw	56
  1687  0655  2E80               	goto	l141
  1688  0656                     l2069:
  1689                           
  1690                           ;Maestro.c: 318:             return 57;
  1691  0656  3039               	movlw	57
  1692  0657  2E80               	goto	l141
  1693  0658                     l2077:
  1694  0658  0874               	movf	tabla_numASCII@a,w
  1695  0659  00F2               	movwf	??_tabla_numASCII
  1696  065A  01F3               	clrf	??_tabla_numASCII+1
  1697                           
  1698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1699                           ; Switch size 1, requested type "simple"
  1700                           ; Number of cases is 1, Range of values is 0 to 0
  1701                           ; switch strategies available:
  1702                           ; Name         Instructions Cycles
  1703                           ; simple_byte            4     3 (average)
  1704                           ; direct_byte           11     8 (fixed)
  1705                           ; jumptable            260     6 (fixed)
  1706                           ;	Chosen strategy is simple_byte
  1707  065B  0873               	movf	??_tabla_numASCII+1,w
  1708  065C  3A00               	xorlw	0	; case 0
  1709  065D  1903               	skipnz
  1710  065E  2E60               	goto	l2539
  1711  065F  2E80               	goto	l141
  1712  0660                     l2539:
  1713                           
  1714                           ; Switch size 1, requested type "simple"
  1715                           ; Number of cases is 10, Range of values is 0 to 9
  1716                           ; switch strategies available:
  1717                           ; Name         Instructions Cycles
  1718                           ; simple_byte           31    16 (average)
  1719                           ; direct_byte           38     8 (fixed)
  1720                           ; jumptable            260     6 (fixed)
  1721                           ;	Chosen strategy is simple_byte
  1722  0660  0872               	movf	??_tabla_numASCII,w
  1723  0661  3A00               	xorlw	0	; case 0
  1724  0662  1903               	skipnz
  1725  0663  2E44               	goto	l2015
  1726  0664  3A01               	xorlw	1	; case 1
  1727  0665  1903               	skipnz
  1728  0666  2E46               	goto	l2021
  1729  0667  3A03               	xorlw	3	; case 2
  1730  0668  1903               	skipnz
  1731  0669  2E48               	goto	l2027
  1732  066A  3A01               	xorlw	1	; case 3
  1733  066B  1903               	skipnz
  1734  066C  2E4A               	goto	l2033
  1735  066D  3A07               	xorlw	7	; case 4
  1736  066E  1903               	skipnz
  1737  066F  2E4C               	goto	l2039
  1738  0670  3A01               	xorlw	1	; case 5
  1739  0671  1903               	skipnz
  1740  0672  2E4E               	goto	l2045
  1741  0673  3A03               	xorlw	3	; case 6
  1742  0674  1903               	skipnz
  1743  0675  2E50               	goto	l2051
  1744  0676  3A01               	xorlw	1	; case 7
  1745  0677  1903               	skipnz
  1746  0678  2E52               	goto	l2057
  1747  0679  3A0F               	xorlw	15	; case 8
  1748  067A  1903               	skipnz
  1749  067B  2E54               	goto	l2063
  1750  067C  3A01               	xorlw	1	; case 9
  1751  067D  1903               	skipnz
  1752  067E  2E56               	goto	l2069
  1753  067F  2E80               	goto	l141
  1754  0680                     l141:
  1755  0680  0008               	return
  1756  0681                     __end_of_tabla_numASCII:
  1757                           
  1758                           	psect	text2
  1759  02FF                     __ptext2:	
  1760 ;; *************** function _setup *****************
  1761 ;; Defined at:
  1762 ;;		line 239 in file "Maestro.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         0       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0
  1778 ;;      Temps:          0       3       0       0       0
  1779 ;;      Totals:         0       3       0       0       0
  1780 ;;Total ram usage:        3 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 4
  1783 ;; This function calls:
  1784 ;;		_Config_USART
  1785 ;;		_Escribir_stringLCD
  1786 ;;		_Iniciar_LCD
  1787 ;;		_InitMSSP
  1788 ;;		_Limpiar_pantallaLCD
  1789 ;;		_initOsc
  1790 ;;		_set_cursor
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _setup
  1798  02FF                     _setup:
  1799  02FF                     l2311:	
  1800                           ;incstack = 0
  1801                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1802                           
  1803                           
  1804                           ;Maestro.c: 242:     ANSEL = 0;
  1805  02FF  1683               	bsf	3,5	;RP0=1, select bank3
  1806  0300  1703               	bsf	3,6	;RP1=1, select bank3
  1807  0301  0188               	clrf	8	;volatile
  1808                           
  1809                           ;Maestro.c: 243:     ANSELH = 0;
  1810  0302  0189               	clrf	9	;volatile
  1811                           
  1812                           ;Maestro.c: 245:     TRISA = 0;
  1813  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0305  0185               	clrf	5	;volatile
  1816                           
  1817                           ;Maestro.c: 246:     TRISB = 0;
  1818  0306  0186               	clrf	6	;volatile
  1819                           
  1820                           ;Maestro.c: 247:     TRISD = 0;
  1821  0307  0188               	clrf	8	;volatile
  1822                           
  1823                           ;Maestro.c: 248:     TRISE = 0;
  1824  0308  0189               	clrf	9	;volatile
  1825                           
  1826                           ;Maestro.c: 250:     PORTA = 0;
  1827  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1828  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1829  030B  0185               	clrf	5	;volatile
  1830                           
  1831                           ;Maestro.c: 251:     PORTD = 0;
  1832  030C  0188               	clrf	8	;volatile
  1833                           
  1834                           ;Maestro.c: 252:     PORTE = 0;
  1835  030D  0189               	clrf	9	;volatile
  1836                           
  1837                           ;Maestro.c: 253:     PORTB = 0;
  1838  030E  0186               	clrf	6	;volatile
  1839                           
  1840                           ;Maestro.c: 254:     PORTC = 0;
  1841  030F  0187               	clrf	7	;volatile
  1842  0310                     l2313:
  1843                           
  1844                           ;Maestro.c: 257:     TRISC2 = 0;
  1845  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1846  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1847  0312  1107               	bcf	7,2	;volatile
  1848  0313                     l2315:
  1849                           
  1850                           ;Maestro.c: 258:     PORTCbits.RC2 = 1;
  1851  0313  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0314  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0315  1507               	bsf	7,2	;volatile
  1854  0316                     l2317:
  1855                           
  1856                           ;Maestro.c: 260:     TRISC1 = 0;
  1857  0316  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0317  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0318  1087               	bcf	7,1	;volatile
  1860  0319                     l2319:
  1861                           
  1862                           ;Maestro.c: 261:     PORTCbits.RC1 = 1;
  1863  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1864  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1865  031B  1487               	bsf	7,1	;volatile
  1866  031C                     l2321:
  1867                           
  1868                           ;Maestro.c: 263:     TRISC0 = 0;
  1869  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1870  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1871  031E  1007               	bcf	7,0	;volatile
  1872  031F                     l2323:
  1873                           
  1874                           ;Maestro.c: 264:     PORTCbits.RC0 = 1;
  1875  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0321  1407               	bsf	7,0	;volatile
  1878  0322                     l2325:
  1879                           
  1880                           ;Maestro.c: 267:     initOsc(4);
  1881  0322  3004               	movlw	4
  1882  0323  120A  118A  26B4  120A  118A  	fcall	_initOsc
  1883  0328                     l2327:
  1884                           
  1885                           ;Maestro.c: 270:     InitMSSP(SPI_MASTER_FOSC4);
  1886  0328  3000               	movlw	0
  1887  0329  120A  118A  2681  120A  118A  	fcall	_InitMSSP
  1888  032E                     l2329:
  1889                           
  1890                           ;Maestro.c: 273:     Iniciar_LCD();
  1891  032E  120A  118A  23E2  120A  118A  	fcall	_Iniciar_LCD
  1892  0333                     l2331:
  1893                           
  1894                           ;Maestro.c: 274:     Limpiar_pantallaLCD();
  1895  0333  120A  118A  270A  120A  118A  	fcall	_Limpiar_pantallaLCD
  1896  0338                     l2333:
  1897                           
  1898                           ;Maestro.c: 275:     set_cursor(1,0);
  1899  0338  01F4               	clrf	set_cursor@posicion
  1900  0339  3001               	movlw	1
  1901  033A  120A  118A  254B  120A  118A  	fcall	_set_cursor
  1902  033F                     l2335:
  1903                           
  1904                           ;Maestro.c: 276:     Escribir_stringLCD("Hola");
  1905  033F  3032               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1906  0340  120A  118A  26E4  120A  118A  	fcall	_Escribir_stringLCD
  1907  0345                     l2337:
  1908                           
  1909                           ;Maestro.c: 277:     set_cursor(2,2);
  1910  0345  3002               	movlw	2
  1911  0346  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0347  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0348  00A0               	movwf	??_setup
  1914  0349  0820               	movf	??_setup,w
  1915  034A  00F4               	movwf	set_cursor@posicion
  1916  034B  3002               	movlw	2
  1917  034C  120A  118A  254B  120A  118A  	fcall	_set_cursor
  1918  0351                     l2339:
  1919                           
  1920                           ;Maestro.c: 278:     Escribir_stringLCD("Jose Santizo");
  1921  0351  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1922  0352  120A  118A  26E4  120A  118A  	fcall	_Escribir_stringLCD
  1923  0357                     l2341:
  1924                           
  1925                           ;Maestro.c: 279:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1926  0357  301A               	movlw	26
  1927  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1929  035A  00A2               	movwf	??_setup+2
  1930  035B  305E               	movlw	94
  1931  035C  00A1               	movwf	??_setup+1
  1932  035D  306D               	movlw	109
  1933  035E  00A0               	movwf	??_setup
  1934  035F                     u1257:
  1935  035F  0BA0               	decfsz	??_setup,f
  1936  0360  2B5F               	goto	u1257
  1937  0361  0BA1               	decfsz	??_setup+1,f
  1938  0362  2B5F               	goto	u1257
  1939  0363  0BA2               	decfsz	??_setup+2,f
  1940  0364  2B5F               	goto	u1257
  1941  0365  2B66               	nop2
  1942  0366                     l2343:
  1943                           
  1944                           ;Maestro.c: 280:     Limpiar_pantallaLCD();
  1945  0366  120A  118A  270A  120A  118A  	fcall	_Limpiar_pantallaLCD
  1946  036B                     l2345:
  1947                           
  1948                           ;Maestro.c: 283:     Config_USART(9600,4);
  1949  036B  3080               	movlw	128
  1950  036C  00F2               	movwf	Config_USART@baud_rate
  1951  036D  3025               	movlw	37
  1952  036E  00F3               	movwf	Config_USART@baud_rate+1
  1953  036F  3004               	movlw	4
  1954  0370  00F4               	movwf	Config_USART@Freq
  1955  0371  3000               	movlw	0
  1956  0372  00F5               	movwf	Config_USART@Freq+1
  1957  0373  120A  118A  21A5  120A  118A  	fcall	_Config_USART
  1958  0378                     l136:
  1959  0378  0008               	return
  1960  0379                     __end_of_setup:
  1961                           
  1962                           	psect	text3
  1963  054B                     __ptext3:	
  1964 ;; *************** function _set_cursor *****************
  1965 ;; Defined at:
  1966 ;;		line 77 in file "LCD.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  linea           1    wreg     unsigned char 
  1969 ;;  posicion        1    4[COMMON] unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  linea           1    7[COMMON] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         1       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0
  1983 ;;      Temps:          2       0       0       0       0
  1984 ;;      Totals:         4       0       0       0       0
  1985 ;;Total ram usage:        4 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 3
  1988 ;; This function calls:
  1989 ;;		_Escribir_comandoLCD
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;;		_setup
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function _set_cursor
  1998  054B                     _set_cursor:
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  2002                           ;set_cursor@linea stored from wreg
  2003  054B  00F7               	movwf	set_cursor@linea
  2004  054C                     l1639:
  2005                           
  2006                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2007  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2008  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2009  054E  1188               	bcf	8,3	;volatile
  2010  054F  1208               	bcf	8,4	;volatile
  2011  0550                     l1641:
  2012                           
  2013                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  2014  0550  0377               	decf	set_cursor@linea,w
  2015  0551  1D03               	btfss	3,2
  2016  0552  2D54               	goto	u651
  2017  0553  2D55               	goto	u650
  2018  0554                     u651:
  2019  0554  2D5C               	goto	l1645
  2020  0555                     u650:
  2021  0555                     l1643:
  2022  0555  3080               	movlw	128
  2023  0556  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2024  055B  2D68               	goto	l1649
  2025  055C                     l1645:
  2026  055C  3002               	movlw	2
  2027  055D  0677               	xorwf	set_cursor@linea,w
  2028  055E  1D03               	btfss	3,2
  2029  055F  2D61               	goto	u661
  2030  0560  2D62               	goto	u660
  2031  0561                     u661:
  2032  0561  2D68               	goto	l1649
  2033  0562                     u660:
  2034  0562                     l1647:
  2035  0562  30C0               	movlw	192
  2036  0563  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2037  0568                     l1649:
  2038                           
  2039                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  2040  0568  3068               	movlw	104
  2041  0569  00F6               	movwf	??_set_cursor+1
  2042  056A  30E4               	movlw	228
  2043  056B  00F5               	movwf	??_set_cursor
  2044  056C                     u1267:
  2045  056C  0BF5               	decfsz	??_set_cursor,f
  2046  056D  2D6C               	goto	u1267
  2047  056E  0BF6               	decfsz	??_set_cursor+1,f
  2048  056F  2D6C               	goto	u1267
  2049  0570  0000               	nop
  2050  0571                     l1651:
  2051                           
  2052                           ;LCD.c: 86:     if (posicion != 0){
  2053  0571  0874               	movf	set_cursor@posicion,w
  2054  0572  1903               	btfsc	3,2
  2055  0573  2D75               	goto	u671
  2056  0574  2D76               	goto	u670
  2057  0575                     u671:
  2058  0575  2D8D               	goto	l263
  2059  0576                     u670:
  2060  0576  2D7F               	goto	l1659
  2061  0577                     l1655:
  2062                           
  2063                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  2064  0577  3014               	movlw	20
  2065  0578  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2066  057D                     l1657:
  2067                           
  2068                           ;LCD.c: 89:             posicion--;
  2069  057D  3001               	movlw	1
  2070  057E  02F4               	subwf	set_cursor@posicion,f
  2071  057F                     l1659:
  2072                           
  2073                           ;LCD.c: 87:         while(posicion > 0){
  2074  057F  0874               	movf	set_cursor@posicion,w
  2075  0580  1D03               	btfss	3,2
  2076  0581  2D83               	goto	u681
  2077  0582  2D84               	goto	u680
  2078  0583                     u681:
  2079  0583  2D77               	goto	l1655
  2080  0584                     u680:
  2081  0584                     l1661:
  2082                           
  2083                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  2084  0584  3068               	movlw	104
  2085  0585  00F6               	movwf	??_set_cursor+1
  2086  0586  30E4               	movlw	228
  2087  0587  00F5               	movwf	??_set_cursor
  2088  0588                     u1277:
  2089  0588  0BF5               	decfsz	??_set_cursor,f
  2090  0589  2D88               	goto	u1277
  2091  058A  0BF6               	decfsz	??_set_cursor+1,f
  2092  058B  2D88               	goto	u1277
  2093  058C  0000               	nop
  2094  058D                     l263:
  2095  058D  0008               	return
  2096  058E                     __end_of_set_cursor:
  2097                           
  2098                           	psect	text4
  2099  06B4                     __ptext4:	
  2100 ;; *************** function _initOsc *****************
  2101 ;; Defined at:
  2102 ;;		line 12 in file "Oscilador.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  Valor           1    wreg     unsigned char 
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  Valor           1    2[COMMON] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       0       0       0       0
  2117 ;;      Locals:         1       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0
  2119 ;;      Totals:         1       0       0       0       0
  2120 ;;Total ram usage:        1 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_setup
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _initOsc
  2132  06B4                     _initOsc:
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  2136                           ;initOsc@Valor stored from wreg
  2137  06B4  00F2               	movwf	initOsc@Valor
  2138  06B5                     l1673:
  2139                           
  2140                           ;Oscilador.c: 14:     if(Valor == 8){
  2141  06B5  3008               	movlw	8
  2142  06B6  0672               	xorwf	initOsc@Valor,w
  2143  06B7  1D03               	btfss	3,2
  2144  06B8  2EBA               	goto	u701
  2145  06B9  2EBB               	goto	u700
  2146  06BA                     u701:
  2147  06BA  2EC0               	goto	l1677
  2148  06BB                     u700:
  2149  06BB                     l1675:
  2150                           
  2151                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  2152  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  2153  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  2154  06BD  160F               	bsf	15,4	;volatile
  2155                           
  2156                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  2157  06BE  168F               	bsf	15,5	;volatile
  2158                           
  2159                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  2160  06BF  170F               	bsf	15,6	;volatile
  2161  06C0                     l1677:
  2162                           
  2163                           ;Oscilador.c: 19:     if(Valor == 4){
  2164  06C0  3004               	movlw	4
  2165  06C1  0672               	xorwf	initOsc@Valor,w
  2166  06C2  1D03               	btfss	3,2
  2167  06C3  2EC5               	goto	u711
  2168  06C4  2EC6               	goto	u710
  2169  06C5                     u711:
  2170  06C5  2ECB               	goto	l1681
  2171  06C6                     u710:
  2172  06C6                     l1679:
  2173                           
  2174                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2175  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  2176  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  2177  06C8  120F               	bcf	15,4	;volatile
  2178                           
  2179                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2180  06C9  168F               	bsf	15,5	;volatile
  2181                           
  2182                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2183  06CA  170F               	bsf	15,6	;volatile
  2184  06CB                     l1681:
  2185                           
  2186                           ;Oscilador.c: 24:     if(Valor == 2){
  2187  06CB  3002               	movlw	2
  2188  06CC  0672               	xorwf	initOsc@Valor,w
  2189  06CD  1D03               	btfss	3,2
  2190  06CE  2ED0               	goto	u721
  2191  06CF  2ED1               	goto	u720
  2192  06D0                     u721:
  2193  06D0  2ED6               	goto	l1685
  2194  06D1                     u720:
  2195  06D1                     l1683:
  2196                           
  2197                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2198  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  2199  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  2200  06D3  160F               	bsf	15,4	;volatile
  2201                           
  2202                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2203  06D4  128F               	bcf	15,5	;volatile
  2204                           
  2205                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2206  06D5  170F               	bsf	15,6	;volatile
  2207  06D6                     l1685:
  2208                           
  2209                           ;Oscilador.c: 29:     if(Valor == 1){
  2210  06D6  0372               	decf	initOsc@Valor,w
  2211  06D7  1D03               	btfss	3,2
  2212  06D8  2EDA               	goto	u731
  2213  06D9  2EDB               	goto	u730
  2214  06DA                     u731:
  2215  06DA  2EE0               	goto	l271
  2216  06DB                     u730:
  2217  06DB                     l1687:
  2218                           
  2219                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2220  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  2221  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  2222  06DD  120F               	bcf	15,4	;volatile
  2223                           
  2224                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2225  06DE  128F               	bcf	15,5	;volatile
  2226                           
  2227                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2228  06DF  170F               	bsf	15,6	;volatile
  2229  06E0                     l271:	
  2230                           ;Oscilador.c: 33:     }
  2231                           
  2232                           
  2233                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2234  06E0  1683               	bsf	3,5	;RP0=1, select bank1
  2235  06E1  1303               	bcf	3,6	;RP1=0, select bank1
  2236  06E2  140F               	bsf	15,0	;volatile
  2237  06E3                     l272:
  2238  06E3  0008               	return
  2239  06E4                     __end_of_initOsc:
  2240                           
  2241                           	psect	text5
  2242  070A                     __ptext5:	
  2243 ;; *************** function _Limpiar_pantallaLCD *****************
  2244 ;; Defined at:
  2245 ;;		line 69 in file "LCD.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0
  2261 ;;      Temps:          2       0       0       0       0
  2262 ;;      Totals:         2       0       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; Hardware stack levels required when called: 3
  2266 ;; This function calls:
  2267 ;;		_Escribir_comandoLCD
  2268 ;; This function is called by:
  2269 ;;		_setup
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _Limpiar_pantallaLCD
  2275  070A                     _Limpiar_pantallaLCD:
  2276  070A                     l1745:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2279                           
  2280                           
  2281                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2282  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2283  070B  1303               	bcf	3,6	;RP1=0, select bank0
  2284  070C  1188               	bcf	8,3	;volatile
  2285  070D  1208               	bcf	8,4	;volatile
  2286  070E                     l1747:
  2287                           
  2288                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2289  070E  3001               	movlw	1
  2290  070F  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2291  0714                     l1749:
  2292                           
  2293                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2294  0714  301A               	movlw	26
  2295  0715  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2296  0716  30F8               	movlw	248
  2297  0717  00F4               	movwf	??_Limpiar_pantallaLCD
  2298  0718                     u1287:
  2299  0718  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2300  0719  2F18               	goto	u1287
  2301  071A  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2302  071B  2F18               	goto	u1287
  2303  071C  0000               	nop
  2304  071D                     l1751:
  2305                           
  2306                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2307  071D  3002               	movlw	2
  2308  071E  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2309  0723                     l253:
  2310  0723  0008               	return
  2311  0724                     __end_of_Limpiar_pantallaLCD:
  2312                           
  2313                           	psect	text6
  2314  0681                     __ptext6:	
  2315 ;; *************** function _InitMSSP *****************
  2316 ;; Defined at:
  2317 ;;		line 10 in file "SPI.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  Modo            1    wreg     enum E1264
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  Modo            1    2[COMMON] enum E1264
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         1       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0
  2334 ;;      Totals:         1       0       0       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_setup
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function _InitMSSP
  2347  0681                     _InitMSSP:
  2348                           
  2349                           ;incstack = 0
  2350                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  2351                           ;InitMSSP@Modo stored from wreg
  2352  0681  00F2               	movwf	InitMSSP@Modo
  2353  0682                     l1689:
  2354                           
  2355                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  2356  0682  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0683  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0684  0194               	clrf	20	;volatile
  2359                           
  2360                           ;SPI.c: 13:     SSPCON = 0b00000000;
  2361  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0687  0194               	clrf	20	;volatile
  2364  0688                     l1691:
  2365                           
  2366                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  2367  0688  1294               	bcf	20,5	;volatile
  2368  0689                     l1693:
  2369                           
  2370                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  2371  0689  1694               	bsf	20,5	;volatile
  2372  068A                     l1695:
  2373                           
  2374                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  2375  068A  1683               	bsf	3,5	;RP0=1, select bank1
  2376  068B  1303               	bcf	3,6	;RP1=0, select bank1
  2377  068C  1287               	bcf	7,5	;volatile
  2378  068D                     l1697:
  2379                           
  2380                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  2381  068D  1607               	bsf	7,4	;volatile
  2382  068E                     l1699:
  2383                           
  2384                           ;SPI.c: 25:     if (Modo < 0b00000110){
  2385  068E  3006               	movlw	6
  2386  068F  0272               	subwf	InitMSSP@Modo,w
  2387  0690  1803               	skipnc
  2388  0691  2E93               	goto	u741
  2389  0692  2E94               	goto	u740
  2390  0693                     u741:
  2391  0693  2E9D               	goto	l1705
  2392  0694                     u740:
  2393  0694                     l1701:
  2394                           
  2395                           ;SPI.c: 27:         if (Modo < 0b00000100){
  2396  0694  3004               	movlw	4
  2397  0695  0272               	subwf	InitMSSP@Modo,w
  2398  0696  1803               	skipnc
  2399  0697  2E99               	goto	u751
  2400  0698  2E9A               	goto	u750
  2401  0699                     u751:
  2402  0699  2E9C               	goto	l198
  2403  069A                     u750:
  2404  069A                     l1703:
  2405                           
  2406                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  2407  069A  1187               	bcf	7,3	;volatile
  2408                           
  2409                           ;SPI.c: 29:         }
  2410  069B  2E9D               	goto	l1705
  2411  069C                     l198:	
  2412                           ;SPI.c: 30:         else {
  2413                           
  2414                           
  2415                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  2416  069C  1587               	bsf	7,3	;volatile
  2417  069D                     l1705:
  2418                           
  2419                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2420  069D  3004               	movlw	4
  2421  069E  0672               	xorwf	InitMSSP@Modo,w
  2422  069F  1D03               	btfss	3,2
  2423  06A0  2EA2               	goto	u761
  2424  06A1  2EA3               	goto	u760
  2425  06A2                     u761:
  2426  06A2  2EA4               	goto	l1709
  2427  06A3                     u760:
  2428  06A3                     l1707:
  2429  06A3  1685               	bsf	5,5	;volatile
  2430  06A4                     l1709:
  2431                           
  2432                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  2433  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2434  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2435  06A6  0814               	movf	20,w	;volatile
  2436  06A7  0472               	iorwf	InitMSSP@Modo,w	;volatile
  2437  06A8  0094               	movwf	20	;volatile
  2438  06A9                     l1711:
  2439                           
  2440                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  2441  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  2442  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  2443  06AB  118C               	bcf	12,3	;volatile
  2444  06AC                     l1713:
  2445                           
  2446                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  2447  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  2448  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  2449  06AE  1214               	bcf	20,4	;volatile
  2450  06AF                     l1715:
  2451                           
  2452                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  2453  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  2454  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  2455  06B1  1314               	bcf	20,6	;volatile
  2456  06B2                     l1717:
  2457                           
  2458                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  2459  06B2  1394               	bcf	20,7	;volatile
  2460  06B3                     l201:
  2461  06B3  0008               	return
  2462  06B4                     __end_of_InitMSSP:
  2463                           
  2464                           	psect	text7
  2465  03E2                     __ptext7:	
  2466 ;; *************** function _Iniciar_LCD *****************
  2467 ;; Defined at:
  2468 ;;		line 30 in file "LCD.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0
  2484 ;;      Temps:          2       0       0       0       0
  2485 ;;      Totals:         2       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 3
  2489 ;; This function calls:
  2490 ;;		_Escribir_comandoLCD
  2491 ;; This function is called by:
  2492 ;;		_setup
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function _Iniciar_LCD
  2498  03E2                     _Iniciar_LCD:
  2499  03E2                     l1719:	
  2500                           ;incstack = 0
  2501                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2502                           
  2503                           
  2504                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  2505  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2506  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  2507  03E4  1188               	bcf	8,3	;volatile
  2508                           
  2509                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2510  03E5  1208               	bcf	8,4	;volatile
  2511  03E6                     l1721:
  2512                           
  2513                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  2514  03E6  3025               	movlw	37
  2515  03E7  00F5               	movwf	??_Iniciar_LCD+1
  2516  03E8  305B               	movlw	91
  2517  03E9  00F4               	movwf	??_Iniciar_LCD
  2518  03EA                     u1297:
  2519  03EA  0BF4               	decfsz	??_Iniciar_LCD,f
  2520  03EB  2BEA               	goto	u1297
  2521  03EC  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2522  03ED  2BEA               	goto	u1297
  2523  03EE  2BEF               	nop2
  2524  03EF                     l1723:
  2525                           
  2526                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2527  03EF  3030               	movlw	48
  2528  03F0  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2529  03F5                     l1725:
  2530                           
  2531                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2532  03F5  300B               	movlw	11
  2533  03F6  00F5               	movwf	??_Iniciar_LCD+1
  2534  03F7  3062               	movlw	98
  2535  03F8  00F4               	movwf	??_Iniciar_LCD
  2536  03F9                     u1307:
  2537  03F9  0BF4               	decfsz	??_Iniciar_LCD,f
  2538  03FA  2BF9               	goto	u1307
  2539  03FB  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2540  03FC  2BF9               	goto	u1307
  2541  03FD  0000               	nop
  2542                           
  2543                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2544  03FE  3030               	movlw	48
  2545  03FF  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2546  0404                     l1727:
  2547                           
  2548                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2549  0404  3042               	movlw	66
  2550  0405  00F4               	movwf	??_Iniciar_LCD
  2551  0406                     u1317:
  2552  0406  0BF4               	decfsz	??_Iniciar_LCD,f
  2553  0407  2C06               	goto	u1317
  2554  0408  0000               	nop
  2555  0409                     l1729:
  2556                           
  2557                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2558  0409  3030               	movlw	48
  2559  040A  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2560                           
  2561                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2562  040F  3042               	movlw	66
  2563  0410  00F4               	movwf	??_Iniciar_LCD
  2564  0411                     u1327:
  2565  0411  0BF4               	decfsz	??_Iniciar_LCD,f
  2566  0412  2C11               	goto	u1327
  2567  0413  0000               	nop
  2568  0414                     l1731:
  2569                           
  2570                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2571  0414  3038               	movlw	56
  2572  0415  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2573  041A                     l1733:
  2574                           
  2575                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2576  041A  3042               	movlw	66
  2577  041B  00F4               	movwf	??_Iniciar_LCD
  2578  041C                     u1337:
  2579  041C  0BF4               	decfsz	??_Iniciar_LCD,f
  2580  041D  2C1C               	goto	u1337
  2581  041E  0000               	nop
  2582                           
  2583                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2584  041F  3008               	movlw	8
  2585  0420  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2586  0425                     l1735:
  2587                           
  2588                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2589  0425  3042               	movlw	66
  2590  0426  00F4               	movwf	??_Iniciar_LCD
  2591  0427                     u1347:
  2592  0427  0BF4               	decfsz	??_Iniciar_LCD,f
  2593  0428  2C27               	goto	u1347
  2594  0429  0000               	nop
  2595  042A                     l1737:
  2596                           
  2597                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2598  042A  3001               	movlw	1
  2599  042B  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2600                           
  2601                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2602  0430  3042               	movlw	66
  2603  0431  00F4               	movwf	??_Iniciar_LCD
  2604  0432                     u1357:
  2605  0432  0BF4               	decfsz	??_Iniciar_LCD,f
  2606  0433  2C32               	goto	u1357
  2607  0434  0000               	nop
  2608  0435                     l1739:
  2609                           
  2610                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2611  0435  3006               	movlw	6
  2612  0436  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2613  043B                     l1741:
  2614                           
  2615                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2616  043B  3042               	movlw	66
  2617  043C  00F4               	movwf	??_Iniciar_LCD
  2618  043D                     u1367:
  2619  043D  0BF4               	decfsz	??_Iniciar_LCD,f
  2620  043E  2C3D               	goto	u1367
  2621  043F  0000               	nop
  2622                           
  2623                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2624  0440  300C               	movlw	12
  2625  0441  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2626  0446                     l241:
  2627  0446  0008               	return
  2628  0447                     __end_of_Iniciar_LCD:
  2629                           
  2630                           	psect	text8
  2631  06E4                     __ptext8:	
  2632 ;; *************** function _Escribir_stringLCD *****************
  2633 ;; Defined at:
  2634 ;;		line 55 in file "LCD.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  d               1    wreg     PTR const unsigned char 
  2637 ;;		 -> STR_3(13), STR_2(5), STR_1(17), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  d               1    6[COMMON] PTR const unsigned char 
  2640 ;;		 -> STR_3(13), STR_2(5), STR_1(17), 
  2641 ;;  i               1    5[COMMON] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         0       0       0       0       0
  2652 ;;      Locals:         2       0       0       0       0
  2653 ;;      Temps:          1       0       0       0       0
  2654 ;;      Totals:         3       0       0       0       0
  2655 ;;Total ram usage:        3 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 3
  2658 ;; This function calls:
  2659 ;;		_Escribir_comandoLCD
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;;		_setup
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _Escribir_stringLCD
  2668  06E4                     _Escribir_stringLCD:
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2672                           ;Escribir_stringLCD@d stored from wreg
  2673  06E4  00F6               	movwf	Escribir_stringLCD@d
  2674  06E5                     l1663:
  2675                           
  2676                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  2677  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2678  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2679  06E7  1588               	bsf	8,3	;volatile
  2680  06E8  1208               	bcf	8,4	;volatile
  2681  06E9                     l1665:
  2682                           
  2683                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2684  06E9  01F5               	clrf	Escribir_stringLCD@i
  2685  06EA  2EFC               	goto	l1671
  2686  06EB                     l1667:
  2687                           
  2688                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2689  06EB  0875               	movf	Escribir_stringLCD@i,w
  2690  06EC  0776               	addwf	Escribir_stringLCD@d,w
  2691  06ED  0084               	movwf	4
  2692  06EE  120A  118A  2600  120A  118A  	fcall	stringdir
  2693  06F3  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  2694  06F8                     l1669:
  2695                           
  2696                           ;LCD.c: 60:     }
  2697  06F8  3001               	movlw	1
  2698  06F9  00F4               	movwf	??_Escribir_stringLCD
  2699  06FA  0874               	movf	??_Escribir_stringLCD,w
  2700  06FB  07F5               	addwf	Escribir_stringLCD@i,f
  2701  06FC                     l1671:
  2702  06FC  0875               	movf	Escribir_stringLCD@i,w
  2703  06FD  0776               	addwf	Escribir_stringLCD@d,w
  2704  06FE  0084               	movwf	4
  2705  06FF  120A  118A  2600  120A  118A  	fcall	stringdir
  2706  0704  3A00               	xorlw	0
  2707  0705  1D03               	skipz
  2708  0706  2F08               	goto	u691
  2709  0707  2F09               	goto	u690
  2710  0708                     u691:
  2711  0708  2EEB               	goto	l1667
  2712  0709                     u690:
  2713  0709                     l247:
  2714  0709  0008               	return
  2715  070A                     __end_of_Escribir_stringLCD:
  2716                           
  2717                           	psect	text9
  2718  01A5                     __ptext9:	
  2719 ;; *************** function _Config_USART *****************
  2720 ;; Defined at:
  2721 ;;		line 13 in file "UART.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  baud_rate       2    2[COMMON] int 
  2724 ;;  Freq            2    4[COMMON] int 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         4       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0
  2739 ;;      Totals:         4       0       0       0       0
  2740 ;;Total ram usage:        4 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_setup
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           
  2751                           ;psect for function _Config_USART
  2752  01A5                     _Config_USART:
  2753  01A5                     l1753:	
  2754                           ;incstack = 0
  2755                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  2756                           
  2757                           
  2758                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  2759  01A5  3080               	movlw	128
  2760  01A6  0672               	xorwf	Config_USART@baud_rate,w
  2761  01A7  3025               	movlw	37
  2762  01A8  1903               	skipnz
  2763  01A9  0673               	xorwf	Config_USART@baud_rate+1,w
  2764  01AA  1D03               	btfss	3,2
  2765  01AB  29AD               	goto	u771
  2766  01AC  29AE               	goto	u770
  2767  01AD                     u771:
  2768  01AD  29C1               	goto	l1763
  2769  01AE                     u770:
  2770  01AE                     l1755:
  2771  01AE  3004               	movlw	4
  2772  01AF  0674               	xorwf	Config_USART@Freq,w
  2773  01B0  0475               	iorwf	Config_USART@Freq+1,w
  2774  01B1  1D03               	btfss	3,2
  2775  01B2  29B4               	goto	u781
  2776  01B3  29B5               	goto	u780
  2777  01B4                     u781:
  2778  01B4  29C1               	goto	l1763
  2779  01B5                     u780:
  2780  01B5                     l1757:
  2781                           
  2782                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  2783  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2784  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2785  01B7  1218               	bcf	24,4	;volatile
  2786                           
  2787                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2788  01B8  1518               	bsf	24,2	;volatile
  2789                           
  2790                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  2791  01B9  1683               	bsf	3,5	;RP0=1, select bank3
  2792  01BA  1703               	bsf	3,6	;RP1=1, select bank3
  2793  01BB  1187               	bcf	7,3	;volatile
  2794  01BC                     l1759:
  2795                           
  2796                           ;UART.c: 20:         SPBRG = 25;
  2797  01BC  3019               	movlw	25
  2798  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2799  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2800  01BF  0099               	movwf	25	;volatile
  2801  01C0                     l1761:
  2802                           
  2803                           ;UART.c: 21:         SPBRGH = 0;
  2804  01C0  019A               	clrf	26	;volatile
  2805  01C1                     l1763:
  2806                           
  2807                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  2808  01C1  3080               	movlw	128
  2809  01C2  0672               	xorwf	Config_USART@baud_rate,w
  2810  01C3  3025               	movlw	37
  2811  01C4  1903               	skipnz
  2812  01C5  0673               	xorwf	Config_USART@baud_rate+1,w
  2813  01C6  1D03               	btfss	3,2
  2814  01C7  29C9               	goto	u791
  2815  01C8  29CA               	goto	u790
  2816  01C9                     u791:
  2817  01C9  29DD               	goto	l1773
  2818  01CA                     u790:
  2819  01CA                     l1765:
  2820  01CA  3008               	movlw	8
  2821  01CB  0674               	xorwf	Config_USART@Freq,w
  2822  01CC  0475               	iorwf	Config_USART@Freq+1,w
  2823  01CD  1D03               	btfss	3,2
  2824  01CE  29D0               	goto	u801
  2825  01CF  29D1               	goto	u800
  2826  01D0                     u801:
  2827  01D0  29DD               	goto	l1773
  2828  01D1                     u800:
  2829  01D1                     l1767:
  2830                           
  2831                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  2832  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  2833  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  2834  01D3  1218               	bcf	24,4	;volatile
  2835                           
  2836                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  2837  01D4  1118               	bcf	24,2	;volatile
  2838                           
  2839                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  2840  01D5  1683               	bsf	3,5	;RP0=1, select bank3
  2841  01D6  1703               	bsf	3,6	;RP1=1, select bank3
  2842  01D7  1587               	bsf	7,3	;volatile
  2843  01D8                     l1769:
  2844                           
  2845                           ;UART.c: 30:         SPBRG = 51;
  2846  01D8  3033               	movlw	51
  2847  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2848  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2849  01DB  0099               	movwf	25	;volatile
  2850  01DC                     l1771:
  2851                           
  2852                           ;UART.c: 31:         SPBRGH = 0;
  2853  01DC  019A               	clrf	26	;volatile
  2854  01DD                     l1773:
  2855                           
  2856                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  2857  01DD  3080               	movlw	128
  2858  01DE  0672               	xorwf	Config_USART@baud_rate,w
  2859  01DF  3025               	movlw	37
  2860  01E0  1903               	skipnz
  2861  01E1  0673               	xorwf	Config_USART@baud_rate+1,w
  2862  01E2  1D03               	btfss	3,2
  2863  01E3  29E5               	goto	u811
  2864  01E4  29E6               	goto	u810
  2865  01E5                     u811:
  2866  01E5  29F8               	goto	l1783
  2867  01E6                     u810:
  2868  01E6                     l1775:
  2869  01E6  0374               	decf	Config_USART@Freq,w
  2870  01E7  0475               	iorwf	Config_USART@Freq+1,w
  2871  01E8  1D03               	btfss	3,2
  2872  01E9  29EB               	goto	u821
  2873  01EA  29EC               	goto	u820
  2874  01EB                     u821:
  2875  01EB  29F8               	goto	l1783
  2876  01EC                     u820:
  2877  01EC                     l1777:
  2878                           
  2879                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  2880  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2881  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2882  01EE  1218               	bcf	24,4	;volatile
  2883                           
  2884                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  2885  01EF  1518               	bsf	24,2	;volatile
  2886                           
  2887                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  2888  01F0  1683               	bsf	3,5	;RP0=1, select bank3
  2889  01F1  1703               	bsf	3,6	;RP1=1, select bank3
  2890  01F2  1587               	bsf	7,3	;volatile
  2891  01F3                     l1779:
  2892                           
  2893                           ;UART.c: 40:         SPBRG = 25;
  2894  01F3  3019               	movlw	25
  2895  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  2896  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  2897  01F6  0099               	movwf	25	;volatile
  2898  01F7                     l1781:
  2899                           
  2900                           ;UART.c: 41:         SPBRGH = 0;
  2901  01F7  019A               	clrf	26	;volatile
  2902  01F8                     l1783:
  2903                           
  2904                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  2905  01F8  30B1               	movlw	177
  2906  01F9  0672               	xorwf	Config_USART@baud_rate,w
  2907  01FA  3028               	movlw	40
  2908  01FB  1903               	skipnz
  2909  01FC  0673               	xorwf	Config_USART@baud_rate+1,w
  2910  01FD  1D03               	btfss	3,2
  2911  01FE  2A00               	goto	u831
  2912  01FF  2A01               	goto	u830
  2913  0200                     u831:
  2914  0200  2A14               	goto	l1793
  2915  0201                     u830:
  2916  0201                     l1785:
  2917  0201  3004               	movlw	4
  2918  0202  0674               	xorwf	Config_USART@Freq,w
  2919  0203  0475               	iorwf	Config_USART@Freq+1,w
  2920  0204  1D03               	btfss	3,2
  2921  0205  2A07               	goto	u841
  2922  0206  2A08               	goto	u840
  2923  0207                     u841:
  2924  0207  2A14               	goto	l1793
  2925  0208                     u840:
  2926  0208                     l1787:
  2927                           
  2928                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  2929  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2930  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2931  020A  1218               	bcf	24,4	;volatile
  2932                           
  2933                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  2934  020B  1518               	bsf	24,2	;volatile
  2935                           
  2936                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  2937  020C  1683               	bsf	3,5	;RP0=1, select bank3
  2938  020D  1703               	bsf	3,6	;RP1=1, select bank3
  2939  020E  1587               	bsf	7,3	;volatile
  2940  020F                     l1789:
  2941                           
  2942                           ;UART.c: 50:         SPBRG = 23;
  2943  020F  3017               	movlw	23
  2944  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2945  0211  1303               	bcf	3,6	;RP1=0, select bank1
  2946  0212  0099               	movwf	25	;volatile
  2947  0213                     l1791:
  2948                           
  2949                           ;UART.c: 51:         SPBRGH = 0;
  2950  0213  019A               	clrf	26	;volatile
  2951  0214                     l1793:
  2952                           
  2953                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  2954  0214  30B1               	movlw	177
  2955  0215  0672               	xorwf	Config_USART@baud_rate,w
  2956  0216  3028               	movlw	40
  2957  0217  1903               	skipnz
  2958  0218  0673               	xorwf	Config_USART@baud_rate+1,w
  2959  0219  1D03               	btfss	3,2
  2960  021A  2A1C               	goto	u851
  2961  021B  2A1D               	goto	u850
  2962  021C                     u851:
  2963  021C  2A30               	goto	l1803
  2964  021D                     u850:
  2965  021D                     l1795:
  2966  021D  3008               	movlw	8
  2967  021E  0674               	xorwf	Config_USART@Freq,w
  2968  021F  0475               	iorwf	Config_USART@Freq+1,w
  2969  0220  1D03               	btfss	3,2
  2970  0221  2A23               	goto	u861
  2971  0222  2A24               	goto	u860
  2972  0223                     u861:
  2973  0223  2A30               	goto	l1803
  2974  0224                     u860:
  2975  0224                     l1797:
  2976                           
  2977                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  2978  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0226  1218               	bcf	24,4	;volatile
  2981                           
  2982                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  2983  0227  1118               	bcf	24,2	;volatile
  2984                           
  2985                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  2986  0228  1683               	bsf	3,5	;RP0=1, select bank3
  2987  0229  1703               	bsf	3,6	;RP1=1, select bank3
  2988  022A  1587               	bsf	7,3	;volatile
  2989  022B                     l1799:
  2990                           
  2991                           ;UART.c: 60:         SPBRG = 47;
  2992  022B  302F               	movlw	47
  2993  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2994  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2995  022E  0099               	movwf	25	;volatile
  2996  022F                     l1801:
  2997                           
  2998                           ;UART.c: 61:         SPBRGH = 0;
  2999  022F  019A               	clrf	26	;volatile
  3000  0230                     l1803:
  3001                           
  3002                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  3003  0230  30B1               	movlw	177
  3004  0231  0672               	xorwf	Config_USART@baud_rate,w
  3005  0232  3028               	movlw	40
  3006  0233  1903               	skipnz
  3007  0234  0673               	xorwf	Config_USART@baud_rate+1,w
  3008  0235  1D03               	btfss	3,2
  3009  0236  2A38               	goto	u871
  3010  0237  2A39               	goto	u870
  3011  0238                     u871:
  3012  0238  2A4B               	goto	l1813
  3013  0239                     u870:
  3014  0239                     l1805:
  3015  0239  0374               	decf	Config_USART@Freq,w
  3016  023A  0475               	iorwf	Config_USART@Freq+1,w
  3017  023B  1D03               	btfss	3,2
  3018  023C  2A3E               	goto	u881
  3019  023D  2A3F               	goto	u880
  3020  023E                     u881:
  3021  023E  2A4B               	goto	l1813
  3022  023F                     u880:
  3023  023F                     l1807:
  3024                           
  3025                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  3026  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0241  1218               	bcf	24,4	;volatile
  3029                           
  3030                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  3031  0242  1118               	bcf	24,2	;volatile
  3032                           
  3033                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  3034  0243  1683               	bsf	3,5	;RP0=1, select bank3
  3035  0244  1703               	bsf	3,6	;RP1=1, select bank3
  3036  0245  1587               	bsf	7,3	;volatile
  3037  0246                     l1809:
  3038                           
  3039                           ;UART.c: 70:         SPBRG = 5;
  3040  0246  3005               	movlw	5
  3041  0247  1683               	bsf	3,5	;RP0=1, select bank1
  3042  0248  1303               	bcf	3,6	;RP1=0, select bank1
  3043  0249  0099               	movwf	25	;volatile
  3044  024A                     l1811:
  3045                           
  3046                           ;UART.c: 71:         SPBRGH = 0;
  3047  024A  019A               	clrf	26	;volatile
  3048  024B                     l1813:
  3049                           
  3050                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  3051  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3052  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3053  024D  1798               	bsf	24,7	;volatile
  3054  024E                     l1815:
  3055                           
  3056                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  3057  024E  1318               	bcf	24,6	;volatile
  3058  024F                     l1817:
  3059                           
  3060                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  3061  024F  1618               	bsf	24,4	;volatile
  3062  0250                     l1819:
  3063                           
  3064                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  3065  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0251  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0252  1698               	bsf	24,5	;volatile
  3068  0253                     l1821:
  3069                           
  3070                           ;UART.c: 79:     PIE1bits.RCIE = 0;
  3071  0253  128C               	bcf	12,5	;volatile
  3072  0254                     l325:
  3073  0254  0008               	return
  3074  0255                     __end_of_Config_USART:
  3075                           
  3076                           	psect	text10
  3077  0447                     __ptext10:	
  3078 ;; *************** function _imprimir_cadena *****************
  3079 ;; Defined at:
  3080 ;;		line 325 in file "Maestro.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0
  3096 ;;      Temps:          0      13       0       0       0
  3097 ;;      Totals:         0      13       0       0       0
  3098 ;;Total ram usage:       13 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 2
  3101 ;; This function calls:
  3102 ;;		_TXREG_char
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _imprimir_cadena
  3110  0447                     _imprimir_cadena:
  3111  0447                     l1979:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _imprimir_cadena: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3114                           
  3115                           
  3116                           ;Maestro.c: 326:     if(PIR1bits.TXIF){
  3117  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0449  1E0C               	btfss	12,4	;volatile
  3120  044A  2C4C               	goto	u1081
  3121  044B  2C4D               	goto	u1080
  3122  044C                     u1081:
  3123  044C  2CA0               	goto	l159
  3124  044D                     u1080:
  3125  044D                     l1981:
  3126                           
  3127                           ;Maestro.c: 327:         for (i = 0; i<= n; i++){
  3128  044D  01D6               	clrf	_i
  3129  044E  2C9A               	goto	l1991
  3130  044F                     l1983:
  3131                           
  3132                           ;Maestro.c: 328:             TXREG = data;
  3133  044F  3059               	movlw	(low _data)& (0+255)
  3134  0450  0099               	movwf	25	;volatile
  3135  0451                     l1985:
  3136                           
  3137                           ;Maestro.c: 332:             direc = direc++;
  3138  0451  0842               	movf	_direc,w
  3139  0452  00A0               	movwf	TXREG_char@direccion
  3140  0453  0843               	movf	_direc+1,w
  3141  0454  00A1               	movwf	TXREG_char@direccion+1
  3142  0455  0852               	movf	_cen_ADC,w
  3143  0456  00AF               	movwf	??_imprimir_cadena
  3144  0457  082F               	movf	??_imprimir_cadena,w
  3145  0458  00A2               	movwf	TXREG_char@uni1
  3146  0459  0853               	movf	_dec_ADC,w
  3147  045A  00B0               	movwf	??_imprimir_cadena+1
  3148  045B  0830               	movf	??_imprimir_cadena+1,w
  3149  045C  00A3               	movwf	TXREG_char@dec1
  3150  045D  0854               	movf	_uni_ADC,w
  3151  045E  00B1               	movwf	??_imprimir_cadena+2
  3152  045F  0831               	movf	??_imprimir_cadena+2,w
  3153  0460  00A4               	movwf	TXREG_char@cen1
  3154  0461  3037               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3155  0462  00B2               	movwf	??_imprimir_cadena+3
  3156  0463  0832               	movf	??_imprimir_cadena+3,w
  3157  0464  00A5               	movwf	TXREG_char@e1
  3158  0465  084E               	movf	_cen_Cont,w
  3159  0466  00B3               	movwf	??_imprimir_cadena+4
  3160  0467  0833               	movf	??_imprimir_cadena+4,w
  3161  0468  00A6               	movwf	TXREG_char@uni2
  3162  0469  084F               	movf	_dec_Cont,w
  3163  046A  00B4               	movwf	??_imprimir_cadena+5
  3164  046B  0834               	movf	??_imprimir_cadena+5,w
  3165  046C  00A7               	movwf	TXREG_char@dec2
  3166  046D  0850               	movf	_uni_Cont,w
  3167  046E  00B5               	movwf	??_imprimir_cadena+6
  3168  046F  0835               	movf	??_imprimir_cadena+6,w
  3169  0470  00A8               	movwf	TXREG_char@cen2
  3170  0471  3037               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3171  0472  00B6               	movwf	??_imprimir_cadena+7
  3172  0473  0836               	movf	??_imprimir_cadena+7,w
  3173  0474  00A9               	movwf	TXREG_char@e2
  3174  0475  084A               	movf	_cen_Temp,w
  3175  0476  00B7               	movwf	??_imprimir_cadena+8
  3176  0477  0837               	movf	??_imprimir_cadena+8,w
  3177  0478  00AA               	movwf	TXREG_char@uni3
  3178  0479  084B               	movf	_dec_Temp,w
  3179  047A  00B8               	movwf	??_imprimir_cadena+9
  3180  047B  0838               	movf	??_imprimir_cadena+9,w
  3181  047C  00AB               	movwf	TXREG_char@dec3
  3182  047D  084C               	movf	_uni_Temp,w
  3183  047E  00B9               	movwf	??_imprimir_cadena+10
  3184  047F  0839               	movf	??_imprimir_cadena+10,w
  3185  0480  00AC               	movwf	TXREG_char@cen3
  3186  0481  303B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3187  0482  00BA               	movwf	??_imprimir_cadena+11
  3188  0483  083A               	movf	??_imprimir_cadena+11,w
  3189  0484  00AD               	movwf	TXREG_char@e3
  3190  0485  3059               	movlw	(low (_data| 0))& (0+255)
  3191  0486  00BB               	movwf	??_imprimir_cadena+12
  3192  0487  083B               	movf	??_imprimir_cadena+12,w
  3193  0488  00AE               	movwf	TXREG_char@data
  3194  0489  120A  118A  2255  120A  118A  	fcall	_TXREG_char
  3195  048E                     l1987:
  3196  048E  3001               	movlw	1
  3197  048F  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0490  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0491  07C2               	addwf	_direc,f
  3200  0492  1803               	skipnc
  3201  0493  0AC3               	incf	_direc+1,f
  3202  0494  3000               	movlw	0
  3203  0495  07C3               	addwf	_direc+1,f
  3204  0496                     l1989:
  3205                           
  3206                           ;Maestro.c: 333:         }
  3207  0496  3001               	movlw	1
  3208  0497  00AF               	movwf	??_imprimir_cadena
  3209  0498  082F               	movf	??_imprimir_cadena,w
  3210  0499  07D6               	addwf	_i,f
  3211  049A                     l1991:
  3212  049A  3014               	movlw	20
  3213  049B  0256               	subwf	_i,w
  3214  049C  1C03               	skipc
  3215  049D  2C9F               	goto	u1091
  3216  049E  2CA0               	goto	u1090
  3217  049F                     u1091:
  3218  049F  2C4F               	goto	l1983
  3219  04A0                     u1090:
  3220  04A0                     l159:
  3221  04A0  0008               	return
  3222  04A1                     __end_of_imprimir_cadena:
  3223                           
  3224                           	psect	text11
  3225  0255                     __ptext11:	
  3226 ;; *************** function _TXREG_char *****************
  3227 ;; Defined at:
  3228 ;;		line 337 in file "Maestro.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  direccion       2    0[BANK0 ] PTR unsigned char 
  3231 ;;		 -> RAM(512), 
  3232 ;;  uni1            1    2[BANK0 ] unsigned char 
  3233 ;;  dec1            1    3[BANK0 ] unsigned char 
  3234 ;;  cen1            1    4[BANK0 ] unsigned char 
  3235 ;;  e1              1    5[BANK0 ] unsigned char 
  3236 ;;  uni2            1    6[BANK0 ] unsigned char 
  3237 ;;  dec2            1    7[BANK0 ] unsigned char 
  3238 ;;  cen2            1    8[BANK0 ] unsigned char 
  3239 ;;  e2              1    9[BANK0 ] unsigned char 
  3240 ;;  uni3            1   10[BANK0 ] unsigned char 
  3241 ;;  dec3            1   11[BANK0 ] unsigned char 
  3242 ;;  cen3            1   12[BANK0 ] unsigned char 
  3243 ;;  e3              1   13[BANK0 ] unsigned char 
  3244 ;;  data            1   14[BANK0 ] PTR unsigned char 
  3245 ;;		 -> data(1), 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         0      15       0       0       0
  3258 ;;      Locals:         0       0       0       0       0
  3259 ;;      Temps:          2       0       0       0       0
  3260 ;;      Totals:         2      15       0       0       0
  3261 ;;Total ram usage:       17 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_imprimir_cadena
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           
  3272                           ;psect for function _TXREG_char
  3273  0255                     _TXREG_char:
  3274  0255                     l1823:	
  3275                           ;incstack = 0
  3276                           ; Regs used in _TXREG_char: [wreg-fsr0h+status,2+status,0]
  3277                           
  3278                           
  3279                           ;Maestro.c: 337: void TXREG_char (uint8_t *direccion,uint8_t uni1, uint8_t dec1, uint8_t
      +                           cen1,;Maestro.c: 338:                         uint8_t e1,uint8_t uni2, uint8_t dec2, ui
      +                          nt8_t cen2, uint8_t e2, uint8_t uni3,;Maestro.c: 339:                         uint8_t de
      +                          c3, uint8_t cen3, uint8_t e3, uint8_t *data){;Maestro.c: 340:     switch(*direccion){
  3280  0255  2AC6               	goto	l1855
  3281  0256                     l1825:
  3282                           
  3283                           ;Maestro.c: 342:             *data = msg;
  3284  0256  3001               	movlw	(low ((_msg-__stringbase)| (0+32768)))& (0+255)
  3285  0257  00F2               	movwf	??_TXREG_char
  3286  0258  082E               	movf	TXREG_char@data,w
  3287  0259  0084               	movwf	4
  3288  025A  0872               	movf	??_TXREG_char,w
  3289  025B  1383               	bcf	3,7	;select IRP bank0
  3290  025C  0080               	movwf	0
  3291                           
  3292                           ;Maestro.c: 343:             break;
  3293  025D  2AFE               	goto	l178
  3294  025E                     l1827:
  3295                           
  3296                           ;Maestro.c: 345:             *data = uni1;
  3297  025E  0822               	movf	TXREG_char@uni1,w
  3298  025F  00F2               	movwf	??_TXREG_char
  3299  0260  082E               	movf	TXREG_char@data,w
  3300  0261  0084               	movwf	4
  3301  0262  0872               	movf	??_TXREG_char,w
  3302  0263  1383               	bcf	3,7	;select IRP bank0
  3303  0264  0080               	movwf	0
  3304                           
  3305                           ;Maestro.c: 346:             break;
  3306  0265  2AFE               	goto	l178
  3307  0266                     l1829:
  3308                           
  3309                           ;Maestro.c: 348:             *data = dec1;
  3310  0266  0823               	movf	TXREG_char@dec1,w
  3311  0267  00F2               	movwf	??_TXREG_char
  3312  0268  082E               	movf	TXREG_char@data,w
  3313  0269  0084               	movwf	4
  3314  026A  0872               	movf	??_TXREG_char,w
  3315  026B  1383               	bcf	3,7	;select IRP bank0
  3316  026C  0080               	movwf	0
  3317                           
  3318                           ;Maestro.c: 349:             break;
  3319  026D  2AFE               	goto	l178
  3320  026E                     l1831:
  3321                           
  3322                           ;Maestro.c: 351:             *data = cen1;
  3323  026E  0824               	movf	TXREG_char@cen1,w
  3324  026F  00F2               	movwf	??_TXREG_char
  3325  0270  082E               	movf	TXREG_char@data,w
  3326  0271  0084               	movwf	4
  3327  0272  0872               	movf	??_TXREG_char,w
  3328  0273  1383               	bcf	3,7	;select IRP bank0
  3329  0274  0080               	movwf	0
  3330                           
  3331                           ;Maestro.c: 352:             break;
  3332  0275  2AFE               	goto	l178
  3333  0276                     l1833:
  3334                           
  3335                           ;Maestro.c: 354:             *data = e1;
  3336  0276  0825               	movf	TXREG_char@e1,w
  3337  0277  00F2               	movwf	??_TXREG_char
  3338  0278  082E               	movf	TXREG_char@data,w
  3339  0279  0084               	movwf	4
  3340  027A  0872               	movf	??_TXREG_char,w
  3341  027B  1383               	bcf	3,7	;select IRP bank0
  3342  027C  0080               	movwf	0
  3343                           
  3344                           ;Maestro.c: 355:             break;
  3345  027D  2AFE               	goto	l178
  3346  027E                     l1835:
  3347                           
  3348                           ;Maestro.c: 357:             *data = uni2;
  3349  027E  0826               	movf	TXREG_char@uni2,w
  3350  027F  00F2               	movwf	??_TXREG_char
  3351  0280  082E               	movf	TXREG_char@data,w
  3352  0281  0084               	movwf	4
  3353  0282  0872               	movf	??_TXREG_char,w
  3354  0283  1383               	bcf	3,7	;select IRP bank0
  3355  0284  0080               	movwf	0
  3356                           
  3357                           ;Maestro.c: 358:             break;
  3358  0285  2AFE               	goto	l178
  3359  0286                     l1837:
  3360                           
  3361                           ;Maestro.c: 360:             *data = dec2;
  3362  0286  0827               	movf	TXREG_char@dec2,w
  3363  0287  00F2               	movwf	??_TXREG_char
  3364  0288  082E               	movf	TXREG_char@data,w
  3365  0289  0084               	movwf	4
  3366  028A  0872               	movf	??_TXREG_char,w
  3367  028B  1383               	bcf	3,7	;select IRP bank0
  3368  028C  0080               	movwf	0
  3369                           
  3370                           ;Maestro.c: 361:             break;
  3371  028D  2AFE               	goto	l178
  3372  028E                     l1839:
  3373                           
  3374                           ;Maestro.c: 363:             *data = cen2;
  3375  028E  0828               	movf	TXREG_char@cen2,w
  3376  028F  00F2               	movwf	??_TXREG_char
  3377  0290  082E               	movf	TXREG_char@data,w
  3378  0291  0084               	movwf	4
  3379  0292  0872               	movf	??_TXREG_char,w
  3380  0293  1383               	bcf	3,7	;select IRP bank0
  3381  0294  0080               	movwf	0
  3382                           
  3383                           ;Maestro.c: 364:             break;
  3384  0295  2AFE               	goto	l178
  3385  0296                     l1841:
  3386                           
  3387                           ;Maestro.c: 366:             *data = e2;
  3388  0296  0829               	movf	TXREG_char@e2,w
  3389  0297  00F2               	movwf	??_TXREG_char
  3390  0298  082E               	movf	TXREG_char@data,w
  3391  0299  0084               	movwf	4
  3392  029A  0872               	movf	??_TXREG_char,w
  3393  029B  1383               	bcf	3,7	;select IRP bank0
  3394  029C  0080               	movwf	0
  3395                           
  3396                           ;Maestro.c: 367:             break;
  3397  029D  2AFE               	goto	l178
  3398  029E                     l1843:
  3399                           
  3400                           ;Maestro.c: 369:             *data = uni3;
  3401  029E  082A               	movf	TXREG_char@uni3,w
  3402  029F  00F2               	movwf	??_TXREG_char
  3403  02A0  082E               	movf	TXREG_char@data,w
  3404  02A1  0084               	movwf	4
  3405  02A2  0872               	movf	??_TXREG_char,w
  3406  02A3  1383               	bcf	3,7	;select IRP bank0
  3407  02A4  0080               	movwf	0
  3408                           
  3409                           ;Maestro.c: 370:             break;
  3410  02A5  2AFE               	goto	l178
  3411  02A6                     l1845:
  3412                           
  3413                           ;Maestro.c: 372:             *data = dec3;
  3414  02A6  082B               	movf	TXREG_char@dec3,w
  3415  02A7  00F2               	movwf	??_TXREG_char
  3416  02A8  082E               	movf	TXREG_char@data,w
  3417  02A9  0084               	movwf	4
  3418  02AA  0872               	movf	??_TXREG_char,w
  3419  02AB  1383               	bcf	3,7	;select IRP bank0
  3420  02AC  0080               	movwf	0
  3421                           
  3422                           ;Maestro.c: 373:             break;
  3423  02AD  2AFE               	goto	l178
  3424  02AE                     l1847:
  3425                           
  3426                           ;Maestro.c: 375:             *data = cen3;
  3427  02AE  082C               	movf	TXREG_char@cen3,w
  3428  02AF  00F2               	movwf	??_TXREG_char
  3429  02B0  082E               	movf	TXREG_char@data,w
  3430  02B1  0084               	movwf	4
  3431  02B2  0872               	movf	??_TXREG_char,w
  3432  02B3  1383               	bcf	3,7	;select IRP bank0
  3433  02B4  0080               	movwf	0
  3434                           
  3435                           ;Maestro.c: 376:             break;
  3436  02B5  2AFE               	goto	l178
  3437  02B6                     l1849:
  3438                           
  3439                           ;Maestro.c: 378:             *data = e3;
  3440  02B6  082D               	movf	TXREG_char@e3,w
  3441  02B7  00F2               	movwf	??_TXREG_char
  3442  02B8  082E               	movf	TXREG_char@data,w
  3443  02B9  0084               	movwf	4
  3444  02BA  0872               	movf	??_TXREG_char,w
  3445  02BB  1383               	bcf	3,7	;select IRP bank0
  3446  02BC  0080               	movwf	0
  3447                           
  3448                           ;Maestro.c: 379:             break;
  3449  02BD  2AFE               	goto	l178
  3450  02BE                     l1851:
  3451                           
  3452                           ;Maestro.c: 381:             *data = 13;
  3453  02BE  300D               	movlw	13
  3454  02BF  00F2               	movwf	??_TXREG_char
  3455  02C0  082E               	movf	TXREG_char@data,w
  3456  02C1  0084               	movwf	4
  3457  02C2  0872               	movf	??_TXREG_char,w
  3458  02C3  1383               	bcf	3,7	;select IRP bank0
  3459  02C4  0080               	movwf	0
  3460                           
  3461                           ;Maestro.c: 382:             break;
  3462  02C5  2AFE               	goto	l178
  3463  02C6                     l1855:
  3464  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3465  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3466  02C8  0820               	movf	TXREG_char@direccion,w
  3467  02C9  0084               	movwf	4
  3468  02CA  1783               	bsf	3,7
  3469  02CB  1C21               	btfss	TXREG_char@direccion+1,0
  3470  02CC  1383               	bcf	3,7
  3471  02CD  0800               	movf	0,w
  3472  02CE  00F2               	movwf	??_TXREG_char
  3473  02CF  01F3               	clrf	??_TXREG_char+1
  3474                           
  3475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3476                           ; Switch size 1, requested type "simple"
  3477                           ; Number of cases is 1, Range of values is 0 to 0
  3478                           ; switch strategies available:
  3479                           ; Name         Instructions Cycles
  3480                           ; simple_byte            4     3 (average)
  3481                           ; direct_byte           11     8 (fixed)
  3482                           ; jumptable            260     6 (fixed)
  3483                           ;	Chosen strategy is simple_byte
  3484  02D0  0873               	movf	??_TXREG_char+1,w
  3485  02D1  3A00               	xorlw	0	; case 0
  3486  02D2  1903               	skipnz
  3487  02D3  2AD5               	goto	l2541
  3488  02D4  2ABE               	goto	l1851
  3489  02D5                     l2541:
  3490                           
  3491                           ; Switch size 1, requested type "simple"
  3492                           ; Number of cases is 13, Range of values is 0 to 12
  3493                           ; switch strategies available:
  3494                           ; Name         Instructions Cycles
  3495                           ; simple_byte           40    21 (average)
  3496                           ; direct_byte           47     8 (fixed)
  3497                           ; jumptable            260     6 (fixed)
  3498                           ;	Chosen strategy is simple_byte
  3499  02D5  0872               	movf	??_TXREG_char,w
  3500  02D6  3A00               	xorlw	0	; case 0
  3501  02D7  1903               	skipnz
  3502  02D8  2A56               	goto	l1825
  3503  02D9  3A01               	xorlw	1	; case 1
  3504  02DA  1903               	skipnz
  3505  02DB  2A5E               	goto	l1827
  3506  02DC  3A03               	xorlw	3	; case 2
  3507  02DD  1903               	skipnz
  3508  02DE  2A66               	goto	l1829
  3509  02DF  3A01               	xorlw	1	; case 3
  3510  02E0  1903               	skipnz
  3511  02E1  2A6E               	goto	l1831
  3512  02E2  3A07               	xorlw	7	; case 4
  3513  02E3  1903               	skipnz
  3514  02E4  2A76               	goto	l1833
  3515  02E5  3A01               	xorlw	1	; case 5
  3516  02E6  1903               	skipnz
  3517  02E7  2A7E               	goto	l1835
  3518  02E8  3A03               	xorlw	3	; case 6
  3519  02E9  1903               	skipnz
  3520  02EA  2A86               	goto	l1837
  3521  02EB  3A01               	xorlw	1	; case 7
  3522  02EC  1903               	skipnz
  3523  02ED  2A8E               	goto	l1839
  3524  02EE  3A0F               	xorlw	15	; case 8
  3525  02EF  1903               	skipnz
  3526  02F0  2A96               	goto	l1841
  3527  02F1  3A01               	xorlw	1	; case 9
  3528  02F2  1903               	skipnz
  3529  02F3  2A9E               	goto	l1843
  3530  02F4  3A03               	xorlw	3	; case 10
  3531  02F5  1903               	skipnz
  3532  02F6  2AA6               	goto	l1845
  3533  02F7  3A01               	xorlw	1	; case 11
  3534  02F8  1903               	skipnz
  3535  02F9  2AAE               	goto	l1847
  3536  02FA  3A07               	xorlw	7	; case 12
  3537  02FB  1903               	skipnz
  3538  02FC  2AB6               	goto	l1849
  3539  02FD  2ABE               	goto	l1851
  3540  02FE                     l178:
  3541  02FE  0008               	return
  3542  02FF                     __end_of_TXREG_char:
  3543                           
  3544                           	psect	text12
  3545  04FA                     __ptext12:	
  3546 ;; *************** function _divisor_dec *****************
  3547 ;; Defined at:
  3548 ;;		line 76 in file "7SEG-hex.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  b               1    wreg     unsigned char 
  3551 ;;  dig1            1    9[COMMON] PTR unsigned char 
  3552 ;;		 -> Temp_dig(1), ADC_dig(1), Cont_dig(1), 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  b               1    8[BANK0 ] unsigned char 
  3555 ;;  n               2    9[BANK0 ] int 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3565 ;;      Params:         1       0       0       0       0
  3566 ;;      Locals:         0       3       0       0       0
  3567 ;;      Temps:          0       4       0       0       0
  3568 ;;      Totals:         1       7       0       0       0
  3569 ;;Total ram usage:        8 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 2
  3572 ;; This function calls:
  3573 ;;		___awdiv
  3574 ;;		___awmod
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _divisor_dec
  3582  04FA                     _divisor_dec:
  3583                           
  3584                           ;incstack = 0
  3585                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3586                           ;divisor_dec@b stored from wreg
  3587  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3588  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3589  04FC  00A8               	movwf	divisor_dec@b
  3590  04FD                     l2347:
  3591  04FD  01A9               	clrf	divisor_dec@n
  3592  04FE  01AA               	clrf	divisor_dec@n+1
  3593  04FF                     l2353:
  3594  04FF  300A               	movlw	10
  3595  0500  00F2               	movwf	___awmod@divisor
  3596  0501  3000               	movlw	0
  3597  0502  00F3               	movwf	___awmod@divisor+1
  3598  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0505  0828               	movf	divisor_dec@b,w
  3601  0506  00A4               	movwf	??_divisor_dec
  3602  0507  01A5               	clrf	??_divisor_dec+1
  3603  0508  0824               	movf	??_divisor_dec,w
  3604  0509  00F4               	movwf	___awmod@dividend
  3605  050A  0825               	movf	??_divisor_dec+1,w
  3606  050B  00F5               	movwf	___awmod@dividend+1
  3607  050C  120A  118A  24A1  120A  118A  	fcall	___awmod
  3608  0511  0872               	movf	?___awmod,w
  3609  0512  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0513  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0514  00A6               	movwf	??_divisor_dec+2
  3612  0515  0829               	movf	divisor_dec@n,w
  3613  0516  0779               	addwf	divisor_dec@dig1,w
  3614  0517  00A7               	movwf	??_divisor_dec+3
  3615  0518  0827               	movf	??_divisor_dec+3,w
  3616  0519  0084               	movwf	4
  3617  051A  0826               	movf	??_divisor_dec+2,w
  3618  051B  1383               	bcf	3,7	;select IRP bank0
  3619  051C  0080               	movwf	0
  3620  051D  300A               	movlw	10
  3621  051E  00F2               	movwf	___awdiv@divisor
  3622  051F  3000               	movlw	0
  3623  0520  00F3               	movwf	___awdiv@divisor+1
  3624  0521  0829               	movf	divisor_dec@n,w
  3625  0522  0779               	addwf	divisor_dec@dig1,w
  3626  0523  00A4               	movwf	??_divisor_dec
  3627  0524  0824               	movf	??_divisor_dec,w
  3628  0525  0084               	movwf	4
  3629  0526  0800               	movf	0,w
  3630  0527  0228               	subwf	divisor_dec@b,w
  3631  0528  00F4               	movwf	___awdiv@dividend
  3632  0529  01F5               	clrf	___awdiv@dividend+1
  3633  052A  1C03               	skipc
  3634  052B  03F5               	decf	___awdiv@dividend+1,f
  3635  052C  120A  118A  2379  120A  118A  	fcall	___awdiv
  3636  0531  0872               	movf	?___awdiv,w
  3637  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0534  00A5               	movwf	??_divisor_dec+1
  3640  0535  0825               	movf	??_divisor_dec+1,w
  3641  0536  00A8               	movwf	divisor_dec@b
  3642  0537                     l2355:
  3643  0537  3001               	movlw	1
  3644  0538  07A9               	addwf	divisor_dec@n,f
  3645  0539  1803               	skipnc
  3646  053A  0AAA               	incf	divisor_dec@n+1,f
  3647  053B  3000               	movlw	0
  3648  053C  07AA               	addwf	divisor_dec@n+1,f
  3649  053D                     l2357:
  3650  053D  082A               	movf	divisor_dec@n+1,w
  3651  053E  3A80               	xorlw	128
  3652  053F  00FF               	movwf	btemp+1
  3653  0540  3080               	movlw	128
  3654  0541  027F               	subwf	btemp+1,w
  3655  0542  1D03               	skipz
  3656  0543  2D46               	goto	u1235
  3657  0544  3003               	movlw	3
  3658  0545  0229               	subwf	divisor_dec@n,w
  3659  0546                     u1235:
  3660  0546  1C03               	skipc
  3661  0547  2D49               	goto	u1231
  3662  0548  2D4A               	goto	u1230
  3663  0549                     u1231:
  3664  0549  2CFF               	goto	l2353
  3665  054A                     u1230:
  3666  054A                     l304:
  3667  054A  0008               	return
  3668  054B                     __end_of_divisor_dec:
  3669                           
  3670                           	psect	text13
  3671  04A1                     __ptext13:	
  3672 ;; *************** function ___awmod *****************
  3673 ;; Defined at:
  3674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  divisor         2    2[COMMON] int 
  3677 ;;  dividend        2    4[COMMON] int 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  sign            1    8[COMMON] unsigned char 
  3680 ;;  counter         1    7[COMMON] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2    2[COMMON] int 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         4       0       0       0       0
  3691 ;;      Locals:         2       0       0       0       0
  3692 ;;      Temps:          1       0       0       0       0
  3693 ;;      Totals:         7       0       0       0       0
  3694 ;;Total ram usage:        7 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_divisor_dec
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           
  3705                           ;psect for function ___awmod
  3706  04A1                     ___awmod:
  3707  04A1                     l1905:	
  3708                           ;incstack = 0
  3709                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3710                           
  3711  04A1  01F8               	clrf	___awmod@sign
  3712  04A2                     l1907:
  3713  04A2  1FF5               	btfss	___awmod@dividend+1,7
  3714  04A3  2CA5               	goto	u991
  3715  04A4  2CA6               	goto	u990
  3716  04A5                     u991:
  3717  04A5  2CAD               	goto	l1913
  3718  04A6                     u990:
  3719  04A6                     l1909:
  3720  04A6  09F4               	comf	___awmod@dividend,f
  3721  04A7  09F5               	comf	___awmod@dividend+1,f
  3722  04A8  0AF4               	incf	___awmod@dividend,f
  3723  04A9  1903               	skipnz
  3724  04AA  0AF5               	incf	___awmod@dividend+1,f
  3725  04AB                     l1911:
  3726  04AB  01F8               	clrf	___awmod@sign
  3727  04AC  0AF8               	incf	___awmod@sign,f
  3728  04AD                     l1913:
  3729  04AD  1FF3               	btfss	___awmod@divisor+1,7
  3730  04AE  2CB0               	goto	u1001
  3731  04AF  2CB1               	goto	u1000
  3732  04B0                     u1001:
  3733  04B0  2CB6               	goto	l1917
  3734  04B1                     u1000:
  3735  04B1                     l1915:
  3736  04B1  09F2               	comf	___awmod@divisor,f
  3737  04B2  09F3               	comf	___awmod@divisor+1,f
  3738  04B3  0AF2               	incf	___awmod@divisor,f
  3739  04B4  1903               	skipnz
  3740  04B5  0AF3               	incf	___awmod@divisor+1,f
  3741  04B6                     l1917:
  3742  04B6  0872               	movf	___awmod@divisor,w
  3743  04B7  0473               	iorwf	___awmod@divisor+1,w
  3744  04B8  1903               	btfsc	3,2
  3745  04B9  2CBB               	goto	u1011
  3746  04BA  2CBC               	goto	u1010
  3747  04BB                     u1011:
  3748  04BB  2CEB               	goto	l1935
  3749  04BC                     u1010:
  3750  04BC                     l1919:
  3751  04BC  01F7               	clrf	___awmod@counter
  3752  04BD  0AF7               	incf	___awmod@counter,f
  3753  04BE  2CCA               	goto	l1925
  3754  04BF                     l1921:
  3755  04BF  3001               	movlw	1
  3756  04C0                     u1025:
  3757  04C0  1003               	clrc
  3758  04C1  0DF2               	rlf	___awmod@divisor,f
  3759  04C2  0DF3               	rlf	___awmod@divisor+1,f
  3760  04C3  3EFF               	addlw	-1
  3761  04C4  1D03               	skipz
  3762  04C5  2CC0               	goto	u1025
  3763  04C6                     l1923:
  3764  04C6  3001               	movlw	1
  3765  04C7  00F6               	movwf	??___awmod
  3766  04C8  0876               	movf	??___awmod,w
  3767  04C9  07F7               	addwf	___awmod@counter,f
  3768  04CA                     l1925:
  3769  04CA  1FF3               	btfss	___awmod@divisor+1,7
  3770  04CB  2CCD               	goto	u1031
  3771  04CC  2CCE               	goto	u1030
  3772  04CD                     u1031:
  3773  04CD  2CBF               	goto	l1921
  3774  04CE                     u1030:
  3775  04CE                     l1927:
  3776  04CE  0873               	movf	___awmod@divisor+1,w
  3777  04CF  0275               	subwf	___awmod@dividend+1,w
  3778  04D0  1D03               	skipz
  3779  04D1  2CD4               	goto	u1045
  3780  04D2  0872               	movf	___awmod@divisor,w
  3781  04D3  0274               	subwf	___awmod@dividend,w
  3782  04D4                     u1045:
  3783  04D4  1C03               	skipc
  3784  04D5  2CD7               	goto	u1041
  3785  04D6  2CD8               	goto	u1040
  3786  04D7                     u1041:
  3787  04D7  2CDE               	goto	l1931
  3788  04D8                     u1040:
  3789  04D8                     l1929:
  3790  04D8  0872               	movf	___awmod@divisor,w
  3791  04D9  02F4               	subwf	___awmod@dividend,f
  3792  04DA  0873               	movf	___awmod@divisor+1,w
  3793  04DB  1C03               	skipc
  3794  04DC  03F5               	decf	___awmod@dividend+1,f
  3795  04DD  02F5               	subwf	___awmod@dividend+1,f
  3796  04DE                     l1931:
  3797  04DE  3001               	movlw	1
  3798  04DF                     u1055:
  3799  04DF  1003               	clrc
  3800  04E0  0CF3               	rrf	___awmod@divisor+1,f
  3801  04E1  0CF2               	rrf	___awmod@divisor,f
  3802  04E2  3EFF               	addlw	-1
  3803  04E3  1D03               	skipz
  3804  04E4  2CDF               	goto	u1055
  3805  04E5                     l1933:
  3806  04E5  3001               	movlw	1
  3807  04E6  02F7               	subwf	___awmod@counter,f
  3808  04E7  1D03               	btfss	3,2
  3809  04E8  2CEA               	goto	u1061
  3810  04E9  2CEB               	goto	u1060
  3811  04EA                     u1061:
  3812  04EA  2CCE               	goto	l1927
  3813  04EB                     u1060:
  3814  04EB                     l1935:
  3815  04EB  0878               	movf	___awmod@sign,w
  3816  04EC  1903               	btfsc	3,2
  3817  04ED  2CEF               	goto	u1071
  3818  04EE  2CF0               	goto	u1070
  3819  04EF                     u1071:
  3820  04EF  2CF5               	goto	l1939
  3821  04F0                     u1070:
  3822  04F0                     l1937:
  3823  04F0  09F4               	comf	___awmod@dividend,f
  3824  04F1  09F5               	comf	___awmod@dividend+1,f
  3825  04F2  0AF4               	incf	___awmod@dividend,f
  3826  04F3  1903               	skipnz
  3827  04F4  0AF5               	incf	___awmod@dividend+1,f
  3828  04F5                     l1939:
  3829  04F5  0875               	movf	___awmod@dividend+1,w
  3830  04F6  00F3               	movwf	?___awmod+1
  3831  04F7  0874               	movf	___awmod@dividend,w
  3832  04F8  00F2               	movwf	?___awmod
  3833  04F9                     l577:
  3834  04F9  0008               	return
  3835  04FA                     __end_of___awmod:
  3836                           
  3837                           	psect	text14
  3838  0379                     __ptext14:	
  3839 ;; *************** function ___awdiv *****************
  3840 ;; Defined at:
  3841 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  divisor         2    2[COMMON] int 
  3844 ;;  dividend        2    4[COMMON] int 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  quotient        2    2[BANK0 ] int 
  3847 ;;  sign            1    1[BANK0 ] unsigned char 
  3848 ;;  counter         1    0[BANK0 ] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2    2[COMMON] int 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         4       0       0       0       0
  3859 ;;      Locals:         0       4       0       0       0
  3860 ;;      Temps:          1       0       0       0       0
  3861 ;;      Totals:         5       4       0       0       0
  3862 ;;Total ram usage:        9 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_divisor_dec
  3869 ;;		_divisor_hex
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           
  3874                           ;psect for function ___awdiv
  3875  0379                     ___awdiv:
  3876  0379                     l2267:	
  3877                           ;incstack = 0
  3878                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3879                           
  3880  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3881  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3882  037B  01A1               	clrf	___awdiv@sign
  3883  037C                     l2269:
  3884  037C  1FF3               	btfss	___awdiv@divisor+1,7
  3885  037D  2B7F               	goto	u1131
  3886  037E  2B80               	goto	u1130
  3887  037F                     u1131:
  3888  037F  2B87               	goto	l2275
  3889  0380                     u1130:
  3890  0380                     l2271:
  3891  0380  09F2               	comf	___awdiv@divisor,f
  3892  0381  09F3               	comf	___awdiv@divisor+1,f
  3893  0382  0AF2               	incf	___awdiv@divisor,f
  3894  0383  1903               	skipnz
  3895  0384  0AF3               	incf	___awdiv@divisor+1,f
  3896  0385                     l2273:
  3897  0385  01A1               	clrf	___awdiv@sign
  3898  0386  0AA1               	incf	___awdiv@sign,f
  3899  0387                     l2275:
  3900  0387  1FF5               	btfss	___awdiv@dividend+1,7
  3901  0388  2B8A               	goto	u1141
  3902  0389  2B8B               	goto	u1140
  3903  038A                     u1141:
  3904  038A  2B94               	goto	l2281
  3905  038B                     u1140:
  3906  038B                     l2277:
  3907  038B  09F4               	comf	___awdiv@dividend,f
  3908  038C  09F5               	comf	___awdiv@dividend+1,f
  3909  038D  0AF4               	incf	___awdiv@dividend,f
  3910  038E  1903               	skipnz
  3911  038F  0AF5               	incf	___awdiv@dividend+1,f
  3912  0390                     l2279:
  3913  0390  3001               	movlw	1
  3914  0391  00F6               	movwf	??___awdiv
  3915  0392  0876               	movf	??___awdiv,w
  3916  0393  06A1               	xorwf	___awdiv@sign,f
  3917  0394                     l2281:
  3918  0394  01A2               	clrf	___awdiv@quotient
  3919  0395  01A3               	clrf	___awdiv@quotient+1
  3920  0396                     l2283:
  3921  0396  0872               	movf	___awdiv@divisor,w
  3922  0397  0473               	iorwf	___awdiv@divisor+1,w
  3923  0398  1903               	btfsc	3,2
  3924  0399  2B9B               	goto	u1151
  3925  039A  2B9C               	goto	u1150
  3926  039B                     u1151:
  3927  039B  2BD3               	goto	l2303
  3928  039C                     u1150:
  3929  039C                     l2285:
  3930  039C  01A0               	clrf	___awdiv@counter
  3931  039D  0AA0               	incf	___awdiv@counter,f
  3932  039E  2BAA               	goto	l2291
  3933  039F                     l2287:
  3934  039F  3001               	movlw	1
  3935  03A0                     u1165:
  3936  03A0  1003               	clrc
  3937  03A1  0DF2               	rlf	___awdiv@divisor,f
  3938  03A2  0DF3               	rlf	___awdiv@divisor+1,f
  3939  03A3  3EFF               	addlw	-1
  3940  03A4  1D03               	skipz
  3941  03A5  2BA0               	goto	u1165
  3942  03A6                     l2289:
  3943  03A6  3001               	movlw	1
  3944  03A7  00F6               	movwf	??___awdiv
  3945  03A8  0876               	movf	??___awdiv,w
  3946  03A9  07A0               	addwf	___awdiv@counter,f
  3947  03AA                     l2291:
  3948  03AA  1FF3               	btfss	___awdiv@divisor+1,7
  3949  03AB  2BAD               	goto	u1171
  3950  03AC  2BAE               	goto	u1170
  3951  03AD                     u1171:
  3952  03AD  2B9F               	goto	l2287
  3953  03AE                     u1170:
  3954  03AE                     l2293:
  3955  03AE  3001               	movlw	1
  3956  03AF                     u1185:
  3957  03AF  1003               	clrc
  3958  03B0  0DA2               	rlf	___awdiv@quotient,f
  3959  03B1  0DA3               	rlf	___awdiv@quotient+1,f
  3960  03B2  3EFF               	addlw	-1
  3961  03B3  1D03               	skipz
  3962  03B4  2BAF               	goto	u1185
  3963  03B5  0873               	movf	___awdiv@divisor+1,w
  3964  03B6  0275               	subwf	___awdiv@dividend+1,w
  3965  03B7  1D03               	skipz
  3966  03B8  2BBB               	goto	u1195
  3967  03B9  0872               	movf	___awdiv@divisor,w
  3968  03BA  0274               	subwf	___awdiv@dividend,w
  3969  03BB                     u1195:
  3970  03BB  1C03               	skipc
  3971  03BC  2BBE               	goto	u1191
  3972  03BD  2BBF               	goto	u1190
  3973  03BE                     u1191:
  3974  03BE  2BC6               	goto	l2299
  3975  03BF                     u1190:
  3976  03BF                     l2295:
  3977  03BF  0872               	movf	___awdiv@divisor,w
  3978  03C0  02F4               	subwf	___awdiv@dividend,f
  3979  03C1  0873               	movf	___awdiv@divisor+1,w
  3980  03C2  1C03               	skipc
  3981  03C3  03F5               	decf	___awdiv@dividend+1,f
  3982  03C4  02F5               	subwf	___awdiv@dividend+1,f
  3983  03C5                     l2297:
  3984  03C5  1422               	bsf	___awdiv@quotient,0
  3985  03C6                     l2299:
  3986  03C6  3001               	movlw	1
  3987  03C7                     u1205:
  3988  03C7  1003               	clrc
  3989  03C8  0CF3               	rrf	___awdiv@divisor+1,f
  3990  03C9  0CF2               	rrf	___awdiv@divisor,f
  3991  03CA  3EFF               	addlw	-1
  3992  03CB  1D03               	skipz
  3993  03CC  2BC7               	goto	u1205
  3994  03CD                     l2301:
  3995  03CD  3001               	movlw	1
  3996  03CE  02A0               	subwf	___awdiv@counter,f
  3997  03CF  1D03               	btfss	3,2
  3998  03D0  2BD2               	goto	u1211
  3999  03D1  2BD3               	goto	u1210
  4000  03D2                     u1211:
  4001  03D2  2BAE               	goto	l2293
  4002  03D3                     u1210:
  4003  03D3                     l2303:
  4004  03D3  0821               	movf	___awdiv@sign,w
  4005  03D4  1903               	btfsc	3,2
  4006  03D5  2BD7               	goto	u1221
  4007  03D6  2BD8               	goto	u1220
  4008  03D7                     u1221:
  4009  03D7  2BDD               	goto	l2307
  4010  03D8                     u1220:
  4011  03D8                     l2305:
  4012  03D8  09A2               	comf	___awdiv@quotient,f
  4013  03D9  09A3               	comf	___awdiv@quotient+1,f
  4014  03DA  0AA2               	incf	___awdiv@quotient,f
  4015  03DB  1903               	skipnz
  4016  03DC  0AA3               	incf	___awdiv@quotient+1,f
  4017  03DD                     l2307:
  4018  03DD  0823               	movf	___awdiv@quotient+1,w
  4019  03DE  00F3               	movwf	?___awdiv+1
  4020  03DF  0822               	movf	___awdiv@quotient,w
  4021  03E0  00F2               	movwf	?___awdiv
  4022  03E1                     l564:
  4023  03E1  0008               	return
  4024  03E2                     __end_of___awdiv:
  4025                           
  4026                           	psect	text15
  4027  0757                     __ptext15:	
  4028 ;; *************** function _WriteMSSP *****************
  4029 ;; Defined at:
  4030 ;;		line 55 in file "SPI.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  Data            1    wreg     unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  Data            1    2[COMMON] unsigned char 
  4035 ;; Return value:  Size  Location     Type
  4036 ;;                  1    wreg      void 
  4037 ;; Registers used:
  4038 ;;		wreg
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4044 ;;      Params:         0       0       0       0       0
  4045 ;;      Locals:         1       0       0       0       0
  4046 ;;      Temps:          0       0       0       0       0
  4047 ;;      Totals:         1       0       0       0       0
  4048 ;;Total ram usage:        1 bytes
  4049 ;; Hardware stack levels used: 1
  4050 ;; Hardware stack levels required when called: 1
  4051 ;; This function calls:
  4052 ;;		Nothing
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           
  4059                           ;psect for function _WriteMSSP
  4060  0757                     _WriteMSSP:
  4061                           
  4062                           ;incstack = 0
  4063                           ; Regs used in _WriteMSSP: [wreg]
  4064                           ;WriteMSSP@Data stored from wreg
  4065  0757  00F2               	movwf	WriteMSSP@Data
  4066  0758                     l1993:
  4067                           
  4068                           ;SPI.c: 59:     SSPBUF = Data;
  4069  0758  0872               	movf	WriteMSSP@Data,w
  4070  0759  1283               	bcf	3,5	;RP0=0, select bank0
  4071  075A  1303               	bcf	3,6	;RP1=0, select bank0
  4072  075B  0093               	movwf	19	;volatile
  4073  075C                     l204:
  4074  075C  0008               	return
  4075  075D                     __end_of_WriteMSSP:
  4076                           
  4077                           	psect	text16
  4078  073E                     __ptext16:	
  4079 ;; *************** function _ReadMSSP *****************
  4080 ;; Defined at:
  4081 ;;		line 63 in file "SPI.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      unsigned char 
  4088 ;; Registers used:
  4089 ;;		wreg
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0       0       0       0       0
  4099 ;;Total ram usage:        0 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 1
  4102 ;; This function calls:
  4103 ;;		Nothing
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _ReadMSSP
  4111  073E                     _ReadMSSP:
  4112  073E                     l1995:	
  4113                           ;incstack = 0
  4114                           ; Regs used in _ReadMSSP: [wreg]
  4115                           
  4116  073E                     l207:	
  4117                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  4118                           
  4119  073E  1683               	bsf	3,5	;RP0=1, select bank1
  4120  073F  1303               	bcf	3,6	;RP1=0, select bank1
  4121  0740  1C14               	btfss	20,0	;volatile
  4122  0741  2F43               	goto	u1101
  4123  0742  2F44               	goto	u1100
  4124  0743                     u1101:
  4125  0743  2F3E               	goto	l207
  4126  0744                     u1100:
  4127  0744                     l1997:
  4128                           
  4129                           ;SPI.c: 65:     return(SSPBUF);
  4130  0744  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0745  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0746  0813               	movf	19,w	;volatile
  4133  0747                     l210:
  4134  0747  0008               	return
  4135  0748                     __end_of_ReadMSSP:
  4136                           
  4137                           	psect	text17
  4138  0732                     __ptext17:	
  4139 ;; *************** function _Escribir_caracterLCD *****************
  4140 ;; Defined at:
  4141 ;;		line 63 in file "LCD.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  a               1    wreg     unsigned char 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  a               1    4[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, pclath, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         1       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0
  4158 ;;      Totals:         1       0       0       0       0
  4159 ;;Total ram usage:        1 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 3
  4162 ;; This function calls:
  4163 ;;		_Escribir_comandoLCD
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           
  4170                           ;psect for function _Escribir_caracterLCD
  4171  0732                     _Escribir_caracterLCD:
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  4175                           ;Escribir_caracterLCD@a stored from wreg
  4176  0732  00F4               	movwf	Escribir_caracterLCD@a
  4177  0733                     l2083:
  4178                           
  4179                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  4180  0733  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0734  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0735  1588               	bsf	8,3	;volatile
  4183  0736  1208               	bcf	8,4	;volatile
  4184  0737                     l2085:
  4185                           
  4186                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  4187  0737  0874               	movf	Escribir_caracterLCD@a,w
  4188  0738  120A  118A  258E  120A  118A  	fcall	_Escribir_comandoLCD
  4189  073D                     l250:
  4190  073D  0008               	return
  4191  073E                     __end_of_Escribir_caracterLCD:
  4192                           
  4193                           	psect	text18
  4194  058E                     __ptext18:	
  4195 ;; *************** function _Escribir_comandoLCD *****************
  4196 ;; Defined at:
  4197 ;;		line 17 in file "LCD.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  Comando         1    wreg     unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  Comando         1    3[COMMON] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, pclath, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4211 ;;      Params:         0       0       0       0       0
  4212 ;;      Locals:         1       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0
  4214 ;;      Totals:         1       0       0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 2
  4218 ;; This function calls:
  4219 ;;		_prender_ELCD
  4220 ;; This function is called by:
  4221 ;;		_Iniciar_LCD
  4222 ;;		_Escribir_stringLCD
  4223 ;;		_Escribir_caracterLCD
  4224 ;;		_Limpiar_pantallaLCD
  4225 ;;		_set_cursor
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           
  4230                           ;psect for function _Escribir_comandoLCD
  4231  058E                     _Escribir_comandoLCD:
  4232                           
  4233                           ;incstack = 0
  4234                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  4235                           ;Escribir_comandoLCD@Comando stored from wreg
  4236  058E  00F3               	movwf	Escribir_comandoLCD@Comando
  4237  058F                     l1619:
  4238                           
  4239                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  4240  058F  1C73               	btfss	Escribir_comandoLCD@Comando,0
  4241  0590  2D92               	goto	u571
  4242  0591  2D93               	goto	u570
  4243  0592                     u571:
  4244  0592  2D97               	goto	l222
  4245  0593                     u570:
  4246  0593                     l1621:
  4247  0593  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0594  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0595  1708               	bsf	8,6	;volatile
  4250  0596  2D9A               	goto	l223
  4251  0597                     l222:
  4252  0597  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0598  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0599  1308               	bcf	8,6	;volatile
  4255  059A                     l223:
  4256                           
  4257                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  4258  059A  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  4259  059B  2D9D               	goto	u581
  4260  059C  2D9E               	goto	u580
  4261  059D                     u581:
  4262  059D  2DA0               	goto	l224
  4263  059E                     u580:
  4264  059E                     l1623:
  4265  059E  1788               	bsf	8,7	;volatile
  4266  059F  2DA1               	goto	l225
  4267  05A0                     l224:
  4268  05A0  1388               	bcf	8,7	;volatile
  4269  05A1                     l225:
  4270                           
  4271                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  4272  05A1  1D73               	btfss	Escribir_comandoLCD@Comando,2
  4273  05A2  2DA4               	goto	u591
  4274  05A3  2DA5               	goto	u590
  4275  05A4                     u591:
  4276  05A4  2DA7               	goto	l226
  4277  05A5                     u590:
  4278  05A5                     l1625:
  4279  05A5  1406               	bsf	6,0	;volatile
  4280  05A6  2DA8               	goto	l227
  4281  05A7                     l226:
  4282  05A7  1006               	bcf	6,0	;volatile
  4283  05A8                     l227:
  4284                           
  4285                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  4286  05A8  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  4287  05A9  2DAB               	goto	u601
  4288  05AA  2DAC               	goto	u600
  4289  05AB                     u601:
  4290  05AB  2DAE               	goto	l228
  4291  05AC                     u600:
  4292  05AC                     l1627:
  4293  05AC  1486               	bsf	6,1	;volatile
  4294  05AD  2DAF               	goto	l229
  4295  05AE                     l228:
  4296  05AE  1086               	bcf	6,1	;volatile
  4297  05AF                     l229:
  4298                           
  4299                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  4300  05AF  1E73               	btfss	Escribir_comandoLCD@Comando,4
  4301  05B0  2DB2               	goto	u611
  4302  05B1  2DB3               	goto	u610
  4303  05B2                     u611:
  4304  05B2  2DB5               	goto	l230
  4305  05B3                     u610:
  4306  05B3                     l1629:
  4307  05B3  1506               	bsf	6,2	;volatile
  4308  05B4  2DB6               	goto	l231
  4309  05B5                     l230:
  4310  05B5  1106               	bcf	6,2	;volatile
  4311  05B6                     l231:
  4312                           
  4313                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  4314  05B6  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  4315  05B7  2DB9               	goto	u621
  4316  05B8  2DBA               	goto	u620
  4317  05B9                     u621:
  4318  05B9  2DBC               	goto	l232
  4319  05BA                     u620:
  4320  05BA                     l1631:
  4321  05BA  1586               	bsf	6,3	;volatile
  4322  05BB  2DBD               	goto	l233
  4323  05BC                     l232:
  4324  05BC  1186               	bcf	6,3	;volatile
  4325  05BD                     l233:
  4326                           
  4327                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  4328  05BD  1F73               	btfss	Escribir_comandoLCD@Comando,6
  4329  05BE  2DC0               	goto	u631
  4330  05BF  2DC1               	goto	u630
  4331  05C0                     u631:
  4332  05C0  2DC3               	goto	l234
  4333  05C1                     u630:
  4334  05C1                     l1633:
  4335  05C1  1606               	bsf	6,4	;volatile
  4336  05C2  2DC4               	goto	l235
  4337  05C3                     l234:
  4338  05C3  1206               	bcf	6,4	;volatile
  4339  05C4                     l235:
  4340                           
  4341                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  4342  05C4  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  4343  05C5  2DC7               	goto	u641
  4344  05C6  2DC8               	goto	u640
  4345  05C7                     u641:
  4346  05C7  2DCA               	goto	l236
  4347  05C8                     u640:
  4348  05C8                     l1635:
  4349  05C8  1686               	bsf	6,5	;volatile
  4350  05C9  2DCB               	goto	l1637
  4351  05CA                     l236:
  4352  05CA  1286               	bcf	6,5	;volatile
  4353  05CB                     l1637:
  4354                           
  4355                           ;LCD.c: 27:     prender_ELCD();
  4356  05CB  120A  118A  2724  120A  118A  	fcall	_prender_ELCD
  4357  05D0                     l238:
  4358  05D0  0008               	return
  4359  05D1                     __end_of_Escribir_comandoLCD:
  4360                           
  4361                           	psect	text19
  4362  0724                     __ptext19:	
  4363 ;; *************** function _prender_ELCD *****************
  4364 ;; Defined at:
  4365 ;;		line 11 in file "LCD.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4379 ;;      Params:         0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0
  4381 ;;      Temps:          1       0       0       0       0
  4382 ;;      Totals:         1       0       0       0       0
  4383 ;;Total ram usage:        1 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_Escribir_comandoLCD
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           
  4394                           ;psect for function _prender_ELCD
  4395  0724                     _prender_ELCD:
  4396  0724                     l1613:	
  4397                           ;incstack = 0
  4398                           ; Regs used in _prender_ELCD: [wreg]
  4399                           
  4400                           
  4401                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  4402  0724  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0725  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0726  1688               	bsf	8,5	;volatile
  4405  0727                     l1615:
  4406                           
  4407                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  4408  0727  30C7               	movlw	199
  4409  0728  00F2               	movwf	??_prender_ELCD
  4410  0729                     u1377:
  4411  0729  2F2A               	nop2
  4412  072A  0BF2               	decfsz	??_prender_ELCD,f
  4413  072B  2F29               	goto	u1377
  4414  072C  2F2D               	nop2
  4415  072D  2F2E               	nop2
  4416  072E                     l1617:
  4417                           
  4418                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  4419  072E  1283               	bcf	3,5	;RP0=0, select bank0
  4420  072F  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0730  1288               	bcf	8,5	;volatile
  4422  0731                     l219:
  4423  0731  0008               	return
  4424  0732                     __end_of_prender_ELCD:
  4425                           
  4426                           	psect	text20
  4427  0750                     __ptext20:	
  4428 ;; *************** function _isr *****************
  4429 ;; Defined at:
  4430 ;;		line 103 in file "Maestro.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		None
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0
  4446 ;;      Temps:          2       0       0       0       0
  4447 ;;      Totals:         2       0       0       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; This function calls:
  4451 ;;		Nothing
  4452 ;; This function is called by:
  4453 ;;		Interrupt level 1
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           
  4458                           ;psect for function _isr
  4459  0750                     _isr:
  4460  0750                     i1l125:
  4461  0750  0871               	movf	??_isr+1,w
  4462  0751  008A               	movwf	10
  4463  0752  0E70               	swapf	??_isr,w
  4464  0753  0083               	movwf	3
  4465  0754  0EFE               	swapf	btemp,f
  4466  0755  0E7E               	swapf	btemp,w
  4467  0756  0009               	retfie
  4468  0757                     __end_of_isr:
  4469  007E                     btemp	set	126	;btemp
  4470  007E                     wtemp0	set	126
  4471                           
  4472                           	psect	intentry
  4473  0004                     __pintentry:	
  4474                           ;incstack = 0
  4475                           ; Regs used in _isr: []
  4476                           
  4477  0004                     interrupt_function:
  4478  007E                     saved_w	set	btemp
  4479  0004  00FE               	movwf	btemp
  4480  0005  0E03               	swapf	3,w
  4481  0006  00F0               	movwf	??_isr
  4482  0007  080A               	movf	10,w
  4483  0008  00F1               	movwf	??_isr+1
  4484  0009  120A  118A  2F50   	ljmp	_isr
  4485                           
  4486                           	psect	config
  4487                           
  4488                           ;Config register CONFIG1 @ 0x2007
  4489                           ;	Oscillator Selection bits
  4490                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4491                           ;	Watchdog Timer Enable bit
  4492                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4493                           ;	Power-up Timer Enable bit
  4494                           ;	PWRTE = OFF, PWRT disabled
  4495                           ;	RE3/MCLR pin function select bit
  4496                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4497                           ;	Code Protection bit
  4498                           ;	CP = OFF, Program memory code protection is disabled
  4499                           ;	Data Code Protection bit
  4500                           ;	CPD = OFF, Data memory code protection is disabled
  4501                           ;	Brown Out Reset Selection bits
  4502                           ;	BOREN = OFF, BOR disabled
  4503                           ;	Internal External Switchover bit
  4504                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4505                           ;	Fail-Safe Clock Monitor Enabled bit
  4506                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4507                           ;	Low Voltage Programming Enable bit
  4508                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4509                           ;	In-Circuit Debugger Mode bit
  4510                           ;	DEBUG = 0x1, unprogrammed default
  4511  2007                     	org	8199
  4512  2007  20D4               	dw	8404
  4513                           
  4514                           ;Config register CONFIG2 @ 0x2008
  4515                           ;	Brown-out Reset Selection bit
  4516                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4517                           ;	Flash Program Memory Self Write Enable bits
  4518                           ;	WRT = OFF, Write protection off
  4519  2008                     	org	8200
  4520  2008  3FFF               	dw	16383

Data Sizes:
    Strings     41
    Constant    19
    Data        4
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     30      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Temp_dig(BANK0[1]), ADC_dig(COMMON[1]), Cont_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[13]), STR_2(CODE[5]), STR_1(CODE[17]), 

    TXREG_char@direccion	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    TXREG_char@data	PTR unsigned char  size(1) Largest target is 1
		 -> data(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _imprimir_cadena->_TXREG_char
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_imprimir_cadena
    _imprimir_cadena->_TXREG_char
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6796
                                             28 BANK0      2     2      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                           _ReadMSSP
                          _WriteMSSP
                        _divisor_dec
                    _imprimir_cadena
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    2030
                                              0 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     721
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _imprimir_cadena                                     13    13      0    1658
                                             15 BANK0     13    13      0
                         _TXREG_char
 ---------------------------------------------------------------------------------
 (2) _TXREG_char                                          17     2     15    1658
                                              2 COMMON     2     2      0
                                              0 BANK0     15     0     15
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1780
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _ReadMSSP
   _WriteMSSP
   _divisor_dec
     ___awdiv
     ___awmod
   _imprimir_cadena
     _TXREG_char
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMSSP
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 18 17:12:33 2022

                            _i 0056                              _n 005C                              pc 0002  
                  _SSPSTATbits 0094                   ___awdiv@sign 0021                             fsr 0004  
              set_cursor@linea 0077                   ?_divisor_dec 0079                            l201 06B3  
                          l210 0747                            l204 075C                            l141 0680  
                          l230 05B5                            l222 0597                            l231 05B6  
                          l223 059A                            l207 073E                            l232 05BC  
                          l224 05A0                            l304 054A                            l136 0378  
                          l233 05BD                            l225 05A1                            l241 0446  
                          l234 05C3                            l226 05A7                            l250 073D  
                          l219 0731                            l235 05C4                            l227 05A8  
                          l236 05CA                            l228 05AE                            l229 05AF  
                          l325 0254                            l253 0723                            l238 05D0  
                          l159 04A0                            l247 0709                            l271 06E0  
                          l263 058D                            l272 06E3                            l178 02FE  
                          l198 069C                            l564 03E1                            l577 04F9  
                          u600 05AC                            u601 05AB                            u610 05B3  
                          u611 05B2                            u620 05BA                            u700 06BB  
                          u621 05B9                            u701 06BA                            u630 05C1  
                          u710 06C6                            u631 05C0                            u711 06C5  
                          u640 05C8                            u800 01D1                            u720 06D1  
                          u641 05C7                            u801 01D0                            u721 06D0  
                          u570 0593                            u810 01E6                            u730 06DB  
                          u650 0555                            u571 0592                            u811 01E5  
                          u731 06DA                            u651 0554                            u580 059E  
                          u820 01EC                            u740 0694                            u660 0562  
                          u581 059D                            u821 01EB                            u741 0693  
                          u661 0561                            u590 05A5                            u830 0201  
                          u750 069A                            u670 0576                            u591 05A4  
                          u831 0200                            u751 0699                            u671 0575  
                          u840 0208                            u760 06A3                            u680 0584  
                          u841 0207                            u761 06A2                            u681 0583  
                          u850 021D                            u770 01AE                            u690 0709  
                          u851 021C                            u771 01AD                            u691 0708  
                          u860 0224                            u780 01B5                            u861 0223  
                          u781 01B4                            u870 0239                            u790 01CA  
                          u871 0238                            u791 01C9                            u880 023F  
                          u881 023E                            u990 04A6                            u991 04A5  
                   _Bandera_s1 005A                     _Bandera_s2 0040                     _Bandera_s3 003E  
                          _isr 0750                            _msg 0606                            fsr0 0004  
                   _TXREG_char 0255                            indf 0000                   ___awmod@sign 0078  
                         l2021 0646                           l2013 0643                           l2015 0644  
                         l2033 064A                           l2051 0650                           l2027 0648  
                         l2301 03CD                           l2045 064E                           l2303 03D3  
                         l2311 02FF                           l2063 0654                           l2039 064C  
                         l2305 03D8                           l2321 031C                           l2313 0310  
                         l2057 0652                           l2401 007B                           l2083 0733  
                         l2307 03DD                           l2331 0333                           l2323 031F  
                         l2315 0313                           l2411 0093                           l2403 007C  
                         l1613 0724                           l1621 0593                           l2085 0737  
                         l1701 0694                           l2341 0357                           l2333 0338  
                         l2325 0322                           l2317 0316                           l2069 0656  
                         l2077 0658                           l2421 009C                           l2413 0096  
                         l2405 007D                           l1615 0727                           l1631 05BA  
                         l1623 059E                           l2271 0380                           l1711 06A9  
                         l1703 069A                           l2343 0366                           l2335 033F  
                         l2327 0328                           l2319 0319                           l2431 00B1  
                         l2423 009D                           l2415 0099                           l2407 0080  
                         l1617 072E                           l1633 05C1                           l1625 05A5  
                         l2281 0394                           l2273 0385                           l2353 04FF  
                         l1801 022F                           l1721 03E6                           l1713 06AC  
                         l1705 069D                           l1641 0550                           l2345 036B  
                         l2337 0345                           l2329 032E                           l2441 00C3  
                         l2433 00B4                           l2425 009E                           l2417 009A  
                         l2409 0086                           l2361 003B                           l1635 05C8  
                         l1627 05AC                           l1619 058F                           l2291 03AA  
                         l2283 0396                           l2275 0387                           l2267 0379  
                         l2355 0537                           l2347 04FD                           l1811 024A  
                         l1803 0230                           l1731 0414                           l1723 03EF  
                         l1715 06AF                           l1707 06A3                           l1651 0571  
                         l1643 0555                           l2339 0351                           l2451 00F9  
                         l2443 00CE                           l2435 00B7                           l2427 00A1  
                         l2419 009B                           l2371 0044                           l2363 003F  
                         l1637 05CB                           l1629 05B3                           l2293 03AE  
                         l2285 039C                           l2277 038B                           l2269 037C  
                         l2357 053D                           l2541 02D5                           l1821 0253  
                         l1805 0239                           l1813 024B                           l1741 043B  
                         l1733 041A                           l1725 03F5                           l1717 06B2  
                         l1709 06A4                           l1661 0584                           l1645 055C  
                         l2461 0131                           l2453 0104                           l2445 00D9  
                         l2437 00B8                           l2429 00A7                           l2381 005A  
                         l2373 0045                           l2365 0041                           l2295 03BF  
                         l2287 039F                           l2279 0390                           l1911 04AB  
                         l1831 026E                           l1823 0255                           l1815 024E  
                         l1807 023F                           l1671 06FC                           l1663 06E5  
                         l1735 0425                           l1727 0404                           l1719 03E2  
                         l1751 071D                           l1655 0577                           l1647 0562  
                         l1639 054C                           l2471 015E                           l2463 013C  
                         l2455 010F                           l2447 00E4                           l2439 00B9  
                         l2391 0072                           l2383 005B                           l2375 004C  
                         l2367 0042                           l2359 0036                           l2297 03C5  
                         l2289 03A6                           l1921 04BF                           l1913 04AD  
                         l1905 04A1                           l1841 0296                           l1833 0276  
                         l1825 0256                           l1817 024F                           l1809 0246  
                         l1761 01C0                           l1753 01A5                           l1665 06E9  
                         l1737 042A                           l1729 0409                           l1745 070A  
                         l1681 06CB                           l1673 06B5                           l1657 057D  
                         l1649 0568                           l2481 0189                           l2473 0165  
                         l2465 0146                           l2457 0119                           l2449 00EE  
                         l2393 0075                           l2385 005C                           l2377 0052  
                         l2369 0043                           l2299 03C6                           l1931 04DE  
                         l1923 04C6                           l1915 04B1                           l1907 04A2  
                         l1851 02BE                           l1843 029E                           l1835 027E  
                         l1827 025E                           l1819 0250                           l1771 01DC  
                         l1755 01AE                           l1763 01C1                           l1667 06EB  
                         l1739 0435                           l1691 0688                           l1747 070E  
                         l1683 06D1                           l1675 06BB                           l1659 057F  
                         l2539 0660                           l2483 0191                           l2475 016D  
                         l2467 014E                           l2459 0126                           l2395 0078  
                         l2387 005F                           l2379 0057                           l1933 04E5  
                         l1925 04CA                           l1917 04B6                           l1909 04A6  
                         l1845 02A6                           l1837 0286                           l1829 0266  
                         l1781 01F7                           l1765 01CA                           l1773 01DD  
                         l1757 01B5                           l1669 06F8                           l1693 0689  
                         l1749 0714                           l1685 06D6                           l1677 06C0  
                         l2485 0199                           l2477 0175                           l2469 0156  
                         l2397 0079                           l2389 0065                           l1927 04CE  
                         l1919 04BC                           l1935 04EB                           l1847 02AE  
                         l1839 028E                           l1855 02C6                           l1791 0213  
                         l1775 01E6                           l1783 01F8                           l1767 01D1  
                         l1759 01BC                           l1695 068A                           l1687 06DB  
                         l1679 06C6                           l2479 017D                           l2399 007A  
                         l1937 04F0                           l1929 04D8                           l1849 02B6  
                         l1785 0201                           l1793 0214                           l1777 01EC  
                         l1769 01D8                           l1697 068D                           l1689 0682  
                         l1939 04F5                           l1795 021D                           l1787 0208  
                         l1779 01F3                           l1699 068E                           l1981 044D  
                         l1797 0224                           l1789 020F                           l1983 044F  
                         l1991 049A                           l1799 022B                           l1993 0758  
                         l1985 0451                           l1995 073E                           l1987 048E  
                         l1979 0447                           l1997 0744                           l1989 0496  
                         ?_isr 0070                           STR_1 0619                           STR_2 0637  
                         STR_3 062A                           STR_4 063C                           STR_5 063C  
                         STR_6 0640                           u1000 04B1                           u1001 04B0  
                         u1010 04BC                           u1011 04BB                           u1100 0744  
                         u1101 0743                           u1030 04CE                           u1031 04CD  
                         u1040 04D8                           u1041 04D7                           u1025 04C0  
                         u1210 03D3                           u1130 0380                           u1211 03D2  
                         u1131 037F                           u1220 03D8                           u1140 038B  
                         u1060 04EB                           u1221 03D7                           u1205 03C7  
                         u1141 038A                           u1061 04EA                           u1045 04D4  
                         u1150 039C                           u1070 04F0                           u1230 054A  
                         u1151 039B                           u1071 04EF                           u1055 04DF  
                         u1231 0549                           u1080 044D                           u1081 044C  
                         u1170 03AE                           u1090 04A0                           u1171 03AD  
                         u1235 0546                           u1091 049F                           u1307 03F9  
                         u1165 03A0                           u1317 0406                           u1190 03BF  
                         u1191 03BE                           u1327 0411                           u1185 03AF  
                         u1337 041C                           u1257 035F                           u1195 03BB  
                         u1347 0427                           u1267 056C                           u1357 0432  
                         u1277 0588                           u1367 043D                           u1287 0718  
                         u1377 0729                           u1297 03EA                  ??_Iniciar_LCD 0074  
                         _Temp 0057                           _data 0059                           _main 0036  
                         btemp 007E            TXREG_char@direccion 0020                           start 000C  
         _Escribir_caracterLCD 0732                          ??_isr 0070     __end_of_Escribir_stringLCD 070A  
                        ?_main 0070                __end_of___awdiv 03E2                __end_of___awmod 04FA  
                        _ANSEL 0188                ___awdiv@divisor 0072                          i1l125 0750  
              ___awdiv@counter 0020                          _SPBRG 0099                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          _PORTD 0008  
                        _PORTE 0009                          _TRISA 0085                          _TRISB 0086  
                        _TRISD 0088                          _TRISE 0089                          _TXREG 0019  
                 InitMSSP@Modo 0072                          _direc 0042                __end_of_initOsc 06E4  
                        _setup 02FF            _Limpiar_pantallaLCD 070A                          pclath 000A  
                        status 0003                          wtemp0 007E          ?_Escribir_caracterLCD 0070  
         __end_of_Config_USART 0255                __initialization 000F            __end_of_Iniciar_LCD 0447  
                 __end_of_main 01A5               __end_of_InitMSSP 06B4               __end_of_ReadMSSP 0748  
         ?_Limpiar_pantallaLCD 0070                         ??_main 003C                   divisor_dec@b 0028  
                 divisor_dec@n 0029                    ?_TXREG_char 0020             set_cursor@posicion 0074  
             ___awdiv@dividend 0074                         ?_setup 0070                         _ANSELH 0189  
                       _SPBRGH 009A                         _TRISC0 0438                         _TRISC1 0439  
                       _TRISC2 043A                         _SSPCON 0014                         _SSPBUF 0013  
             ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074                      ??___awdiv 0076  
                    ??___awmod 0076               ___awdiv@quotient 0022                ___awmod@divisor 0072  
              ___awmod@counter 0077                      ??_initOsc 0072           __size_of_divisor_dec 0051  
                       saved_w 007E                divisor_dec@dig1 0079        __end_of__initialization 0032  
                  _Iniciar_LCD 03E2             __size_of_WriteMSSP 0006         ??_Escribir_caracterLCD 0074  
          __size_of_TXREG_char 00AA                 __pcstackCOMMON 0070                   __pidataBANK0 075D  
                __end_of_setup 0379       __size_of_imprimir_cadena 005A                        ??_setup 0020  
                   __pbssBANK0 003E                      ?_InitMSSP 0070                      ?_ReadMSSP 0070  
        __size_of_Config_USART 00B0                     __pmaintext 0036                   _dato_escrito 0044  
                   __pintentry 0004   __size_of_Escribir_comandoLCD 0043                        _ADC_dig 007B  
                 TXREG_char@e1 0025                   TXREG_char@e2 0029                   TXREG_char@e3 002D  
            __end_of_WriteMSSP 075D                   initOsc@Valor 0072                   _Config_USART 01A5  
                      _SSPSTAT 0094             _Escribir_stringLCD 06E4                     __stringtab 0600  
                   ??_InitMSSP 0072                     ??_ReadMSSP 0072                tabla_numASCII@a 0074  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074                 TXREG_char@dec1 0023  
               TXREG_char@dec2 0027                 TXREG_char@dec3 002B                 TXREG_char@cen1 0024  
               TXREG_char@cen2 0028                 TXREG_char@cen3 002C                        ___awdiv 0379  
                      ___awmod 04A1                 TXREG_char@data 002E                        _dec_ADC 0053  
               TXREG_char@uni1 0022                 TXREG_char@uni2 0026                 TXREG_char@uni3 002A  
                      _cen_ADC 0052                        _dig_ADC 0055                        __ptext1 0642  
                      __ptext2 02FF                        __ptext3 054B                        __ptext4 06B4  
                      __ptext5 070A                        __ptext6 0681                        __ptext7 03E2  
                      __ptext8 06E4                        __ptext9 01A5           ??_Escribir_stringLCD 0074  
                      _initOsc 06B4                   ??_TXREG_char 0072                   __size_of_isr 0007  
                      _val_ADC 0048               ___awmod@dividend 0074                  ?_prender_ELCD 0070  
                      _uni_ADC 0054                        clrloop0 0749           end_of_initialization 0032  
            ??_imprimir_cadena 002F                     _set_cursor 054B             __end_of_TXREG_char 02FF  
                    _RCSTAbits 0018                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                 ??_prender_ELCD 0072                      _TRISAbits 0085  
                    _TRISCbits 0087                   ?_Iniciar_LCD 0070                      _TXSTAbits 0098  
  __end_of_Limpiar_pantallaLCD 0724                  WriteMSSP@Data 0072                    _BAUDCTLbits 0187  
                ??_divisor_dec 0024            start_initialization 000F                    __end_of_isr 0757  
                  __end_of_msg 0619            _Escribir_comandoLCD 058E     Escribir_comandoLCD@Comando 0073  
            __size_of_InitMSSP 0033              __size_of_ReadMSSP 000A  __size_of_Escribir_caracterLCD 000C  
                  ?_set_cursor 0074                    __pdataBANK0 005A           ?_Escribir_comandoLCD 0070  
                  __pbssCOMMON 007A        __size_of_tabla_numASCII 003F                      ___latbits 0002  
                __pcstackBANK0 0020                      _WriteMSSP 0757            __end_of_divisor_dec 054B  
         __end_of_prender_ELCD 0732                       ?___awdiv 0072                       ?___awmod 0072  
        ??_Escribir_comandoLCD 0073                      __pstrings 0600                       ?_initOsc 0070  
              _imprimir_cadena 0447                     ?_WriteMSSP 0070            __size_of_set_cursor 0043  
               __size_of_setup 007A              interrupt_function 0004                      clear_ram0 0748  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                       _PIR1bits 000C  
                  __stringbase 0605                    _divisor_dec 04FA    __size_of_Escribir_stringLCD 0026  
                     _Cont_dig 007A                       _Contador 0046                       _InitMSSP 0681  
                     _ReadMSSP 073E            Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075  
                     _Temp_dig 0058        __end_of_imprimir_cadena 04A1               __size_of___awdiv 0069  
             __size_of___awmod 0059             __end_of__stringtab 0606                       _dec_Cont 004F  
                     _dec_Temp 004B                       _cen_Cont 004E                       _cen_Temp 004A  
               _tabla_numASCII 0642                       _dig_Cont 0051                       _dig_Temp 004D  
             __size_of_initOsc 0030                    ??_WriteMSSP 0072                       __ptext10 0447  
                     __ptext11 0255                       __ptext20 0750                       __ptext12 04FA  
                     __ptext13 04A1                       __ptext14 0379                       __ptext15 0757  
                     __ptext16 073E                       __ptext17 0732                       __ptext18 058E  
                     __ptext19 0724          __size_of_prender_ELCD 000E                  __size_of_main 016F  
                 ??_set_cursor 0075                       _uni_Cont 0050                       _uni_Temp 004C  
 __size_of_Limpiar_pantallaLCD 001A         __end_of_tabla_numASCII 0681   __end_of_Escribir_caracterLCD 073E  
                 _prender_ELCD 0724                  ?_Config_USART 0072               Config_USART@Freq 0074  
           __end_of_set_cursor 058E                       intlevel1 0000                      stringcode 0600  
                   _OSCCONbits 008F               ?_imprimir_cadena 0070                ?_tabla_numASCII 0070  
               ??_Config_USART 0076                       stringdir 0600                       stringtab 0600  
        Config_USART@baud_rate 0072                     _SSPCONbits 0014    __end_of_Escribir_comandoLCD 05D1  
