

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Feb 16 19:18:37 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0000                     	;# 
   380  0001                     	;# 
   381  0002                     	;# 
   382  0003                     	;# 
   383  0004                     	;# 
   384  0005                     	;# 
   385  0006                     	;# 
   386  0007                     	;# 
   387  0008                     	;# 
   388  0009                     	;# 
   389  000A                     	;# 
   390  000B                     	;# 
   391  000C                     	;# 
   392  000D                     	;# 
   393  000E                     	;# 
   394  000E                     	;# 
   395  000F                     	;# 
   396  0010                     	;# 
   397  0011                     	;# 
   398  0012                     	;# 
   399  0013                     	;# 
   400  0014                     	;# 
   401  0015                     	;# 
   402  0015                     	;# 
   403  0016                     	;# 
   404  0017                     	;# 
   405  0018                     	;# 
   406  0019                     	;# 
   407  001A                     	;# 
   408  001B                     	;# 
   409  001B                     	;# 
   410  001C                     	;# 
   411  001D                     	;# 
   412  001E                     	;# 
   413  001F                     	;# 
   414  0081                     	;# 
   415  0085                     	;# 
   416  0086                     	;# 
   417  0087                     	;# 
   418  0088                     	;# 
   419  0089                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  008E                     	;# 
   423  008F                     	;# 
   424  0090                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009C                     	;# 
   439  009D                     	;# 
   440  009E                     	;# 
   441  009F                     	;# 
   442  0105                     	;# 
   443  0107                     	;# 
   444  0108                     	;# 
   445  0109                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0185                     	;# 
   452  0187                     	;# 
   453  0188                     	;# 
   454  0189                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  000E                     	;# 
   473  000F                     	;# 
   474  0010                     	;# 
   475  0011                     	;# 
   476  0012                     	;# 
   477  0013                     	;# 
   478  0014                     	;# 
   479  0015                     	;# 
   480  0015                     	;# 
   481  0016                     	;# 
   482  0017                     	;# 
   483  0018                     	;# 
   484  0019                     	;# 
   485  001A                     	;# 
   486  001B                     	;# 
   487  001B                     	;# 
   488  001C                     	;# 
   489  001D                     	;# 
   490  001E                     	;# 
   491  001F                     	;# 
   492  0081                     	;# 
   493  0085                     	;# 
   494  0086                     	;# 
   495  0087                     	;# 
   496  0088                     	;# 
   497  0089                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0091                     	;# 
   504  0092                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0093                     	;# 
   508  0094                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0097                     	;# 
   512  0098                     	;# 
   513  0099                     	;# 
   514  009A                     	;# 
   515  009B                     	;# 
   516  009C                     	;# 
   517  009D                     	;# 
   518  009E                     	;# 
   519  009F                     	;# 
   520  0105                     	;# 
   521  0107                     	;# 
   522  0108                     	;# 
   523  0109                     	;# 
   524  010C                     	;# 
   525  010C                     	;# 
   526  010D                     	;# 
   527  010E                     	;# 
   528  010F                     	;# 
   529  0185                     	;# 
   530  0187                     	;# 
   531  0188                     	;# 
   532  0189                     	;# 
   533  018C                     	;# 
   534  018D                     	;# 
   535  0006                     _PORTBbits	set	6
   536  0008                     _PORTDbits	set	8
   537  0013                     _SSPBUF	set	19
   538  0014                     _SSPCON	set	20
   539  0006                     _PORTB	set	6
   540  0009                     _PORTE	set	9
   541  0007                     _PORTC	set	7
   542  0008                     _PORTD	set	8
   543  0005                     _PORTA	set	5
   544  0007                     _PORTCbits	set	7
   545  008F                     _OSCCONbits	set	143
   546  0094                     _SSPSTATbits	set	148
   547  0094                     _SSPSTAT	set	148
   548  0089                     _TRISE	set	137
   549  0088                     _TRISD	set	136
   550  0087                     _TRISC	set	135
   551  0086                     _TRISB	set	134
   552  0085                     _TRISA	set	133
   553  043B                     _TRISC3	set	1083
   554  043D                     _TRISC5	set	1085
   555  043A                     _TRISC2	set	1082
   556  0189                     _ANSELH	set	393
   557  0188                     _ANSEL	set	392
   558                           
   559                           	psect	strings
   560  034B                     __pstrings:
   561  034B                     stringtab:
   562  034B                     __stringtab:
   563  034B                     stringcode:	
   564                           ;	String table - string pointers are 1 byte each
   565                           
   566  034B                     stringdir:
   567  034B  3003               	movlw	high stringdir
   568  034C  008A               	movwf	10
   569  034D  0804               	movf	4,w
   570  034E  0A84               	incf	4,f
   571  034F  0782               	addwf	2,f
   572  0350                     __stringbase:
   573  0350  3400               	retlw	0
   574  0351                     __end_of__stringtab:
   575  0351                     STR_3:
   576  0351  3453               	retlw	83	;'S'
   577  0352  3431               	retlw	49	;'1'
   578  0353  343A               	retlw	58	;':'
   579  0354  3420               	retlw	32	;' '
   580  0355  3420               	retlw	32	;' '
   581  0356  3420               	retlw	32	;' '
   582  0357  3420               	retlw	32	;' '
   583  0358  3453               	retlw	83	;'S'
   584  0359  3432               	retlw	50	;'2'
   585  035A  343A               	retlw	58	;':'
   586  035B  3420               	retlw	32	;' '
   587  035C  3420               	retlw	32	;' '
   588  035D  3420               	retlw	32	;' '
   589  035E  3453               	retlw	83	;'S'
   590  035F  3433               	retlw	51	;'3'
   591  0360  343A               	retlw	58	;':'
   592  0361  3400               	retlw	0
   593  0362                     STR_2:
   594  0362  344A               	retlw	74	;'J'
   595  0363  346F               	retlw	111	;'o'
   596  0364  3473               	retlw	115	;'s'
   597  0365  3465               	retlw	101	;'e'
   598  0366  3420               	retlw	32	;' '
   599  0367  3453               	retlw	83	;'S'
   600  0368  3461               	retlw	97	;'a'
   601  0369  346E               	retlw	110	;'n'
   602  036A  3474               	retlw	116	;'t'
   603  036B  3469               	retlw	105	;'i'
   604  036C  347A               	retlw	122	;'z'
   605  036D  346F               	retlw	111	;'o'
   606  036E  3400               	retlw	0
   607  036F                     STR_1:
   608  036F  3448               	retlw	72	;'H'
   609  0370  346F               	retlw	111	;'o'
   610  0371  346C               	retlw	108	;'l'
   611  0372  3461               	retlw	97	;'a'
   612  0373  3400               	retlw	0
   613                           
   614                           	psect	cinit
   615  000F                     start_initialization:	
   616                           ; #config settings
   617                           
   618  000F                     __initialization:
   619                           
   620                           ; Clear objects allocated to COMMON
   621  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   622  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   623                           
   624                           ; Clear objects allocated to BANK0
   625  0011  1283               	bcf	3,5	;RP0=0, select bank0
   626  0012  1303               	bcf	3,6	;RP1=0, select bank0
   627  0013  01AE               	clrf	__pbssBANK0& (0+127)
   628  0014  01AF               	clrf	(__pbssBANK0+1)& (0+127)
   629  0015  01B0               	clrf	(__pbssBANK0+2)& (0+127)
   630  0016  01B1               	clrf	(__pbssBANK0+3)& (0+127)
   631  0017  01B2               	clrf	(__pbssBANK0+4)& (0+127)
   632  0018                     end_of_initialization:	
   633                           ;End of C runtime variable initialization code
   634                           
   635  0018                     __end_of__initialization:
   636  0018  0183               	clrf	3
   637  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   638                           
   639                           	psect	bssCOMMON
   640  007A                     __pbssCOMMON:
   641  007A                     _val_ADC:
   642  007A                     	ds	1
   643  007B                     _ADC_dig:
   644  007B                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647  002E                     __pbssBANK0:
   648  002E                     _trad:
   649  002E                     	ds	1
   650  002F                     _num:
   651  002F                     	ds	1
   652  0030                     _cen_ADC:
   653  0030                     	ds	1
   654  0031                     _dec_ADC:
   655  0031                     	ds	1
   656  0032                     _uni_ADC:
   657  0032                     	ds	1
   658                           
   659                           	psect	cstackCOMMON
   660  0070                     __pcstackCOMMON:
   661  0070                     ?_setup:
   662  0070                     ?_Iniciar_LCD:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_Limpiar_pantallaLCD:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_Escribir_stringLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_spiWrite:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_spiRead:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_tabla_numASCII:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_Escribir_caracterLCD:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_initOsc:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_isr:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ??_isr:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_main:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_spiReceiveWait:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_prender_ELCD:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_Escribir_comandoLCD:	
   702                           ; 1 bytes @ 0x0
   703                           
   704                           
   705                           ; 1 bytes @ 0x0
   706  0070                     	ds	2
   707  0072                     ??_spiWrite:
   708  0072                     ??_spiRead:	
   709                           ; 1 bytes @ 0x2
   710                           
   711  0072                     ??_tabla_numASCII:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0072                     ??_initOsc:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0072                     ?_spiInit:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     ??_spiReceiveWait:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ??_prender_ELCD:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0072                     ?___awdiv:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     ?___awmod:	
   730                           ; 2 bytes @ 0x2
   731                           
   732  0072                     spiInit@sDataSample:	
   733                           ; 2 bytes @ 0x2
   734                           
   735  0072                     spiWrite@dat:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0072                     initOsc@Valor:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     ___awdiv@divisor:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     ___awmod@divisor:	
   745                           ; 2 bytes @ 0x2
   746                           
   747                           
   748                           ; 2 bytes @ 0x2
   749  0072                     	ds	1
   750  0073                     ??_Escribir_comandoLCD:
   751  0073                     spiInit@sClockIdle:	
   752                           ; 1 bytes @ 0x3
   753                           
   754  0073                     Escribir_comandoLCD@Comando:	
   755                           ; 1 bytes @ 0x3
   756                           
   757                           
   758                           ; 1 bytes @ 0x3
   759  0073                     	ds	1
   760  0074                     ??_Iniciar_LCD:
   761  0074                     ??_Limpiar_pantallaLCD:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     ?_set_cursor:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ??_Escribir_stringLCD:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??_Escribir_caracterLCD:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     tabla_numASCII@a:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     spiInit@sTransmitEdge:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     Escribir_caracterLCD@a:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     set_cursor@posicion:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     ___awdiv@dividend:	
   786                           ; 1 bytes @ 0x4
   787                           
   788  0074                     ___awmod@dividend:	
   789                           ; 2 bytes @ 0x4
   790                           
   791                           
   792                           ; 2 bytes @ 0x4
   793  0074                     	ds	1
   794  0075                     ??_set_cursor:
   795  0075                     ??_spiInit:	
   796                           ; 1 bytes @ 0x5
   797                           
   798  0075                     spiInit@sType:	
   799                           ; 1 bytes @ 0x5
   800                           
   801  0075                     Escribir_stringLCD@i:	
   802                           ; 1 bytes @ 0x5
   803                           
   804                           
   805                           ; 1 bytes @ 0x5
   806  0075                     	ds	1
   807  0076                     ??_setup:
   808  0076                     ??___awdiv:	
   809                           ; 1 bytes @ 0x6
   810                           
   811  0076                     ??___awmod:	
   812                           ; 1 bytes @ 0x6
   813                           
   814  0076                     Escribir_stringLCD@d:	
   815                           ; 1 bytes @ 0x6
   816                           
   817                           
   818                           ; 1 bytes @ 0x6
   819  0076                     	ds	1
   820  0077                     set_cursor@linea:
   821  0077                     ___awmod@counter:	
   822                           ; 1 bytes @ 0x7
   823                           
   824                           
   825                           ; 1 bytes @ 0x7
   826  0077                     	ds	1
   827  0078                     ___awmod@sign:
   828                           
   829                           ; 1 bytes @ 0x8
   830  0078                     	ds	1
   831  0079                     ?_divisor_dec:
   832  0079                     divisor_dec@dig1:	
   833                           ; 1 bytes @ 0x9
   834                           
   835                           
   836                           ; 1 bytes @ 0x9
   837  0079                     	ds	1
   838                           
   839                           	psect	cstackBANK0
   840  0020                     __pcstackBANK0:
   841  0020                     ___awdiv@counter:
   842                           
   843                           ; 1 bytes @ 0x0
   844  0020                     	ds	1
   845  0021                     ___awdiv@sign:
   846                           
   847                           ; 1 bytes @ 0x1
   848  0021                     	ds	1
   849  0022                     ___awdiv@quotient:
   850                           
   851                           ; 2 bytes @ 0x2
   852  0022                     	ds	2
   853  0024                     ??_divisor_dec:
   854                           
   855                           ; 1 bytes @ 0x4
   856  0024                     	ds	4
   857  0028                     divisor_dec@b:
   858                           
   859                           ; 1 bytes @ 0x8
   860  0028                     	ds	1
   861  0029                     divisor_dec@n:
   862                           
   863                           ; 2 bytes @ 0x9
   864  0029                     	ds	2
   865  002B                     ??_main:
   866                           
   867                           ; 1 bytes @ 0xB
   868  002B                     	ds	3
   869                           
   870                           	psect	maintext
   871  001C                     __pmaintext:	
   872 ;;
   873 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   874 ;;
   875 ;; *************** function _main *****************
   876 ;; Defined at:
   877 ;;		line 70 in file "Maestro.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : B00/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       3       0       0       0
   894 ;;      Totals:         0       3       0       0       0
   895 ;;Total ram usage:        3 bytes
   896 ;; Hardware stack levels required when called: 4
   897 ;; This function calls:
   898 ;;		_Escribir_caracterLCD
   899 ;;		_Escribir_stringLCD
   900 ;;		_Iniciar_LCD
   901 ;;		_Limpiar_pantallaLCD
   902 ;;		_divisor_dec
   903 ;;		_set_cursor
   904 ;;		_setup
   905 ;;		_spiRead
   906 ;;		_spiWrite
   907 ;;		_tabla_numASCII
   908 ;; This function is called by:
   909 ;;		Startup code after reset
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _main
   915  001C                     _main:
   916  001C                     l1682:	
   917                           ;incstack = 0
   918                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   919                           
   920                           
   921                           ;Maestro.c: 71:     setup();
   922  001C  120A  118A  2374  120A  118A  	fcall	_setup
   923                           
   924                           ;Maestro.c: 72:     Iniciar_LCD();
   925  0021  120A  118A  2148  120A  118A  	fcall	_Iniciar_LCD
   926                           
   927                           ;Maestro.c: 73:     Limpiar_pantallaLCD();
   928  0026  120A  118A  23C2  120A  118A  	fcall	_Limpiar_pantallaLCD
   929                           
   930                           ;Maestro.c: 74:     set_cursor(1,0);
   931  002B  01F4               	clrf	set_cursor@posicion
   932  002C  3001               	movlw	1
   933  002D  120A  118A  2256  120A  118A  	fcall	_set_cursor
   934  0032                     l1684:
   935                           
   936                           ;Maestro.c: 75:     Escribir_stringLCD("Hola");
   937  0032  301F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   938  0033  120A  118A  239C  120A  118A  	fcall	_Escribir_stringLCD
   939  0038                     l1686:
   940                           
   941                           ;Maestro.c: 76:     set_cursor(2,2);
   942  0038  3002               	movlw	2
   943  0039  1283               	bcf	3,5	;RP0=0, select bank0
   944  003A  1303               	bcf	3,6	;RP1=0, select bank0
   945  003B  00AB               	movwf	??_main
   946  003C  082B               	movf	??_main,w
   947  003D  00F4               	movwf	set_cursor@posicion
   948  003E  3002               	movlw	2
   949  003F  120A  118A  2256  120A  118A  	fcall	_set_cursor
   950                           
   951                           ;Maestro.c: 77:     Escribir_stringLCD("Jose Santizo");
   952  0044  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   953  0045  120A  118A  239C  120A  118A  	fcall	_Escribir_stringLCD
   954  004A                     l1688:
   955                           
   956                           ;Maestro.c: 78:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   957  004A  301A               	movlw	26
   958  004B  1283               	bcf	3,5	;RP0=0, select bank0
   959  004C  1303               	bcf	3,6	;RP1=0, select bank0
   960  004D  00AD               	movwf	??_main+2
   961  004E  305E               	movlw	94
   962  004F  00AC               	movwf	??_main+1
   963  0050  306D               	movlw	109
   964  0051  00AB               	movwf	??_main
   965  0052                     u937:
   966  0052  0BAB               	decfsz	??_main,f
   967  0053  2852               	goto	u937
   968  0054  0BAC               	decfsz	??_main+1,f
   969  0055  2852               	goto	u937
   970  0056  0BAD               	decfsz	??_main+2,f
   971  0057  2852               	goto	u937
   972  0058  2859               	nop2
   973  0059                     l1690:
   974                           
   975                           ;Maestro.c: 79:     Limpiar_pantallaLCD();
   976  0059  120A  118A  23C2  120A  118A  	fcall	_Limpiar_pantallaLCD
   977  005E                     l1692:
   978                           
   979                           ;Maestro.c: 81:         set_cursor(1,0);
   980  005E  01F4               	clrf	set_cursor@posicion
   981  005F  3001               	movlw	1
   982  0060  120A  118A  2256  120A  118A  	fcall	_set_cursor
   983  0065                     l1694:
   984                           
   985                           ;Maestro.c: 82:         Escribir_stringLCD("S1:    S2:   S3:");
   986  0065  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   987  0066  120A  118A  239C  120A  118A  	fcall	_Escribir_stringLCD
   988  006B                     l1696:
   989                           
   990                           ;Maestro.c: 88:         PORTCbits.RC2 = 0;
   991  006B  1283               	bcf	3,5	;RP0=0, select bank0
   992  006C  1303               	bcf	3,6	;RP1=0, select bank0
   993  006D  1107               	bcf	7,2	;volatile
   994                           
   995                           ;Maestro.c: 89:         _delay((unsigned long)((1)*(4000000/4000.0)));
   996  006E  30C7               	movlw	199
   997  006F  1283               	bcf	3,5	;RP0=0, select bank0
   998  0070  1303               	bcf	3,6	;RP1=0, select bank0
   999  0071  00AB               	movwf	??_main
  1000  0072                     u947:
  1001  0072  2873               	nop2
  1002  0073  0BAB               	decfsz	??_main,f
  1003  0074  2872               	goto	u947
  1004  0075  2876               	nop2
  1005  0076                     l1698:
  1006                           
  1007                           ;Maestro.c: 91:         spiWrite(1);
  1008  0076  3001               	movlw	1
  1009  0077  120A  118A  2423  120A  118A  	fcall	_spiWrite
  1010  007C                     l1700:
  1011                           
  1012                           ;Maestro.c: 92:         val_ADC = spiRead();
  1013  007C  120A  118A  240C  120A  118A  	fcall	_spiRead
  1014  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0083  00AB               	movwf	??_main
  1017  0084  082B               	movf	??_main,w
  1018  0085  00FA               	movwf	_val_ADC
  1019                           
  1020                           ;Maestro.c: 94:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1021  0086  30C7               	movlw	199
  1022  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1023  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1024  0089  00AB               	movwf	??_main
  1025  008A                     u957:
  1026  008A  288B               	nop2
  1027  008B  0BAB               	decfsz	??_main,f
  1028  008C  288A               	goto	u957
  1029  008D  288E               	nop2
  1030  008E                     l1702:
  1031                           
  1032                           ;Maestro.c: 95:         PORTCbits.RC2 = 1;
  1033  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1034  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1035  0090  1507               	bsf	7,2	;volatile
  1036  0091                     l1704:
  1037                           
  1038                           ;Maestro.c: 97:         divisor_dec(val_ADC, ADC_dig);
  1039  0091  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
  1040  0092  00AB               	movwf	??_main
  1041  0093  082B               	movf	??_main,w
  1042  0094  00F9               	movwf	divisor_dec@dig1
  1043  0095  087A               	movf	_val_ADC,w
  1044  0096  120A  118A  2206  120A  118A  	fcall	_divisor_dec
  1045  009B                     l1706:
  1046                           
  1047                           ;Maestro.c: 99:         uni_ADC = tabla_numASCII(ADC_dig[0]);
  1048  009B  087B               	movf	_ADC_dig,w
  1049  009C  120A  118A  22DC  120A  118A  	fcall	_tabla_numASCII
  1050  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1051  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1052  00A3  00AB               	movwf	??_main
  1053  00A4  082B               	movf	??_main,w
  1054  00A5  00B2               	movwf	_uni_ADC
  1055  00A6                     l1708:
  1056                           
  1057                           ;Maestro.c: 100:         dec_ADC = tabla_numASCII(ADC_dig[1]);
  1058  00A6  087C               	movf	_ADC_dig+1,w
  1059  00A7  120A  118A  22DC  120A  118A  	fcall	_tabla_numASCII
  1060  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00AE  00AB               	movwf	??_main
  1063  00AF  082B               	movf	??_main,w
  1064  00B0  00B1               	movwf	_dec_ADC
  1065  00B1                     l1710:
  1066                           
  1067                           ;Maestro.c: 101:         cen_ADC = tabla_numASCII(ADC_dig[2]);
  1068  00B1  087D               	movf	_ADC_dig+2,w
  1069  00B2  120A  118A  22DC  120A  118A  	fcall	_tabla_numASCII
  1070  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1071  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1072  00B9  00AB               	movwf	??_main
  1073  00BA  082B               	movf	??_main,w
  1074  00BB  00B0               	movwf	_cen_ADC
  1075  00BC                     l1712:
  1076                           
  1077                           ;Maestro.c: 113:         set_cursor(2,0);
  1078  00BC  01F4               	clrf	set_cursor@posicion
  1079  00BD  3002               	movlw	2
  1080  00BE  120A  118A  2256  120A  118A  	fcall	_set_cursor
  1081  00C3                     l1714:
  1082                           
  1083                           ;Maestro.c: 114:         Escribir_caracterLCD(uni_ADC);
  1084  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1085  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1086  00C5  0832               	movf	_uni_ADC,w
  1087  00C6  120A  118A  2400  120A  118A  	fcall	_Escribir_caracterLCD
  1088  00CB                     l1716:
  1089                           
  1090                           ;Maestro.c: 115:         Escribir_caracterLCD(dec_ADC);
  1091  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00CD  0831               	movf	_dec_ADC,w
  1094  00CE  120A  118A  2400  120A  118A  	fcall	_Escribir_caracterLCD
  1095  00D3                     l1718:
  1096                           
  1097                           ;Maestro.c: 116:         Escribir_caracterLCD(cen_ADC);
  1098  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1099  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1100  00D5  0830               	movf	_cen_ADC,w
  1101  00D6  120A  118A  2400  120A  118A  	fcall	_Escribir_caracterLCD
  1102  00DB  285E               	goto	l1692
  1103  00DC  120A  118A  280C   	ljmp	start
  1104  00DF                     __end_of_main:
  1105                           
  1106                           	psect	text1
  1107  02DC                     __ptext1:	
  1108 ;; *************** function _tabla_numASCII *****************
  1109 ;; Defined at:
  1110 ;;		line 153 in file "Maestro.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  a               1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  a               1    4[COMMON] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      unsigned char 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0
  1126 ;;      Temps:          2       0       0       0       0
  1127 ;;      Totals:         3       0       0       0       0
  1128 ;;Total ram usage:        3 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _tabla_numASCII
  1140  02DC                     _tabla_numASCII:
  1141                           
  1142                           ;incstack = 0
  1143                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1144                           ;tabla_numASCII@a stored from wreg
  1145  02DC  00F4               	movwf	tabla_numASCII@a
  1146  02DD                     l1482:
  1147                           
  1148                           ;Maestro.c: 154:     switch(a){
  1149  02DD  2AF2               	goto	l1546
  1150  02DE                     l1484:
  1151                           
  1152                           ;Maestro.c: 156:             return 48;
  1153  02DE  3030               	movlw	48
  1154  02DF  2B1A               	goto	l89
  1155  02E0                     l1490:
  1156                           
  1157                           ;Maestro.c: 159:             return 49;
  1158  02E0  3031               	movlw	49
  1159  02E1  2B1A               	goto	l89
  1160  02E2                     l1496:
  1161                           
  1162                           ;Maestro.c: 162:             return 50;
  1163  02E2  3032               	movlw	50
  1164  02E3  2B1A               	goto	l89
  1165  02E4                     l1502:
  1166                           
  1167                           ;Maestro.c: 165:             return 51;
  1168  02E4  3033               	movlw	51
  1169  02E5  2B1A               	goto	l89
  1170  02E6                     l1508:
  1171                           
  1172                           ;Maestro.c: 168:             return 52;
  1173  02E6  3034               	movlw	52
  1174  02E7  2B1A               	goto	l89
  1175  02E8                     l1514:
  1176                           
  1177                           ;Maestro.c: 171:             return 53;
  1178  02E8  3035               	movlw	53
  1179  02E9  2B1A               	goto	l89
  1180  02EA                     l1520:
  1181                           
  1182                           ;Maestro.c: 174:             return 54;
  1183  02EA  3036               	movlw	54
  1184  02EB  2B1A               	goto	l89
  1185  02EC                     l1526:
  1186                           
  1187                           ;Maestro.c: 177:             return 55;
  1188  02EC  3037               	movlw	55
  1189  02ED  2B1A               	goto	l89
  1190  02EE                     l1532:
  1191                           
  1192                           ;Maestro.c: 180:             return 56;
  1193  02EE  3038               	movlw	56
  1194  02EF  2B1A               	goto	l89
  1195  02F0                     l1538:
  1196                           
  1197                           ;Maestro.c: 183:             return 57;
  1198  02F0  3039               	movlw	57
  1199  02F1  2B1A               	goto	l89
  1200  02F2                     l1546:
  1201  02F2  0874               	movf	tabla_numASCII@a,w
  1202  02F3  00F2               	movwf	??_tabla_numASCII
  1203  02F4  01F3               	clrf	??_tabla_numASCII+1
  1204                           
  1205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1206                           ; Switch size 1, requested type "simple"
  1207                           ; Number of cases is 1, Range of values is 0 to 0
  1208                           ; switch strategies available:
  1209                           ; Name         Instructions Cycles
  1210                           ; simple_byte            4     3 (average)
  1211                           ; direct_byte           11     8 (fixed)
  1212                           ; jumptable            260     6 (fixed)
  1213                           ;	Chosen strategy is simple_byte
  1214  02F5  0873               	movf	??_tabla_numASCII+1,w
  1215  02F6  3A00               	xorlw	0	; case 0
  1216  02F7  1903               	skipnz
  1217  02F8  2AFA               	goto	l1752
  1218  02F9  2B1A               	goto	l89
  1219  02FA                     l1752:
  1220                           
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 10, Range of values is 0 to 9
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte           31    16 (average)
  1226                           ; direct_byte           38     8 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  02FA  0872               	movf	??_tabla_numASCII,w
  1230  02FB  3A00               	xorlw	0	; case 0
  1231  02FC  1903               	skipnz
  1232  02FD  2ADE               	goto	l1484
  1233  02FE  3A01               	xorlw	1	; case 1
  1234  02FF  1903               	skipnz
  1235  0300  2AE0               	goto	l1490
  1236  0301  3A03               	xorlw	3	; case 2
  1237  0302  1903               	skipnz
  1238  0303  2AE2               	goto	l1496
  1239  0304  3A01               	xorlw	1	; case 3
  1240  0305  1903               	skipnz
  1241  0306  2AE4               	goto	l1502
  1242  0307  3A07               	xorlw	7	; case 4
  1243  0308  1903               	skipnz
  1244  0309  2AE6               	goto	l1508
  1245  030A  3A01               	xorlw	1	; case 5
  1246  030B  1903               	skipnz
  1247  030C  2AE8               	goto	l1514
  1248  030D  3A03               	xorlw	3	; case 6
  1249  030E  1903               	skipnz
  1250  030F  2AEA               	goto	l1520
  1251  0310  3A01               	xorlw	1	; case 7
  1252  0311  1903               	skipnz
  1253  0312  2AEC               	goto	l1526
  1254  0313  3A0F               	xorlw	15	; case 8
  1255  0314  1903               	skipnz
  1256  0315  2AEE               	goto	l1532
  1257  0316  3A01               	xorlw	1	; case 9
  1258  0317  1903               	skipnz
  1259  0318  2AF0               	goto	l1538
  1260  0319  2B1A               	goto	l89
  1261  031A                     l89:
  1262  031A  0008               	return
  1263  031B                     __end_of_tabla_numASCII:
  1264                           
  1265                           	psect	text2
  1266  0423                     __ptext2:	
  1267 ;; *************** function _spiWrite *****************
  1268 ;; Defined at:
  1269 ;;		line 32 in file "SPI.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  dat             1    wreg     unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  dat             1    2[COMMON] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      void 
  1276 ;; Registers used:
  1277 ;;		wreg
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0
  1286 ;;      Totals:         1       0       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _spiWrite
  1299  0423                     _spiWrite:
  1300                           
  1301                           ;incstack = 0
  1302                           ; Regs used in _spiWrite: [wreg]
  1303                           ;spiWrite@dat stored from wreg
  1304  0423  00F2               	movwf	spiWrite@dat
  1305  0424                     l1462:
  1306                           
  1307                           ;SPI.c: 32: void spiWrite(char dat);SPI.c: 33: {;SPI.c: 34:     SSPBUF = dat;
  1308  0424  0872               	movf	spiWrite@dat,w
  1309  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1310  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1311  0427  0093               	movwf	19	;volatile
  1312  0428                     l126:
  1313  0428  0008               	return
  1314  0429                     __end_of_spiWrite:
  1315                           
  1316                           	psect	text3
  1317  040C                     __ptext3:	
  1318 ;; *************** function _spiRead *****************
  1319 ;; Defined at:
  1320 ;;		line 45 in file "SPI.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      unsigned char 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0
  1337 ;;      Totals:         0       0       0       0       0
  1338 ;;Total ram usage:        0 bytes
  1339 ;; Hardware stack levels used: 1
  1340 ;; Hardware stack levels required when called: 2
  1341 ;; This function calls:
  1342 ;;		_spiReceiveWait
  1343 ;; This function is called by:
  1344 ;;		_main
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _spiRead
  1350  040C                     _spiRead:
  1351  040C                     l1464:	
  1352                           ;incstack = 0
  1353                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1354                           
  1355                           
  1356                           ;SPI.c: 47:     spiReceiveWait();
  1357  040C  120A  118A  2415  120A  118A  	fcall	_spiReceiveWait
  1358  0411                     l1466:
  1359                           
  1360                           ;SPI.c: 48:     return(SSPBUF);
  1361  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0413  0813               	movf	19,w	;volatile
  1364  0414                     l134:
  1365  0414  0008               	return
  1366  0415                     __end_of_spiRead:
  1367                           
  1368                           	psect	text4
  1369  0415                     __ptext4:	
  1370 ;; *************** function _spiReceiveWait *****************
  1371 ;; Defined at:
  1372 ;;		line 27 in file "SPI.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		None
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_spiRead
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           
  1401                           ;psect for function _spiReceiveWait
  1402  0415                     _spiReceiveWait:
  1403  0415                     l1280:	
  1404                           ;incstack = 0
  1405                           ; Regs used in _spiReceiveWait: []
  1406                           
  1407  0415                     l120:	
  1408                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
  1409                           
  1410  0415  1683               	bsf	3,5	;RP0=1, select bank1
  1411  0416  1303               	bcf	3,6	;RP1=0, select bank1
  1412  0417  1C14               	btfss	20,0	;volatile
  1413  0418  2C1A               	goto	u461
  1414  0419  2C1B               	goto	u460
  1415  041A                     u461:
  1416  041A  2C15               	goto	l120
  1417  041B                     u460:
  1418  041B                     l123:
  1419  041B  0008               	return
  1420  041C                     __end_of_spiReceiveWait:
  1421                           
  1422                           	psect	text5
  1423  0374                     __ptext5:	
  1424 ;; *************** function _setup *****************
  1425 ;; Defined at:
  1426 ;;		line 122 in file "Maestro.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;		None
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;		None
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1440 ;;      Params:         0       0       0       0       0
  1441 ;;      Locals:         0       0       0       0       0
  1442 ;;      Temps:          0       0       0       0       0
  1443 ;;      Totals:         0       0       0       0       0
  1444 ;;Total ram usage:        0 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 2
  1447 ;; This function calls:
  1448 ;;		_initOsc
  1449 ;;		_spiInit
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _setup
  1457  0374                     _setup:
  1458  0374                     l1384:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1461                           
  1462                           
  1463                           ;Maestro.c: 125:     ANSEL = 0;
  1464  0374  1683               	bsf	3,5	;RP0=1, select bank3
  1465  0375  1703               	bsf	3,6	;RP1=1, select bank3
  1466  0376  0188               	clrf	8	;volatile
  1467                           
  1468                           ;Maestro.c: 126:     ANSELH = 0;
  1469  0377  0189               	clrf	9	;volatile
  1470                           
  1471                           ;Maestro.c: 128:     TRISA = 0;
  1472  0378  1683               	bsf	3,5	;RP0=1, select bank1
  1473  0379  1303               	bcf	3,6	;RP1=0, select bank1
  1474  037A  0185               	clrf	5	;volatile
  1475                           
  1476                           ;Maestro.c: 129:     TRISB = 0;
  1477  037B  0186               	clrf	6	;volatile
  1478                           
  1479                           ;Maestro.c: 130:     TRISC = 0;
  1480  037C  0187               	clrf	7	;volatile
  1481                           
  1482                           ;Maestro.c: 131:     TRISD = 0;
  1483  037D  0188               	clrf	8	;volatile
  1484                           
  1485                           ;Maestro.c: 132:     TRISE = 0;
  1486  037E  0189               	clrf	9	;volatile
  1487                           
  1488                           ;Maestro.c: 134:     PORTA = 0;
  1489  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0381  0185               	clrf	5	;volatile
  1492                           
  1493                           ;Maestro.c: 135:     PORTD = 0;
  1494  0382  0188               	clrf	8	;volatile
  1495                           
  1496                           ;Maestro.c: 136:     PORTC = 0;
  1497  0383  0187               	clrf	7	;volatile
  1498                           
  1499                           ;Maestro.c: 137:     PORTE = 0;
  1500  0384  0189               	clrf	9	;volatile
  1501                           
  1502                           ;Maestro.c: 138:     PORTB = 0;
  1503  0385  0186               	clrf	6	;volatile
  1504  0386                     l1386:
  1505                           
  1506                           ;Maestro.c: 141:     TRISC2 = 0;
  1507  0386  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0387  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0388  1107               	bcf	7,2	;volatile
  1510  0389                     l1388:
  1511                           
  1512                           ;Maestro.c: 142:     PORTCbits.RC2 = 1;
  1513  0389  1283               	bcf	3,5	;RP0=0, select bank0
  1514  038A  1303               	bcf	3,6	;RP1=0, select bank0
  1515  038B  1507               	bsf	7,2	;volatile
  1516  038C                     l1390:
  1517                           
  1518                           ;Maestro.c: 145:     initOsc(4);
  1519  038C  3004               	movlw	4
  1520  038D  120A  118A  231B  120A  118A  	fcall	_initOsc
  1521  0392                     l1392:
  1522                           
  1523                           ;Maestro.c: 148:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
  1524  0392  01F2               	clrf	spiInit@sDataSample
  1525  0393  01F3               	clrf	spiInit@sClockIdle
  1526  0394  01F4               	clrf	spiInit@sTransmitEdge
  1527  0395  3020               	movlw	32
  1528  0396  120A  118A  23DC  120A  118A  	fcall	_spiInit
  1529  039B                     l84:
  1530  039B  0008               	return
  1531  039C                     __end_of_setup:
  1532                           
  1533                           	psect	text6
  1534  03DC                     __ptext6:	
  1535 ;; *************** function _spiInit *****************
  1536 ;; Defined at:
  1537 ;;		line 10 in file "SPI.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  sType           1    wreg     enum E1264
  1540 ;;  sDataSample     1    2[COMMON] enum E1272
  1541 ;;  sClockIdle      1    3[COMMON] enum E1276
  1542 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  sType           1    5[COMMON] enum E1264
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         3       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         4       0       0       0       0
  1558 ;;Total ram usage:        4 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_setup
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _spiInit
  1570  03DC                     _spiInit:
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1574                           ;spiInit@sType stored from wreg
  1575  03DC  00F5               	movwf	spiInit@sType
  1576  03DD                     l1270:
  1577                           
  1578                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_polarity
      +                           sClockIdle, Spi_Clock_edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1579  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  1580  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  1581  03DF  1287               	bcf	7,5	;volatile
  1582                           
  1583                           ;SPI.c: 13:     if(sType & 0b00000100)
  1584  03E0  1D75               	btfss	spiInit@sType,2
  1585  03E1  2BE3               	goto	u451
  1586  03E2  2BE4               	goto	u450
  1587  03E3                     u451:
  1588  03E3  2BE8               	goto	l1276
  1589  03E4                     u450:
  1590  03E4                     l1272:
  1591                           
  1592                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1593  03E4  0874               	movf	spiInit@sTransmitEdge,w
  1594  03E5  0094               	movwf	20	;volatile
  1595  03E6                     l1274:
  1596                           
  1597                           ;SPI.c: 16:         TRISC3 = 1;
  1598  03E6  1587               	bsf	7,3	;volatile
  1599                           
  1600                           ;SPI.c: 17:     }
  1601  03E7  2BEC               	goto	l116
  1602  03E8                     l1276:
  1603                           
  1604                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1605  03E8  0872               	movf	spiInit@sDataSample,w
  1606  03E9  0474               	iorwf	spiInit@sTransmitEdge,w
  1607  03EA  0094               	movwf	20	;volatile
  1608  03EB                     l1278:
  1609                           
  1610                           ;SPI.c: 21:         TRISC3 = 0;
  1611  03EB  1187               	bcf	7,3	;volatile
  1612  03EC                     l116:	
  1613                           ;SPI.c: 22:     }
  1614                           
  1615                           
  1616                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1617  03EC  0875               	movf	spiInit@sType,w
  1618  03ED  0473               	iorwf	spiInit@sClockIdle,w
  1619  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1620  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1621  03F0  0094               	movwf	20	;volatile
  1622  03F1                     l117:
  1623  03F1  0008               	return
  1624  03F2                     __end_of_spiInit:
  1625                           
  1626                           	psect	text7
  1627  031B                     __ptext7:	
  1628 ;; *************** function _initOsc *****************
  1629 ;; Defined at:
  1630 ;;		line 12 in file "Oscilador.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  Valor           1    wreg     unsigned char 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  Valor           1    2[COMMON] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         0       0       0       0       0
  1645 ;;      Locals:         1       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0
  1647 ;;      Totals:         1       0       0       0       0
  1648 ;;Total ram usage:        1 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_setup
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _initOsc
  1660  031B                     _initOsc:
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1664                           ;initOsc@Valor stored from wreg
  1665  031B  00F2               	movwf	initOsc@Valor
  1666  031C                     l1254:
  1667                           
  1668                           ;Oscilador.c: 14:     if(Valor == 8){
  1669  031C  3008               	movlw	8
  1670  031D  0672               	xorwf	initOsc@Valor,w
  1671  031E  1D03               	btfss	3,2
  1672  031F  2B21               	goto	u411
  1673  0320  2B22               	goto	u410
  1674  0321                     u411:
  1675  0321  2B27               	goto	l1258
  1676  0322                     u410:
  1677  0322                     l1256:
  1678                           
  1679                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1680  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1681  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1682  0324  160F               	bsf	15,4	;volatile
  1683                           
  1684                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1685  0325  168F               	bsf	15,5	;volatile
  1686                           
  1687                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1688  0326  170F               	bsf	15,6	;volatile
  1689  0327                     l1258:
  1690                           
  1691                           ;Oscilador.c: 19:     if(Valor == 4){
  1692  0327  3004               	movlw	4
  1693  0328  0672               	xorwf	initOsc@Valor,w
  1694  0329  1D03               	btfss	3,2
  1695  032A  2B2C               	goto	u421
  1696  032B  2B2D               	goto	u420
  1697  032C                     u421:
  1698  032C  2B32               	goto	l1262
  1699  032D                     u420:
  1700  032D                     l1260:
  1701                           
  1702                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1703  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1704  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1705  032F  120F               	bcf	15,4	;volatile
  1706                           
  1707                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1708  0330  168F               	bsf	15,5	;volatile
  1709                           
  1710                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1711  0331  170F               	bsf	15,6	;volatile
  1712  0332                     l1262:
  1713                           
  1714                           ;Oscilador.c: 24:     if(Valor == 2){
  1715  0332  3002               	movlw	2
  1716  0333  0672               	xorwf	initOsc@Valor,w
  1717  0334  1D03               	btfss	3,2
  1718  0335  2B37               	goto	u431
  1719  0336  2B38               	goto	u430
  1720  0337                     u431:
  1721  0337  2B3D               	goto	l1266
  1722  0338                     u430:
  1723  0338                     l1264:
  1724                           
  1725                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1726  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1728  033A  160F               	bsf	15,4	;volatile
  1729                           
  1730                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1731  033B  128F               	bcf	15,5	;volatile
  1732                           
  1733                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1734  033C  170F               	bsf	15,6	;volatile
  1735  033D                     l1266:
  1736                           
  1737                           ;Oscilador.c: 29:     if(Valor == 1){
  1738  033D  0372               	decf	initOsc@Valor,w
  1739  033E  1D03               	btfss	3,2
  1740  033F  2B41               	goto	u441
  1741  0340  2B42               	goto	u440
  1742  0341                     u441:
  1743  0341  2B47               	goto	l197
  1744  0342                     u440:
  1745  0342                     l1268:
  1746                           
  1747                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1748  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1749  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1750  0344  120F               	bcf	15,4	;volatile
  1751                           
  1752                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1753  0345  128F               	bcf	15,5	;volatile
  1754                           
  1755                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1756  0346  170F               	bsf	15,6	;volatile
  1757  0347                     l197:	
  1758                           ;Oscilador.c: 33:     }
  1759                           
  1760                           
  1761                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1762  0347  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0348  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0349  140F               	bsf	15,0	;volatile
  1765  034A                     l198:
  1766  034A  0008               	return
  1767  034B                     __end_of_initOsc:
  1768                           
  1769                           	psect	text8
  1770  0256                     __ptext8:	
  1771 ;; *************** function _set_cursor *****************
  1772 ;; Defined at:
  1773 ;;		line 77 in file "LCD.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  linea           1    wreg     unsigned char 
  1776 ;;  posicion        1    4[COMMON] unsigned char 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  linea           1    7[COMMON] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         1       0       0       0       0
  1789 ;;      Locals:         1       0       0       0       0
  1790 ;;      Temps:          2       0       0       0       0
  1791 ;;      Totals:         4       0       0       0       0
  1792 ;;Total ram usage:        4 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 3
  1795 ;; This function calls:
  1796 ;;		_Escribir_comandoLCD
  1797 ;; This function is called by:
  1798 ;;		_main
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           
  1803                           ;psect for function _set_cursor
  1804  0256                     _set_cursor:
  1805                           
  1806                           ;incstack = 0
  1807                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1808                           ;set_cursor@linea stored from wreg
  1809  0256  00F7               	movwf	set_cursor@linea
  1810  0257                     l1428:
  1811                           
  1812                           ;LCD.c: 78:     PORTCbits.RC7 = 0; PORTDbits.RD4 = 0;
  1813  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0259  1387               	bcf	7,7	;volatile
  1816  025A  1208               	bcf	8,4	;volatile
  1817  025B                     l1430:
  1818                           
  1819                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1820  025B  0377               	decf	set_cursor@linea,w
  1821  025C  1D03               	btfss	3,2
  1822  025D  2A5F               	goto	u741
  1823  025E  2A60               	goto	u740
  1824  025F                     u741:
  1825  025F  2A67               	goto	l1434
  1826  0260                     u740:
  1827  0260                     l1432:
  1828  0260  3080               	movlw	128
  1829  0261  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  1830  0266  2A73               	goto	l1438
  1831  0267                     l1434:
  1832  0267  3002               	movlw	2
  1833  0268  0677               	xorwf	set_cursor@linea,w
  1834  0269  1D03               	btfss	3,2
  1835  026A  2A6C               	goto	u751
  1836  026B  2A6D               	goto	u750
  1837  026C                     u751:
  1838  026C  2A73               	goto	l1438
  1839  026D                     u750:
  1840  026D                     l1436:
  1841  026D  30C0               	movlw	192
  1842  026E  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  1843  0273                     l1438:
  1844                           
  1845                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1846  0273  3068               	movlw	104
  1847  0274  00F6               	movwf	??_set_cursor+1
  1848  0275  30E4               	movlw	228
  1849  0276  00F5               	movwf	??_set_cursor
  1850  0277                     u967:
  1851  0277  0BF5               	decfsz	??_set_cursor,f
  1852  0278  2A77               	goto	u967
  1853  0279  0BF6               	decfsz	??_set_cursor+1,f
  1854  027A  2A77               	goto	u967
  1855  027B  0000               	nop
  1856  027C                     l1440:
  1857                           
  1858                           ;LCD.c: 86:     if (posicion != 0){
  1859  027C  0874               	movf	set_cursor@posicion,w
  1860  027D  1903               	btfsc	3,2
  1861  027E  2A80               	goto	u761
  1862  027F  2A81               	goto	u760
  1863  0280                     u761:
  1864  0280  2A98               	goto	l189
  1865  0281                     u760:
  1866  0281  2A8A               	goto	l1448
  1867  0282                     l1444:
  1868                           
  1869                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1870  0282  3014               	movlw	20
  1871  0283  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  1872  0288                     l1446:
  1873                           
  1874                           ;LCD.c: 89:             posicion--;
  1875  0288  3001               	movlw	1
  1876  0289  02F4               	subwf	set_cursor@posicion,f
  1877  028A                     l1448:
  1878                           
  1879                           ;LCD.c: 87:         while(posicion > 0){
  1880  028A  0874               	movf	set_cursor@posicion,w
  1881  028B  1D03               	btfss	3,2
  1882  028C  2A8E               	goto	u771
  1883  028D  2A8F               	goto	u770
  1884  028E                     u771:
  1885  028E  2A82               	goto	l1444
  1886  028F                     u770:
  1887  028F                     l1450:
  1888                           
  1889                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1890  028F  3068               	movlw	104
  1891  0290  00F6               	movwf	??_set_cursor+1
  1892  0291  30E4               	movlw	228
  1893  0292  00F5               	movwf	??_set_cursor
  1894  0293                     u977:
  1895  0293  0BF5               	decfsz	??_set_cursor,f
  1896  0294  2A93               	goto	u977
  1897  0295  0BF6               	decfsz	??_set_cursor+1,f
  1898  0296  2A93               	goto	u977
  1899  0297  0000               	nop
  1900  0298                     l189:
  1901  0298  0008               	return
  1902  0299                     __end_of_set_cursor:
  1903                           
  1904                           	psect	text9
  1905  0206                     __ptext9:	
  1906 ;; *************** function _divisor_dec *****************
  1907 ;; Defined at:
  1908 ;;		line 76 in file "7SEG-hex.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  b               1    wreg     unsigned char 
  1911 ;;  dig1            1    9[COMMON] PTR unsigned char 
  1912 ;;		 -> ADC_dig(1), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  b               1    8[BANK0 ] unsigned char 
  1915 ;;  n               2    9[BANK0 ] int 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         1       0       0       0       0
  1926 ;;      Locals:         0       3       0       0       0
  1927 ;;      Temps:          0       4       0       0       0
  1928 ;;      Totals:         1       7       0       0       0
  1929 ;;Total ram usage:        8 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 2
  1932 ;; This function calls:
  1933 ;;		___awdiv
  1934 ;;		___awmod
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           
  1941                           ;psect for function _divisor_dec
  1942  0206                     _divisor_dec:
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1946                           ;divisor_dec@b stored from wreg
  1947  0206  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0207  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0208  00A8               	movwf	divisor_dec@b
  1950  0209                     l1670:
  1951  0209  01A9               	clrf	divisor_dec@n
  1952  020A  01AA               	clrf	divisor_dec@n+1
  1953  020B                     l1676:
  1954  020B  300A               	movlw	10
  1955  020C  00F2               	movwf	___awmod@divisor
  1956  020D  3000               	movlw	0
  1957  020E  00F3               	movwf	___awmod@divisor+1
  1958  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0211  0828               	movf	divisor_dec@b,w
  1961  0212  00A4               	movwf	??_divisor_dec
  1962  0213  01A5               	clrf	??_divisor_dec+1
  1963  0214  0824               	movf	??_divisor_dec,w
  1964  0215  00F4               	movwf	___awmod@dividend
  1965  0216  0825               	movf	??_divisor_dec+1,w
  1966  0217  00F5               	movwf	___awmod@dividend+1
  1967  0218  120A  118A  21AD  120A  118A  	fcall	___awmod
  1968  021D  0872               	movf	?___awmod,w
  1969  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1970  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0220  00A6               	movwf	??_divisor_dec+2
  1972  0221  0829               	movf	divisor_dec@n,w
  1973  0222  0779               	addwf	divisor_dec@dig1,w
  1974  0223  00A7               	movwf	??_divisor_dec+3
  1975  0224  0827               	movf	??_divisor_dec+3,w
  1976  0225  0084               	movwf	4
  1977  0226  0826               	movf	??_divisor_dec+2,w
  1978  0227  0080               	movwf	0
  1979  0228  300A               	movlw	10
  1980  0229  00F2               	movwf	___awdiv@divisor
  1981  022A  3000               	movlw	0
  1982  022B  00F3               	movwf	___awdiv@divisor+1
  1983  022C  0829               	movf	divisor_dec@n,w
  1984  022D  0779               	addwf	divisor_dec@dig1,w
  1985  022E  00A4               	movwf	??_divisor_dec
  1986  022F  0824               	movf	??_divisor_dec,w
  1987  0230  0084               	movwf	4
  1988  0231  0800               	movf	0,w
  1989  0232  0228               	subwf	divisor_dec@b,w
  1990  0233  00F4               	movwf	___awdiv@dividend
  1991  0234  01F5               	clrf	___awdiv@dividend+1
  1992  0235  1C03               	skipc
  1993  0236  03F5               	decf	___awdiv@dividend+1,f
  1994  0237  120A  118A  20DF  120A  118A  	fcall	___awdiv
  1995  023C  0872               	movf	?___awdiv,w
  1996  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1997  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1998  023F  00A5               	movwf	??_divisor_dec+1
  1999  0240  0825               	movf	??_divisor_dec+1,w
  2000  0241  00A8               	movwf	divisor_dec@b
  2001  0242                     l1678:
  2002  0242  3001               	movlw	1
  2003  0243  07A9               	addwf	divisor_dec@n,f
  2004  0244  1803               	skipnc
  2005  0245  0AAA               	incf	divisor_dec@n+1,f
  2006  0246  3000               	movlw	0
  2007  0247  07AA               	addwf	divisor_dec@n+1,f
  2008  0248                     l1680:
  2009  0248  082A               	movf	divisor_dec@n+1,w
  2010  0249  3A80               	xorlw	128
  2011  024A  00FF               	movwf	btemp+1
  2012  024B  3080               	movlw	128
  2013  024C  027F               	subwf	btemp+1,w
  2014  024D  1D03               	skipz
  2015  024E  2A51               	goto	u915
  2016  024F  3003               	movlw	3
  2017  0250  0229               	subwf	divisor_dec@n,w
  2018  0251                     u915:
  2019  0251  1C03               	skipc
  2020  0252  2A54               	goto	u911
  2021  0253  2A55               	goto	u910
  2022  0254                     u911:
  2023  0254  2A0B               	goto	l1676
  2024  0255                     u910:
  2025  0255                     l230:
  2026  0255  0008               	return
  2027  0256                     __end_of_divisor_dec:
  2028                           
  2029                           	psect	text10
  2030  01AD                     __ptext10:	
  2031 ;; *************** function ___awmod *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         2    2[COMMON] int 
  2036 ;;  dividend        2    4[COMMON] int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  sign            1    8[COMMON] unsigned char 
  2039 ;;  counter         1    7[COMMON] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2    2[COMMON] int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         4       0       0       0       0
  2050 ;;      Locals:         2       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0
  2052 ;;      Totals:         7       0       0       0       0
  2053 ;;Total ram usage:        7 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 1
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_divisor_dec
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function ___awmod
  2065  01AD                     ___awmod:
  2066  01AD                     l1346:	
  2067                           ;incstack = 0
  2068                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2069                           
  2070  01AD  01F8               	clrf	___awmod@sign
  2071  01AE                     l1348:
  2072  01AE  1FF5               	btfss	___awmod@dividend+1,7
  2073  01AF  29B1               	goto	u651
  2074  01B0  29B2               	goto	u650
  2075  01B1                     u651:
  2076  01B1  29B9               	goto	l1354
  2077  01B2                     u650:
  2078  01B2                     l1350:
  2079  01B2  09F4               	comf	___awmod@dividend,f
  2080  01B3  09F5               	comf	___awmod@dividend+1,f
  2081  01B4  0AF4               	incf	___awmod@dividend,f
  2082  01B5  1903               	skipnz
  2083  01B6  0AF5               	incf	___awmod@dividend+1,f
  2084  01B7                     l1352:
  2085  01B7  01F8               	clrf	___awmod@sign
  2086  01B8  0AF8               	incf	___awmod@sign,f
  2087  01B9                     l1354:
  2088  01B9  1FF3               	btfss	___awmod@divisor+1,7
  2089  01BA  29BC               	goto	u661
  2090  01BB  29BD               	goto	u660
  2091  01BC                     u661:
  2092  01BC  29C2               	goto	l1358
  2093  01BD                     u660:
  2094  01BD                     l1356:
  2095  01BD  09F2               	comf	___awmod@divisor,f
  2096  01BE  09F3               	comf	___awmod@divisor+1,f
  2097  01BF  0AF2               	incf	___awmod@divisor,f
  2098  01C0  1903               	skipnz
  2099  01C1  0AF3               	incf	___awmod@divisor+1,f
  2100  01C2                     l1358:
  2101  01C2  0872               	movf	___awmod@divisor,w
  2102  01C3  0473               	iorwf	___awmod@divisor+1,w
  2103  01C4  1903               	btfsc	3,2
  2104  01C5  29C7               	goto	u671
  2105  01C6  29C8               	goto	u670
  2106  01C7                     u671:
  2107  01C7  29F7               	goto	l1376
  2108  01C8                     u670:
  2109  01C8                     l1360:
  2110  01C8  01F7               	clrf	___awmod@counter
  2111  01C9  0AF7               	incf	___awmod@counter,f
  2112  01CA  29D6               	goto	l1366
  2113  01CB                     l1362:
  2114  01CB  3001               	movlw	1
  2115  01CC                     u685:
  2116  01CC  1003               	clrc
  2117  01CD  0DF2               	rlf	___awmod@divisor,f
  2118  01CE  0DF3               	rlf	___awmod@divisor+1,f
  2119  01CF  3EFF               	addlw	-1
  2120  01D0  1D03               	skipz
  2121  01D1  29CC               	goto	u685
  2122  01D2                     l1364:
  2123  01D2  3001               	movlw	1
  2124  01D3  00F6               	movwf	??___awmod
  2125  01D4  0876               	movf	??___awmod,w
  2126  01D5  07F7               	addwf	___awmod@counter,f
  2127  01D6                     l1366:
  2128  01D6  1FF3               	btfss	___awmod@divisor+1,7
  2129  01D7  29D9               	goto	u691
  2130  01D8  29DA               	goto	u690
  2131  01D9                     u691:
  2132  01D9  29CB               	goto	l1362
  2133  01DA                     u690:
  2134  01DA                     l1368:
  2135  01DA  0873               	movf	___awmod@divisor+1,w
  2136  01DB  0275               	subwf	___awmod@dividend+1,w
  2137  01DC  1D03               	skipz
  2138  01DD  29E0               	goto	u705
  2139  01DE  0872               	movf	___awmod@divisor,w
  2140  01DF  0274               	subwf	___awmod@dividend,w
  2141  01E0                     u705:
  2142  01E0  1C03               	skipc
  2143  01E1  29E3               	goto	u701
  2144  01E2  29E4               	goto	u700
  2145  01E3                     u701:
  2146  01E3  29EA               	goto	l1372
  2147  01E4                     u700:
  2148  01E4                     l1370:
  2149  01E4  0872               	movf	___awmod@divisor,w
  2150  01E5  02F4               	subwf	___awmod@dividend,f
  2151  01E6  0873               	movf	___awmod@divisor+1,w
  2152  01E7  1C03               	skipc
  2153  01E8  03F5               	decf	___awmod@dividend+1,f
  2154  01E9  02F5               	subwf	___awmod@dividend+1,f
  2155  01EA                     l1372:
  2156  01EA  3001               	movlw	1
  2157  01EB                     u715:
  2158  01EB  1003               	clrc
  2159  01EC  0CF3               	rrf	___awmod@divisor+1,f
  2160  01ED  0CF2               	rrf	___awmod@divisor,f
  2161  01EE  3EFF               	addlw	-1
  2162  01EF  1D03               	skipz
  2163  01F0  29EB               	goto	u715
  2164  01F1                     l1374:
  2165  01F1  3001               	movlw	1
  2166  01F2  02F7               	subwf	___awmod@counter,f
  2167  01F3  1D03               	btfss	3,2
  2168  01F4  29F6               	goto	u721
  2169  01F5  29F7               	goto	u720
  2170  01F6                     u721:
  2171  01F6  29DA               	goto	l1368
  2172  01F7                     u720:
  2173  01F7                     l1376:
  2174  01F7  0878               	movf	___awmod@sign,w
  2175  01F8  1903               	btfsc	3,2
  2176  01F9  29FB               	goto	u731
  2177  01FA  29FC               	goto	u730
  2178  01FB                     u731:
  2179  01FB  2A01               	goto	l1380
  2180  01FC                     u730:
  2181  01FC                     l1378:
  2182  01FC  09F4               	comf	___awmod@dividend,f
  2183  01FD  09F5               	comf	___awmod@dividend+1,f
  2184  01FE  0AF4               	incf	___awmod@dividend,f
  2185  01FF  1903               	skipnz
  2186  0200  0AF5               	incf	___awmod@dividend+1,f
  2187  0201                     l1380:
  2188  0201  0875               	movf	___awmod@dividend+1,w
  2189  0202  00F3               	movwf	?___awmod+1
  2190  0203  0874               	movf	___awmod@dividend,w
  2191  0204  00F2               	movwf	?___awmod
  2192  0205                     l482:
  2193  0205  0008               	return
  2194  0206                     __end_of___awmod:
  2195                           
  2196                           	psect	text11
  2197  00DF                     __ptext11:	
  2198 ;; *************** function ___awdiv *****************
  2199 ;; Defined at:
  2200 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  divisor         2    2[COMMON] int 
  2203 ;;  dividend        2    4[COMMON] int 
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;  quotient        2    2[BANK0 ] int 
  2206 ;;  sign            1    1[BANK0 ] unsigned char 
  2207 ;;  counter         1    0[BANK0 ] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    2[COMMON] int 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2217 ;;      Params:         4       0       0       0       0
  2218 ;;      Locals:         0       4       0       0       0
  2219 ;;      Temps:          1       0       0       0       0
  2220 ;;      Totals:         5       4       0       0       0
  2221 ;;Total ram usage:        9 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_divisor_dec
  2228 ;;		_divisor_hex
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           
  2233                           ;psect for function ___awdiv
  2234  00DF                     ___awdiv:
  2235  00DF                     l1626:	
  2236                           ;incstack = 0
  2237                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2238                           
  2239  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2240  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2241  00E1  01A1               	clrf	___awdiv@sign
  2242  00E2                     l1628:
  2243  00E2  1FF3               	btfss	___awdiv@divisor+1,7
  2244  00E3  28E5               	goto	u811
  2245  00E4  28E6               	goto	u810
  2246  00E5                     u811:
  2247  00E5  28ED               	goto	l1634
  2248  00E6                     u810:
  2249  00E6                     l1630:
  2250  00E6  09F2               	comf	___awdiv@divisor,f
  2251  00E7  09F3               	comf	___awdiv@divisor+1,f
  2252  00E8  0AF2               	incf	___awdiv@divisor,f
  2253  00E9  1903               	skipnz
  2254  00EA  0AF3               	incf	___awdiv@divisor+1,f
  2255  00EB                     l1632:
  2256  00EB  01A1               	clrf	___awdiv@sign
  2257  00EC  0AA1               	incf	___awdiv@sign,f
  2258  00ED                     l1634:
  2259  00ED  1FF5               	btfss	___awdiv@dividend+1,7
  2260  00EE  28F0               	goto	u821
  2261  00EF  28F1               	goto	u820
  2262  00F0                     u821:
  2263  00F0  28FA               	goto	l1640
  2264  00F1                     u820:
  2265  00F1                     l1636:
  2266  00F1  09F4               	comf	___awdiv@dividend,f
  2267  00F2  09F5               	comf	___awdiv@dividend+1,f
  2268  00F3  0AF4               	incf	___awdiv@dividend,f
  2269  00F4  1903               	skipnz
  2270  00F5  0AF5               	incf	___awdiv@dividend+1,f
  2271  00F6                     l1638:
  2272  00F6  3001               	movlw	1
  2273  00F7  00F6               	movwf	??___awdiv
  2274  00F8  0876               	movf	??___awdiv,w
  2275  00F9  06A1               	xorwf	___awdiv@sign,f
  2276  00FA                     l1640:
  2277  00FA  01A2               	clrf	___awdiv@quotient
  2278  00FB  01A3               	clrf	___awdiv@quotient+1
  2279  00FC                     l1642:
  2280  00FC  0872               	movf	___awdiv@divisor,w
  2281  00FD  0473               	iorwf	___awdiv@divisor+1,w
  2282  00FE  1903               	btfsc	3,2
  2283  00FF  2901               	goto	u831
  2284  0100  2902               	goto	u830
  2285  0101                     u831:
  2286  0101  2939               	goto	l1662
  2287  0102                     u830:
  2288  0102                     l1644:
  2289  0102  01A0               	clrf	___awdiv@counter
  2290  0103  0AA0               	incf	___awdiv@counter,f
  2291  0104  2910               	goto	l1650
  2292  0105                     l1646:
  2293  0105  3001               	movlw	1
  2294  0106                     u845:
  2295  0106  1003               	clrc
  2296  0107  0DF2               	rlf	___awdiv@divisor,f
  2297  0108  0DF3               	rlf	___awdiv@divisor+1,f
  2298  0109  3EFF               	addlw	-1
  2299  010A  1D03               	skipz
  2300  010B  2906               	goto	u845
  2301  010C                     l1648:
  2302  010C  3001               	movlw	1
  2303  010D  00F6               	movwf	??___awdiv
  2304  010E  0876               	movf	??___awdiv,w
  2305  010F  07A0               	addwf	___awdiv@counter,f
  2306  0110                     l1650:
  2307  0110  1FF3               	btfss	___awdiv@divisor+1,7
  2308  0111  2913               	goto	u851
  2309  0112  2914               	goto	u850
  2310  0113                     u851:
  2311  0113  2905               	goto	l1646
  2312  0114                     u850:
  2313  0114                     l1652:
  2314  0114  3001               	movlw	1
  2315  0115                     u865:
  2316  0115  1003               	clrc
  2317  0116  0DA2               	rlf	___awdiv@quotient,f
  2318  0117  0DA3               	rlf	___awdiv@quotient+1,f
  2319  0118  3EFF               	addlw	-1
  2320  0119  1D03               	skipz
  2321  011A  2915               	goto	u865
  2322  011B  0873               	movf	___awdiv@divisor+1,w
  2323  011C  0275               	subwf	___awdiv@dividend+1,w
  2324  011D  1D03               	skipz
  2325  011E  2921               	goto	u875
  2326  011F  0872               	movf	___awdiv@divisor,w
  2327  0120  0274               	subwf	___awdiv@dividend,w
  2328  0121                     u875:
  2329  0121  1C03               	skipc
  2330  0122  2924               	goto	u871
  2331  0123  2925               	goto	u870
  2332  0124                     u871:
  2333  0124  292C               	goto	l1658
  2334  0125                     u870:
  2335  0125                     l1654:
  2336  0125  0872               	movf	___awdiv@divisor,w
  2337  0126  02F4               	subwf	___awdiv@dividend,f
  2338  0127  0873               	movf	___awdiv@divisor+1,w
  2339  0128  1C03               	skipc
  2340  0129  03F5               	decf	___awdiv@dividend+1,f
  2341  012A  02F5               	subwf	___awdiv@dividend+1,f
  2342  012B                     l1656:
  2343  012B  1422               	bsf	___awdiv@quotient,0
  2344  012C                     l1658:
  2345  012C  3001               	movlw	1
  2346  012D                     u885:
  2347  012D  1003               	clrc
  2348  012E  0CF3               	rrf	___awdiv@divisor+1,f
  2349  012F  0CF2               	rrf	___awdiv@divisor,f
  2350  0130  3EFF               	addlw	-1
  2351  0131  1D03               	skipz
  2352  0132  292D               	goto	u885
  2353  0133                     l1660:
  2354  0133  3001               	movlw	1
  2355  0134  02A0               	subwf	___awdiv@counter,f
  2356  0135  1D03               	btfss	3,2
  2357  0136  2938               	goto	u891
  2358  0137  2939               	goto	u890
  2359  0138                     u891:
  2360  0138  2914               	goto	l1652
  2361  0139                     u890:
  2362  0139                     l1662:
  2363  0139  0821               	movf	___awdiv@sign,w
  2364  013A  1903               	btfsc	3,2
  2365  013B  293D               	goto	u901
  2366  013C  293E               	goto	u900
  2367  013D                     u901:
  2368  013D  2943               	goto	l1666
  2369  013E                     u900:
  2370  013E                     l1664:
  2371  013E  09A2               	comf	___awdiv@quotient,f
  2372  013F  09A3               	comf	___awdiv@quotient+1,f
  2373  0140  0AA2               	incf	___awdiv@quotient,f
  2374  0141  1903               	skipnz
  2375  0142  0AA3               	incf	___awdiv@quotient+1,f
  2376  0143                     l1666:
  2377  0143  0823               	movf	___awdiv@quotient+1,w
  2378  0144  00F3               	movwf	?___awdiv+1
  2379  0145  0822               	movf	___awdiv@quotient,w
  2380  0146  00F2               	movwf	?___awdiv
  2381  0147                     l469:
  2382  0147  0008               	return
  2383  0148                     __end_of___awdiv:
  2384                           
  2385                           	psect	text12
  2386  03C2                     __ptext12:	
  2387 ;; *************** function _Limpiar_pantallaLCD *****************
  2388 ;; Defined at:
  2389 ;;		line 69 in file "LCD.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  1    wreg      void 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       0       0       0       0
  2404 ;;      Locals:         0       0       0       0       0
  2405 ;;      Temps:          2       0       0       0       0
  2406 ;;      Totals:         2       0       0       0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 3
  2410 ;; This function calls:
  2411 ;;		_Escribir_comandoLCD
  2412 ;; This function is called by:
  2413 ;;		_main
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function _Limpiar_pantallaLCD
  2419  03C2                     _Limpiar_pantallaLCD:
  2420  03C2                     l1420:	
  2421                           ;incstack = 0
  2422                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2423                           
  2424                           
  2425                           ;LCD.c: 70:     PORTCbits.RC7 = 0; PORTDbits.RD4 = 0;
  2426  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2427  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2428  03C4  1387               	bcf	7,7	;volatile
  2429  03C5  1208               	bcf	8,4	;volatile
  2430  03C6                     l1422:
  2431                           
  2432                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2433  03C6  3001               	movlw	1
  2434  03C7  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2435  03CC                     l1424:
  2436                           
  2437                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2438  03CC  301A               	movlw	26
  2439  03CD  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2440  03CE  30F8               	movlw	248
  2441  03CF  00F4               	movwf	??_Limpiar_pantallaLCD
  2442  03D0                     u987:
  2443  03D0  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2444  03D1  2BD0               	goto	u987
  2445  03D2  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2446  03D3  2BD0               	goto	u987
  2447  03D4  0000               	nop
  2448  03D5                     l1426:
  2449                           
  2450                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2451  03D5  3002               	movlw	2
  2452  03D6  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2453  03DB                     l179:
  2454  03DB  0008               	return
  2455  03DC                     __end_of_Limpiar_pantallaLCD:
  2456                           
  2457                           	psect	text13
  2458  0148                     __ptext13:	
  2459 ;; *************** function _Iniciar_LCD *****************
  2460 ;; Defined at:
  2461 ;;		line 30 in file "LCD.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2475 ;;      Params:         0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0
  2477 ;;      Temps:          2       0       0       0       0
  2478 ;;      Totals:         2       0       0       0       0
  2479 ;;Total ram usage:        2 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 3
  2482 ;; This function calls:
  2483 ;;		_Escribir_comandoLCD
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _Iniciar_LCD
  2491  0148                     _Iniciar_LCD:
  2492  0148                     l1394:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2495                           
  2496                           
  2497                           ;LCD.c: 31:     PORTCbits.RC7 = 0;
  2498  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2500  014A  1387               	bcf	7,7	;volatile
  2501                           
  2502                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2503  014B  1208               	bcf	8,4	;volatile
  2504  014C                     l1396:
  2505                           
  2506                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  2507  014C  3025               	movlw	37
  2508  014D  00F5               	movwf	??_Iniciar_LCD+1
  2509  014E  305B               	movlw	91
  2510  014F  00F4               	movwf	??_Iniciar_LCD
  2511  0150                     u997:
  2512  0150  0BF4               	decfsz	??_Iniciar_LCD,f
  2513  0151  2950               	goto	u997
  2514  0152  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2515  0153  2950               	goto	u997
  2516  0154  2955               	nop2
  2517  0155                     l1398:
  2518                           
  2519                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2520  0155  3030               	movlw	48
  2521  0156  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2522  015B                     l1400:
  2523                           
  2524                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2525  015B  300B               	movlw	11
  2526  015C  00F5               	movwf	??_Iniciar_LCD+1
  2527  015D  3062               	movlw	98
  2528  015E  00F4               	movwf	??_Iniciar_LCD
  2529  015F                     u1007:
  2530  015F  0BF4               	decfsz	??_Iniciar_LCD,f
  2531  0160  295F               	goto	u1007
  2532  0161  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2533  0162  295F               	goto	u1007
  2534  0163  0000               	nop
  2535                           
  2536                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2537  0164  3030               	movlw	48
  2538  0165  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2539  016A                     l1402:
  2540                           
  2541                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2542  016A  3042               	movlw	66
  2543  016B  00F4               	movwf	??_Iniciar_LCD
  2544  016C                     u1017:
  2545  016C  0BF4               	decfsz	??_Iniciar_LCD,f
  2546  016D  296C               	goto	u1017
  2547  016E  0000               	nop
  2548  016F                     l1404:
  2549                           
  2550                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2551  016F  3030               	movlw	48
  2552  0170  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2553                           
  2554                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2555  0175  3042               	movlw	66
  2556  0176  00F4               	movwf	??_Iniciar_LCD
  2557  0177                     u1027:
  2558  0177  0BF4               	decfsz	??_Iniciar_LCD,f
  2559  0178  2977               	goto	u1027
  2560  0179  0000               	nop
  2561  017A                     l1406:
  2562                           
  2563                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2564  017A  3038               	movlw	56
  2565  017B  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2566  0180                     l1408:
  2567                           
  2568                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2569  0180  3042               	movlw	66
  2570  0181  00F4               	movwf	??_Iniciar_LCD
  2571  0182                     u1037:
  2572  0182  0BF4               	decfsz	??_Iniciar_LCD,f
  2573  0183  2982               	goto	u1037
  2574  0184  0000               	nop
  2575                           
  2576                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2577  0185  3008               	movlw	8
  2578  0186  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2579  018B                     l1410:
  2580                           
  2581                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2582  018B  3042               	movlw	66
  2583  018C  00F4               	movwf	??_Iniciar_LCD
  2584  018D                     u1047:
  2585  018D  0BF4               	decfsz	??_Iniciar_LCD,f
  2586  018E  298D               	goto	u1047
  2587  018F  0000               	nop
  2588  0190                     l1412:
  2589                           
  2590                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2591  0190  3001               	movlw	1
  2592  0191  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2593                           
  2594                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2595  0196  3042               	movlw	66
  2596  0197  00F4               	movwf	??_Iniciar_LCD
  2597  0198                     u1057:
  2598  0198  0BF4               	decfsz	??_Iniciar_LCD,f
  2599  0199  2998               	goto	u1057
  2600  019A  0000               	nop
  2601  019B                     l1414:
  2602                           
  2603                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2604  019B  3006               	movlw	6
  2605  019C  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2606  01A1                     l1416:
  2607                           
  2608                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2609  01A1  3042               	movlw	66
  2610  01A2  00F4               	movwf	??_Iniciar_LCD
  2611  01A3                     u1067:
  2612  01A3  0BF4               	decfsz	??_Iniciar_LCD,f
  2613  01A4  29A3               	goto	u1067
  2614  01A5  0000               	nop
  2615                           
  2616                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2617  01A6  300C               	movlw	12
  2618  01A7  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2619  01AC                     l167:
  2620  01AC  0008               	return
  2621  01AD                     __end_of_Iniciar_LCD:
  2622                           
  2623                           	psect	text14
  2624  039C                     __ptext14:	
  2625 ;; *************** function _Escribir_stringLCD *****************
  2626 ;; Defined at:
  2627 ;;		line 55 in file "LCD.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  d               1    wreg     PTR const unsigned char 
  2630 ;;		 -> STR_3(17), STR_2(13), STR_1(5), 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;  d               1    6[COMMON] PTR const unsigned char 
  2633 ;;		 -> STR_3(17), STR_2(13), STR_1(5), 
  2634 ;;  i               1    5[COMMON] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2644 ;;      Params:         0       0       0       0       0
  2645 ;;      Locals:         2       0       0       0       0
  2646 ;;      Temps:          1       0       0       0       0
  2647 ;;      Totals:         3       0       0       0       0
  2648 ;;Total ram usage:        3 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 3
  2651 ;; This function calls:
  2652 ;;		_Escribir_comandoLCD
  2653 ;; This function is called by:
  2654 ;;		_main
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function _Escribir_stringLCD
  2660  039C                     _Escribir_stringLCD:
  2661                           
  2662                           ;incstack = 0
  2663                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2664                           ;Escribir_stringLCD@d stored from wreg
  2665  039C  00F6               	movwf	Escribir_stringLCD@d
  2666  039D                     l1452:
  2667                           
  2668                           ;LCD.c: 56:     PORTCbits.RC7 = 1; PORTDbits.RD4 = 0;
  2669  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2670  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2671  039F  1787               	bsf	7,7	;volatile
  2672  03A0  1208               	bcf	8,4	;volatile
  2673  03A1                     l1454:
  2674                           
  2675                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2676  03A1  01F5               	clrf	Escribir_stringLCD@i
  2677  03A2  2BB4               	goto	l1460
  2678  03A3                     l1456:
  2679                           
  2680                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2681  03A3  0875               	movf	Escribir_stringLCD@i,w
  2682  03A4  0776               	addwf	Escribir_stringLCD@d,w
  2683  03A5  0084               	movwf	4
  2684  03A6  120A  118A  234B  120A  118A  	fcall	stringdir
  2685  03AB  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2686  03B0                     l1458:
  2687                           
  2688                           ;LCD.c: 60:     }
  2689  03B0  3001               	movlw	1
  2690  03B1  00F4               	movwf	??_Escribir_stringLCD
  2691  03B2  0874               	movf	??_Escribir_stringLCD,w
  2692  03B3  07F5               	addwf	Escribir_stringLCD@i,f
  2693  03B4                     l1460:
  2694  03B4  0875               	movf	Escribir_stringLCD@i,w
  2695  03B5  0776               	addwf	Escribir_stringLCD@d,w
  2696  03B6  0084               	movwf	4
  2697  03B7  120A  118A  234B  120A  118A  	fcall	stringdir
  2698  03BC  3A00               	xorlw	0
  2699  03BD  1D03               	skipz
  2700  03BE  2BC0               	goto	u781
  2701  03BF  2BC1               	goto	u780
  2702  03C0                     u781:
  2703  03C0  2BA3               	goto	l1456
  2704  03C1                     u780:
  2705  03C1                     l173:
  2706  03C1  0008               	return
  2707  03C2                     __end_of_Escribir_stringLCD:
  2708                           
  2709                           	psect	text15
  2710  0400                     __ptext15:	
  2711 ;; *************** function _Escribir_caracterLCD *****************
  2712 ;; Defined at:
  2713 ;;		line 63 in file "LCD.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  a               1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  a               1    4[COMMON] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2, status,0, pclath, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         1       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0
  2730 ;;      Totals:         1       0       0       0       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 3
  2734 ;; This function calls:
  2735 ;;		_Escribir_comandoLCD
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _Escribir_caracterLCD
  2743  0400                     _Escribir_caracterLCD:
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  2747                           ;Escribir_caracterLCD@a stored from wreg
  2748  0400  00F4               	movwf	Escribir_caracterLCD@a
  2749  0401                     l1552:
  2750                           
  2751                           ;LCD.c: 64:     PORTCbits.RC7 = 1; PORTDbits.RD4 = 0;
  2752  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0403  1787               	bsf	7,7	;volatile
  2755  0404  1208               	bcf	8,4	;volatile
  2756  0405                     l1554:
  2757                           
  2758                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  2759  0405  0874               	movf	Escribir_caracterLCD@a,w
  2760  0406  120A  118A  2299  120A  118A  	fcall	_Escribir_comandoLCD
  2761  040B                     l176:
  2762  040B  0008               	return
  2763  040C                     __end_of_Escribir_caracterLCD:
  2764                           
  2765                           	psect	text16
  2766  0299                     __ptext16:	
  2767 ;; *************** function _Escribir_comandoLCD *****************
  2768 ;; Defined at:
  2769 ;;		line 17 in file "LCD.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  Comando         1    wreg     unsigned char 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  Comando         1    3[COMMON] unsigned char 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         1       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         1       0       0       0       0
  2787 ;;Total ram usage:        1 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 2
  2790 ;; This function calls:
  2791 ;;		_prender_ELCD
  2792 ;; This function is called by:
  2793 ;;		_Iniciar_LCD
  2794 ;;		_Escribir_stringLCD
  2795 ;;		_Escribir_caracterLCD
  2796 ;;		_Limpiar_pantallaLCD
  2797 ;;		_set_cursor
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _Escribir_comandoLCD
  2803  0299                     _Escribir_comandoLCD:
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2807                           ;Escribir_comandoLCD@Comando stored from wreg
  2808  0299  00F3               	movwf	Escribir_comandoLCD@Comando
  2809  029A                     l1282:
  2810                           
  2811                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2812  029A  1C73               	btfss	Escribir_comandoLCD@Comando,0
  2813  029B  2A9D               	goto	u471
  2814  029C  2A9E               	goto	u470
  2815  029D                     u471:
  2816  029D  2AA2               	goto	l148
  2817  029E                     u470:
  2818  029E                     l1284:
  2819  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2820  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2821  02A0  1708               	bsf	8,6	;volatile
  2822  02A1  2AA5               	goto	l149
  2823  02A2                     l148:
  2824  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  2825  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  2826  02A4  1308               	bcf	8,6	;volatile
  2827  02A5                     l149:
  2828                           
  2829                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2830  02A5  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  2831  02A6  2AA8               	goto	u481
  2832  02A7  2AA9               	goto	u480
  2833  02A8                     u481:
  2834  02A8  2AAB               	goto	l150
  2835  02A9                     u480:
  2836  02A9                     l1286:
  2837  02A9  1788               	bsf	8,7	;volatile
  2838  02AA  2AAC               	goto	l151
  2839  02AB                     l150:
  2840  02AB  1388               	bcf	8,7	;volatile
  2841  02AC                     l151:
  2842                           
  2843                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2844  02AC  1D73               	btfss	Escribir_comandoLCD@Comando,2
  2845  02AD  2AAF               	goto	u491
  2846  02AE  2AB0               	goto	u490
  2847  02AF                     u491:
  2848  02AF  2AB2               	goto	l152
  2849  02B0                     u490:
  2850  02B0                     l1288:
  2851  02B0  1406               	bsf	6,0	;volatile
  2852  02B1  2AB3               	goto	l153
  2853  02B2                     l152:
  2854  02B2  1006               	bcf	6,0	;volatile
  2855  02B3                     l153:
  2856                           
  2857                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2858  02B3  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  2859  02B4  2AB6               	goto	u501
  2860  02B5  2AB7               	goto	u500
  2861  02B6                     u501:
  2862  02B6  2AB9               	goto	l154
  2863  02B7                     u500:
  2864  02B7                     l1290:
  2865  02B7  1486               	bsf	6,1	;volatile
  2866  02B8  2ABA               	goto	l155
  2867  02B9                     l154:
  2868  02B9  1086               	bcf	6,1	;volatile
  2869  02BA                     l155:
  2870                           
  2871                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2872  02BA  1E73               	btfss	Escribir_comandoLCD@Comando,4
  2873  02BB  2ABD               	goto	u511
  2874  02BC  2ABE               	goto	u510
  2875  02BD                     u511:
  2876  02BD  2AC0               	goto	l156
  2877  02BE                     u510:
  2878  02BE                     l1292:
  2879  02BE  1506               	bsf	6,2	;volatile
  2880  02BF  2AC1               	goto	l157
  2881  02C0                     l156:
  2882  02C0  1106               	bcf	6,2	;volatile
  2883  02C1                     l157:
  2884                           
  2885                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2886  02C1  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  2887  02C2  2AC4               	goto	u521
  2888  02C3  2AC5               	goto	u520
  2889  02C4                     u521:
  2890  02C4  2AC7               	goto	l158
  2891  02C5                     u520:
  2892  02C5                     l1294:
  2893  02C5  1586               	bsf	6,3	;volatile
  2894  02C6  2AC8               	goto	l159
  2895  02C7                     l158:
  2896  02C7  1186               	bcf	6,3	;volatile
  2897  02C8                     l159:
  2898                           
  2899                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2900  02C8  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2901  02C9  2ACB               	goto	u531
  2902  02CA  2ACC               	goto	u530
  2903  02CB                     u531:
  2904  02CB  2ACE               	goto	l160
  2905  02CC                     u530:
  2906  02CC                     l1296:
  2907  02CC  1606               	bsf	6,4	;volatile
  2908  02CD  2ACF               	goto	l161
  2909  02CE                     l160:
  2910  02CE  1206               	bcf	6,4	;volatile
  2911  02CF                     l161:
  2912                           
  2913                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2914  02CF  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2915  02D0  2AD2               	goto	u541
  2916  02D1  2AD3               	goto	u540
  2917  02D2                     u541:
  2918  02D2  2AD5               	goto	l162
  2919  02D3                     u540:
  2920  02D3                     l1298:
  2921  02D3  1686               	bsf	6,5	;volatile
  2922  02D4  2AD6               	goto	l1300
  2923  02D5                     l162:
  2924  02D5  1286               	bcf	6,5	;volatile
  2925  02D6                     l1300:
  2926                           
  2927                           ;LCD.c: 27:     prender_ELCD();
  2928  02D6  120A  118A  23F2  120A  118A  	fcall	_prender_ELCD
  2929  02DB                     l164:
  2930  02DB  0008               	return
  2931  02DC                     __end_of_Escribir_comandoLCD:
  2932                           
  2933                           	psect	text17
  2934  03F2                     __ptext17:	
  2935 ;; *************** function _prender_ELCD *****************
  2936 ;; Defined at:
  2937 ;;		line 11 in file "LCD.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;		None
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;		None
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       0       0       0       0
  2952 ;;      Locals:         0       0       0       0       0
  2953 ;;      Temps:          1       0       0       0       0
  2954 ;;      Totals:         1       0       0       0       0
  2955 ;;Total ram usage:        1 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 1
  2958 ;; This function calls:
  2959 ;;		Nothing
  2960 ;; This function is called by:
  2961 ;;		_Escribir_comandoLCD
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           
  2966                           ;psect for function _prender_ELCD
  2967  03F2                     _prender_ELCD:
  2968  03F2                     l1248:	
  2969                           ;incstack = 0
  2970                           ; Regs used in _prender_ELCD: [wreg]
  2971                           
  2972                           
  2973                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  2974  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2975  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2976  03F4  1688               	bsf	8,5	;volatile
  2977  03F5                     l1250:
  2978                           
  2979                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2980  03F5  30C7               	movlw	199
  2981  03F6  00F2               	movwf	??_prender_ELCD
  2982  03F7                     u1077:
  2983  03F7  2BF8               	nop2
  2984  03F8  0BF2               	decfsz	??_prender_ELCD,f
  2985  03F9  2BF7               	goto	u1077
  2986  03FA  2BFB               	nop2
  2987  03FB  2BFC               	nop2
  2988  03FC                     l1252:
  2989                           
  2990                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  2991  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2992  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2993  03FE  1288               	bcf	8,5	;volatile
  2994  03FF                     l145:
  2995  03FF  0008               	return
  2996  0400                     __end_of_prender_ELCD:
  2997                           
  2998                           	psect	text18
  2999  041C                     __ptext18:	
  3000 ;; *************** function _isr *****************
  3001 ;; Defined at:
  3002 ;;		line 64 in file "Maestro.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		None
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         0       0       0       0       0
  3017 ;;      Locals:         0       0       0       0       0
  3018 ;;      Temps:          2       0       0       0       0
  3019 ;;      Totals:         2       0       0       0       0
  3020 ;;Total ram usage:        2 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		Interrupt level 1
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _isr
  3031  041C                     _isr:
  3032  041C                     i1l73:
  3033  041C  0871               	movf	??_isr+1,w
  3034  041D  008A               	movwf	10
  3035  041E  0E70               	swapf	??_isr,w
  3036  041F  0083               	movwf	3
  3037  0420  0EFE               	swapf	btemp,f
  3038  0421  0E7E               	swapf	btemp,w
  3039  0422  0009               	retfie
  3040  0423                     __end_of_isr:
  3041  007E                     btemp	set	126	;btemp
  3042  007E                     wtemp0	set	126
  3043                           
  3044                           	psect	intentry
  3045  0004                     __pintentry:	
  3046                           ;incstack = 0
  3047                           ; Regs used in _isr: []
  3048                           
  3049  0004                     interrupt_function:
  3050  007E                     saved_w	set	btemp
  3051  0004  00FE               	movwf	btemp
  3052  0005  0E03               	swapf	3,w
  3053  0006  00F0               	movwf	??_isr
  3054  0007  080A               	movf	10,w
  3055  0008  00F1               	movwf	??_isr+1
  3056  0009  120A  118A  2C1C   	ljmp	_isr
  3057                           
  3058                           	psect	config
  3059                           
  3060                           ;Config register CONFIG1 @ 0x2007
  3061                           ;	Oscillator Selection bits
  3062                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3063                           ;	Watchdog Timer Enable bit
  3064                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3065                           ;	Power-up Timer Enable bit
  3066                           ;	PWRTE = OFF, PWRT disabled
  3067                           ;	RE3/MCLR pin function select bit
  3068                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3069                           ;	Code Protection bit
  3070                           ;	CP = OFF, Program memory code protection is disabled
  3071                           ;	Data Code Protection bit
  3072                           ;	CPD = OFF, Data memory code protection is disabled
  3073                           ;	Brown Out Reset Selection bits
  3074                           ;	BOREN = OFF, BOR disabled
  3075                           ;	Internal External Switchover bit
  3076                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3077                           ;	Fail-Safe Clock Monitor Enabled bit
  3078                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3079                           ;	Low Voltage Programming Enable bit
  3080                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3081                           ;	In-Circuit Debugger Mode bit
  3082                           ;	DEBUG = 0x1, unprogrammed default
  3083  2007                     	org	8199
  3084  2007  20D4               	dw	8404
  3085                           
  3086                           ;Config register CONFIG2 @ 0x2008
  3087                           ;	Brown-out Reset Selection bit
  3088                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3089                           ;	Flash Program Memory Self Write Enable bits
  3090                           ;	WRT = OFF, Write protection off
  3091  2008                     	org	8200
  3092  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     14      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_spiInit
    _set_cursor->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_dec
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3576
                                             11 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                        _divisor_dec
                         _set_cursor
                              _setup
                            _spiRead
                           _spiWrite
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     448
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     569
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1600
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      E      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Feb 16 19:18:37 2022

                            pc 0002                    _SSPSTATbits 0094                             l84 039B  
                           l89 031A                   ___awdiv@sign 0021                             fsr 0004  
              set_cursor@linea 0077                   ?_divisor_dec 0079                            l120 0415  
                          l123 041B                            l116 03EC                            l117 03F1  
                          l150 02AB                            l230 0255                            l134 0414  
                          l126 0428                            l151 02AC                            l160 02CE  
                          l152 02B2                            l145 03FF                            l161 02CF  
                          l153 02B3                            l162 02D5                            l154 02B9  
                          l155 02BA                            l164 02DB                            l156 02C0  
                          l148 02A2                            l157 02C1                            l149 02A5  
                          l173 03C1                            l158 02C7                            l159 02C8  
                          l167 01AC                            l176 040B                            l179 03DB  
                          l189 0298                            l197 0347                            l198 034A  
                          l482 0205                            l469 0147                            u410 0322  
                          u411 0321                            u500 02B7                            u420 032D  
                          u501 02B6                            u421 032C                            u510 02BE  
                          u430 0338                            u511 02BD                            u431 0337  
                          u520 02C5                            u440 0342                            u521 02C4  
                          u441 0341                            u530 02CC                            u450 03E4  
                          u531 02CB                            u451 03E3                            u540 02D3  
                          u700 01E4                            u460 041B                            u541 02D2  
                          u701 01E3                            u461 041A                            u470 029E  
                          u471 029D                            u480 02A9                            u720 01F7  
                          u481 02A8                            u721 01F6                            u705 01E0  
                          u490 02B0                            u810 00E6                            u730 01FC  
                          u650 01B2                            u491 02AF                            u811 00E5  
                          u731 01FB                            u715 01EB                            u651 01B1  
                          u900 013E                            u820 00F1                            u660 01BD  
                          u740 0260                            u901 013D                            u821 00F0  
                          u661 01BC                            u741 025F                            u830 0102  
                          u670 01C8                            u910 0255                            u750 026D  
                          u831 0101                            u671 01C7                            u911 0254  
                          u751 026C                            u760 0281                            u761 0280  
                          u850 0114                            u690 01DA                            u770 028F  
                          u851 0113                            u691 01D9                            u915 0251  
                          u771 028E                            u780 03C1                            u781 03C0  
                          u845 0106                            u685 01CC                            u870 0125  
                          u871 0124                            u865 0115                            u937 0052  
                          u890 0139                            u891 0138                            u875 0121  
                          u947 0072                            u885 012D                            u957 008A  
                          u967 0277                            u977 0293                            u987 03D0  
                          u997 0150                            _isr 041C                            _num 002F  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0078  
                         l1300 02D6                           l1400 015B                           l1250 03F5  
                         l1410 018B                           l1402 016A                           l1252 03FC  
                         l1412 0190                           l1404 016F                           l1420 03C2  
                         l1260 032D                           l1414 019B                           l1406 017A  
                         l1422 03C6                           l1350 01B2                           l1430 025B  
                         l1262 0332                           l1254 031C                           l1270 03DD  
                         l1502 02E4                           l1248 03F2                           l1416 01A1  
                         l1408 0180                           l1424 03CC                           l1360 01C8  
                         l1352 01B7                           l1440 027C                           l1432 0260  
                         l1264 0338                           l1256 0322                           l1272 03E4  
                         l1280 0415                           l1520 02EA                           l1290 02B7  
                         l1282 029A                           l1426 03D5                           l1370 01E4  
                         l1362 01CB                           l1354 01B9                           l1346 01AD  
                         l1450 028F                           l1434 0267                           l1266 033D  
                         l1258 0327                           l1274 03E6                           l1514 02E8  
                         l1292 02BE                           l1284 029E                           l1460 03B4  
                         l1452 039D                           l1380 0201                           l1372 01EA  
                         l1364 01D2                           l1356 01BD                           l1348 01AE  
                         l1444 0282                           l1436 026D                           l1428 0257  
                         l1268 0342                           l1276 03E8                           l1532 02EE  
                         l1508 02E6                           l1700 007C                           l1294 02C5  
                         l1286 02A9                           l1454 03A1                           l1630 00E6  
                         l1374 01F1                           l1366 01D6                           l1358 01C2  
                         l1446 0288                           l1438 0273                           l1278 03EB  
                         l1390 038C                           l1462 0424                           l1526 02EC  
                         l1710 00B1                           l1702 008E                           l1296 02CC  
                         l1288 02B0                           l1552 0401                           l1456 03A3  
                         l1640 00FA                           l1632 00EB                           l1368 01DA  
                         l1376 01F7                           l1448 028A                           l1392 0392  
                         l1384 0374                           l1464 040C                           l1712 00BC  
                         l1704 0091                           l1298 02D3                           l1554 0405  
                         l1458 03B0                           l1394 0148                           l1650 0110  
                         l1642 00FC                           l1634 00ED                           l1626 00DF  
                         l1378 01FC                           l1386 0386                           l1466 0411  
                         l1538 02F0                           l1490 02E0                           l1546 02F2  
                         l1482 02DD                           l1714 00C3                           l1706 009B  
                         l1396 014C                           l1660 0133                           l1652 0114  
                         l1644 0102                           l1636 00F1                           l1628 00E2  
                         l1388 0389                           l1484 02DE                           l1716 00CB  
                         l1708 00A6                           l1398 0155                           l1654 0125  
                         l1646 0105                           l1662 0139                           l1638 00F6  
                         l1670 0209                           l1718 00D3                           l1664 013E  
                         l1656 012B                           l1648 010C                           l1680 0248  
                         l1752 02FA                           l1496 02E2                           l1666 0143  
                         l1658 012C                           l1690 0059                           l1682 001C  
                         l1676 020B                           l1692 005E                           l1684 0032  
                         l1678 0242                           l1694 0065                           l1686 0038  
                         l1696 006B                           l1688 004A                           l1698 0076  
                         ?_isr 0070                           STR_1 036F                           STR_2 0362  
                         STR_3 0351                           u1007 015F                           u1017 016C  
                         u1027 0177                           u1037 0182                           u1047 018D  
                         u1057 0198                           u1067 01A3                           u1077 03F7  
                         i1l73 041C                  ??_Iniciar_LCD 0074                           _main 001C  
                         _trad 002E                           btemp 007E                           start 000C  
         _Escribir_caracterLCD 0400                          ??_isr 0070     __end_of_Escribir_stringLCD 03C2  
                        ?_main 0070                __end_of___awdiv 0148                __end_of___awmod 0206  
                        _ANSEL 0188                ___awdiv@divisor 0072                ___awdiv@counter 0020  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _TRISE 0089                __end_of_initOsc 034B                          _setup 0374  
          _Limpiar_pantallaLCD 03C2                          pclath 000A                __end_of_spiInit 03F2  
              __end_of_spiRead 0415                          status 0003                          wtemp0 007E  
        ?_Escribir_caracterLCD 0070                __initialization 000F            __end_of_Iniciar_LCD 01AD  
                 __end_of_main 00DF           ?_Limpiar_pantallaLCD 0070                         ??_main 002B  
                 divisor_dec@b 0028                   divisor_dec@n 0029             set_cursor@posicion 0074  
             ___awdiv@dividend 0074                         ?_setup 0070                         _ANSELH 0189  
                       _TRISC2 043A                         _TRISC3 043B                         _TRISC5 043D  
                       _SSPCON 0014                         _SSPBUF 0013               ??_tabla_numASCII 0072  
        ??_Limpiar_pantallaLCD 0074                      ??___awdiv 0076                      ??___awmod 0076  
             ___awdiv@quotient 0022                ___awmod@divisor 0072                ___awmod@counter 0077  
                    ??_initOsc 0072           __size_of_divisor_dec 0050                         saved_w 007E  
             __end_of_spiWrite 0429                      ??_spiInit 0075                      ??_spiRead 0072  
              divisor_dec@dig1 0079        __end_of__initialization 0018                    _Iniciar_LCD 0148  
       ??_Escribir_caracterLCD 0074                 __pcstackCOMMON 0070                  __end_of_setup 039C  
                      ??_setup 0076                     __pbssBANK0 002E                     __pmaintext 001C  
                   __pintentry 0004        __size_of_spiReceiveWait 0007   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 007B                   initOsc@Valor 0072                        _SSPSTAT 0094  
           _Escribir_stringLCD 039C                     __stringtab 034B                tabla_numASCII@a 0074  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074                      ?_spiWrite 0070  
                      ___awdiv 00DF                        ___awmod 01AD                        _dec_ADC 0031  
                      _cen_ADC 0030                        __ptext1 02DC                        __ptext2 0423  
                      __ptext3 040C                        __ptext4 0415                        __ptext5 0374  
                      __ptext6 03DC                        __ptext7 031B                        __ptext8 0256  
                      __ptext9 0206           ??_Escribir_stringLCD 0074                        _initOsc 031B  
                 __size_of_isr 0007                        _val_ADC 007A               ___awmod@dividend 0074  
                ?_prender_ELCD 0070                        _uni_ADC 0032                        _spiInit 03DC  
                      _spiRead 040C           end_of_initialization 0018                     _set_cursor 0256  
                   ??_spiWrite 0072                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                 ??_prender_ELCD 0072                    spiWrite@dat 0072  
                 ?_Iniciar_LCD 0070    __end_of_Limpiar_pantallaLCD 03DC                 _spiReceiveWait 0415  
                ??_divisor_dec 0024            start_initialization 000F                    __end_of_isr 0423  
          _Escribir_comandoLCD 0299     Escribir_comandoLCD@Comando 0073  __size_of_Escribir_caracterLCD 000C  
                  ?_set_cursor 0074         __end_of_spiReceiveWait 041C           ?_Escribir_comandoLCD 0070  
                  __pbssCOMMON 007A        __size_of_tabla_numASCII 003F                      ___latbits 0002  
                __pcstackBANK0 0020            __end_of_divisor_dec 0256           __end_of_prender_ELCD 0400  
              ?_spiReceiveWait 0070                       ?___awdiv 0072                       ?___awmod 0072  
        ??_Escribir_comandoLCD 0073              __size_of_spiWrite 0006                      __pstrings 034B  
                     ?_initOsc 0070                       ?_spiInit 0072                       ?_spiRead 0070  
          __size_of_set_cursor 0043                 __size_of_setup 0028           spiInit@sTransmitEdge 0074  
            interrupt_function 0004           __size_of_Iniciar_LCD 0065             spiInit@sDataSample 0072  
                  __stringbase 0350                    _divisor_dec 0206    __size_of_Escribir_stringLCD 0026  
          Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075               __size_of___awdiv 0069  
             __size_of___awmod 0059             __end_of__stringtab 0351                 _tabla_numASCII 02DC  
             __size_of_initOsc 0030                       __ptext10 01AD                       __ptext11 00DF  
                     __ptext12 03C2                       __ptext13 0148                       __ptext14 039C  
                     __ptext15 0400                       __ptext16 0299                       __ptext17 03F2  
                     __ptext18 041C               __size_of_spiInit 0016               __size_of_spiRead 0009  
        __size_of_prender_ELCD 000E                  __size_of_main 00C3                   ??_set_cursor 0075  
                     _spiWrite 0423                   spiInit@sType 0075   __size_of_Limpiar_pantallaLCD 001A  
            spiInit@sClockIdle 0073         __end_of_tabla_numASCII 031B   __end_of_Escribir_caracterLCD 040C  
                 _prender_ELCD 03F2             __end_of_set_cursor 0299                       intlevel1 0000  
             ??_spiReceiveWait 0072                      stringcode 034B                     _OSCCONbits 008F  
              ?_tabla_numASCII 0070                       stringdir 034B                       stringtab 034B  
  __end_of_Escribir_comandoLCD 02DC  
