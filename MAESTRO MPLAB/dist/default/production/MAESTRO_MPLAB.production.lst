

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 18 08:03:32 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0006                     _PORTBbits	set	6
   535  0008                     _PORTDbits	set	8
   536  0013                     _SSPBUF	set	19
   537  0014                     _SSPCONbits	set	20
   538  0014                     _SSPCON	set	20
   539  0007                     _PORTC	set	7
   540  0006                     _PORTB	set	6
   541  0009                     _PORTE	set	9
   542  0008                     _PORTD	set	8
   543  0005                     _PORTA	set	5
   544  0007                     _PORTCbits	set	7
   545  008F                     _OSCCONbits	set	143
   546  0094                     _SSPSTATbits	set	148
   547  008C                     _PIE1bits	set	140
   548  0085                     _TRISAbits	set	133
   549  0087                     _TRISCbits	set	135
   550  0094                     _SSPSTAT	set	148
   551  0089                     _TRISE	set	137
   552  0088                     _TRISD	set	136
   553  0086                     _TRISB	set	134
   554  0085                     _TRISA	set	133
   555  0438                     _TRISC0	set	1080
   556  0439                     _TRISC1	set	1081
   557  043A                     _TRISC2	set	1082
   558  0189                     _ANSELH	set	393
   559  0188                     _ANSEL	set	392
   560                           
   561                           	psect	strings
   562  03B4                     __pstrings:
   563  03B4                     stringtab:
   564  03B4                     __stringtab:
   565  03B4                     stringcode:	
   566                           ;	String table - string pointers are 1 byte each
   567                           
   568  03B4                     stringdir:
   569  03B4  3003               	movlw	high stringdir
   570  03B5  008A               	movwf	10
   571  03B6  0804               	movf	4,w
   572  03B7  0A84               	incf	4,f
   573  03B8  0782               	addwf	2,f
   574  03B9                     __stringbase:
   575  03B9  3400               	retlw	0
   576  03BA                     __end_of__stringtab:
   577  03BA                     STR_1:
   578  03BA  3453               	retlw	83	;'S'
   579  03BB  3431               	retlw	49	;'1'
   580  03BC  343A               	retlw	58	;':'
   581  03BD  3420               	retlw	32	;' '
   582  03BE  3420               	retlw	32	;' '
   583  03BF  3420               	retlw	32	;' '
   584  03C0  3420               	retlw	32	;' '
   585  03C1  3453               	retlw	83	;'S'
   586  03C2  3432               	retlw	50	;'2'
   587  03C3  343A               	retlw	58	;':'
   588  03C4  3420               	retlw	32	;' '
   589  03C5  3420               	retlw	32	;' '
   590  03C6  3420               	retlw	32	;' '
   591  03C7  3453               	retlw	83	;'S'
   592  03C8  3433               	retlw	51	;'3'
   593  03C9  343A               	retlw	58	;':'
   594  03CA  3400               	retlw	0
   595  03CB                     STR_3:
   596  03CB  344A               	retlw	74	;'J'
   597  03CC  346F               	retlw	111	;'o'
   598  03CD  3473               	retlw	115	;'s'
   599  03CE  3465               	retlw	101	;'e'
   600  03CF  3420               	retlw	32	;' '
   601  03D0  3453               	retlw	83	;'S'
   602  03D1  3461               	retlw	97	;'a'
   603  03D2  346E               	retlw	110	;'n'
   604  03D3  3474               	retlw	116	;'t'
   605  03D4  3469               	retlw	105	;'i'
   606  03D5  347A               	retlw	122	;'z'
   607  03D6  346F               	retlw	111	;'o'
   608  03D7  3400               	retlw	0
   609  03D8                     STR_2:
   610  03D8  3448               	retlw	72	;'H'
   611  03D9  346F               	retlw	111	;'o'
   612  03DA  346C               	retlw	108	;'l'
   613  03DB  3461               	retlw	97	;'a'
   614  03DC  3400               	retlw	0
   615                           
   616                           	psect	cinit
   617  000F                     start_initialization:	
   618                           ; #config settings
   619                           
   620  000F                     __initialization:
   621                           
   622                           ; Clear objects allocated to COMMON
   623  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   624  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   625                           
   626                           ; Clear objects allocated to BANK0
   627  0011  1283               	bcf	3,5	;RP0=0, select bank0
   628  0012  1303               	bcf	3,6	;RP1=0, select bank0
   629  0013  01AD               	clrf	__pbssBANK0& (0+127)
   630  0014  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   631  0015  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   632  0016  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   633  0017  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   634  0018  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   635  0019  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   636  001A  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   637  001B                     end_of_initialization:	
   638                           ;End of C runtime variable initialization code
   639                           
   640  001B                     __end_of__initialization:
   641  001B  0183               	clrf	3
   642  001C  120A  118A  281F   	ljmp	_main	;jump to C main() function
   643                           
   644                           	psect	bssCOMMON
   645  007A                     __pbssCOMMON:
   646  007A                     _uni_ADC:
   647  007A                     	ds	1
   648  007B                     _ADC_dig:
   649  007B                     	ds	1
   650                           
   651                           	psect	bssBANK0
   652  002D                     __pbssBANK0:
   653  002D                     _MSSPin:
   654  002D                     	ds	2
   655  002F                     _val_ADC:
   656  002F                     	ds	2
   657  0031                     _cen_ADC:
   658  0031                     	ds	1
   659  0032                     _dec_ADC:
   660  0032                     	ds	1
   661  0033                     _dig_ADC:
   662  0033                     	ds	1
   663  0034                     _val_ADC_fin:
   664  0034                     	ds	1
   665                           
   666                           	psect	cstackCOMMON
   667  0070                     __pcstackCOMMON:
   668  0070                     ?_setup:
   669  0070                     ?_Escribir_stringLCD:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_WriteMSSP:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_ReadMSSP:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_tabla_numASCII:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_Escribir_caracterLCD:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_initOsc:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_InitMSSP:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_Iniciar_LCD:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_Limpiar_pantallaLCD:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_isr:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_isr:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_main:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_prender_ELCD:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_Escribir_comandoLCD:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713  0070                     	ds	2
   714  0072                     ??_WriteMSSP:
   715  0072                     ??_ReadMSSP:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     ??_tabla_numASCII:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0072                     ??_initOsc:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0072                     ??_InitMSSP:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0072                     ??_prender_ELCD:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0072                     ?___awdiv:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0072                     ?___awmod:	
   734                           ; 2 bytes @ 0x2
   735                           
   736  0072                     InitMSSP@Modo:	
   737                           ; 2 bytes @ 0x2
   738                           
   739  0072                     WriteMSSP@Data:	
   740                           ; 1 bytes @ 0x2
   741                           
   742  0072                     initOsc@Valor:	
   743                           ; 1 bytes @ 0x2
   744                           
   745  0072                     ___awdiv@divisor:	
   746                           ; 1 bytes @ 0x2
   747                           
   748  0072                     ___awmod@divisor:	
   749                           ; 2 bytes @ 0x2
   750                           
   751                           
   752                           ; 2 bytes @ 0x2
   753  0072                     	ds	1
   754  0073                     ??_Escribir_comandoLCD:
   755  0073                     Escribir_comandoLCD@Comando:	
   756                           ; 1 bytes @ 0x3
   757                           
   758                           
   759                           ; 1 bytes @ 0x3
   760  0073                     	ds	1
   761  0074                     ?_set_cursor:
   762  0074                     ??_Escribir_stringLCD:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0074                     ??_Escribir_caracterLCD:	
   766                           ; 1 bytes @ 0x4
   767                           
   768  0074                     ??_Iniciar_LCD:	
   769                           ; 1 bytes @ 0x4
   770                           
   771  0074                     ??_Limpiar_pantallaLCD:	
   772                           ; 1 bytes @ 0x4
   773                           
   774  0074                     tabla_numASCII@a:	
   775                           ; 1 bytes @ 0x4
   776                           
   777  0074                     Escribir_caracterLCD@a:	
   778                           ; 1 bytes @ 0x4
   779                           
   780  0074                     set_cursor@posicion:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0074                     ___awdiv@dividend:	
   784                           ; 1 bytes @ 0x4
   785                           
   786  0074                     ___awmod@dividend:	
   787                           ; 2 bytes @ 0x4
   788                           
   789                           
   790                           ; 2 bytes @ 0x4
   791  0074                     	ds	1
   792  0075                     ??_set_cursor:
   793  0075                     Escribir_stringLCD@i:	
   794                           ; 1 bytes @ 0x5
   795                           
   796                           
   797                           ; 1 bytes @ 0x5
   798  0075                     	ds	1
   799  0076                     ??___awdiv:
   800  0076                     ??___awmod:	
   801                           ; 1 bytes @ 0x6
   802                           
   803  0076                     Escribir_stringLCD@d:	
   804                           ; 1 bytes @ 0x6
   805                           
   806                           
   807                           ; 1 bytes @ 0x6
   808  0076                     	ds	1
   809  0077                     set_cursor@linea:
   810  0077                     ___awmod@counter:	
   811                           ; 1 bytes @ 0x7
   812                           
   813                           
   814                           ; 1 bytes @ 0x7
   815  0077                     	ds	1
   816  0078                     ___awmod@sign:
   817                           
   818                           ; 1 bytes @ 0x8
   819  0078                     	ds	1
   820  0079                     ?_divisor_dec:
   821  0079                     divisor_dec@dig1:	
   822                           ; 1 bytes @ 0x9
   823                           
   824                           
   825                           ; 1 bytes @ 0x9
   826  0079                     	ds	1
   827                           
   828                           	psect	cstackBANK0
   829  0020                     __pcstackBANK0:
   830  0020                     ??_setup:
   831  0020                     ___awdiv@counter:	
   832                           ; 1 bytes @ 0x0
   833                           
   834                           
   835                           ; 1 bytes @ 0x0
   836  0020                     	ds	1
   837  0021                     ___awdiv@sign:
   838                           
   839                           ; 1 bytes @ 0x1
   840  0021                     	ds	1
   841  0022                     ___awdiv@quotient:
   842                           
   843                           ; 2 bytes @ 0x2
   844  0022                     	ds	2
   845  0024                     ??_divisor_dec:
   846                           
   847                           ; 1 bytes @ 0x4
   848  0024                     	ds	4
   849  0028                     divisor_dec@b:
   850                           
   851                           ; 1 bytes @ 0x8
   852  0028                     	ds	1
   853  0029                     divisor_dec@n:
   854                           
   855                           ; 2 bytes @ 0x9
   856  0029                     	ds	2
   857  002B                     ??_main:
   858                           
   859                           ; 1 bytes @ 0xB
   860  002B                     	ds	2
   861                           
   862                           	psect	maintext
   863  001F                     __pmaintext:	
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 75 in file "Maestro.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : B00/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       2       0       0       0
   886 ;;      Totals:         0       2       0       0       0
   887 ;;Total ram usage:        2 bytes
   888 ;; Hardware stack levels required when called: 5
   889 ;; This function calls:
   890 ;;		_Escribir_caracterLCD
   891 ;;		_Escribir_stringLCD
   892 ;;		_ReadMSSP
   893 ;;		_WriteMSSP
   894 ;;		_divisor_dec
   895 ;;		_set_cursor
   896 ;;		_setup
   897 ;;		_tabla_numASCII
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _main
   905  001F                     _main:
   906  001F                     l1790:	
   907                           ;incstack = 0
   908                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   909                           
   910                           
   911                           ;Maestro.c: 76:     setup();
   912  001F  120A  118A  20A8  120A  118A  	fcall	_setup
   913  0024                     l1792:
   914                           
   915                           ;Maestro.c: 77:     val_ADC = 0;
   916  0024  1283               	bcf	3,5	;RP0=0, select bank0
   917  0025  1303               	bcf	3,6	;RP1=0, select bank0
   918  0026  01AF               	clrf	_val_ADC
   919  0027  01B0               	clrf	_val_ADC+1
   920  0028                     l1794:
   921                           
   922                           ;Maestro.c: 79:         set_cursor(1,0);
   923  0028  01F4               	clrf	set_cursor@posicion
   924  0029  3001               	movlw	1
   925  002A  120A  118A  228C  120A  118A  	fcall	_set_cursor
   926  002F                     l1796:
   927                           
   928                           ;Maestro.c: 80:         Escribir_stringLCD("S1:    S2:   S3:");
   929  002F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   930  0030  120A  118A  23DD  120A  118A  	fcall	_Escribir_stringLCD
   931  0035                     l1798:
   932                           
   933                           ;Maestro.c: 86:         PORTCbits.RC2 = 0;
   934  0035  1283               	bcf	3,5	;RP0=0, select bank0
   935  0036  1303               	bcf	3,6	;RP1=0, select bank0
   936  0037  1107               	bcf	7,2	;volatile
   937  0038                     l1800:
   938                           
   939                           ;Maestro.c: 87:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   940  0038  3002               	movlw	2
   941  0039  1283               	bcf	3,5	;RP0=0, select bank0
   942  003A  1303               	bcf	3,6	;RP1=0, select bank0
   943  003B  00AB               	movwf	??_main
   944  003C                     u977:
   945  003C  0BAB               	decfsz	??_main,f
   946  003D  283C               	goto	u977
   947  003E  0000               	nop
   948  003F                     l1802:
   949                           
   950                           ;Maestro.c: 89:         WriteMSSP(1);
   951  003F  3001               	movlw	1
   952  0040  120A  118A  2448  120A  118A  	fcall	_WriteMSSP
   953  0045                     l1804:
   954                           
   955                           ;Maestro.c: 92:         val_ADC = ReadMSSP();
   956  0045  120A  118A  2437  120A  118A  	fcall	_ReadMSSP
   957  004A  1283               	bcf	3,5	;RP0=0, select bank0
   958  004B  1303               	bcf	3,6	;RP1=0, select bank0
   959  004C  00AB               	movwf	??_main
   960  004D  01AC               	clrf	??_main+1
   961  004E  082B               	movf	??_main,w
   962  004F  00AF               	movwf	_val_ADC
   963  0050  082C               	movf	??_main+1,w
   964  0051  00B0               	movwf	_val_ADC+1
   965  0052                     l1806:
   966                           
   967                           ;Maestro.c: 94:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   968  0052  3002               	movlw	2
   969  0053  1283               	bcf	3,5	;RP0=0, select bank0
   970  0054  1303               	bcf	3,6	;RP1=0, select bank0
   971  0055  00AB               	movwf	??_main
   972  0056                     u987:
   973  0056  0BAB               	decfsz	??_main,f
   974  0057  2856               	goto	u987
   975  0058  0000               	nop
   976  0059                     l1808:
   977                           
   978                           ;Maestro.c: 95:         PORTCbits.RC2 = 1;
   979  0059  1283               	bcf	3,5	;RP0=0, select bank0
   980  005A  1303               	bcf	3,6	;RP1=0, select bank0
   981  005B  1507               	bsf	7,2	;volatile
   982  005C                     l1810:
   983                           
   984                           ;Maestro.c: 97:         divisor_dec(val_ADC, ADC_dig);
   985  005C  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
   986  005D  00AB               	movwf	??_main
   987  005E  082B               	movf	??_main,w
   988  005F  00F9               	movwf	divisor_dec@dig1
   989  0060  082F               	movf	_val_ADC,w
   990  0061  120A  118A  223C  120A  118A  	fcall	_divisor_dec
   991  0066                     l1812:
   992                           
   993                           ;Maestro.c: 99:         uni_ADC = tabla_numASCII(ADC_dig[2]);
   994  0066  087D               	movf	_ADC_dig+2,w
   995  0067  120A  118A  2312  120A  118A  	fcall	_tabla_numASCII
   996  006C  1283               	bcf	3,5	;RP0=0, select bank0
   997  006D  1303               	bcf	3,6	;RP1=0, select bank0
   998  006E  00AB               	movwf	??_main
   999  006F  082B               	movf	??_main,w
  1000  0070  00FA               	movwf	_uni_ADC
  1001  0071                     l1814:
  1002                           
  1003                           ;Maestro.c: 100:         dec_ADC = tabla_numASCII(ADC_dig[1]);
  1004  0071  087C               	movf	_ADC_dig+1,w
  1005  0072  120A  118A  2312  120A  118A  	fcall	_tabla_numASCII
  1006  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0079  00AB               	movwf	??_main
  1009  007A  082B               	movf	??_main,w
  1010  007B  00B2               	movwf	_dec_ADC
  1011  007C                     l1816:
  1012                           
  1013                           ;Maestro.c: 101:         cen_ADC = tabla_numASCII(ADC_dig[0]);
  1014  007C  087B               	movf	_ADC_dig,w
  1015  007D  120A  118A  2312  120A  118A  	fcall	_tabla_numASCII
  1016  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0084  00AB               	movwf	??_main
  1019  0085  082B               	movf	??_main,w
  1020  0086  00B1               	movwf	_cen_ADC
  1021  0087                     l1818:
  1022                           
  1023                           ;Maestro.c: 103:         set_cursor(2,0);
  1024  0087  01F4               	clrf	set_cursor@posicion
  1025  0088  3002               	movlw	2
  1026  0089  120A  118A  228C  120A  118A  	fcall	_set_cursor
  1027  008E                     l1820:
  1028                           
  1029                           ;Maestro.c: 104:         Escribir_caracterLCD(uni_ADC);
  1030  008E  087A               	movf	_uni_ADC,w
  1031  008F  120A  118A  242B  120A  118A  	fcall	_Escribir_caracterLCD
  1032  0094                     l1822:
  1033                           
  1034                           ;Maestro.c: 105:         Escribir_caracterLCD(dec_ADC);
  1035  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0096  0832               	movf	_dec_ADC,w
  1038  0097  120A  118A  242B  120A  118A  	fcall	_Escribir_caracterLCD
  1039  009C                     l1824:
  1040                           
  1041                           ;Maestro.c: 106:         Escribir_caracterLCD(cen_ADC);
  1042  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1043  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1044  009E  0831               	movf	_cen_ADC,w
  1045  009F  120A  118A  242B  120A  118A  	fcall	_Escribir_caracterLCD
  1046  00A4  2828               	goto	l1794
  1047  00A5  120A  118A  280C   	ljmp	start
  1048  00A8                     __end_of_main:
  1049                           
  1050                           	psect	text1
  1051  0312                     __ptext1:	
  1052 ;; *************** function _tabla_numASCII *****************
  1053 ;; Defined at:
  1054 ;;		line 167 in file "Maestro.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  a               1    wreg     unsigned char 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  a               1    4[COMMON] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      unsigned char 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       0       0       0       0
  1069 ;;      Locals:         1       0       0       0       0
  1070 ;;      Temps:          2       0       0       0       0
  1071 ;;      Totals:         3       0       0       0       0
  1072 ;;Total ram usage:        3 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _tabla_numASCII
  1084  0312                     _tabla_numASCII:
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1088                           ;tabla_numASCII@a stored from wreg
  1089  0312  00F4               	movwf	tabla_numASCII@a
  1090  0313                     l1558:
  1091                           
  1092                           ;Maestro.c: 168:     switch(a){
  1093  0313  2B28               	goto	l1622
  1094  0314                     l1560:
  1095                           
  1096                           ;Maestro.c: 170:             return 48;
  1097  0314  3030               	movlw	48
  1098  0315  2B50               	goto	l93
  1099  0316                     l1566:
  1100                           
  1101                           ;Maestro.c: 173:             return 49;
  1102  0316  3031               	movlw	49
  1103  0317  2B50               	goto	l93
  1104  0318                     l1572:
  1105                           
  1106                           ;Maestro.c: 176:             return 50;
  1107  0318  3032               	movlw	50
  1108  0319  2B50               	goto	l93
  1109  031A                     l1578:
  1110                           
  1111                           ;Maestro.c: 179:             return 51;
  1112  031A  3033               	movlw	51
  1113  031B  2B50               	goto	l93
  1114  031C                     l1584:
  1115                           
  1116                           ;Maestro.c: 182:             return 52;
  1117  031C  3034               	movlw	52
  1118  031D  2B50               	goto	l93
  1119  031E                     l1590:
  1120                           
  1121                           ;Maestro.c: 185:             return 53;
  1122  031E  3035               	movlw	53
  1123  031F  2B50               	goto	l93
  1124  0320                     l1596:
  1125                           
  1126                           ;Maestro.c: 188:             return 54;
  1127  0320  3036               	movlw	54
  1128  0321  2B50               	goto	l93
  1129  0322                     l1602:
  1130                           
  1131                           ;Maestro.c: 191:             return 55;
  1132  0322  3037               	movlw	55
  1133  0323  2B50               	goto	l93
  1134  0324                     l1608:
  1135                           
  1136                           ;Maestro.c: 194:             return 56;
  1137  0324  3038               	movlw	56
  1138  0325  2B50               	goto	l93
  1139  0326                     l1614:
  1140                           
  1141                           ;Maestro.c: 197:             return 57;
  1142  0326  3039               	movlw	57
  1143  0327  2B50               	goto	l93
  1144  0328                     l1622:
  1145  0328  0874               	movf	tabla_numASCII@a,w
  1146  0329  00F2               	movwf	??_tabla_numASCII
  1147  032A  01F3               	clrf	??_tabla_numASCII+1
  1148                           
  1149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1150                           ; Switch size 1, requested type "simple"
  1151                           ; Number of cases is 1, Range of values is 0 to 0
  1152                           ; switch strategies available:
  1153                           ; Name         Instructions Cycles
  1154                           ; simple_byte            4     3 (average)
  1155                           ; direct_byte           11     8 (fixed)
  1156                           ; jumptable            260     6 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158  032B  0873               	movf	??_tabla_numASCII+1,w
  1159  032C  3A00               	xorlw	0	; case 0
  1160  032D  1903               	skipnz
  1161  032E  2B30               	goto	l1858
  1162  032F  2B50               	goto	l93
  1163  0330                     l1858:
  1164                           
  1165                           ; Switch size 1, requested type "simple"
  1166                           ; Number of cases is 10, Range of values is 0 to 9
  1167                           ; switch strategies available:
  1168                           ; Name         Instructions Cycles
  1169                           ; simple_byte           31    16 (average)
  1170                           ; direct_byte           38     8 (fixed)
  1171                           ; jumptable            260     6 (fixed)
  1172                           ;	Chosen strategy is simple_byte
  1173  0330  0872               	movf	??_tabla_numASCII,w
  1174  0331  3A00               	xorlw	0	; case 0
  1175  0332  1903               	skipnz
  1176  0333  2B14               	goto	l1560
  1177  0334  3A01               	xorlw	1	; case 1
  1178  0335  1903               	skipnz
  1179  0336  2B16               	goto	l1566
  1180  0337  3A03               	xorlw	3	; case 2
  1181  0338  1903               	skipnz
  1182  0339  2B18               	goto	l1572
  1183  033A  3A01               	xorlw	1	; case 3
  1184  033B  1903               	skipnz
  1185  033C  2B1A               	goto	l1578
  1186  033D  3A07               	xorlw	7	; case 4
  1187  033E  1903               	skipnz
  1188  033F  2B1C               	goto	l1584
  1189  0340  3A01               	xorlw	1	; case 5
  1190  0341  1903               	skipnz
  1191  0342  2B1E               	goto	l1590
  1192  0343  3A03               	xorlw	3	; case 6
  1193  0344  1903               	skipnz
  1194  0345  2B20               	goto	l1596
  1195  0346  3A01               	xorlw	1	; case 7
  1196  0347  1903               	skipnz
  1197  0348  2B22               	goto	l1602
  1198  0349  3A0F               	xorlw	15	; case 8
  1199  034A  1903               	skipnz
  1200  034B  2B24               	goto	l1608
  1201  034C  3A01               	xorlw	1	; case 9
  1202  034D  1903               	skipnz
  1203  034E  2B26               	goto	l1614
  1204  034F  2B50               	goto	l93
  1205  0350                     l93:
  1206  0350  0008               	return
  1207  0351                     __end_of_tabla_numASCII:
  1208                           
  1209                           	psect	text2
  1210  00A8                     __ptext2:	
  1211 ;; *************** function _setup *****************
  1212 ;; Defined at:
  1213 ;;		line 121 in file "Maestro.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;		None
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;		None
  1218 ;; Return value:  Size  Location     Type
  1219 ;;                  1    wreg      void 
  1220 ;; Registers used:
  1221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1222 ;; Tracked objects:
  1223 ;;		On entry : 0/0
  1224 ;;		On exit  : 0/0
  1225 ;;		Unchanged: 0/0
  1226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1227 ;;      Params:         0       0       0       0       0
  1228 ;;      Locals:         0       0       0       0       0
  1229 ;;      Temps:          0       3       0       0       0
  1230 ;;      Totals:         0       3       0       0       0
  1231 ;;Total ram usage:        3 bytes
  1232 ;; Hardware stack levels used: 1
  1233 ;; Hardware stack levels required when called: 4
  1234 ;; This function calls:
  1235 ;;		_Escribir_stringLCD
  1236 ;;		_Iniciar_LCD
  1237 ;;		_InitMSSP
  1238 ;;		_Limpiar_pantallaLCD
  1239 ;;		_initOsc
  1240 ;;		_set_cursor
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _setup
  1248  00A8                     _setup:
  1249  00A8                     l1744:	
  1250                           ;incstack = 0
  1251                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1252                           
  1253                           
  1254                           ;Maestro.c: 124:     ANSEL = 0;
  1255  00A8  1683               	bsf	3,5	;RP0=1, select bank3
  1256  00A9  1703               	bsf	3,6	;RP1=1, select bank3
  1257  00AA  0188               	clrf	8	;volatile
  1258                           
  1259                           ;Maestro.c: 125:     ANSELH = 0;
  1260  00AB  0189               	clrf	9	;volatile
  1261                           
  1262                           ;Maestro.c: 127:     TRISA = 0;
  1263  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1264  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1265  00AE  0185               	clrf	5	;volatile
  1266                           
  1267                           ;Maestro.c: 128:     TRISB = 0;
  1268  00AF  0186               	clrf	6	;volatile
  1269                           
  1270                           ;Maestro.c: 129:     TRISD = 0;
  1271  00B0  0188               	clrf	8	;volatile
  1272                           
  1273                           ;Maestro.c: 130:     TRISE = 0;
  1274  00B1  0189               	clrf	9	;volatile
  1275                           
  1276                           ;Maestro.c: 132:     PORTA = 0;
  1277  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1278  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1279  00B4  0185               	clrf	5	;volatile
  1280                           
  1281                           ;Maestro.c: 133:     PORTD = 0;
  1282  00B5  0188               	clrf	8	;volatile
  1283                           
  1284                           ;Maestro.c: 134:     PORTE = 0;
  1285  00B6  0189               	clrf	9	;volatile
  1286                           
  1287                           ;Maestro.c: 135:     PORTB = 0;
  1288  00B7  0186               	clrf	6	;volatile
  1289                           
  1290                           ;Maestro.c: 136:     PORTC = 0;
  1291  00B8  0187               	clrf	7	;volatile
  1292  00B9                     l1746:
  1293                           
  1294                           ;Maestro.c: 139:     TRISC2 = 0;
  1295  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1296  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1297  00BB  1107               	bcf	7,2	;volatile
  1298  00BC                     l1748:
  1299                           
  1300                           ;Maestro.c: 140:     PORTCbits.RC2 = 1;
  1301  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1302  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1303  00BE  1507               	bsf	7,2	;volatile
  1304  00BF                     l1750:
  1305                           
  1306                           ;Maestro.c: 142:     TRISC1 = 0;
  1307  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1308  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1309  00C1  1087               	bcf	7,1	;volatile
  1310  00C2                     l1752:
  1311                           
  1312                           ;Maestro.c: 143:     PORTCbits.RC1 = 1;
  1313  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1314  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1315  00C4  1487               	bsf	7,1	;volatile
  1316  00C5                     l1754:
  1317                           
  1318                           ;Maestro.c: 145:     TRISC0 = 0;
  1319  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1320  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1321  00C7  1007               	bcf	7,0	;volatile
  1322  00C8                     l1756:
  1323                           
  1324                           ;Maestro.c: 146:     PORTCbits.RC0 = 1;
  1325  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1326  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1327  00CA  1407               	bsf	7,0	;volatile
  1328  00CB                     l1758:
  1329                           
  1330                           ;Maestro.c: 149:     initOsc(4);
  1331  00CB  3004               	movlw	4
  1332  00CC  120A  118A  2384  120A  118A  	fcall	_initOsc
  1333  00D1                     l1760:
  1334                           
  1335                           ;Maestro.c: 152:     InitMSSP(SPI_MASTER_FOSC4);
  1336  00D1  3000               	movlw	0
  1337  00D2  120A  118A  2351  120A  118A  	fcall	_InitMSSP
  1338  00D7                     l1762:
  1339                           
  1340                           ;Maestro.c: 155:     Iniciar_LCD();
  1341  00D7  120A  118A  217E  120A  118A  	fcall	_Iniciar_LCD
  1342  00DC                     l1764:
  1343                           
  1344                           ;Maestro.c: 156:     Limpiar_pantallaLCD();
  1345  00DC  120A  118A  2403  120A  118A  	fcall	_Limpiar_pantallaLCD
  1346  00E1                     l1766:
  1347                           
  1348                           ;Maestro.c: 157:     set_cursor(1,0);
  1349  00E1  01F4               	clrf	set_cursor@posicion
  1350  00E2  3001               	movlw	1
  1351  00E3  120A  118A  228C  120A  118A  	fcall	_set_cursor
  1352  00E8                     l1768:
  1353                           
  1354                           ;Maestro.c: 158:     Escribir_stringLCD("Hola");
  1355  00E8  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1356  00E9  120A  118A  23DD  120A  118A  	fcall	_Escribir_stringLCD
  1357  00EE                     l1770:
  1358                           
  1359                           ;Maestro.c: 159:     set_cursor(2,2);
  1360  00EE  3002               	movlw	2
  1361  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1362  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1363  00F1  00A0               	movwf	??_setup
  1364  00F2  0820               	movf	??_setup,w
  1365  00F3  00F4               	movwf	set_cursor@posicion
  1366  00F4  3002               	movlw	2
  1367  00F5  120A  118A  228C  120A  118A  	fcall	_set_cursor
  1368  00FA                     l1772:
  1369                           
  1370                           ;Maestro.c: 160:     Escribir_stringLCD("Jose Santizo");
  1371  00FA  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1372  00FB  120A  118A  23DD  120A  118A  	fcall	_Escribir_stringLCD
  1373  0100                     l1774:
  1374                           
  1375                           ;Maestro.c: 161:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1376  0100  301A               	movlw	26
  1377  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0103  00A2               	movwf	??_setup+2
  1380  0104  305E               	movlw	94
  1381  0105  00A1               	movwf	??_setup+1
  1382  0106  306D               	movlw	109
  1383  0107  00A0               	movwf	??_setup
  1384  0108                     u997:
  1385  0108  0BA0               	decfsz	??_setup,f
  1386  0109  2908               	goto	u997
  1387  010A  0BA1               	decfsz	??_setup+1,f
  1388  010B  2908               	goto	u997
  1389  010C  0BA2               	decfsz	??_setup+2,f
  1390  010D  2908               	goto	u997
  1391  010E  290F               	nop2
  1392  010F                     l1776:
  1393                           
  1394                           ;Maestro.c: 162:     Limpiar_pantallaLCD();
  1395  010F  120A  118A  2403  120A  118A  	fcall	_Limpiar_pantallaLCD
  1396  0114                     l88:
  1397  0114  0008               	return
  1398  0115                     __end_of_setup:
  1399                           
  1400                           	psect	text3
  1401  028C                     __ptext3:	
  1402 ;; *************** function _set_cursor *****************
  1403 ;; Defined at:
  1404 ;;		line 77 in file "LCD.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  linea           1    wreg     unsigned char 
  1407 ;;  posicion        1    4[COMMON] unsigned char 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  linea           1    7[COMMON] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         1       0       0       0       0
  1420 ;;      Locals:         1       0       0       0       0
  1421 ;;      Temps:          2       0       0       0       0
  1422 ;;      Totals:         4       0       0       0       0
  1423 ;;Total ram usage:        4 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 3
  1426 ;; This function calls:
  1427 ;;		_Escribir_comandoLCD
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;;		_setup
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _set_cursor
  1436  028C                     _set_cursor:
  1437                           
  1438                           ;incstack = 0
  1439                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1440                           ;set_cursor@linea stored from wreg
  1441  028C  00F7               	movwf	set_cursor@linea
  1442  028D                     l1308:
  1443                           
  1444                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1445  028D  1283               	bcf	3,5	;RP0=0, select bank0
  1446  028E  1303               	bcf	3,6	;RP1=0, select bank0
  1447  028F  1188               	bcf	8,3	;volatile
  1448  0290  1208               	bcf	8,4	;volatile
  1449  0291                     l1310:
  1450                           
  1451                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1452  0291  0377               	decf	set_cursor@linea,w
  1453  0292  1D03               	btfss	3,2
  1454  0293  2A95               	goto	u511
  1455  0294  2A96               	goto	u510
  1456  0295                     u511:
  1457  0295  2A9D               	goto	l1314
  1458  0296                     u510:
  1459  0296                     l1312:
  1460  0296  3080               	movlw	128
  1461  0297  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1462  029C  2AA9               	goto	l1318
  1463  029D                     l1314:
  1464  029D  3002               	movlw	2
  1465  029E  0677               	xorwf	set_cursor@linea,w
  1466  029F  1D03               	btfss	3,2
  1467  02A0  2AA2               	goto	u521
  1468  02A1  2AA3               	goto	u520
  1469  02A2                     u521:
  1470  02A2  2AA9               	goto	l1318
  1471  02A3                     u520:
  1472  02A3                     l1316:
  1473  02A3  30C0               	movlw	192
  1474  02A4  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1475  02A9                     l1318:
  1476                           
  1477                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1478  02A9  3068               	movlw	104
  1479  02AA  00F6               	movwf	??_set_cursor+1
  1480  02AB  30E4               	movlw	228
  1481  02AC  00F5               	movwf	??_set_cursor
  1482  02AD                     u1007:
  1483  02AD  0BF5               	decfsz	??_set_cursor,f
  1484  02AE  2AAD               	goto	u1007
  1485  02AF  0BF6               	decfsz	??_set_cursor+1,f
  1486  02B0  2AAD               	goto	u1007
  1487  02B1  0000               	nop
  1488  02B2                     l1320:
  1489                           
  1490                           ;LCD.c: 86:     if (posicion != 0){
  1491  02B2  0874               	movf	set_cursor@posicion,w
  1492  02B3  1903               	btfsc	3,2
  1493  02B4  2AB6               	goto	u531
  1494  02B5  2AB7               	goto	u530
  1495  02B6                     u531:
  1496  02B6  2ACE               	goto	l189
  1497  02B7                     u530:
  1498  02B7  2AC0               	goto	l1328
  1499  02B8                     l1324:
  1500                           
  1501                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1502  02B8  3014               	movlw	20
  1503  02B9  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1504  02BE                     l1326:
  1505                           
  1506                           ;LCD.c: 89:             posicion--;
  1507  02BE  3001               	movlw	1
  1508  02BF  02F4               	subwf	set_cursor@posicion,f
  1509  02C0                     l1328:
  1510                           
  1511                           ;LCD.c: 87:         while(posicion > 0){
  1512  02C0  0874               	movf	set_cursor@posicion,w
  1513  02C1  1D03               	btfss	3,2
  1514  02C2  2AC4               	goto	u541
  1515  02C3  2AC5               	goto	u540
  1516  02C4                     u541:
  1517  02C4  2AB8               	goto	l1324
  1518  02C5                     u540:
  1519  02C5                     l1330:
  1520                           
  1521                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1522  02C5  3068               	movlw	104
  1523  02C6  00F6               	movwf	??_set_cursor+1
  1524  02C7  30E4               	movlw	228
  1525  02C8  00F5               	movwf	??_set_cursor
  1526  02C9                     u1017:
  1527  02C9  0BF5               	decfsz	??_set_cursor,f
  1528  02CA  2AC9               	goto	u1017
  1529  02CB  0BF6               	decfsz	??_set_cursor+1,f
  1530  02CC  2AC9               	goto	u1017
  1531  02CD  0000               	nop
  1532  02CE                     l189:
  1533  02CE  0008               	return
  1534  02CF                     __end_of_set_cursor:
  1535                           
  1536                           	psect	text4
  1537  0384                     __ptext4:	
  1538 ;; *************** function _initOsc *****************
  1539 ;; Defined at:
  1540 ;;		line 12 in file "Oscilador.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  Valor           1    wreg     unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  Valor           1    2[COMMON] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         1       0       0       0       0
  1558 ;;Total ram usage:        1 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_setup
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _initOsc
  1570  0384                     _initOsc:
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1574                           ;initOsc@Valor stored from wreg
  1575  0384  00F2               	movwf	initOsc@Valor
  1576  0385                     l1342:
  1577                           
  1578                           ;Oscilador.c: 14:     if(Valor == 8){
  1579  0385  3008               	movlw	8
  1580  0386  0672               	xorwf	initOsc@Valor,w
  1581  0387  1D03               	btfss	3,2
  1582  0388  2B8A               	goto	u561
  1583  0389  2B8B               	goto	u560
  1584  038A                     u561:
  1585  038A  2B90               	goto	l1346
  1586  038B                     u560:
  1587  038B                     l1344:
  1588                           
  1589                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1590  038B  1683               	bsf	3,5	;RP0=1, select bank1
  1591  038C  1303               	bcf	3,6	;RP1=0, select bank1
  1592  038D  160F               	bsf	15,4	;volatile
  1593                           
  1594                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1595  038E  168F               	bsf	15,5	;volatile
  1596                           
  1597                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1598  038F  170F               	bsf	15,6	;volatile
  1599  0390                     l1346:
  1600                           
  1601                           ;Oscilador.c: 19:     if(Valor == 4){
  1602  0390  3004               	movlw	4
  1603  0391  0672               	xorwf	initOsc@Valor,w
  1604  0392  1D03               	btfss	3,2
  1605  0393  2B95               	goto	u571
  1606  0394  2B96               	goto	u570
  1607  0395                     u571:
  1608  0395  2B9B               	goto	l1350
  1609  0396                     u570:
  1610  0396                     l1348:
  1611                           
  1612                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1613  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1614  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1615  0398  120F               	bcf	15,4	;volatile
  1616                           
  1617                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1618  0399  168F               	bsf	15,5	;volatile
  1619                           
  1620                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1621  039A  170F               	bsf	15,6	;volatile
  1622  039B                     l1350:
  1623                           
  1624                           ;Oscilador.c: 24:     if(Valor == 2){
  1625  039B  3002               	movlw	2
  1626  039C  0672               	xorwf	initOsc@Valor,w
  1627  039D  1D03               	btfss	3,2
  1628  039E  2BA0               	goto	u581
  1629  039F  2BA1               	goto	u580
  1630  03A0                     u581:
  1631  03A0  2BA6               	goto	l1354
  1632  03A1                     u580:
  1633  03A1                     l1352:
  1634                           
  1635                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1636  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  1637  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  1638  03A3  160F               	bsf	15,4	;volatile
  1639                           
  1640                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1641  03A4  128F               	bcf	15,5	;volatile
  1642                           
  1643                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1644  03A5  170F               	bsf	15,6	;volatile
  1645  03A6                     l1354:
  1646                           
  1647                           ;Oscilador.c: 29:     if(Valor == 1){
  1648  03A6  0372               	decf	initOsc@Valor,w
  1649  03A7  1D03               	btfss	3,2
  1650  03A8  2BAA               	goto	u591
  1651  03A9  2BAB               	goto	u590
  1652  03AA                     u591:
  1653  03AA  2BB0               	goto	l197
  1654  03AB                     u590:
  1655  03AB                     l1356:
  1656                           
  1657                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1658  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  1659  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  1660  03AD  120F               	bcf	15,4	;volatile
  1661                           
  1662                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1663  03AE  128F               	bcf	15,5	;volatile
  1664                           
  1665                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1666  03AF  170F               	bsf	15,6	;volatile
  1667  03B0                     l197:	
  1668                           ;Oscilador.c: 33:     }
  1669                           
  1670                           
  1671                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1672  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  1673  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  1674  03B2  140F               	bsf	15,0	;volatile
  1675  03B3                     l198:
  1676  03B3  0008               	return
  1677  03B4                     __end_of_initOsc:
  1678                           
  1679                           	psect	text5
  1680  0403                     __ptext5:	
  1681 ;; *************** function _Limpiar_pantallaLCD *****************
  1682 ;; Defined at:
  1683 ;;		line 69 in file "LCD.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0
  1699 ;;      Temps:          2       0       0       0       0
  1700 ;;      Totals:         2       0       0       0       0
  1701 ;;Total ram usage:        2 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 3
  1704 ;; This function calls:
  1705 ;;		_Escribir_comandoLCD
  1706 ;; This function is called by:
  1707 ;;		_setup
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _Limpiar_pantallaLCD
  1713  0403                     _Limpiar_pantallaLCD:
  1714  0403                     l1414:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  1717                           
  1718                           
  1719                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1720  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0405  1188               	bcf	8,3	;volatile
  1723  0406  1208               	bcf	8,4	;volatile
  1724  0407                     l1416:
  1725                           
  1726                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  1727  0407  3001               	movlw	1
  1728  0408  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1729  040D                     l1418:
  1730                           
  1731                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1732  040D  301A               	movlw	26
  1733  040E  00F5               	movwf	??_Limpiar_pantallaLCD+1
  1734  040F  30F8               	movlw	248
  1735  0410  00F4               	movwf	??_Limpiar_pantallaLCD
  1736  0411                     u1027:
  1737  0411  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  1738  0412  2C11               	goto	u1027
  1739  0413  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  1740  0414  2C11               	goto	u1027
  1741  0415  0000               	nop
  1742  0416                     l1420:
  1743                           
  1744                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  1745  0416  3002               	movlw	2
  1746  0417  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1747  041C                     l179:
  1748  041C  0008               	return
  1749  041D                     __end_of_Limpiar_pantallaLCD:
  1750                           
  1751                           	psect	text6
  1752  0351                     __ptext6:	
  1753 ;; *************** function _InitMSSP *****************
  1754 ;; Defined at:
  1755 ;;		line 10 in file "SPI.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  Modo            1    wreg     enum E1264
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  Modo            1    2[COMMON] enum E1264
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         0       0       0       0       0
  1770 ;;      Locals:         1       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0
  1772 ;;      Totals:         1       0       0       0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_setup
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           
  1784                           ;psect for function _InitMSSP
  1785  0351                     _InitMSSP:
  1786                           
  1787                           ;incstack = 0
  1788                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1789                           ;InitMSSP@Modo stored from wreg
  1790  0351  00F2               	movwf	InitMSSP@Modo
  1791  0352                     l1358:
  1792                           
  1793                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1794  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1795  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1796  0354  0194               	clrf	20	;volatile
  1797                           
  1798                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1799  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0357  0194               	clrf	20	;volatile
  1802  0358                     l1360:
  1803                           
  1804                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1805  0358  1294               	bcf	20,5	;volatile
  1806  0359                     l1362:
  1807                           
  1808                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1809  0359  1694               	bsf	20,5	;volatile
  1810  035A                     l1364:
  1811                           
  1812                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1813  035A  1683               	bsf	3,5	;RP0=1, select bank1
  1814  035B  1303               	bcf	3,6	;RP1=0, select bank1
  1815  035C  1287               	bcf	7,5	;volatile
  1816  035D                     l1366:
  1817                           
  1818                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1819  035D  1607               	bsf	7,4	;volatile
  1820  035E                     l1368:
  1821                           
  1822                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1823  035E  3006               	movlw	6
  1824  035F  0272               	subwf	InitMSSP@Modo,w
  1825  0360  1803               	skipnc
  1826  0361  2B63               	goto	u601
  1827  0362  2B64               	goto	u600
  1828  0363                     u601:
  1829  0363  2B6D               	goto	l1374
  1830  0364                     u600:
  1831  0364                     l1370:
  1832                           
  1833                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1834  0364  3004               	movlw	4
  1835  0365  0272               	subwf	InitMSSP@Modo,w
  1836  0366  1803               	skipnc
  1837  0367  2B69               	goto	u611
  1838  0368  2B6A               	goto	u610
  1839  0369                     u611:
  1840  0369  2B6C               	goto	l124
  1841  036A                     u610:
  1842  036A                     l1372:
  1843                           
  1844                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1845  036A  1187               	bcf	7,3	;volatile
  1846                           
  1847                           ;SPI.c: 29:         }
  1848  036B  2B6D               	goto	l1374
  1849  036C                     l124:	
  1850                           ;SPI.c: 30:         else {
  1851                           
  1852                           
  1853                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1854  036C  1587               	bsf	7,3	;volatile
  1855  036D                     l1374:
  1856                           
  1857                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1858  036D  3004               	movlw	4
  1859  036E  0672               	xorwf	InitMSSP@Modo,w
  1860  036F  1D03               	btfss	3,2
  1861  0370  2B72               	goto	u621
  1862  0371  2B73               	goto	u620
  1863  0372                     u621:
  1864  0372  2B74               	goto	l1378
  1865  0373                     u620:
  1866  0373                     l1376:
  1867  0373  1685               	bsf	5,5	;volatile
  1868  0374                     l1378:
  1869                           
  1870                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1871  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0376  0814               	movf	20,w	;volatile
  1874  0377  0472               	iorwf	InitMSSP@Modo,w	;volatile
  1875  0378  0094               	movwf	20	;volatile
  1876  0379                     l1380:
  1877                           
  1878                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  1879  0379  1683               	bsf	3,5	;RP0=1, select bank1
  1880  037A  1303               	bcf	3,6	;RP1=0, select bank1
  1881  037B  118C               	bcf	12,3	;volatile
  1882  037C                     l1382:
  1883                           
  1884                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1885  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1886  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1887  037E  1214               	bcf	20,4	;volatile
  1888  037F                     l1384:
  1889                           
  1890                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1891  037F  1683               	bsf	3,5	;RP0=1, select bank1
  1892  0380  1303               	bcf	3,6	;RP1=0, select bank1
  1893  0381  1314               	bcf	20,6	;volatile
  1894  0382                     l1386:
  1895                           
  1896                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1897  0382  1394               	bcf	20,7	;volatile
  1898  0383                     l127:
  1899  0383  0008               	return
  1900  0384                     __end_of_InitMSSP:
  1901                           
  1902                           	psect	text7
  1903  017E                     __ptext7:	
  1904 ;; *************** function _Iniciar_LCD *****************
  1905 ;; Defined at:
  1906 ;;		line 30 in file "LCD.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1920 ;;      Params:         0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0
  1922 ;;      Temps:          2       0       0       0       0
  1923 ;;      Totals:         2       0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; Hardware stack levels required when called: 3
  1927 ;; This function calls:
  1928 ;;		_Escribir_comandoLCD
  1929 ;; This function is called by:
  1930 ;;		_setup
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _Iniciar_LCD
  1936  017E                     _Iniciar_LCD:
  1937  017E                     l1388:	
  1938                           ;incstack = 0
  1939                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  1940                           
  1941                           
  1942                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  1943  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1944  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0180  1188               	bcf	8,3	;volatile
  1946                           
  1947                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  1948  0181  1208               	bcf	8,4	;volatile
  1949  0182                     l1390:
  1950                           
  1951                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  1952  0182  3025               	movlw	37
  1953  0183  00F5               	movwf	??_Iniciar_LCD+1
  1954  0184  305B               	movlw	91
  1955  0185  00F4               	movwf	??_Iniciar_LCD
  1956  0186                     u1037:
  1957  0186  0BF4               	decfsz	??_Iniciar_LCD,f
  1958  0187  2986               	goto	u1037
  1959  0188  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1960  0189  2986               	goto	u1037
  1961  018A  298B               	nop2
  1962  018B                     l1392:
  1963                           
  1964                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  1965  018B  3030               	movlw	48
  1966  018C  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1967  0191                     l1394:
  1968                           
  1969                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1970  0191  300B               	movlw	11
  1971  0192  00F5               	movwf	??_Iniciar_LCD+1
  1972  0193  3062               	movlw	98
  1973  0194  00F4               	movwf	??_Iniciar_LCD
  1974  0195                     u1047:
  1975  0195  0BF4               	decfsz	??_Iniciar_LCD,f
  1976  0196  2995               	goto	u1047
  1977  0197  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1978  0198  2995               	goto	u1047
  1979  0199  0000               	nop
  1980                           
  1981                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  1982  019A  3030               	movlw	48
  1983  019B  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1984  01A0                     l1396:
  1985                           
  1986                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1987  01A0  3042               	movlw	66
  1988  01A1  00F4               	movwf	??_Iniciar_LCD
  1989  01A2                     u1057:
  1990  01A2  0BF4               	decfsz	??_Iniciar_LCD,f
  1991  01A3  29A2               	goto	u1057
  1992  01A4  0000               	nop
  1993  01A5                     l1398:
  1994                           
  1995                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  1996  01A5  3030               	movlw	48
  1997  01A6  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  1998                           
  1999                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2000  01AB  3042               	movlw	66
  2001  01AC  00F4               	movwf	??_Iniciar_LCD
  2002  01AD                     u1067:
  2003  01AD  0BF4               	decfsz	??_Iniciar_LCD,f
  2004  01AE  29AD               	goto	u1067
  2005  01AF  0000               	nop
  2006  01B0                     l1400:
  2007                           
  2008                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2009  01B0  3038               	movlw	56
  2010  01B1  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2011  01B6                     l1402:
  2012                           
  2013                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2014  01B6  3042               	movlw	66
  2015  01B7  00F4               	movwf	??_Iniciar_LCD
  2016  01B8                     u1077:
  2017  01B8  0BF4               	decfsz	??_Iniciar_LCD,f
  2018  01B9  29B8               	goto	u1077
  2019  01BA  0000               	nop
  2020                           
  2021                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2022  01BB  3008               	movlw	8
  2023  01BC  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2024  01C1                     l1404:
  2025                           
  2026                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2027  01C1  3042               	movlw	66
  2028  01C2  00F4               	movwf	??_Iniciar_LCD
  2029  01C3                     u1087:
  2030  01C3  0BF4               	decfsz	??_Iniciar_LCD,f
  2031  01C4  29C3               	goto	u1087
  2032  01C5  0000               	nop
  2033  01C6                     l1406:
  2034                           
  2035                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2036  01C6  3001               	movlw	1
  2037  01C7  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2038                           
  2039                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2040  01CC  3042               	movlw	66
  2041  01CD  00F4               	movwf	??_Iniciar_LCD
  2042  01CE                     u1097:
  2043  01CE  0BF4               	decfsz	??_Iniciar_LCD,f
  2044  01CF  29CE               	goto	u1097
  2045  01D0  0000               	nop
  2046  01D1                     l1408:
  2047                           
  2048                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2049  01D1  3006               	movlw	6
  2050  01D2  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2051  01D7                     l1410:
  2052                           
  2053                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2054  01D7  3042               	movlw	66
  2055  01D8  00F4               	movwf	??_Iniciar_LCD
  2056  01D9                     u1107:
  2057  01D9  0BF4               	decfsz	??_Iniciar_LCD,f
  2058  01DA  29D9               	goto	u1107
  2059  01DB  0000               	nop
  2060                           
  2061                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2062  01DC  300C               	movlw	12
  2063  01DD  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2064  01E2                     l167:
  2065  01E2  0008               	return
  2066  01E3                     __end_of_Iniciar_LCD:
  2067                           
  2068                           	psect	text8
  2069  03DD                     __ptext8:	
  2070 ;; *************** function _Escribir_stringLCD *****************
  2071 ;; Defined at:
  2072 ;;		line 55 in file "LCD.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  d               1    wreg     PTR const unsigned char 
  2075 ;;		 -> STR_3(13), STR_2(5), STR_1(17), 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  d               1    6[COMMON] PTR const unsigned char 
  2078 ;;		 -> STR_3(13), STR_2(5), STR_1(17), 
  2079 ;;  i               1    5[COMMON] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         2       0       0       0       0
  2091 ;;      Temps:          1       0       0       0       0
  2092 ;;      Totals:         3       0       0       0       0
  2093 ;;Total ram usage:        3 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 3
  2096 ;; This function calls:
  2097 ;;		_Escribir_comandoLCD
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;;		_setup
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function _Escribir_stringLCD
  2106  03DD                     _Escribir_stringLCD:
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2110                           ;Escribir_stringLCD@d stored from wreg
  2111  03DD  00F6               	movwf	Escribir_stringLCD@d
  2112  03DE                     l1332:
  2113                           
  2114                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  2115  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2116  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2117  03E0  1588               	bsf	8,3	;volatile
  2118  03E1  1208               	bcf	8,4	;volatile
  2119  03E2                     l1334:
  2120                           
  2121                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2122  03E2  01F5               	clrf	Escribir_stringLCD@i
  2123  03E3  2BF5               	goto	l1340
  2124  03E4                     l1336:
  2125                           
  2126                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2127  03E4  0875               	movf	Escribir_stringLCD@i,w
  2128  03E5  0776               	addwf	Escribir_stringLCD@d,w
  2129  03E6  0084               	movwf	4
  2130  03E7  120A  118A  23B4  120A  118A  	fcall	stringdir
  2131  03EC  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2132  03F1                     l1338:
  2133                           
  2134                           ;LCD.c: 60:     }
  2135  03F1  3001               	movlw	1
  2136  03F2  00F4               	movwf	??_Escribir_stringLCD
  2137  03F3  0874               	movf	??_Escribir_stringLCD,w
  2138  03F4  07F5               	addwf	Escribir_stringLCD@i,f
  2139  03F5                     l1340:
  2140  03F5  0875               	movf	Escribir_stringLCD@i,w
  2141  03F6  0776               	addwf	Escribir_stringLCD@d,w
  2142  03F7  0084               	movwf	4
  2143  03F8  120A  118A  23B4  120A  118A  	fcall	stringdir
  2144  03FD  3A00               	xorlw	0
  2145  03FE  1D03               	skipz
  2146  03FF  2C01               	goto	u551
  2147  0400  2C02               	goto	u550
  2148  0401                     u551:
  2149  0401  2BE4               	goto	l1336
  2150  0402                     u550:
  2151  0402                     l173:
  2152  0402  0008               	return
  2153  0403                     __end_of_Escribir_stringLCD:
  2154                           
  2155                           	psect	text9
  2156  023C                     __ptext9:	
  2157 ;; *************** function _divisor_dec *****************
  2158 ;; Defined at:
  2159 ;;		line 76 in file "7SEG-hex.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  b               1    wreg     unsigned char 
  2162 ;;  dig1            1    9[COMMON] PTR unsigned char 
  2163 ;;		 -> ADC_dig(1), 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  b               1    8[BANK0 ] unsigned char 
  2166 ;;  n               2    9[BANK0 ] int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         1       0       0       0       0
  2177 ;;      Locals:         0       3       0       0       0
  2178 ;;      Temps:          0       4       0       0       0
  2179 ;;      Totals:         1       7       0       0       0
  2180 ;;Total ram usage:        8 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 2
  2183 ;; This function calls:
  2184 ;;		___awdiv
  2185 ;;		___awmod
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           
  2192                           ;psect for function _divisor_dec
  2193  023C                     _divisor_dec:
  2194                           
  2195                           ;incstack = 0
  2196                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2197                           ;divisor_dec@b stored from wreg
  2198  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2199  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2200  023E  00A8               	movwf	divisor_dec@b
  2201  023F                     l1778:
  2202  023F  01A9               	clrf	divisor_dec@n
  2203  0240  01AA               	clrf	divisor_dec@n+1
  2204  0241                     l1784:
  2205  0241  300A               	movlw	10
  2206  0242  00F2               	movwf	___awmod@divisor
  2207  0243  3000               	movlw	0
  2208  0244  00F3               	movwf	___awmod@divisor+1
  2209  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0247  0828               	movf	divisor_dec@b,w
  2212  0248  00A4               	movwf	??_divisor_dec
  2213  0249  01A5               	clrf	??_divisor_dec+1
  2214  024A  0824               	movf	??_divisor_dec,w
  2215  024B  00F4               	movwf	___awmod@dividend
  2216  024C  0825               	movf	??_divisor_dec+1,w
  2217  024D  00F5               	movwf	___awmod@dividend+1
  2218  024E  120A  118A  21E3  120A  118A  	fcall	___awmod
  2219  0253  0872               	movf	?___awmod,w
  2220  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2222  0256  00A6               	movwf	??_divisor_dec+2
  2223  0257  0829               	movf	divisor_dec@n,w
  2224  0258  0779               	addwf	divisor_dec@dig1,w
  2225  0259  00A7               	movwf	??_divisor_dec+3
  2226  025A  0827               	movf	??_divisor_dec+3,w
  2227  025B  0084               	movwf	4
  2228  025C  0826               	movf	??_divisor_dec+2,w
  2229  025D  0080               	movwf	0
  2230  025E  300A               	movlw	10
  2231  025F  00F2               	movwf	___awdiv@divisor
  2232  0260  3000               	movlw	0
  2233  0261  00F3               	movwf	___awdiv@divisor+1
  2234  0262  0829               	movf	divisor_dec@n,w
  2235  0263  0779               	addwf	divisor_dec@dig1,w
  2236  0264  00A4               	movwf	??_divisor_dec
  2237  0265  0824               	movf	??_divisor_dec,w
  2238  0266  0084               	movwf	4
  2239  0267  0800               	movf	0,w
  2240  0268  0228               	subwf	divisor_dec@b,w
  2241  0269  00F4               	movwf	___awdiv@dividend
  2242  026A  01F5               	clrf	___awdiv@dividend+1
  2243  026B  1C03               	skipc
  2244  026C  03F5               	decf	___awdiv@dividend+1,f
  2245  026D  120A  118A  2115  120A  118A  	fcall	___awdiv
  2246  0272  0872               	movf	?___awdiv,w
  2247  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0275  00A5               	movwf	??_divisor_dec+1
  2250  0276  0825               	movf	??_divisor_dec+1,w
  2251  0277  00A8               	movwf	divisor_dec@b
  2252  0278                     l1786:
  2253  0278  3001               	movlw	1
  2254  0279  07A9               	addwf	divisor_dec@n,f
  2255  027A  1803               	skipnc
  2256  027B  0AAA               	incf	divisor_dec@n+1,f
  2257  027C  3000               	movlw	0
  2258  027D  07AA               	addwf	divisor_dec@n+1,f
  2259  027E                     l1788:
  2260  027E  082A               	movf	divisor_dec@n+1,w
  2261  027F  3A80               	xorlw	128
  2262  0280  00FF               	movwf	btemp+1
  2263  0281  3080               	movlw	128
  2264  0282  027F               	subwf	btemp+1,w
  2265  0283  1D03               	skipz
  2266  0284  2A87               	goto	u955
  2267  0285  3003               	movlw	3
  2268  0286  0229               	subwf	divisor_dec@n,w
  2269  0287                     u955:
  2270  0287  1C03               	skipc
  2271  0288  2A8A               	goto	u951
  2272  0289  2A8B               	goto	u950
  2273  028A                     u951:
  2274  028A  2A41               	goto	l1784
  2275  028B                     u950:
  2276  028B                     l230:
  2277  028B  0008               	return
  2278  028C                     __end_of_divisor_dec:
  2279                           
  2280                           	psect	text10
  2281  01E3                     __ptext10:	
  2282 ;; *************** function ___awmod *****************
  2283 ;; Defined at:
  2284 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  divisor         2    2[COMMON] int 
  2287 ;;  dividend        2    4[COMMON] int 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  sign            1    8[COMMON] unsigned char 
  2290 ;;  counter         1    7[COMMON] unsigned char 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  2    2[COMMON] int 
  2293 ;; Registers used:
  2294 ;;		wreg, status,2, status,0
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         4       0       0       0       0
  2301 ;;      Locals:         2       0       0       0       0
  2302 ;;      Temps:          1       0       0       0       0
  2303 ;;      Totals:         7       0       0       0       0
  2304 ;;Total ram usage:        7 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_divisor_dec
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           
  2315                           ;psect for function ___awmod
  2316  01E3                     ___awmod:
  2317  01E3                     l1466:	
  2318                           ;incstack = 0
  2319                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2320                           
  2321  01E3  01F8               	clrf	___awmod@sign
  2322  01E4                     l1468:
  2323  01E4  1FF5               	btfss	___awmod@dividend+1,7
  2324  01E5  29E7               	goto	u731
  2325  01E6  29E8               	goto	u730
  2326  01E7                     u731:
  2327  01E7  29EF               	goto	l1474
  2328  01E8                     u730:
  2329  01E8                     l1470:
  2330  01E8  09F4               	comf	___awmod@dividend,f
  2331  01E9  09F5               	comf	___awmod@dividend+1,f
  2332  01EA  0AF4               	incf	___awmod@dividend,f
  2333  01EB  1903               	skipnz
  2334  01EC  0AF5               	incf	___awmod@dividend+1,f
  2335  01ED                     l1472:
  2336  01ED  01F8               	clrf	___awmod@sign
  2337  01EE  0AF8               	incf	___awmod@sign,f
  2338  01EF                     l1474:
  2339  01EF  1FF3               	btfss	___awmod@divisor+1,7
  2340  01F0  29F2               	goto	u741
  2341  01F1  29F3               	goto	u740
  2342  01F2                     u741:
  2343  01F2  29F8               	goto	l1478
  2344  01F3                     u740:
  2345  01F3                     l1476:
  2346  01F3  09F2               	comf	___awmod@divisor,f
  2347  01F4  09F3               	comf	___awmod@divisor+1,f
  2348  01F5  0AF2               	incf	___awmod@divisor,f
  2349  01F6  1903               	skipnz
  2350  01F7  0AF3               	incf	___awmod@divisor+1,f
  2351  01F8                     l1478:
  2352  01F8  0872               	movf	___awmod@divisor,w
  2353  01F9  0473               	iorwf	___awmod@divisor+1,w
  2354  01FA  1903               	btfsc	3,2
  2355  01FB  29FD               	goto	u751
  2356  01FC  29FE               	goto	u750
  2357  01FD                     u751:
  2358  01FD  2A2D               	goto	l1496
  2359  01FE                     u750:
  2360  01FE                     l1480:
  2361  01FE  01F7               	clrf	___awmod@counter
  2362  01FF  0AF7               	incf	___awmod@counter,f
  2363  0200  2A0C               	goto	l1486
  2364  0201                     l1482:
  2365  0201  3001               	movlw	1
  2366  0202                     u765:
  2367  0202  1003               	clrc
  2368  0203  0DF2               	rlf	___awmod@divisor,f
  2369  0204  0DF3               	rlf	___awmod@divisor+1,f
  2370  0205  3EFF               	addlw	-1
  2371  0206  1D03               	skipz
  2372  0207  2A02               	goto	u765
  2373  0208                     l1484:
  2374  0208  3001               	movlw	1
  2375  0209  00F6               	movwf	??___awmod
  2376  020A  0876               	movf	??___awmod,w
  2377  020B  07F7               	addwf	___awmod@counter,f
  2378  020C                     l1486:
  2379  020C  1FF3               	btfss	___awmod@divisor+1,7
  2380  020D  2A0F               	goto	u771
  2381  020E  2A10               	goto	u770
  2382  020F                     u771:
  2383  020F  2A01               	goto	l1482
  2384  0210                     u770:
  2385  0210                     l1488:
  2386  0210  0873               	movf	___awmod@divisor+1,w
  2387  0211  0275               	subwf	___awmod@dividend+1,w
  2388  0212  1D03               	skipz
  2389  0213  2A16               	goto	u785
  2390  0214  0872               	movf	___awmod@divisor,w
  2391  0215  0274               	subwf	___awmod@dividend,w
  2392  0216                     u785:
  2393  0216  1C03               	skipc
  2394  0217  2A19               	goto	u781
  2395  0218  2A1A               	goto	u780
  2396  0219                     u781:
  2397  0219  2A20               	goto	l1492
  2398  021A                     u780:
  2399  021A                     l1490:
  2400  021A  0872               	movf	___awmod@divisor,w
  2401  021B  02F4               	subwf	___awmod@dividend,f
  2402  021C  0873               	movf	___awmod@divisor+1,w
  2403  021D  1C03               	skipc
  2404  021E  03F5               	decf	___awmod@dividend+1,f
  2405  021F  02F5               	subwf	___awmod@dividend+1,f
  2406  0220                     l1492:
  2407  0220  3001               	movlw	1
  2408  0221                     u795:
  2409  0221  1003               	clrc
  2410  0222  0CF3               	rrf	___awmod@divisor+1,f
  2411  0223  0CF2               	rrf	___awmod@divisor,f
  2412  0224  3EFF               	addlw	-1
  2413  0225  1D03               	skipz
  2414  0226  2A21               	goto	u795
  2415  0227                     l1494:
  2416  0227  3001               	movlw	1
  2417  0228  02F7               	subwf	___awmod@counter,f
  2418  0229  1D03               	btfss	3,2
  2419  022A  2A2C               	goto	u801
  2420  022B  2A2D               	goto	u800
  2421  022C                     u801:
  2422  022C  2A10               	goto	l1488
  2423  022D                     u800:
  2424  022D                     l1496:
  2425  022D  0878               	movf	___awmod@sign,w
  2426  022E  1903               	btfsc	3,2
  2427  022F  2A31               	goto	u811
  2428  0230  2A32               	goto	u810
  2429  0231                     u811:
  2430  0231  2A37               	goto	l1500
  2431  0232                     u810:
  2432  0232                     l1498:
  2433  0232  09F4               	comf	___awmod@dividend,f
  2434  0233  09F5               	comf	___awmod@dividend+1,f
  2435  0234  0AF4               	incf	___awmod@dividend,f
  2436  0235  1903               	skipnz
  2437  0236  0AF5               	incf	___awmod@dividend+1,f
  2438  0237                     l1500:
  2439  0237  0875               	movf	___awmod@dividend+1,w
  2440  0238  00F3               	movwf	?___awmod+1
  2441  0239  0874               	movf	___awmod@dividend,w
  2442  023A  00F2               	movwf	?___awmod
  2443  023B                     l482:
  2444  023B  0008               	return
  2445  023C                     __end_of___awmod:
  2446                           
  2447                           	psect	text11
  2448  0115                     __ptext11:	
  2449 ;; *************** function ___awdiv *****************
  2450 ;; Defined at:
  2451 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  divisor         2    2[COMMON] int 
  2454 ;;  dividend        2    4[COMMON] int 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  quotient        2    2[BANK0 ] int 
  2457 ;;  sign            1    1[BANK0 ] unsigned char 
  2458 ;;  counter         1    0[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2    2[COMMON] int 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         4       0       0       0       0
  2469 ;;      Locals:         0       4       0       0       0
  2470 ;;      Temps:          1       0       0       0       0
  2471 ;;      Totals:         5       4       0       0       0
  2472 ;;Total ram usage:        9 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_divisor_dec
  2479 ;;		_divisor_hex
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           
  2484                           ;psect for function ___awdiv
  2485  0115                     ___awdiv:
  2486  0115                     l1700:	
  2487                           ;incstack = 0
  2488                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2489                           
  2490  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0117  01A1               	clrf	___awdiv@sign
  2493  0118                     l1702:
  2494  0118  1FF3               	btfss	___awdiv@divisor+1,7
  2495  0119  291B               	goto	u851
  2496  011A  291C               	goto	u850
  2497  011B                     u851:
  2498  011B  2923               	goto	l1708
  2499  011C                     u850:
  2500  011C                     l1704:
  2501  011C  09F2               	comf	___awdiv@divisor,f
  2502  011D  09F3               	comf	___awdiv@divisor+1,f
  2503  011E  0AF2               	incf	___awdiv@divisor,f
  2504  011F  1903               	skipnz
  2505  0120  0AF3               	incf	___awdiv@divisor+1,f
  2506  0121                     l1706:
  2507  0121  01A1               	clrf	___awdiv@sign
  2508  0122  0AA1               	incf	___awdiv@sign,f
  2509  0123                     l1708:
  2510  0123  1FF5               	btfss	___awdiv@dividend+1,7
  2511  0124  2926               	goto	u861
  2512  0125  2927               	goto	u860
  2513  0126                     u861:
  2514  0126  2930               	goto	l1714
  2515  0127                     u860:
  2516  0127                     l1710:
  2517  0127  09F4               	comf	___awdiv@dividend,f
  2518  0128  09F5               	comf	___awdiv@dividend+1,f
  2519  0129  0AF4               	incf	___awdiv@dividend,f
  2520  012A  1903               	skipnz
  2521  012B  0AF5               	incf	___awdiv@dividend+1,f
  2522  012C                     l1712:
  2523  012C  3001               	movlw	1
  2524  012D  00F6               	movwf	??___awdiv
  2525  012E  0876               	movf	??___awdiv,w
  2526  012F  06A1               	xorwf	___awdiv@sign,f
  2527  0130                     l1714:
  2528  0130  01A2               	clrf	___awdiv@quotient
  2529  0131  01A3               	clrf	___awdiv@quotient+1
  2530  0132                     l1716:
  2531  0132  0872               	movf	___awdiv@divisor,w
  2532  0133  0473               	iorwf	___awdiv@divisor+1,w
  2533  0134  1903               	btfsc	3,2
  2534  0135  2937               	goto	u871
  2535  0136  2938               	goto	u870
  2536  0137                     u871:
  2537  0137  296F               	goto	l1736
  2538  0138                     u870:
  2539  0138                     l1718:
  2540  0138  01A0               	clrf	___awdiv@counter
  2541  0139  0AA0               	incf	___awdiv@counter,f
  2542  013A  2946               	goto	l1724
  2543  013B                     l1720:
  2544  013B  3001               	movlw	1
  2545  013C                     u885:
  2546  013C  1003               	clrc
  2547  013D  0DF2               	rlf	___awdiv@divisor,f
  2548  013E  0DF3               	rlf	___awdiv@divisor+1,f
  2549  013F  3EFF               	addlw	-1
  2550  0140  1D03               	skipz
  2551  0141  293C               	goto	u885
  2552  0142                     l1722:
  2553  0142  3001               	movlw	1
  2554  0143  00F6               	movwf	??___awdiv
  2555  0144  0876               	movf	??___awdiv,w
  2556  0145  07A0               	addwf	___awdiv@counter,f
  2557  0146                     l1724:
  2558  0146  1FF3               	btfss	___awdiv@divisor+1,7
  2559  0147  2949               	goto	u891
  2560  0148  294A               	goto	u890
  2561  0149                     u891:
  2562  0149  293B               	goto	l1720
  2563  014A                     u890:
  2564  014A                     l1726:
  2565  014A  3001               	movlw	1
  2566  014B                     u905:
  2567  014B  1003               	clrc
  2568  014C  0DA2               	rlf	___awdiv@quotient,f
  2569  014D  0DA3               	rlf	___awdiv@quotient+1,f
  2570  014E  3EFF               	addlw	-1
  2571  014F  1D03               	skipz
  2572  0150  294B               	goto	u905
  2573  0151  0873               	movf	___awdiv@divisor+1,w
  2574  0152  0275               	subwf	___awdiv@dividend+1,w
  2575  0153  1D03               	skipz
  2576  0154  2957               	goto	u915
  2577  0155  0872               	movf	___awdiv@divisor,w
  2578  0156  0274               	subwf	___awdiv@dividend,w
  2579  0157                     u915:
  2580  0157  1C03               	skipc
  2581  0158  295A               	goto	u911
  2582  0159  295B               	goto	u910
  2583  015A                     u911:
  2584  015A  2962               	goto	l1732
  2585  015B                     u910:
  2586  015B                     l1728:
  2587  015B  0872               	movf	___awdiv@divisor,w
  2588  015C  02F4               	subwf	___awdiv@dividend,f
  2589  015D  0873               	movf	___awdiv@divisor+1,w
  2590  015E  1C03               	skipc
  2591  015F  03F5               	decf	___awdiv@dividend+1,f
  2592  0160  02F5               	subwf	___awdiv@dividend+1,f
  2593  0161                     l1730:
  2594  0161  1422               	bsf	___awdiv@quotient,0
  2595  0162                     l1732:
  2596  0162  3001               	movlw	1
  2597  0163                     u925:
  2598  0163  1003               	clrc
  2599  0164  0CF3               	rrf	___awdiv@divisor+1,f
  2600  0165  0CF2               	rrf	___awdiv@divisor,f
  2601  0166  3EFF               	addlw	-1
  2602  0167  1D03               	skipz
  2603  0168  2963               	goto	u925
  2604  0169                     l1734:
  2605  0169  3001               	movlw	1
  2606  016A  02A0               	subwf	___awdiv@counter,f
  2607  016B  1D03               	btfss	3,2
  2608  016C  296E               	goto	u931
  2609  016D  296F               	goto	u930
  2610  016E                     u931:
  2611  016E  294A               	goto	l1726
  2612  016F                     u930:
  2613  016F                     l1736:
  2614  016F  0821               	movf	___awdiv@sign,w
  2615  0170  1903               	btfsc	3,2
  2616  0171  2973               	goto	u941
  2617  0172  2974               	goto	u940
  2618  0173                     u941:
  2619  0173  2979               	goto	l1740
  2620  0174                     u940:
  2621  0174                     l1738:
  2622  0174  09A2               	comf	___awdiv@quotient,f
  2623  0175  09A3               	comf	___awdiv@quotient+1,f
  2624  0176  0AA2               	incf	___awdiv@quotient,f
  2625  0177  1903               	skipnz
  2626  0178  0AA3               	incf	___awdiv@quotient+1,f
  2627  0179                     l1740:
  2628  0179  0823               	movf	___awdiv@quotient+1,w
  2629  017A  00F3               	movwf	?___awdiv+1
  2630  017B  0822               	movf	___awdiv@quotient,w
  2631  017C  00F2               	movwf	?___awdiv
  2632  017D                     l469:
  2633  017D  0008               	return
  2634  017E                     __end_of___awdiv:
  2635                           
  2636                           	psect	text12
  2637  0448                     __ptext12:	
  2638 ;; *************** function _WriteMSSP *****************
  2639 ;; Defined at:
  2640 ;;		line 55 in file "SPI.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  Data            1    wreg     unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  Data            1    2[COMMON] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         1       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0
  2657 ;;      Totals:         1       0       0       0       0
  2658 ;;Total ram usage:        1 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           
  2669                           ;psect for function _WriteMSSP
  2670  0448                     _WriteMSSP:
  2671                           
  2672                           ;incstack = 0
  2673                           ; Regs used in _WriteMSSP: [wreg]
  2674                           ;WriteMSSP@Data stored from wreg
  2675  0448  00F2               	movwf	WriteMSSP@Data
  2676  0449                     l1538:
  2677                           
  2678                           ;SPI.c: 59:     SSPBUF = Data;
  2679  0449  0872               	movf	WriteMSSP@Data,w
  2680  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2681  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2682  044C  0093               	movwf	19	;volatile
  2683  044D                     l130:
  2684  044D  0008               	return
  2685  044E                     __end_of_WriteMSSP:
  2686                           
  2687                           	psect	text13
  2688  0437                     __ptext13:	
  2689 ;; *************** function _ReadMSSP *****************
  2690 ;; Defined at:
  2691 ;;		line 63 in file "SPI.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      unsigned char 
  2698 ;; Registers used:
  2699 ;;		wreg
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2705 ;;      Params:         0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _ReadMSSP
  2721  0437                     _ReadMSSP:
  2722  0437                     l1540:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _ReadMSSP: [wreg]
  2725                           
  2726  0437                     l133:	
  2727                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  2728                           
  2729  0437  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0438  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0439  1C14               	btfss	20,0	;volatile
  2732  043A  2C3C               	goto	u821
  2733  043B  2C3D               	goto	u820
  2734  043C                     u821:
  2735  043C  2C37               	goto	l133
  2736  043D                     u820:
  2737  043D                     l1542:
  2738                           
  2739                           ;SPI.c: 65:     return(SSPBUF);
  2740  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2741  043E  1303               	bcf	3,6	;RP1=0, select bank0
  2742  043F  0813               	movf	19,w	;volatile
  2743  0440                     l136:
  2744  0440  0008               	return
  2745  0441                     __end_of_ReadMSSP:
  2746                           
  2747                           	psect	text14
  2748  042B                     __ptext14:	
  2749 ;; *************** function _Escribir_caracterLCD *****************
  2750 ;; Defined at:
  2751 ;;		line 63 in file "LCD.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  a               1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  a               1    4[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         0       0       0       0       0
  2766 ;;      Locals:         1       0       0       0       0
  2767 ;;      Temps:          0       0       0       0       0
  2768 ;;      Totals:         1       0       0       0       0
  2769 ;;Total ram usage:        1 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 3
  2772 ;; This function calls:
  2773 ;;		_Escribir_comandoLCD
  2774 ;; This function is called by:
  2775 ;;		_main
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function _Escribir_caracterLCD
  2781  042B                     _Escribir_caracterLCD:
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  2785                           ;Escribir_caracterLCD@a stored from wreg
  2786  042B  00F4               	movwf	Escribir_caracterLCD@a
  2787  042C                     l1628:
  2788                           
  2789                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  2790  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2791  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2792  042E  1588               	bsf	8,3	;volatile
  2793  042F  1208               	bcf	8,4	;volatile
  2794  0430                     l1630:
  2795                           
  2796                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  2797  0430  0874               	movf	Escribir_caracterLCD@a,w
  2798  0431  120A  118A  22CF  120A  118A  	fcall	_Escribir_comandoLCD
  2799  0436                     l176:
  2800  0436  0008               	return
  2801  0437                     __end_of_Escribir_caracterLCD:
  2802                           
  2803                           	psect	text15
  2804  02CF                     __ptext15:	
  2805 ;; *************** function _Escribir_comandoLCD *****************
  2806 ;; Defined at:
  2807 ;;		line 17 in file "LCD.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  Comando         1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  Comando         1    3[COMMON] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         1       0       0       0       0
  2823 ;;      Temps:          0       0       0       0       0
  2824 ;;      Totals:         1       0       0       0       0
  2825 ;;Total ram usage:        1 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 2
  2828 ;; This function calls:
  2829 ;;		_prender_ELCD
  2830 ;; This function is called by:
  2831 ;;		_Iniciar_LCD
  2832 ;;		_Escribir_stringLCD
  2833 ;;		_Escribir_caracterLCD
  2834 ;;		_Limpiar_pantallaLCD
  2835 ;;		_set_cursor
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _Escribir_comandoLCD
  2841  02CF                     _Escribir_comandoLCD:
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2845                           ;Escribir_comandoLCD@Comando stored from wreg
  2846  02CF  00F3               	movwf	Escribir_comandoLCD@Comando
  2847  02D0                     l1288:
  2848                           
  2849                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2850  02D0  1C73               	btfss	Escribir_comandoLCD@Comando,0
  2851  02D1  2AD3               	goto	u431
  2852  02D2  2AD4               	goto	u430
  2853  02D3                     u431:
  2854  02D3  2AD8               	goto	l148
  2855  02D4                     u430:
  2856  02D4                     l1290:
  2857  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2858  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2859  02D6  1708               	bsf	8,6	;volatile
  2860  02D7  2ADB               	goto	l149
  2861  02D8                     l148:
  2862  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2863  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2864  02DA  1308               	bcf	8,6	;volatile
  2865  02DB                     l149:
  2866                           
  2867                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2868  02DB  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  2869  02DC  2ADE               	goto	u441
  2870  02DD  2ADF               	goto	u440
  2871  02DE                     u441:
  2872  02DE  2AE1               	goto	l150
  2873  02DF                     u440:
  2874  02DF                     l1292:
  2875  02DF  1788               	bsf	8,7	;volatile
  2876  02E0  2AE2               	goto	l151
  2877  02E1                     l150:
  2878  02E1  1388               	bcf	8,7	;volatile
  2879  02E2                     l151:
  2880                           
  2881                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2882  02E2  1D73               	btfss	Escribir_comandoLCD@Comando,2
  2883  02E3  2AE5               	goto	u451
  2884  02E4  2AE6               	goto	u450
  2885  02E5                     u451:
  2886  02E5  2AE8               	goto	l152
  2887  02E6                     u450:
  2888  02E6                     l1294:
  2889  02E6  1406               	bsf	6,0	;volatile
  2890  02E7  2AE9               	goto	l153
  2891  02E8                     l152:
  2892  02E8  1006               	bcf	6,0	;volatile
  2893  02E9                     l153:
  2894                           
  2895                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2896  02E9  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  2897  02EA  2AEC               	goto	u461
  2898  02EB  2AED               	goto	u460
  2899  02EC                     u461:
  2900  02EC  2AEF               	goto	l154
  2901  02ED                     u460:
  2902  02ED                     l1296:
  2903  02ED  1486               	bsf	6,1	;volatile
  2904  02EE  2AF0               	goto	l155
  2905  02EF                     l154:
  2906  02EF  1086               	bcf	6,1	;volatile
  2907  02F0                     l155:
  2908                           
  2909                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2910  02F0  1E73               	btfss	Escribir_comandoLCD@Comando,4
  2911  02F1  2AF3               	goto	u471
  2912  02F2  2AF4               	goto	u470
  2913  02F3                     u471:
  2914  02F3  2AF6               	goto	l156
  2915  02F4                     u470:
  2916  02F4                     l1298:
  2917  02F4  1506               	bsf	6,2	;volatile
  2918  02F5  2AF7               	goto	l157
  2919  02F6                     l156:
  2920  02F6  1106               	bcf	6,2	;volatile
  2921  02F7                     l157:
  2922                           
  2923                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2924  02F7  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  2925  02F8  2AFA               	goto	u481
  2926  02F9  2AFB               	goto	u480
  2927  02FA                     u481:
  2928  02FA  2AFD               	goto	l158
  2929  02FB                     u480:
  2930  02FB                     l1300:
  2931  02FB  1586               	bsf	6,3	;volatile
  2932  02FC  2AFE               	goto	l159
  2933  02FD                     l158:
  2934  02FD  1186               	bcf	6,3	;volatile
  2935  02FE                     l159:
  2936                           
  2937                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2938  02FE  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2939  02FF  2B01               	goto	u491
  2940  0300  2B02               	goto	u490
  2941  0301                     u491:
  2942  0301  2B04               	goto	l160
  2943  0302                     u490:
  2944  0302                     l1302:
  2945  0302  1606               	bsf	6,4	;volatile
  2946  0303  2B05               	goto	l161
  2947  0304                     l160:
  2948  0304  1206               	bcf	6,4	;volatile
  2949  0305                     l161:
  2950                           
  2951                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2952  0305  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2953  0306  2B08               	goto	u501
  2954  0307  2B09               	goto	u500
  2955  0308                     u501:
  2956  0308  2B0B               	goto	l162
  2957  0309                     u500:
  2958  0309                     l1304:
  2959  0309  1686               	bsf	6,5	;volatile
  2960  030A  2B0C               	goto	l1306
  2961  030B                     l162:
  2962  030B  1286               	bcf	6,5	;volatile
  2963  030C                     l1306:
  2964                           
  2965                           ;LCD.c: 27:     prender_ELCD();
  2966  030C  120A  118A  241D  120A  118A  	fcall	_prender_ELCD
  2967  0311                     l164:
  2968  0311  0008               	return
  2969  0312                     __end_of_Escribir_comandoLCD:
  2970                           
  2971                           	psect	text16
  2972  041D                     __ptext16:	
  2973 ;; *************** function _prender_ELCD *****************
  2974 ;; Defined at:
  2975 ;;		line 11 in file "LCD.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          1       0       0       0       0
  2992 ;;      Totals:         1       0       0       0       0
  2993 ;;Total ram usage:        1 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_Escribir_comandoLCD
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           
  3004                           ;psect for function _prender_ELCD
  3005  041D                     _prender_ELCD:
  3006  041D                     l1282:	
  3007                           ;incstack = 0
  3008                           ; Regs used in _prender_ELCD: [wreg]
  3009                           
  3010                           
  3011                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3012  041D  1283               	bcf	3,5	;RP0=0, select bank0
  3013  041E  1303               	bcf	3,6	;RP1=0, select bank0
  3014  041F  1688               	bsf	8,5	;volatile
  3015  0420                     l1284:
  3016                           
  3017                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3018  0420  30C7               	movlw	199
  3019  0421  00F2               	movwf	??_prender_ELCD
  3020  0422                     u1117:
  3021  0422  2C23               	nop2
  3022  0423  0BF2               	decfsz	??_prender_ELCD,f
  3023  0424  2C22               	goto	u1117
  3024  0425  2C26               	nop2
  3025  0426  2C27               	nop2
  3026  0427                     l1286:
  3027                           
  3028                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3029  0427  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0428  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0429  1288               	bcf	8,5	;volatile
  3032  042A                     l145:
  3033  042A  0008               	return
  3034  042B                     __end_of_prender_ELCD:
  3035                           
  3036                           	psect	text17
  3037  0441                     __ptext17:	
  3038 ;; *************** function _isr *****************
  3039 ;; Defined at:
  3040 ;;		line 69 in file "Maestro.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;		None
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		None
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0
  3056 ;;      Temps:          2       0       0       0       0
  3057 ;;      Totals:         2       0       0       0       0
  3058 ;;Total ram usage:        2 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		Interrupt level 1
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _isr
  3069  0441                     _isr:
  3070  0441                     i1l77:
  3071  0441  0871               	movf	??_isr+1,w
  3072  0442  008A               	movwf	10
  3073  0443  0E70               	swapf	??_isr,w
  3074  0444  0083               	movwf	3
  3075  0445  0EFE               	swapf	btemp,f
  3076  0446  0E7E               	swapf	btemp,w
  3077  0447  0009               	retfie
  3078  0448                     __end_of_isr:
  3079  007E                     btemp	set	126	;btemp
  3080  007E                     wtemp0	set	126
  3081                           
  3082                           	psect	intentry
  3083  0004                     __pintentry:	
  3084                           ;incstack = 0
  3085                           ; Regs used in _isr: []
  3086                           
  3087  0004                     interrupt_function:
  3088  007E                     saved_w	set	btemp
  3089  0004  00FE               	movwf	btemp
  3090  0005  0E03               	swapf	3,w
  3091  0006  00F0               	movwf	??_isr
  3092  0007  080A               	movf	10,w
  3093  0008  00F1               	movwf	??_isr+1
  3094  0009  120A  118A  2C41   	ljmp	_isr
  3095                           
  3096                           	psect	config
  3097                           
  3098                           ;Config register CONFIG1 @ 0x2007
  3099                           ;	Oscillator Selection bits
  3100                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3101                           ;	Watchdog Timer Enable bit
  3102                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3103                           ;	Power-up Timer Enable bit
  3104                           ;	PWRTE = OFF, PWRT disabled
  3105                           ;	RE3/MCLR pin function select bit
  3106                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3107                           ;	Code Protection bit
  3108                           ;	CP = OFF, Program memory code protection is disabled
  3109                           ;	Data Code Protection bit
  3110                           ;	CPD = OFF, Data memory code protection is disabled
  3111                           ;	Brown Out Reset Selection bits
  3112                           ;	BOREN = OFF, BOR disabled
  3113                           ;	Internal External Switchover bit
  3114                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3115                           ;	Fail-Safe Clock Monitor Enabled bit
  3116                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3117                           ;	Low Voltage Programming Enable bit
  3118                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3119                           ;	In-Circuit Debugger Mode bit
  3120                           ;	DEBUG = 0x1, unprogrammed default
  3121  2007                     	org	8199
  3122  2007  20D4               	dw	8404
  3123                           
  3124                           ;Config register CONFIG2 @ 0x2008
  3125                           ;	Brown-out Reset Selection bit
  3126                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3127                           ;	Flash Program Memory Self Write Enable bits
  3128                           ;	WRT = OFF, Write protection off
  3129  2008                     	org	8200
  3130  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     13      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[13]), STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_dec
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4238
                                             11 BANK0      2     2      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                           _ReadMSSP
                          _WriteMSSP
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1462
                                              0 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     569
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1600
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _ReadMSSP
   _WriteMSSP
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMSSP
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      15       5       26.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 18 08:03:32 2022

                            pc 0002                    _SSPSTATbits 0094                             l93 0350  
                           l88 0114                   ___awdiv@sign 0021                             fsr 0004  
              set_cursor@linea 0077                   ?_divisor_dec 0079                            l130 044D  
                          l124 036C                            l133 0437                            l150 02E1  
                          l230 028B                            l151 02E2                            l127 0383  
                          l160 0304                            l152 02E8                            l136 0440  
                          l145 042A                            l161 0305                            l153 02E9  
                          l162 030B                            l154 02EF                            l155 02F0  
                          l164 0311                            l156 02F6                            l148 02D8  
                          l157 02F7                            l149 02DB                            l173 0402  
                          l158 02FD                            l159 02FE                            l167 01E2  
                          l176 0436                            l179 041C                            l197 03B0  
                          l189 02CE                            l198 03B3                            l482 023B  
                          l469 017D                            u500 0309                            u501 0308  
                          u430 02D4                            u510 0296                            u431 02D3  
                          u511 0295                            u440 02DF                            u600 0364  
                          u520 02A3                            u441 02DE                            u601 0363  
                          u521 02A2                            u450 02E6                            u610 036A  
                          u530 02B7                            u451 02E5                            u611 0369  
                          u531 02B6                            u460 02ED                            u620 0373  
                          u540 02C5                            u461 02EC                            u621 0372  
                          u541 02C4                            u470 02F4                            u550 0402  
                          u471 02F3                            u551 0401                            u480 02FB  
                          u800 022D                            u560 038B                            u481 02FA  
                          u801 022C                            u561 038A                            u490 0302  
                          u810 0232                            u730 01E8                            u570 0396  
                          u491 0301                            u811 0231                            u731 01E7  
                          u571 0395                            u820 043D                            u740 01F3  
                          u580 03A1                            u821 043C                            u741 01F2  
                          u581 03A0                            u910 015B                            u750 01FE  
                          u590 03AB                            u911 015A                            u751 01FD  
                          u591 03AA                            u905 014B                            u930 016F  
                          u850 011C                            u770 0210                            u931 016E  
                          u915 0157                            u851 011B                            u771 020F  
                          u940 0174                            u860 0127                            u780 021A  
                          u941 0173                            u925 0163                            u861 0126  
                          u781 0219                            u765 0202                            u870 0138  
                          u950 028B                            u871 0137                            u951 028A  
                          u785 0216                            u890 014A                            u891 0149  
                          u795 0221                            u955 0287                            u885 013C  
                          u977 003C                            u987 0056                            u997 0108  
                          _isr 0441                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0078                           l1300 02FB                           l1302 0302  
                         l1310 0291                           l1304 0309                           l1400 01B0  
                         l1320 02B2                           l1312 0296                           l1306 030C  
                         l1410 01D7                           l1402 01B6                           l1330 02C5  
                         l1314 029D                           l1500 0237                           l1340 03F5  
                         l1332 03DE                           l1404 01C1                           l1420 0416  
                         l1324 02B8                           l1316 02A3                           l1308 028D  
                         l1334 03E2                           l1406 01C6                           l1414 0403  
                         l1350 039B                           l1342 0385                           l1326 02BE  
                         l1318 02A9                           l1336 03E4                           l1408 01D1  
                         l1360 0358                           l1416 0407                           l1352 03A1  
                         l1344 038B                           l1328 02C0                           l1282 041D  
                         l1290 02D4                           l1338 03F1                           l1370 0364  
                         l1362 0359                           l1418 040D                           l1354 03A6  
                         l1346 0390                           l1602 0322                           l1284 0420  
                         l1292 02DF                           l1540 0437                           l1700 0115  
                         l1380 0379                           l1372 036A                           l1364 035A  
                         l1356 03AB                           l1348 0396                           l1286 0427  
                         l1294 02E6                           l1630 0430                           l1542 043D  
                         l1710 0127                           l1702 0118                           l1470 01E8  
                         l1390 0182                           l1382 037C                           l1374 036D  
                         l1366 035D                           l1358 0352                           l1614 0326  
                         l1622 0328                           l1296 02ED                           l1288 02D0  
                         l1720 013B                           l1712 012C                           l1704 011C  
                         l1480 01FE                           l1472 01ED                           l1392 018B  
                         l1384 037F                           l1376 0373                           l1368 035E  
                         l1608 0324                           l1560 0314                           l1800 0038  
                         l1298 02F4                           l1538 0449                           l1730 0161  
                         l1722 0142                           l1714 0130                           l1706 0121  
                         l1490 021A                           l1482 0201                           l1474 01EF  
                         l1466 01E3                           l1394 0191                           l1386 0382  
                         l1378 0374                           l1810 005C                           l1802 003F  
                         l1628 042C                           l1740 0179                           l1732 0162  
                         l1724 0146                           l1716 0132                           l1708 0123  
                         l1492 0220                           l1484 0208                           l1476 01F3  
                         l1468 01E4                           l1396 01A0                           l1388 017E  
                         l1572 0318                           l1820 008E                           l1812 0066  
                         l1804 0045                           l1734 0169                           l1726 014A  
                         l1718 0138                           l1494 0227                           l1486 020C  
                         l1478 01F8                           l1398 01A5                           l1750 00BF  
                         l1590 031E                           l1566 0316                           l1558 0313  
                         l1822 0094                           l1814 0071                           l1806 0052  
                         l1728 015B                           l1736 016F                           l1488 0210  
                         l1496 022D                           l1760 00D1                           l1752 00C2  
                         l1744 00A8                           l1584 031C                           l1824 009C  
                         l1816 007C                           l1808 0059                           l1738 0174  
                         l1498 0232                           l1770 00EE                           l1762 00D7  
                         l1754 00C5                           l1746 00B9                           l1578 031A  
                         l1818 0087                           l1772 00FA                           l1764 00DC  
                         l1756 00C8                           l1748 00BC                           l1596 0320  
                         l1774 0100                           l1766 00E1                           l1758 00CB  
                         l1790 001F                           l1784 0241                           l1776 010F  
                         l1768 00E8                           l1792 0024                           l1786 0278  
                         l1778 023F                           l1858 0330                           l1794 0028  
                         l1788 027E                           l1796 002F                           l1798 0035  
                         ?_isr 0070                           STR_1 03BA                           STR_2 03D8  
                         STR_3 03CB                           u1007 02AD                           u1017 02C9  
                         u1107 01D9                           u1027 0411                           u1117 0422  
                         u1037 0186                           u1047 0195                           u1057 01A2  
                         u1067 01AD                           u1077 01B8                           u1087 01C3  
                         u1097 01CE                           i1l77 0441                  ??_Iniciar_LCD 0074  
                         _main 001F                           btemp 007E                           start 000C  
         _Escribir_caracterLCD 042B                          ??_isr 0070     __end_of_Escribir_stringLCD 0403  
                        ?_main 0070                __end_of___awdiv 017E                __end_of___awmod 023C  
                        _ANSEL 0188                ___awdiv@divisor 0072                ___awdiv@counter 0020  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          _TRISA 0085  
                        _TRISB 0086                          _TRISD 0088                          _TRISE 0089  
                 InitMSSP@Modo 0072                __end_of_initOsc 03B4                          _setup 00A8  
          _Limpiar_pantallaLCD 0403                          pclath 000A                          status 0003  
                        wtemp0 007E          ?_Escribir_caracterLCD 0070                __initialization 000F  
          __end_of_Iniciar_LCD 01E3                   __end_of_main 00A8               __end_of_InitMSSP 0384  
             __end_of_ReadMSSP 0441           ?_Limpiar_pantallaLCD 0070                         ??_main 002B  
                 divisor_dec@b 0028                   divisor_dec@n 0029             set_cursor@posicion 0074  
             ___awdiv@dividend 0074                         ?_setup 0070                         _ANSELH 0189  
                       _MSSPin 002D                         _TRISC0 0438                         _TRISC1 0439  
                       _TRISC2 043A                         _SSPCON 0014                         _SSPBUF 0013  
             ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074                      ??___awdiv 0076  
                    ??___awmod 0076               ___awdiv@quotient 0022                ___awmod@divisor 0072  
              ___awmod@counter 0077                      ??_initOsc 0072           __size_of_divisor_dec 0050  
                       saved_w 007E                divisor_dec@dig1 0079        __end_of__initialization 001B  
                  _Iniciar_LCD 017E             __size_of_WriteMSSP 0006         ??_Escribir_caracterLCD 0074  
               __pcstackCOMMON 0070                  __end_of_setup 0115                        ??_setup 0020  
                   __pbssBANK0 002D                      ?_InitMSSP 0070                      ?_ReadMSSP 0070  
                   __pmaintext 001F                     __pintentry 0004   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 007B              __end_of_WriteMSSP 044E                   initOsc@Valor 0072  
                      _SSPSTAT 0094             _Escribir_stringLCD 03DD                     __stringtab 03B4  
                   ??_InitMSSP 0072                     ??_ReadMSSP 0072                tabla_numASCII@a 0074  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074                        ___awdiv 0115  
                      ___awmod 01E3                        _dec_ADC 0032                        _cen_ADC 0031  
                      _dig_ADC 0033                        __ptext1 0312                        __ptext2 00A8  
                      __ptext3 028C                        __ptext4 0384                        __ptext5 0403  
                      __ptext6 0351                        __ptext7 017E                        __ptext8 03DD  
                      __ptext9 023C           ??_Escribir_stringLCD 0074                        _initOsc 0384  
                 __size_of_isr 0007                        _val_ADC 002F               ___awmod@dividend 0074  
                ?_prender_ELCD 0070                        _uni_ADC 007A           end_of_initialization 001B  
                   _set_cursor 028C                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                 ??_prender_ELCD 0072                      _TRISAbits 0085  
                    _TRISCbits 0087                   ?_Iniciar_LCD 0070    __end_of_Limpiar_pantallaLCD 041D  
                WriteMSSP@Data 0072                  ??_divisor_dec 0024            start_initialization 000F  
                  __end_of_isr 0448            _Escribir_comandoLCD 02CF     Escribir_comandoLCD@Comando 0073  
            __size_of_InitMSSP 0033              __size_of_ReadMSSP 000A  __size_of_Escribir_caracterLCD 000C  
                  ?_set_cursor 0074           ?_Escribir_comandoLCD 0070                    __pbssCOMMON 007A  
      __size_of_tabla_numASCII 003F                      ___latbits 0002                  __pcstackBANK0 0020  
                    _WriteMSSP 0448            __end_of_divisor_dec 028C           __end_of_prender_ELCD 042B  
                     ?___awdiv 0072                       ?___awmod 0072          ??_Escribir_comandoLCD 0073  
                    __pstrings 03B4                       ?_initOsc 0070                     ?_WriteMSSP 0070  
          __size_of_set_cursor 0043                 __size_of_setup 006D              interrupt_function 0004  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                    __stringbase 03B9  
                  _divisor_dec 023C    __size_of_Escribir_stringLCD 0026                       _InitMSSP 0351  
                     _ReadMSSP 0437            Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075  
             __size_of___awdiv 0069               __size_of___awmod 0059             __end_of__stringtab 03BA  
               _tabla_numASCII 0312               __size_of_initOsc 0030                    ??_WriteMSSP 0072  
                     __ptext10 01E3                       __ptext11 0115                       __ptext12 0448  
                     __ptext13 0437                       __ptext14 042B                       __ptext15 02CF  
                     __ptext16 041D                       __ptext17 0441                    _val_ADC_fin 0034  
        __size_of_prender_ELCD 000E                  __size_of_main 0089                   ??_set_cursor 0075  
 __size_of_Limpiar_pantallaLCD 001A         __end_of_tabla_numASCII 0351   __end_of_Escribir_caracterLCD 0437  
                 _prender_ELCD 041D             __end_of_set_cursor 02CF                       intlevel1 0000  
                    stringcode 03B4                     _OSCCONbits 008F                ?_tabla_numASCII 0070  
                     stringdir 03B4                       stringtab 03B4                     _SSPCONbits 0014  
  __end_of_Escribir_comandoLCD 0312  
