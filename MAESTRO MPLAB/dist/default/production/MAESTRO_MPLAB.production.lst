

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 18 07:55:18 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0006                     _PORTBbits	set	6
   535  0008                     _PORTDbits	set	8
   536  0013                     _SSPBUF	set	19
   537  0014                     _SSPCONbits	set	20
   538  0014                     _SSPCON	set	20
   539  0007                     _PORTC	set	7
   540  0006                     _PORTB	set	6
   541  0009                     _PORTE	set	9
   542  0008                     _PORTD	set	8
   543  0005                     _PORTA	set	5
   544  0007                     _PORTCbits	set	7
   545  008F                     _OSCCONbits	set	143
   546  0094                     _SSPSTATbits	set	148
   547  008C                     _PIE1bits	set	140
   548  0085                     _TRISAbits	set	133
   549  0087                     _TRISCbits	set	135
   550  0094                     _SSPSTAT	set	148
   551  0089                     _TRISE	set	137
   552  0088                     _TRISD	set	136
   553  0086                     _TRISB	set	134
   554  0085                     _TRISA	set	133
   555  0438                     _TRISC0	set	1080
   556  0439                     _TRISC1	set	1081
   557  043A                     _TRISC2	set	1082
   558  0189                     _ANSELH	set	393
   559  0188                     _ANSEL	set	392
   560                           
   561                           	psect	strings
   562  03AD                     __pstrings:
   563  03AD                     stringtab:
   564  03AD                     __stringtab:
   565  03AD                     stringcode:	
   566                           ;	String table - string pointers are 1 byte each
   567                           
   568  03AD                     stringdir:
   569  03AD  3003               	movlw	high stringdir
   570  03AE  008A               	movwf	10
   571  03AF  0804               	movf	4,w
   572  03B0  0A84               	incf	4,f
   573  03B1  0782               	addwf	2,f
   574  03B2                     __stringbase:
   575  03B2  3400               	retlw	0
   576  03B3                     __end_of__stringtab:
   577  03B3                     STR_1:
   578  03B3  3453               	retlw	83	;'S'
   579  03B4  3431               	retlw	49	;'1'
   580  03B5  343A               	retlw	58	;':'
   581  03B6  3420               	retlw	32	;' '
   582  03B7  3420               	retlw	32	;' '
   583  03B8  3420               	retlw	32	;' '
   584  03B9  3420               	retlw	32	;' '
   585  03BA  3453               	retlw	83	;'S'
   586  03BB  3432               	retlw	50	;'2'
   587  03BC  343A               	retlw	58	;':'
   588  03BD  3420               	retlw	32	;' '
   589  03BE  3420               	retlw	32	;' '
   590  03BF  3420               	retlw	32	;' '
   591  03C0  3453               	retlw	83	;'S'
   592  03C1  3433               	retlw	51	;'3'
   593  03C2  343A               	retlw	58	;':'
   594  03C3  3400               	retlw	0
   595  03C4                     STR_3:
   596  03C4  344A               	retlw	74	;'J'
   597  03C5  346F               	retlw	111	;'o'
   598  03C6  3473               	retlw	115	;'s'
   599  03C7  3465               	retlw	101	;'e'
   600  03C8  3420               	retlw	32	;' '
   601  03C9  3453               	retlw	83	;'S'
   602  03CA  3461               	retlw	97	;'a'
   603  03CB  346E               	retlw	110	;'n'
   604  03CC  3474               	retlw	116	;'t'
   605  03CD  3469               	retlw	105	;'i'
   606  03CE  347A               	retlw	122	;'z'
   607  03CF  346F               	retlw	111	;'o'
   608  03D0  3400               	retlw	0
   609  03D1                     STR_2:
   610  03D1  3448               	retlw	72	;'H'
   611  03D2  346F               	retlw	111	;'o'
   612  03D3  346C               	retlw	108	;'l'
   613  03D4  3461               	retlw	97	;'a'
   614  03D5  3400               	retlw	0
   615                           
   616                           	psect	cinit
   617  000F                     start_initialization:	
   618                           ; #config settings
   619                           
   620  000F                     __initialization:
   621                           
   622                           ; Clear objects allocated to COMMON
   623  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   624  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   625                           
   626                           ; Clear objects allocated to BANK0
   627  0011  1283               	bcf	3,5	;RP0=0, select bank0
   628  0012  1303               	bcf	3,6	;RP1=0, select bank0
   629  0013  01AC               	clrf	__pbssBANK0& (0+127)
   630  0014  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   631  0015  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   632  0016  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   633  0017  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   634  0018  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   635  0019  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   636  001A                     end_of_initialization:	
   637                           ;End of C runtime variable initialization code
   638                           
   639  001A                     __end_of__initialization:
   640  001A  0183               	clrf	3
   641  001B  120A  118A  281E   	ljmp	_main	;jump to C main() function
   642                           
   643                           	psect	bssCOMMON
   644  007A                     __pbssCOMMON:
   645  007A                     _uni_ADC:
   646  007A                     	ds	1
   647  007B                     _ADC_dig:
   648  007B                     	ds	1
   649                           
   650                           	psect	bssBANK0
   651  002C                     __pbssBANK0:
   652  002C                     _MSSPin:
   653  002C                     	ds	2
   654  002E                     _cen_ADC:
   655  002E                     	ds	1
   656  002F                     _dec_ADC:
   657  002F                     	ds	1
   658  0030                     _dig_ADC:
   659  0030                     	ds	1
   660  0031                     _val_ADC_fin:
   661  0031                     	ds	1
   662  0032                     _val_ADC:
   663  0032                     	ds	1
   664                           
   665                           	psect	cstackCOMMON
   666  0070                     __pcstackCOMMON:
   667  0070                     ?_setup:
   668  0070                     ?_Escribir_stringLCD:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ?_WriteMSSP:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_ReadMSSP:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_tabla_numASCII:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_Escribir_caracterLCD:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_initOsc:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_InitMSSP:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Iniciar_LCD:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_Limpiar_pantallaLCD:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_isr:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_isr:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_main:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_prender_ELCD:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_Escribir_comandoLCD:	
   708                           ; 1 bytes @ 0x0
   709                           
   710                           
   711                           ; 1 bytes @ 0x0
   712  0070                     	ds	2
   713  0072                     ??_WriteMSSP:
   714  0072                     ??_ReadMSSP:	
   715                           ; 1 bytes @ 0x2
   716                           
   717  0072                     ??_tabla_numASCII:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     ??_initOsc:	
   721                           ; 1 bytes @ 0x2
   722                           
   723  0072                     ??_InitMSSP:	
   724                           ; 1 bytes @ 0x2
   725                           
   726  0072                     ??_prender_ELCD:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     ?___awdiv:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0072                     ?___awmod:	
   733                           ; 2 bytes @ 0x2
   734                           
   735  0072                     InitMSSP@Modo:	
   736                           ; 2 bytes @ 0x2
   737                           
   738  0072                     WriteMSSP@Data:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0072                     initOsc@Valor:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0072                     ___awdiv@divisor:	
   745                           ; 1 bytes @ 0x2
   746                           
   747  0072                     ___awmod@divisor:	
   748                           ; 2 bytes @ 0x2
   749                           
   750                           
   751                           ; 2 bytes @ 0x2
   752  0072                     	ds	1
   753  0073                     ??_Escribir_comandoLCD:
   754  0073                     Escribir_comandoLCD@Comando:	
   755                           ; 1 bytes @ 0x3
   756                           
   757                           
   758                           ; 1 bytes @ 0x3
   759  0073                     	ds	1
   760  0074                     ?_set_cursor:
   761  0074                     ??_Escribir_stringLCD:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     ??_Escribir_caracterLCD:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ??_Iniciar_LCD:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??_Limpiar_pantallaLCD:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     tabla_numASCII@a:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     Escribir_caracterLCD@a:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     set_cursor@posicion:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     ___awdiv@dividend:	
   783                           ; 1 bytes @ 0x4
   784                           
   785  0074                     ___awmod@dividend:	
   786                           ; 2 bytes @ 0x4
   787                           
   788                           
   789                           ; 2 bytes @ 0x4
   790  0074                     	ds	1
   791  0075                     ??_set_cursor:
   792  0075                     Escribir_stringLCD@i:	
   793                           ; 1 bytes @ 0x5
   794                           
   795                           
   796                           ; 1 bytes @ 0x5
   797  0075                     	ds	1
   798  0076                     ??___awdiv:
   799  0076                     ??___awmod:	
   800                           ; 1 bytes @ 0x6
   801                           
   802  0076                     Escribir_stringLCD@d:	
   803                           ; 1 bytes @ 0x6
   804                           
   805                           
   806                           ; 1 bytes @ 0x6
   807  0076                     	ds	1
   808  0077                     set_cursor@linea:
   809  0077                     ___awmod@counter:	
   810                           ; 1 bytes @ 0x7
   811                           
   812                           
   813                           ; 1 bytes @ 0x7
   814  0077                     	ds	1
   815  0078                     ___awmod@sign:
   816                           
   817                           ; 1 bytes @ 0x8
   818  0078                     	ds	1
   819  0079                     ?_divisor_dec:
   820  0079                     divisor_dec@dig1:	
   821                           ; 1 bytes @ 0x9
   822                           
   823                           
   824                           ; 1 bytes @ 0x9
   825  0079                     	ds	1
   826                           
   827                           	psect	cstackBANK0
   828  0020                     __pcstackBANK0:
   829  0020                     ??_setup:
   830  0020                     ___awdiv@counter:	
   831                           ; 1 bytes @ 0x0
   832                           
   833                           
   834                           ; 1 bytes @ 0x0
   835  0020                     	ds	1
   836  0021                     ___awdiv@sign:
   837                           
   838                           ; 1 bytes @ 0x1
   839  0021                     	ds	1
   840  0022                     ___awdiv@quotient:
   841                           
   842                           ; 2 bytes @ 0x2
   843  0022                     	ds	2
   844  0024                     ??_divisor_dec:
   845                           
   846                           ; 1 bytes @ 0x4
   847  0024                     	ds	4
   848  0028                     divisor_dec@b:
   849                           
   850                           ; 1 bytes @ 0x8
   851  0028                     	ds	1
   852  0029                     divisor_dec@n:
   853                           
   854                           ; 2 bytes @ 0x9
   855  0029                     	ds	2
   856  002B                     ??_main:
   857                           
   858                           ; 1 bytes @ 0xB
   859  002B                     	ds	1
   860                           
   861                           	psect	maintext
   862  001E                     __pmaintext:	
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 75 in file "Maestro.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : B00/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          0       1       0       0       0
   885 ;;      Totals:         0       1       0       0       0
   886 ;;Total ram usage:        1 bytes
   887 ;; Hardware stack levels required when called: 5
   888 ;; This function calls:
   889 ;;		_Escribir_caracterLCD
   890 ;;		_Escribir_stringLCD
   891 ;;		_ReadMSSP
   892 ;;		_WriteMSSP
   893 ;;		_divisor_dec
   894 ;;		_set_cursor
   895 ;;		_setup
   896 ;;		_tabla_numASCII
   897 ;; This function is called by:
   898 ;;		Startup code after reset
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function _main
   904  001E                     _main:
   905  001E                     l1790:	
   906                           ;incstack = 0
   907                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   908                           
   909                           
   910                           ;Maestro.c: 76:     setup();
   911  001E  120A  118A  20A1  120A  118A  	fcall	_setup
   912  0023                     l1792:
   913                           
   914                           ;Maestro.c: 77:     val_ADC = 0;
   915  0023  1283               	bcf	3,5	;RP0=0, select bank0
   916  0024  1303               	bcf	3,6	;RP1=0, select bank0
   917  0025  01B2               	clrf	_val_ADC
   918  0026                     l1794:
   919                           
   920                           ;Maestro.c: 79:         set_cursor(1,0);
   921  0026  01F4               	clrf	set_cursor@posicion
   922  0027  3001               	movlw	1
   923  0028  120A  118A  2285  120A  118A  	fcall	_set_cursor
   924  002D                     l1796:
   925                           
   926                           ;Maestro.c: 80:         Escribir_stringLCD("S1:    S2:   S3:");
   927  002D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   928  002E  120A  118A  23D6  120A  118A  	fcall	_Escribir_stringLCD
   929  0033                     l1798:
   930                           
   931                           ;Maestro.c: 86:         PORTCbits.RC2 = 0;
   932  0033  1283               	bcf	3,5	;RP0=0, select bank0
   933  0034  1303               	bcf	3,6	;RP1=0, select bank0
   934  0035  1107               	bcf	7,2	;volatile
   935  0036                     l1800:
   936                           
   937                           ;Maestro.c: 87:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   938  0036  3002               	movlw	2
   939  0037  1283               	bcf	3,5	;RP0=0, select bank0
   940  0038  1303               	bcf	3,6	;RP1=0, select bank0
   941  0039  00AB               	movwf	??_main
   942  003A                     u977:
   943  003A  0BAB               	decfsz	??_main,f
   944  003B  283A               	goto	u977
   945  003C  0000               	nop
   946  003D                     l1802:
   947                           
   948                           ;Maestro.c: 89:         WriteMSSP(1);
   949  003D  3001               	movlw	1
   950  003E  120A  118A  2441  120A  118A  	fcall	_WriteMSSP
   951  0043                     l1804:
   952                           
   953                           ;Maestro.c: 92:         PORTA = ReadMSSP();
   954  0043  120A  118A  2430  120A  118A  	fcall	_ReadMSSP
   955  0048  1283               	bcf	3,5	;RP0=0, select bank0
   956  0049  1303               	bcf	3,6	;RP1=0, select bank0
   957  004A  0085               	movwf	5	;volatile
   958  004B                     l1806:
   959                           
   960                           ;Maestro.c: 94:         _delay((unsigned long)((10)*(4000000/4000000.0)));
   961  004B  3002               	movlw	2
   962  004C  1283               	bcf	3,5	;RP0=0, select bank0
   963  004D  1303               	bcf	3,6	;RP1=0, select bank0
   964  004E  00AB               	movwf	??_main
   965  004F                     u987:
   966  004F  0BAB               	decfsz	??_main,f
   967  0050  284F               	goto	u987
   968  0051  0000               	nop
   969  0052                     l1808:
   970                           
   971                           ;Maestro.c: 95:         PORTCbits.RC2 = 1;
   972  0052  1283               	bcf	3,5	;RP0=0, select bank0
   973  0053  1303               	bcf	3,6	;RP1=0, select bank0
   974  0054  1507               	bsf	7,2	;volatile
   975  0055                     l1810:
   976                           
   977                           ;Maestro.c: 97:         divisor_dec(PORTA, ADC_dig);
   978  0055  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
   979  0056  00AB               	movwf	??_main
   980  0057  082B               	movf	??_main,w
   981  0058  00F9               	movwf	divisor_dec@dig1
   982  0059  0805               	movf	5,w	;volatile
   983  005A  120A  118A  2235  120A  118A  	fcall	_divisor_dec
   984  005F                     l1812:
   985                           
   986                           ;Maestro.c: 99:         uni_ADC = tabla_numASCII(ADC_dig[2]);
   987  005F  087D               	movf	_ADC_dig+2,w
   988  0060  120A  118A  230B  120A  118A  	fcall	_tabla_numASCII
   989  0065  1283               	bcf	3,5	;RP0=0, select bank0
   990  0066  1303               	bcf	3,6	;RP1=0, select bank0
   991  0067  00AB               	movwf	??_main
   992  0068  082B               	movf	??_main,w
   993  0069  00FA               	movwf	_uni_ADC
   994  006A                     l1814:
   995                           
   996                           ;Maestro.c: 100:         dec_ADC = tabla_numASCII(ADC_dig[1]);
   997  006A  087C               	movf	_ADC_dig+1,w
   998  006B  120A  118A  230B  120A  118A  	fcall	_tabla_numASCII
   999  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0072  00AB               	movwf	??_main
  1002  0073  082B               	movf	??_main,w
  1003  0074  00AF               	movwf	_dec_ADC
  1004  0075                     l1816:
  1005                           
  1006                           ;Maestro.c: 101:         cen_ADC = tabla_numASCII(ADC_dig[0]);
  1007  0075  087B               	movf	_ADC_dig,w
  1008  0076  120A  118A  230B  120A  118A  	fcall	_tabla_numASCII
  1009  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1010  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1011  007D  00AB               	movwf	??_main
  1012  007E  082B               	movf	??_main,w
  1013  007F  00AE               	movwf	_cen_ADC
  1014  0080                     l1818:
  1015                           
  1016                           ;Maestro.c: 113:         set_cursor(2,0);
  1017  0080  01F4               	clrf	set_cursor@posicion
  1018  0081  3002               	movlw	2
  1019  0082  120A  118A  2285  120A  118A  	fcall	_set_cursor
  1020  0087                     l1820:
  1021                           
  1022                           ;Maestro.c: 114:         Escribir_caracterLCD(uni_ADC);
  1023  0087  087A               	movf	_uni_ADC,w
  1024  0088  120A  118A  2424  120A  118A  	fcall	_Escribir_caracterLCD
  1025  008D                     l1822:
  1026                           
  1027                           ;Maestro.c: 115:         Escribir_caracterLCD(dec_ADC);
  1028  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1029  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1030  008F  082F               	movf	_dec_ADC,w
  1031  0090  120A  118A  2424  120A  118A  	fcall	_Escribir_caracterLCD
  1032  0095                     l1824:
  1033                           
  1034                           ;Maestro.c: 116:         Escribir_caracterLCD(cen_ADC);
  1035  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0097  082E               	movf	_cen_ADC,w
  1038  0098  120A  118A  2424  120A  118A  	fcall	_Escribir_caracterLCD
  1039  009D  2826               	goto	l1794
  1040  009E  120A  118A  280C   	ljmp	start
  1041  00A1                     __end_of_main:
  1042                           
  1043                           	psect	text1
  1044  030B                     __ptext1:	
  1045 ;; *************** function _tabla_numASCII *****************
  1046 ;; Defined at:
  1047 ;;		line 168 in file "Maestro.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  a               1    wreg     unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  a               1    4[COMMON] unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      unsigned char 
  1054 ;; Registers used:
  1055 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         1       0       0       0       0
  1063 ;;      Temps:          2       0       0       0       0
  1064 ;;      Totals:         3       0       0       0       0
  1065 ;;Total ram usage:        3 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; Hardware stack levels required when called: 1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function _tabla_numASCII
  1077  030B                     _tabla_numASCII:
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1081                           ;tabla_numASCII@a stored from wreg
  1082  030B  00F4               	movwf	tabla_numASCII@a
  1083  030C                     l1558:
  1084                           
  1085                           ;Maestro.c: 169:     switch(a){
  1086  030C  2B21               	goto	l1622
  1087  030D                     l1560:
  1088                           
  1089                           ;Maestro.c: 171:             return 48;
  1090  030D  3030               	movlw	48
  1091  030E  2B49               	goto	l93
  1092  030F                     l1566:
  1093                           
  1094                           ;Maestro.c: 174:             return 49;
  1095  030F  3031               	movlw	49
  1096  0310  2B49               	goto	l93
  1097  0311                     l1572:
  1098                           
  1099                           ;Maestro.c: 177:             return 50;
  1100  0311  3032               	movlw	50
  1101  0312  2B49               	goto	l93
  1102  0313                     l1578:
  1103                           
  1104                           ;Maestro.c: 180:             return 51;
  1105  0313  3033               	movlw	51
  1106  0314  2B49               	goto	l93
  1107  0315                     l1584:
  1108                           
  1109                           ;Maestro.c: 183:             return 52;
  1110  0315  3034               	movlw	52
  1111  0316  2B49               	goto	l93
  1112  0317                     l1590:
  1113                           
  1114                           ;Maestro.c: 186:             return 53;
  1115  0317  3035               	movlw	53
  1116  0318  2B49               	goto	l93
  1117  0319                     l1596:
  1118                           
  1119                           ;Maestro.c: 189:             return 54;
  1120  0319  3036               	movlw	54
  1121  031A  2B49               	goto	l93
  1122  031B                     l1602:
  1123                           
  1124                           ;Maestro.c: 192:             return 55;
  1125  031B  3037               	movlw	55
  1126  031C  2B49               	goto	l93
  1127  031D                     l1608:
  1128                           
  1129                           ;Maestro.c: 195:             return 56;
  1130  031D  3038               	movlw	56
  1131  031E  2B49               	goto	l93
  1132  031F                     l1614:
  1133                           
  1134                           ;Maestro.c: 198:             return 57;
  1135  031F  3039               	movlw	57
  1136  0320  2B49               	goto	l93
  1137  0321                     l1622:
  1138  0321  0874               	movf	tabla_numASCII@a,w
  1139  0322  00F2               	movwf	??_tabla_numASCII
  1140  0323  01F3               	clrf	??_tabla_numASCII+1
  1141                           
  1142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1143                           ; Switch size 1, requested type "simple"
  1144                           ; Number of cases is 1, Range of values is 0 to 0
  1145                           ; switch strategies available:
  1146                           ; Name         Instructions Cycles
  1147                           ; simple_byte            4     3 (average)
  1148                           ; direct_byte           11     8 (fixed)
  1149                           ; jumptable            260     6 (fixed)
  1150                           ;	Chosen strategy is simple_byte
  1151  0324  0873               	movf	??_tabla_numASCII+1,w
  1152  0325  3A00               	xorlw	0	; case 0
  1153  0326  1903               	skipnz
  1154  0327  2B29               	goto	l1858
  1155  0328  2B49               	goto	l93
  1156  0329                     l1858:
  1157                           
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 10, Range of values is 0 to 9
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte           31    16 (average)
  1163                           ; direct_byte           38     8 (fixed)
  1164                           ; jumptable            260     6 (fixed)
  1165                           ;	Chosen strategy is simple_byte
  1166  0329  0872               	movf	??_tabla_numASCII,w
  1167  032A  3A00               	xorlw	0	; case 0
  1168  032B  1903               	skipnz
  1169  032C  2B0D               	goto	l1560
  1170  032D  3A01               	xorlw	1	; case 1
  1171  032E  1903               	skipnz
  1172  032F  2B0F               	goto	l1566
  1173  0330  3A03               	xorlw	3	; case 2
  1174  0331  1903               	skipnz
  1175  0332  2B11               	goto	l1572
  1176  0333  3A01               	xorlw	1	; case 3
  1177  0334  1903               	skipnz
  1178  0335  2B13               	goto	l1578
  1179  0336  3A07               	xorlw	7	; case 4
  1180  0337  1903               	skipnz
  1181  0338  2B15               	goto	l1584
  1182  0339  3A01               	xorlw	1	; case 5
  1183  033A  1903               	skipnz
  1184  033B  2B17               	goto	l1590
  1185  033C  3A03               	xorlw	3	; case 6
  1186  033D  1903               	skipnz
  1187  033E  2B19               	goto	l1596
  1188  033F  3A01               	xorlw	1	; case 7
  1189  0340  1903               	skipnz
  1190  0341  2B1B               	goto	l1602
  1191  0342  3A0F               	xorlw	15	; case 8
  1192  0343  1903               	skipnz
  1193  0344  2B1D               	goto	l1608
  1194  0345  3A01               	xorlw	1	; case 9
  1195  0346  1903               	skipnz
  1196  0347  2B1F               	goto	l1614
  1197  0348  2B49               	goto	l93
  1198  0349                     l93:
  1199  0349  0008               	return
  1200  034A                     __end_of_tabla_numASCII:
  1201                           
  1202                           	psect	text2
  1203  00A1                     __ptext2:	
  1204 ;; *************** function _setup *****************
  1205 ;; Defined at:
  1206 ;;		line 122 in file "Maestro.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0
  1222 ;;      Temps:          0       3       0       0       0
  1223 ;;      Totals:         0       3       0       0       0
  1224 ;;Total ram usage:        3 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 4
  1227 ;; This function calls:
  1228 ;;		_Escribir_stringLCD
  1229 ;;		_Iniciar_LCD
  1230 ;;		_InitMSSP
  1231 ;;		_Limpiar_pantallaLCD
  1232 ;;		_initOsc
  1233 ;;		_set_cursor
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _setup
  1241  00A1                     _setup:
  1242  00A1                     l1744:	
  1243                           ;incstack = 0
  1244                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1245                           
  1246                           
  1247                           ;Maestro.c: 125:     ANSEL = 0;
  1248  00A1  1683               	bsf	3,5	;RP0=1, select bank3
  1249  00A2  1703               	bsf	3,6	;RP1=1, select bank3
  1250  00A3  0188               	clrf	8	;volatile
  1251                           
  1252                           ;Maestro.c: 126:     ANSELH = 0;
  1253  00A4  0189               	clrf	9	;volatile
  1254                           
  1255                           ;Maestro.c: 128:     TRISA = 0;
  1256  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  1257  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  1258  00A7  0185               	clrf	5	;volatile
  1259                           
  1260                           ;Maestro.c: 129:     TRISB = 0;
  1261  00A8  0186               	clrf	6	;volatile
  1262                           
  1263                           ;Maestro.c: 130:     TRISD = 0;
  1264  00A9  0188               	clrf	8	;volatile
  1265                           
  1266                           ;Maestro.c: 131:     TRISE = 0;
  1267  00AA  0189               	clrf	9	;volatile
  1268                           
  1269                           ;Maestro.c: 133:     PORTA = 0;
  1270  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1271  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1272  00AD  0185               	clrf	5	;volatile
  1273                           
  1274                           ;Maestro.c: 134:     PORTD = 0;
  1275  00AE  0188               	clrf	8	;volatile
  1276                           
  1277                           ;Maestro.c: 135:     PORTE = 0;
  1278  00AF  0189               	clrf	9	;volatile
  1279                           
  1280                           ;Maestro.c: 136:     PORTB = 0;
  1281  00B0  0186               	clrf	6	;volatile
  1282                           
  1283                           ;Maestro.c: 137:     PORTC = 0;
  1284  00B1  0187               	clrf	7	;volatile
  1285  00B2                     l1746:
  1286                           
  1287                           ;Maestro.c: 140:     TRISC2 = 0;
  1288  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1289  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  1290  00B4  1107               	bcf	7,2	;volatile
  1291  00B5                     l1748:
  1292                           
  1293                           ;Maestro.c: 141:     PORTCbits.RC2 = 1;
  1294  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1295  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1296  00B7  1507               	bsf	7,2	;volatile
  1297  00B8                     l1750:
  1298                           
  1299                           ;Maestro.c: 143:     TRISC1 = 0;
  1300  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1301  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  1302  00BA  1087               	bcf	7,1	;volatile
  1303  00BB                     l1752:
  1304                           
  1305                           ;Maestro.c: 144:     PORTCbits.RC1 = 1;
  1306  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1307  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1308  00BD  1487               	bsf	7,1	;volatile
  1309  00BE                     l1754:
  1310                           
  1311                           ;Maestro.c: 146:     TRISC0 = 0;
  1312  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1313  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1314  00C0  1007               	bcf	7,0	;volatile
  1315  00C1                     l1756:
  1316                           
  1317                           ;Maestro.c: 147:     PORTCbits.RC0 = 1;
  1318  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1319  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1320  00C3  1407               	bsf	7,0	;volatile
  1321  00C4                     l1758:
  1322                           
  1323                           ;Maestro.c: 150:     initOsc(4);
  1324  00C4  3004               	movlw	4
  1325  00C5  120A  118A  237D  120A  118A  	fcall	_initOsc
  1326  00CA                     l1760:
  1327                           
  1328                           ;Maestro.c: 153:     InitMSSP(SPI_MASTER_FOSC4);
  1329  00CA  3000               	movlw	0
  1330  00CB  120A  118A  234A  120A  118A  	fcall	_InitMSSP
  1331  00D0                     l1762:
  1332                           
  1333                           ;Maestro.c: 156:     Iniciar_LCD();
  1334  00D0  120A  118A  2177  120A  118A  	fcall	_Iniciar_LCD
  1335  00D5                     l1764:
  1336                           
  1337                           ;Maestro.c: 157:     Limpiar_pantallaLCD();
  1338  00D5  120A  118A  23FC  120A  118A  	fcall	_Limpiar_pantallaLCD
  1339  00DA                     l1766:
  1340                           
  1341                           ;Maestro.c: 158:     set_cursor(1,0);
  1342  00DA  01F4               	clrf	set_cursor@posicion
  1343  00DB  3001               	movlw	1
  1344  00DC  120A  118A  2285  120A  118A  	fcall	_set_cursor
  1345  00E1                     l1768:
  1346                           
  1347                           ;Maestro.c: 159:     Escribir_stringLCD("Hola");
  1348  00E1  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1349  00E2  120A  118A  23D6  120A  118A  	fcall	_Escribir_stringLCD
  1350  00E7                     l1770:
  1351                           
  1352                           ;Maestro.c: 160:     set_cursor(2,2);
  1353  00E7  3002               	movlw	2
  1354  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1355  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1356  00EA  00A0               	movwf	??_setup
  1357  00EB  0820               	movf	??_setup,w
  1358  00EC  00F4               	movwf	set_cursor@posicion
  1359  00ED  3002               	movlw	2
  1360  00EE  120A  118A  2285  120A  118A  	fcall	_set_cursor
  1361  00F3                     l1772:
  1362                           
  1363                           ;Maestro.c: 161:     Escribir_stringLCD("Jose Santizo");
  1364  00F3  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1365  00F4  120A  118A  23D6  120A  118A  	fcall	_Escribir_stringLCD
  1366  00F9                     l1774:
  1367                           
  1368                           ;Maestro.c: 162:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1369  00F9  301A               	movlw	26
  1370  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1371  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1372  00FC  00A2               	movwf	??_setup+2
  1373  00FD  305E               	movlw	94
  1374  00FE  00A1               	movwf	??_setup+1
  1375  00FF  306D               	movlw	109
  1376  0100  00A0               	movwf	??_setup
  1377  0101                     u997:
  1378  0101  0BA0               	decfsz	??_setup,f
  1379  0102  2901               	goto	u997
  1380  0103  0BA1               	decfsz	??_setup+1,f
  1381  0104  2901               	goto	u997
  1382  0105  0BA2               	decfsz	??_setup+2,f
  1383  0106  2901               	goto	u997
  1384  0107  2908               	nop2
  1385  0108                     l1776:
  1386                           
  1387                           ;Maestro.c: 163:     Limpiar_pantallaLCD();
  1388  0108  120A  118A  23FC  120A  118A  	fcall	_Limpiar_pantallaLCD
  1389  010D                     l88:
  1390  010D  0008               	return
  1391  010E                     __end_of_setup:
  1392                           
  1393                           	psect	text3
  1394  0285                     __ptext3:	
  1395 ;; *************** function _set_cursor *****************
  1396 ;; Defined at:
  1397 ;;		line 77 in file "LCD.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  linea           1    wreg     unsigned char 
  1400 ;;  posicion        1    4[COMMON] unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  linea           1    7[COMMON] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         1       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0
  1415 ;;      Totals:         4       0       0       0       0
  1416 ;;Total ram usage:        4 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 3
  1419 ;; This function calls:
  1420 ;;		_Escribir_comandoLCD
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;;		_setup
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _set_cursor
  1429  0285                     _set_cursor:
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1433                           ;set_cursor@linea stored from wreg
  1434  0285  00F7               	movwf	set_cursor@linea
  1435  0286                     l1308:
  1436                           
  1437                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1438  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0288  1188               	bcf	8,3	;volatile
  1441  0289  1208               	bcf	8,4	;volatile
  1442  028A                     l1310:
  1443                           
  1444                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1445  028A  0377               	decf	set_cursor@linea,w
  1446  028B  1D03               	btfss	3,2
  1447  028C  2A8E               	goto	u511
  1448  028D  2A8F               	goto	u510
  1449  028E                     u511:
  1450  028E  2A96               	goto	l1314
  1451  028F                     u510:
  1452  028F                     l1312:
  1453  028F  3080               	movlw	128
  1454  0290  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1455  0295  2AA2               	goto	l1318
  1456  0296                     l1314:
  1457  0296  3002               	movlw	2
  1458  0297  0677               	xorwf	set_cursor@linea,w
  1459  0298  1D03               	btfss	3,2
  1460  0299  2A9B               	goto	u521
  1461  029A  2A9C               	goto	u520
  1462  029B                     u521:
  1463  029B  2AA2               	goto	l1318
  1464  029C                     u520:
  1465  029C                     l1316:
  1466  029C  30C0               	movlw	192
  1467  029D  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1468  02A2                     l1318:
  1469                           
  1470                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1471  02A2  3068               	movlw	104
  1472  02A3  00F6               	movwf	??_set_cursor+1
  1473  02A4  30E4               	movlw	228
  1474  02A5  00F5               	movwf	??_set_cursor
  1475  02A6                     u1007:
  1476  02A6  0BF5               	decfsz	??_set_cursor,f
  1477  02A7  2AA6               	goto	u1007
  1478  02A8  0BF6               	decfsz	??_set_cursor+1,f
  1479  02A9  2AA6               	goto	u1007
  1480  02AA  0000               	nop
  1481  02AB                     l1320:
  1482                           
  1483                           ;LCD.c: 86:     if (posicion != 0){
  1484  02AB  0874               	movf	set_cursor@posicion,w
  1485  02AC  1903               	btfsc	3,2
  1486  02AD  2AAF               	goto	u531
  1487  02AE  2AB0               	goto	u530
  1488  02AF                     u531:
  1489  02AF  2AC7               	goto	l189
  1490  02B0                     u530:
  1491  02B0  2AB9               	goto	l1328
  1492  02B1                     l1324:
  1493                           
  1494                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1495  02B1  3014               	movlw	20
  1496  02B2  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1497  02B7                     l1326:
  1498                           
  1499                           ;LCD.c: 89:             posicion--;
  1500  02B7  3001               	movlw	1
  1501  02B8  02F4               	subwf	set_cursor@posicion,f
  1502  02B9                     l1328:
  1503                           
  1504                           ;LCD.c: 87:         while(posicion > 0){
  1505  02B9  0874               	movf	set_cursor@posicion,w
  1506  02BA  1D03               	btfss	3,2
  1507  02BB  2ABD               	goto	u541
  1508  02BC  2ABE               	goto	u540
  1509  02BD                     u541:
  1510  02BD  2AB1               	goto	l1324
  1511  02BE                     u540:
  1512  02BE                     l1330:
  1513                           
  1514                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1515  02BE  3068               	movlw	104
  1516  02BF  00F6               	movwf	??_set_cursor+1
  1517  02C0  30E4               	movlw	228
  1518  02C1  00F5               	movwf	??_set_cursor
  1519  02C2                     u1017:
  1520  02C2  0BF5               	decfsz	??_set_cursor,f
  1521  02C3  2AC2               	goto	u1017
  1522  02C4  0BF6               	decfsz	??_set_cursor+1,f
  1523  02C5  2AC2               	goto	u1017
  1524  02C6  0000               	nop
  1525  02C7                     l189:
  1526  02C7  0008               	return
  1527  02C8                     __end_of_set_cursor:
  1528                           
  1529                           	psect	text4
  1530  037D                     __ptext4:	
  1531 ;; *************** function _initOsc *****************
  1532 ;; Defined at:
  1533 ;;		line 12 in file "Oscilador.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  Valor           1    wreg     unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  Valor           1    2[COMMON] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0
  1550 ;;      Totals:         1       0       0       0       0
  1551 ;;Total ram usage:        1 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 1
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_setup
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _initOsc
  1563  037D                     _initOsc:
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1567                           ;initOsc@Valor stored from wreg
  1568  037D  00F2               	movwf	initOsc@Valor
  1569  037E                     l1342:
  1570                           
  1571                           ;Oscilador.c: 14:     if(Valor == 8){
  1572  037E  3008               	movlw	8
  1573  037F  0672               	xorwf	initOsc@Valor,w
  1574  0380  1D03               	btfss	3,2
  1575  0381  2B83               	goto	u561
  1576  0382  2B84               	goto	u560
  1577  0383                     u561:
  1578  0383  2B89               	goto	l1346
  1579  0384                     u560:
  1580  0384                     l1344:
  1581                           
  1582                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1583  0384  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0385  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0386  160F               	bsf	15,4	;volatile
  1586                           
  1587                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1588  0387  168F               	bsf	15,5	;volatile
  1589                           
  1590                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1591  0388  170F               	bsf	15,6	;volatile
  1592  0389                     l1346:
  1593                           
  1594                           ;Oscilador.c: 19:     if(Valor == 4){
  1595  0389  3004               	movlw	4
  1596  038A  0672               	xorwf	initOsc@Valor,w
  1597  038B  1D03               	btfss	3,2
  1598  038C  2B8E               	goto	u571
  1599  038D  2B8F               	goto	u570
  1600  038E                     u571:
  1601  038E  2B94               	goto	l1350
  1602  038F                     u570:
  1603  038F                     l1348:
  1604                           
  1605                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1606  038F  1683               	bsf	3,5	;RP0=1, select bank1
  1607  0390  1303               	bcf	3,6	;RP1=0, select bank1
  1608  0391  120F               	bcf	15,4	;volatile
  1609                           
  1610                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1611  0392  168F               	bsf	15,5	;volatile
  1612                           
  1613                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1614  0393  170F               	bsf	15,6	;volatile
  1615  0394                     l1350:
  1616                           
  1617                           ;Oscilador.c: 24:     if(Valor == 2){
  1618  0394  3002               	movlw	2
  1619  0395  0672               	xorwf	initOsc@Valor,w
  1620  0396  1D03               	btfss	3,2
  1621  0397  2B99               	goto	u581
  1622  0398  2B9A               	goto	u580
  1623  0399                     u581:
  1624  0399  2B9F               	goto	l1354
  1625  039A                     u580:
  1626  039A                     l1352:
  1627                           
  1628                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1629  039A  1683               	bsf	3,5	;RP0=1, select bank1
  1630  039B  1303               	bcf	3,6	;RP1=0, select bank1
  1631  039C  160F               	bsf	15,4	;volatile
  1632                           
  1633                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1634  039D  128F               	bcf	15,5	;volatile
  1635                           
  1636                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1637  039E  170F               	bsf	15,6	;volatile
  1638  039F                     l1354:
  1639                           
  1640                           ;Oscilador.c: 29:     if(Valor == 1){
  1641  039F  0372               	decf	initOsc@Valor,w
  1642  03A0  1D03               	btfss	3,2
  1643  03A1  2BA3               	goto	u591
  1644  03A2  2BA4               	goto	u590
  1645  03A3                     u591:
  1646  03A3  2BA9               	goto	l197
  1647  03A4                     u590:
  1648  03A4                     l1356:
  1649                           
  1650                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1651  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  1652  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  1653  03A6  120F               	bcf	15,4	;volatile
  1654                           
  1655                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1656  03A7  128F               	bcf	15,5	;volatile
  1657                           
  1658                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1659  03A8  170F               	bsf	15,6	;volatile
  1660  03A9                     l197:	
  1661                           ;Oscilador.c: 33:     }
  1662                           
  1663                           
  1664                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1665  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  1666  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  1667  03AB  140F               	bsf	15,0	;volatile
  1668  03AC                     l198:
  1669  03AC  0008               	return
  1670  03AD                     __end_of_initOsc:
  1671                           
  1672                           	psect	text5
  1673  03FC                     __ptext5:	
  1674 ;; *************** function _Limpiar_pantallaLCD *****************
  1675 ;; Defined at:
  1676 ;;		line 69 in file "LCD.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0
  1692 ;;      Temps:          2       0       0       0       0
  1693 ;;      Totals:         2       0       0       0       0
  1694 ;;Total ram usage:        2 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 3
  1697 ;; This function calls:
  1698 ;;		_Escribir_comandoLCD
  1699 ;; This function is called by:
  1700 ;;		_setup
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function _Limpiar_pantallaLCD
  1706  03FC                     _Limpiar_pantallaLCD:
  1707  03FC                     l1414:	
  1708                           ;incstack = 0
  1709                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  1710                           
  1711                           
  1712                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1713  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1714  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1715  03FE  1188               	bcf	8,3	;volatile
  1716  03FF  1208               	bcf	8,4	;volatile
  1717  0400                     l1416:
  1718                           
  1719                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  1720  0400  3001               	movlw	1
  1721  0401  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1722  0406                     l1418:
  1723                           
  1724                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1725  0406  301A               	movlw	26
  1726  0407  00F5               	movwf	??_Limpiar_pantallaLCD+1
  1727  0408  30F8               	movlw	248
  1728  0409  00F4               	movwf	??_Limpiar_pantallaLCD
  1729  040A                     u1027:
  1730  040A  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  1731  040B  2C0A               	goto	u1027
  1732  040C  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  1733  040D  2C0A               	goto	u1027
  1734  040E  0000               	nop
  1735  040F                     l1420:
  1736                           
  1737                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  1738  040F  3002               	movlw	2
  1739  0410  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1740  0415                     l179:
  1741  0415  0008               	return
  1742  0416                     __end_of_Limpiar_pantallaLCD:
  1743                           
  1744                           	psect	text6
  1745  034A                     __ptext6:	
  1746 ;; *************** function _InitMSSP *****************
  1747 ;; Defined at:
  1748 ;;		line 10 in file "SPI.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  Modo            1    wreg     enum E1264
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  Modo            1    2[COMMON] enum E1264
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       0       0       0       0
  1763 ;;      Locals:         1       0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0
  1765 ;;      Totals:         1       0       0       0       0
  1766 ;;Total ram usage:        1 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_setup
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _InitMSSP
  1778  034A                     _InitMSSP:
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1782                           ;InitMSSP@Modo stored from wreg
  1783  034A  00F2               	movwf	InitMSSP@Modo
  1784  034B                     l1358:
  1785                           
  1786                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1787  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1788  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1789  034D  0194               	clrf	20	;volatile
  1790                           
  1791                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1792  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1793  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1794  0350  0194               	clrf	20	;volatile
  1795  0351                     l1360:
  1796                           
  1797                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1798  0351  1294               	bcf	20,5	;volatile
  1799  0352                     l1362:
  1800                           
  1801                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1802  0352  1694               	bsf	20,5	;volatile
  1803  0353                     l1364:
  1804                           
  1805                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1806  0353  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0354  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0355  1287               	bcf	7,5	;volatile
  1809  0356                     l1366:
  1810                           
  1811                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1812  0356  1607               	bsf	7,4	;volatile
  1813  0357                     l1368:
  1814                           
  1815                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1816  0357  3006               	movlw	6
  1817  0358  0272               	subwf	InitMSSP@Modo,w
  1818  0359  1803               	skipnc
  1819  035A  2B5C               	goto	u601
  1820  035B  2B5D               	goto	u600
  1821  035C                     u601:
  1822  035C  2B66               	goto	l1374
  1823  035D                     u600:
  1824  035D                     l1370:
  1825                           
  1826                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1827  035D  3004               	movlw	4
  1828  035E  0272               	subwf	InitMSSP@Modo,w
  1829  035F  1803               	skipnc
  1830  0360  2B62               	goto	u611
  1831  0361  2B63               	goto	u610
  1832  0362                     u611:
  1833  0362  2B65               	goto	l124
  1834  0363                     u610:
  1835  0363                     l1372:
  1836                           
  1837                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1838  0363  1187               	bcf	7,3	;volatile
  1839                           
  1840                           ;SPI.c: 29:         }
  1841  0364  2B66               	goto	l1374
  1842  0365                     l124:	
  1843                           ;SPI.c: 30:         else {
  1844                           
  1845                           
  1846                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1847  0365  1587               	bsf	7,3	;volatile
  1848  0366                     l1374:
  1849                           
  1850                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1851  0366  3004               	movlw	4
  1852  0367  0672               	xorwf	InitMSSP@Modo,w
  1853  0368  1D03               	btfss	3,2
  1854  0369  2B6B               	goto	u621
  1855  036A  2B6C               	goto	u620
  1856  036B                     u621:
  1857  036B  2B6D               	goto	l1378
  1858  036C                     u620:
  1859  036C                     l1376:
  1860  036C  1685               	bsf	5,5	;volatile
  1861  036D                     l1378:
  1862                           
  1863                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1864  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1865  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1866  036F  0814               	movf	20,w	;volatile
  1867  0370  0472               	iorwf	InitMSSP@Modo,w	;volatile
  1868  0371  0094               	movwf	20	;volatile
  1869  0372                     l1380:
  1870                           
  1871                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  1872  0372  1683               	bsf	3,5	;RP0=1, select bank1
  1873  0373  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0374  118C               	bcf	12,3	;volatile
  1875  0375                     l1382:
  1876                           
  1877                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1878  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0377  1214               	bcf	20,4	;volatile
  1881  0378                     l1384:
  1882                           
  1883                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1884  0378  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0379  1303               	bcf	3,6	;RP1=0, select bank1
  1886  037A  1314               	bcf	20,6	;volatile
  1887  037B                     l1386:
  1888                           
  1889                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1890  037B  1394               	bcf	20,7	;volatile
  1891  037C                     l127:
  1892  037C  0008               	return
  1893  037D                     __end_of_InitMSSP:
  1894                           
  1895                           	psect	text7
  1896  0177                     __ptext7:	
  1897 ;; *************** function _Iniciar_LCD *****************
  1898 ;; Defined at:
  1899 ;;		line 30 in file "LCD.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          2       0       0       0       0
  1916 ;;      Totals:         2       0       0       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 3
  1920 ;; This function calls:
  1921 ;;		_Escribir_comandoLCD
  1922 ;; This function is called by:
  1923 ;;		_setup
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _Iniciar_LCD
  1929  0177                     _Iniciar_LCD:
  1930  0177                     l1388:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  1933                           
  1934                           
  1935                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  1936  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0179  1188               	bcf	8,3	;volatile
  1939                           
  1940                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  1941  017A  1208               	bcf	8,4	;volatile
  1942  017B                     l1390:
  1943                           
  1944                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  1945  017B  3025               	movlw	37
  1946  017C  00F5               	movwf	??_Iniciar_LCD+1
  1947  017D  305B               	movlw	91
  1948  017E  00F4               	movwf	??_Iniciar_LCD
  1949  017F                     u1037:
  1950  017F  0BF4               	decfsz	??_Iniciar_LCD,f
  1951  0180  297F               	goto	u1037
  1952  0181  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1953  0182  297F               	goto	u1037
  1954  0183  2984               	nop2
  1955  0184                     l1392:
  1956                           
  1957                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  1958  0184  3030               	movlw	48
  1959  0185  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1960  018A                     l1394:
  1961                           
  1962                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1963  018A  300B               	movlw	11
  1964  018B  00F5               	movwf	??_Iniciar_LCD+1
  1965  018C  3062               	movlw	98
  1966  018D  00F4               	movwf	??_Iniciar_LCD
  1967  018E                     u1047:
  1968  018E  0BF4               	decfsz	??_Iniciar_LCD,f
  1969  018F  298E               	goto	u1047
  1970  0190  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1971  0191  298E               	goto	u1047
  1972  0192  0000               	nop
  1973                           
  1974                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  1975  0193  3030               	movlw	48
  1976  0194  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1977  0199                     l1396:
  1978                           
  1979                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1980  0199  3042               	movlw	66
  1981  019A  00F4               	movwf	??_Iniciar_LCD
  1982  019B                     u1057:
  1983  019B  0BF4               	decfsz	??_Iniciar_LCD,f
  1984  019C  299B               	goto	u1057
  1985  019D  0000               	nop
  1986  019E                     l1398:
  1987                           
  1988                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  1989  019E  3030               	movlw	48
  1990  019F  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  1991                           
  1992                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1993  01A4  3042               	movlw	66
  1994  01A5  00F4               	movwf	??_Iniciar_LCD
  1995  01A6                     u1067:
  1996  01A6  0BF4               	decfsz	??_Iniciar_LCD,f
  1997  01A7  29A6               	goto	u1067
  1998  01A8  0000               	nop
  1999  01A9                     l1400:
  2000                           
  2001                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2002  01A9  3038               	movlw	56
  2003  01AA  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2004  01AF                     l1402:
  2005                           
  2006                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2007  01AF  3042               	movlw	66
  2008  01B0  00F4               	movwf	??_Iniciar_LCD
  2009  01B1                     u1077:
  2010  01B1  0BF4               	decfsz	??_Iniciar_LCD,f
  2011  01B2  29B1               	goto	u1077
  2012  01B3  0000               	nop
  2013                           
  2014                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2015  01B4  3008               	movlw	8
  2016  01B5  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2017  01BA                     l1404:
  2018                           
  2019                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2020  01BA  3042               	movlw	66
  2021  01BB  00F4               	movwf	??_Iniciar_LCD
  2022  01BC                     u1087:
  2023  01BC  0BF4               	decfsz	??_Iniciar_LCD,f
  2024  01BD  29BC               	goto	u1087
  2025  01BE  0000               	nop
  2026  01BF                     l1406:
  2027                           
  2028                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2029  01BF  3001               	movlw	1
  2030  01C0  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2031                           
  2032                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2033  01C5  3042               	movlw	66
  2034  01C6  00F4               	movwf	??_Iniciar_LCD
  2035  01C7                     u1097:
  2036  01C7  0BF4               	decfsz	??_Iniciar_LCD,f
  2037  01C8  29C7               	goto	u1097
  2038  01C9  0000               	nop
  2039  01CA                     l1408:
  2040                           
  2041                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2042  01CA  3006               	movlw	6
  2043  01CB  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2044  01D0                     l1410:
  2045                           
  2046                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2047  01D0  3042               	movlw	66
  2048  01D1  00F4               	movwf	??_Iniciar_LCD
  2049  01D2                     u1107:
  2050  01D2  0BF4               	decfsz	??_Iniciar_LCD,f
  2051  01D3  29D2               	goto	u1107
  2052  01D4  0000               	nop
  2053                           
  2054                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2055  01D5  300C               	movlw	12
  2056  01D6  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2057  01DB                     l167:
  2058  01DB  0008               	return
  2059  01DC                     __end_of_Iniciar_LCD:
  2060                           
  2061                           	psect	text8
  2062  03D6                     __ptext8:	
  2063 ;; *************** function _Escribir_stringLCD *****************
  2064 ;; Defined at:
  2065 ;;		line 55 in file "LCD.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  d               1    wreg     PTR const unsigned char 
  2068 ;;		 -> STR_3(13), STR_2(5), STR_1(17), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  d               1    6[COMMON] PTR const unsigned char 
  2071 ;;		 -> STR_3(13), STR_2(5), STR_1(17), 
  2072 ;;  i               1    5[COMMON] unsigned char 
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2082 ;;      Params:         0       0       0       0       0
  2083 ;;      Locals:         2       0       0       0       0
  2084 ;;      Temps:          1       0       0       0       0
  2085 ;;      Totals:         3       0       0       0       0
  2086 ;;Total ram usage:        3 bytes
  2087 ;; Hardware stack levels used: 1
  2088 ;; Hardware stack levels required when called: 3
  2089 ;; This function calls:
  2090 ;;		_Escribir_comandoLCD
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;;		_setup
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           
  2098                           ;psect for function _Escribir_stringLCD
  2099  03D6                     _Escribir_stringLCD:
  2100                           
  2101                           ;incstack = 0
  2102                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2103                           ;Escribir_stringLCD@d stored from wreg
  2104  03D6  00F6               	movwf	Escribir_stringLCD@d
  2105  03D7                     l1332:
  2106                           
  2107                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  2108  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2109  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2110  03D9  1588               	bsf	8,3	;volatile
  2111  03DA  1208               	bcf	8,4	;volatile
  2112  03DB                     l1334:
  2113                           
  2114                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2115  03DB  01F5               	clrf	Escribir_stringLCD@i
  2116  03DC  2BEE               	goto	l1340
  2117  03DD                     l1336:
  2118                           
  2119                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2120  03DD  0875               	movf	Escribir_stringLCD@i,w
  2121  03DE  0776               	addwf	Escribir_stringLCD@d,w
  2122  03DF  0084               	movwf	4
  2123  03E0  120A  118A  23AD  120A  118A  	fcall	stringdir
  2124  03E5  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2125  03EA                     l1338:
  2126                           
  2127                           ;LCD.c: 60:     }
  2128  03EA  3001               	movlw	1
  2129  03EB  00F4               	movwf	??_Escribir_stringLCD
  2130  03EC  0874               	movf	??_Escribir_stringLCD,w
  2131  03ED  07F5               	addwf	Escribir_stringLCD@i,f
  2132  03EE                     l1340:
  2133  03EE  0875               	movf	Escribir_stringLCD@i,w
  2134  03EF  0776               	addwf	Escribir_stringLCD@d,w
  2135  03F0  0084               	movwf	4
  2136  03F1  120A  118A  23AD  120A  118A  	fcall	stringdir
  2137  03F6  3A00               	xorlw	0
  2138  03F7  1D03               	skipz
  2139  03F8  2BFA               	goto	u551
  2140  03F9  2BFB               	goto	u550
  2141  03FA                     u551:
  2142  03FA  2BDD               	goto	l1336
  2143  03FB                     u550:
  2144  03FB                     l173:
  2145  03FB  0008               	return
  2146  03FC                     __end_of_Escribir_stringLCD:
  2147                           
  2148                           	psect	text9
  2149  0235                     __ptext9:	
  2150 ;; *************** function _divisor_dec *****************
  2151 ;; Defined at:
  2152 ;;		line 76 in file "7SEG-hex.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  b               1    wreg     unsigned char 
  2155 ;;  dig1            1    9[COMMON] PTR unsigned char 
  2156 ;;		 -> ADC_dig(1), 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  b               1    8[BANK0 ] unsigned char 
  2159 ;;  n               2    9[BANK0 ] int 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         1       0       0       0       0
  2170 ;;      Locals:         0       3       0       0       0
  2171 ;;      Temps:          0       4       0       0       0
  2172 ;;      Totals:         1       7       0       0       0
  2173 ;;Total ram usage:        8 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 2
  2176 ;; This function calls:
  2177 ;;		___awdiv
  2178 ;;		___awmod
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _divisor_dec
  2186  0235                     _divisor_dec:
  2187                           
  2188                           ;incstack = 0
  2189                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2190                           ;divisor_dec@b stored from wreg
  2191  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0237  00A8               	movwf	divisor_dec@b
  2194  0238                     l1778:
  2195  0238  01A9               	clrf	divisor_dec@n
  2196  0239  01AA               	clrf	divisor_dec@n+1
  2197  023A                     l1784:
  2198  023A  300A               	movlw	10
  2199  023B  00F2               	movwf	___awmod@divisor
  2200  023C  3000               	movlw	0
  2201  023D  00F3               	movwf	___awmod@divisor+1
  2202  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2203  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0240  0828               	movf	divisor_dec@b,w
  2205  0241  00A4               	movwf	??_divisor_dec
  2206  0242  01A5               	clrf	??_divisor_dec+1
  2207  0243  0824               	movf	??_divisor_dec,w
  2208  0244  00F4               	movwf	___awmod@dividend
  2209  0245  0825               	movf	??_divisor_dec+1,w
  2210  0246  00F5               	movwf	___awmod@dividend+1
  2211  0247  120A  118A  21DC  120A  118A  	fcall	___awmod
  2212  024C  0872               	movf	?___awmod,w
  2213  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2214  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2215  024F  00A6               	movwf	??_divisor_dec+2
  2216  0250  0829               	movf	divisor_dec@n,w
  2217  0251  0779               	addwf	divisor_dec@dig1,w
  2218  0252  00A7               	movwf	??_divisor_dec+3
  2219  0253  0827               	movf	??_divisor_dec+3,w
  2220  0254  0084               	movwf	4
  2221  0255  0826               	movf	??_divisor_dec+2,w
  2222  0256  0080               	movwf	0
  2223  0257  300A               	movlw	10
  2224  0258  00F2               	movwf	___awdiv@divisor
  2225  0259  3000               	movlw	0
  2226  025A  00F3               	movwf	___awdiv@divisor+1
  2227  025B  0829               	movf	divisor_dec@n,w
  2228  025C  0779               	addwf	divisor_dec@dig1,w
  2229  025D  00A4               	movwf	??_divisor_dec
  2230  025E  0824               	movf	??_divisor_dec,w
  2231  025F  0084               	movwf	4
  2232  0260  0800               	movf	0,w
  2233  0261  0228               	subwf	divisor_dec@b,w
  2234  0262  00F4               	movwf	___awdiv@dividend
  2235  0263  01F5               	clrf	___awdiv@dividend+1
  2236  0264  1C03               	skipc
  2237  0265  03F5               	decf	___awdiv@dividend+1,f
  2238  0266  120A  118A  210E  120A  118A  	fcall	___awdiv
  2239  026B  0872               	movf	?___awdiv,w
  2240  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2241  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2242  026E  00A5               	movwf	??_divisor_dec+1
  2243  026F  0825               	movf	??_divisor_dec+1,w
  2244  0270  00A8               	movwf	divisor_dec@b
  2245  0271                     l1786:
  2246  0271  3001               	movlw	1
  2247  0272  07A9               	addwf	divisor_dec@n,f
  2248  0273  1803               	skipnc
  2249  0274  0AAA               	incf	divisor_dec@n+1,f
  2250  0275  3000               	movlw	0
  2251  0276  07AA               	addwf	divisor_dec@n+1,f
  2252  0277                     l1788:
  2253  0277  082A               	movf	divisor_dec@n+1,w
  2254  0278  3A80               	xorlw	128
  2255  0279  00FF               	movwf	btemp+1
  2256  027A  3080               	movlw	128
  2257  027B  027F               	subwf	btemp+1,w
  2258  027C  1D03               	skipz
  2259  027D  2A80               	goto	u955
  2260  027E  3003               	movlw	3
  2261  027F  0229               	subwf	divisor_dec@n,w
  2262  0280                     u955:
  2263  0280  1C03               	skipc
  2264  0281  2A83               	goto	u951
  2265  0282  2A84               	goto	u950
  2266  0283                     u951:
  2267  0283  2A3A               	goto	l1784
  2268  0284                     u950:
  2269  0284                     l230:
  2270  0284  0008               	return
  2271  0285                     __end_of_divisor_dec:
  2272                           
  2273                           	psect	text10
  2274  01DC                     __ptext10:	
  2275 ;; *************** function ___awmod *****************
  2276 ;; Defined at:
  2277 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  divisor         2    2[COMMON] int 
  2280 ;;  dividend        2    4[COMMON] int 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;  sign            1    8[COMMON] unsigned char 
  2283 ;;  counter         1    7[COMMON] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  2    2[COMMON] int 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2293 ;;      Params:         4       0       0       0       0
  2294 ;;      Locals:         2       0       0       0       0
  2295 ;;      Temps:          1       0       0       0       0
  2296 ;;      Totals:         7       0       0       0       0
  2297 ;;Total ram usage:        7 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		_divisor_dec
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           
  2308                           ;psect for function ___awmod
  2309  01DC                     ___awmod:
  2310  01DC                     l1466:	
  2311                           ;incstack = 0
  2312                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2313                           
  2314  01DC  01F8               	clrf	___awmod@sign
  2315  01DD                     l1468:
  2316  01DD  1FF5               	btfss	___awmod@dividend+1,7
  2317  01DE  29E0               	goto	u731
  2318  01DF  29E1               	goto	u730
  2319  01E0                     u731:
  2320  01E0  29E8               	goto	l1474
  2321  01E1                     u730:
  2322  01E1                     l1470:
  2323  01E1  09F4               	comf	___awmod@dividend,f
  2324  01E2  09F5               	comf	___awmod@dividend+1,f
  2325  01E3  0AF4               	incf	___awmod@dividend,f
  2326  01E4  1903               	skipnz
  2327  01E5  0AF5               	incf	___awmod@dividend+1,f
  2328  01E6                     l1472:
  2329  01E6  01F8               	clrf	___awmod@sign
  2330  01E7  0AF8               	incf	___awmod@sign,f
  2331  01E8                     l1474:
  2332  01E8  1FF3               	btfss	___awmod@divisor+1,7
  2333  01E9  29EB               	goto	u741
  2334  01EA  29EC               	goto	u740
  2335  01EB                     u741:
  2336  01EB  29F1               	goto	l1478
  2337  01EC                     u740:
  2338  01EC                     l1476:
  2339  01EC  09F2               	comf	___awmod@divisor,f
  2340  01ED  09F3               	comf	___awmod@divisor+1,f
  2341  01EE  0AF2               	incf	___awmod@divisor,f
  2342  01EF  1903               	skipnz
  2343  01F0  0AF3               	incf	___awmod@divisor+1,f
  2344  01F1                     l1478:
  2345  01F1  0872               	movf	___awmod@divisor,w
  2346  01F2  0473               	iorwf	___awmod@divisor+1,w
  2347  01F3  1903               	btfsc	3,2
  2348  01F4  29F6               	goto	u751
  2349  01F5  29F7               	goto	u750
  2350  01F6                     u751:
  2351  01F6  2A26               	goto	l1496
  2352  01F7                     u750:
  2353  01F7                     l1480:
  2354  01F7  01F7               	clrf	___awmod@counter
  2355  01F8  0AF7               	incf	___awmod@counter,f
  2356  01F9  2A05               	goto	l1486
  2357  01FA                     l1482:
  2358  01FA  3001               	movlw	1
  2359  01FB                     u765:
  2360  01FB  1003               	clrc
  2361  01FC  0DF2               	rlf	___awmod@divisor,f
  2362  01FD  0DF3               	rlf	___awmod@divisor+1,f
  2363  01FE  3EFF               	addlw	-1
  2364  01FF  1D03               	skipz
  2365  0200  29FB               	goto	u765
  2366  0201                     l1484:
  2367  0201  3001               	movlw	1
  2368  0202  00F6               	movwf	??___awmod
  2369  0203  0876               	movf	??___awmod,w
  2370  0204  07F7               	addwf	___awmod@counter,f
  2371  0205                     l1486:
  2372  0205  1FF3               	btfss	___awmod@divisor+1,7
  2373  0206  2A08               	goto	u771
  2374  0207  2A09               	goto	u770
  2375  0208                     u771:
  2376  0208  29FA               	goto	l1482
  2377  0209                     u770:
  2378  0209                     l1488:
  2379  0209  0873               	movf	___awmod@divisor+1,w
  2380  020A  0275               	subwf	___awmod@dividend+1,w
  2381  020B  1D03               	skipz
  2382  020C  2A0F               	goto	u785
  2383  020D  0872               	movf	___awmod@divisor,w
  2384  020E  0274               	subwf	___awmod@dividend,w
  2385  020F                     u785:
  2386  020F  1C03               	skipc
  2387  0210  2A12               	goto	u781
  2388  0211  2A13               	goto	u780
  2389  0212                     u781:
  2390  0212  2A19               	goto	l1492
  2391  0213                     u780:
  2392  0213                     l1490:
  2393  0213  0872               	movf	___awmod@divisor,w
  2394  0214  02F4               	subwf	___awmod@dividend,f
  2395  0215  0873               	movf	___awmod@divisor+1,w
  2396  0216  1C03               	skipc
  2397  0217  03F5               	decf	___awmod@dividend+1,f
  2398  0218  02F5               	subwf	___awmod@dividend+1,f
  2399  0219                     l1492:
  2400  0219  3001               	movlw	1
  2401  021A                     u795:
  2402  021A  1003               	clrc
  2403  021B  0CF3               	rrf	___awmod@divisor+1,f
  2404  021C  0CF2               	rrf	___awmod@divisor,f
  2405  021D  3EFF               	addlw	-1
  2406  021E  1D03               	skipz
  2407  021F  2A1A               	goto	u795
  2408  0220                     l1494:
  2409  0220  3001               	movlw	1
  2410  0221  02F7               	subwf	___awmod@counter,f
  2411  0222  1D03               	btfss	3,2
  2412  0223  2A25               	goto	u801
  2413  0224  2A26               	goto	u800
  2414  0225                     u801:
  2415  0225  2A09               	goto	l1488
  2416  0226                     u800:
  2417  0226                     l1496:
  2418  0226  0878               	movf	___awmod@sign,w
  2419  0227  1903               	btfsc	3,2
  2420  0228  2A2A               	goto	u811
  2421  0229  2A2B               	goto	u810
  2422  022A                     u811:
  2423  022A  2A30               	goto	l1500
  2424  022B                     u810:
  2425  022B                     l1498:
  2426  022B  09F4               	comf	___awmod@dividend,f
  2427  022C  09F5               	comf	___awmod@dividend+1,f
  2428  022D  0AF4               	incf	___awmod@dividend,f
  2429  022E  1903               	skipnz
  2430  022F  0AF5               	incf	___awmod@dividend+1,f
  2431  0230                     l1500:
  2432  0230  0875               	movf	___awmod@dividend+1,w
  2433  0231  00F3               	movwf	?___awmod+1
  2434  0232  0874               	movf	___awmod@dividend,w
  2435  0233  00F2               	movwf	?___awmod
  2436  0234                     l482:
  2437  0234  0008               	return
  2438  0235                     __end_of___awmod:
  2439                           
  2440                           	psect	text11
  2441  010E                     __ptext11:	
  2442 ;; *************** function ___awdiv *****************
  2443 ;; Defined at:
  2444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  divisor         2    2[COMMON] int 
  2447 ;;  dividend        2    4[COMMON] int 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  quotient        2    2[BANK0 ] int 
  2450 ;;  sign            1    1[BANK0 ] unsigned char 
  2451 ;;  counter         1    0[BANK0 ] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2    2[COMMON] int 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2461 ;;      Params:         4       0       0       0       0
  2462 ;;      Locals:         0       4       0       0       0
  2463 ;;      Temps:          1       0       0       0       0
  2464 ;;      Totals:         5       4       0       0       0
  2465 ;;Total ram usage:        9 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_divisor_dec
  2472 ;;		_divisor_hex
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function ___awdiv
  2478  010E                     ___awdiv:
  2479  010E                     l1700:	
  2480                           ;incstack = 0
  2481                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2482                           
  2483  010E  1283               	bcf	3,5	;RP0=0, select bank0
  2484  010F  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0110  01A1               	clrf	___awdiv@sign
  2486  0111                     l1702:
  2487  0111  1FF3               	btfss	___awdiv@divisor+1,7
  2488  0112  2914               	goto	u851
  2489  0113  2915               	goto	u850
  2490  0114                     u851:
  2491  0114  291C               	goto	l1708
  2492  0115                     u850:
  2493  0115                     l1704:
  2494  0115  09F2               	comf	___awdiv@divisor,f
  2495  0116  09F3               	comf	___awdiv@divisor+1,f
  2496  0117  0AF2               	incf	___awdiv@divisor,f
  2497  0118  1903               	skipnz
  2498  0119  0AF3               	incf	___awdiv@divisor+1,f
  2499  011A                     l1706:
  2500  011A  01A1               	clrf	___awdiv@sign
  2501  011B  0AA1               	incf	___awdiv@sign,f
  2502  011C                     l1708:
  2503  011C  1FF5               	btfss	___awdiv@dividend+1,7
  2504  011D  291F               	goto	u861
  2505  011E  2920               	goto	u860
  2506  011F                     u861:
  2507  011F  2929               	goto	l1714
  2508  0120                     u860:
  2509  0120                     l1710:
  2510  0120  09F4               	comf	___awdiv@dividend,f
  2511  0121  09F5               	comf	___awdiv@dividend+1,f
  2512  0122  0AF4               	incf	___awdiv@dividend,f
  2513  0123  1903               	skipnz
  2514  0124  0AF5               	incf	___awdiv@dividend+1,f
  2515  0125                     l1712:
  2516  0125  3001               	movlw	1
  2517  0126  00F6               	movwf	??___awdiv
  2518  0127  0876               	movf	??___awdiv,w
  2519  0128  06A1               	xorwf	___awdiv@sign,f
  2520  0129                     l1714:
  2521  0129  01A2               	clrf	___awdiv@quotient
  2522  012A  01A3               	clrf	___awdiv@quotient+1
  2523  012B                     l1716:
  2524  012B  0872               	movf	___awdiv@divisor,w
  2525  012C  0473               	iorwf	___awdiv@divisor+1,w
  2526  012D  1903               	btfsc	3,2
  2527  012E  2930               	goto	u871
  2528  012F  2931               	goto	u870
  2529  0130                     u871:
  2530  0130  2968               	goto	l1736
  2531  0131                     u870:
  2532  0131                     l1718:
  2533  0131  01A0               	clrf	___awdiv@counter
  2534  0132  0AA0               	incf	___awdiv@counter,f
  2535  0133  293F               	goto	l1724
  2536  0134                     l1720:
  2537  0134  3001               	movlw	1
  2538  0135                     u885:
  2539  0135  1003               	clrc
  2540  0136  0DF2               	rlf	___awdiv@divisor,f
  2541  0137  0DF3               	rlf	___awdiv@divisor+1,f
  2542  0138  3EFF               	addlw	-1
  2543  0139  1D03               	skipz
  2544  013A  2935               	goto	u885
  2545  013B                     l1722:
  2546  013B  3001               	movlw	1
  2547  013C  00F6               	movwf	??___awdiv
  2548  013D  0876               	movf	??___awdiv,w
  2549  013E  07A0               	addwf	___awdiv@counter,f
  2550  013F                     l1724:
  2551  013F  1FF3               	btfss	___awdiv@divisor+1,7
  2552  0140  2942               	goto	u891
  2553  0141  2943               	goto	u890
  2554  0142                     u891:
  2555  0142  2934               	goto	l1720
  2556  0143                     u890:
  2557  0143                     l1726:
  2558  0143  3001               	movlw	1
  2559  0144                     u905:
  2560  0144  1003               	clrc
  2561  0145  0DA2               	rlf	___awdiv@quotient,f
  2562  0146  0DA3               	rlf	___awdiv@quotient+1,f
  2563  0147  3EFF               	addlw	-1
  2564  0148  1D03               	skipz
  2565  0149  2944               	goto	u905
  2566  014A  0873               	movf	___awdiv@divisor+1,w
  2567  014B  0275               	subwf	___awdiv@dividend+1,w
  2568  014C  1D03               	skipz
  2569  014D  2950               	goto	u915
  2570  014E  0872               	movf	___awdiv@divisor,w
  2571  014F  0274               	subwf	___awdiv@dividend,w
  2572  0150                     u915:
  2573  0150  1C03               	skipc
  2574  0151  2953               	goto	u911
  2575  0152  2954               	goto	u910
  2576  0153                     u911:
  2577  0153  295B               	goto	l1732
  2578  0154                     u910:
  2579  0154                     l1728:
  2580  0154  0872               	movf	___awdiv@divisor,w
  2581  0155  02F4               	subwf	___awdiv@dividend,f
  2582  0156  0873               	movf	___awdiv@divisor+1,w
  2583  0157  1C03               	skipc
  2584  0158  03F5               	decf	___awdiv@dividend+1,f
  2585  0159  02F5               	subwf	___awdiv@dividend+1,f
  2586  015A                     l1730:
  2587  015A  1422               	bsf	___awdiv@quotient,0
  2588  015B                     l1732:
  2589  015B  3001               	movlw	1
  2590  015C                     u925:
  2591  015C  1003               	clrc
  2592  015D  0CF3               	rrf	___awdiv@divisor+1,f
  2593  015E  0CF2               	rrf	___awdiv@divisor,f
  2594  015F  3EFF               	addlw	-1
  2595  0160  1D03               	skipz
  2596  0161  295C               	goto	u925
  2597  0162                     l1734:
  2598  0162  3001               	movlw	1
  2599  0163  02A0               	subwf	___awdiv@counter,f
  2600  0164  1D03               	btfss	3,2
  2601  0165  2967               	goto	u931
  2602  0166  2968               	goto	u930
  2603  0167                     u931:
  2604  0167  2943               	goto	l1726
  2605  0168                     u930:
  2606  0168                     l1736:
  2607  0168  0821               	movf	___awdiv@sign,w
  2608  0169  1903               	btfsc	3,2
  2609  016A  296C               	goto	u941
  2610  016B  296D               	goto	u940
  2611  016C                     u941:
  2612  016C  2972               	goto	l1740
  2613  016D                     u940:
  2614  016D                     l1738:
  2615  016D  09A2               	comf	___awdiv@quotient,f
  2616  016E  09A3               	comf	___awdiv@quotient+1,f
  2617  016F  0AA2               	incf	___awdiv@quotient,f
  2618  0170  1903               	skipnz
  2619  0171  0AA3               	incf	___awdiv@quotient+1,f
  2620  0172                     l1740:
  2621  0172  0823               	movf	___awdiv@quotient+1,w
  2622  0173  00F3               	movwf	?___awdiv+1
  2623  0174  0822               	movf	___awdiv@quotient,w
  2624  0175  00F2               	movwf	?___awdiv
  2625  0176                     l469:
  2626  0176  0008               	return
  2627  0177                     __end_of___awdiv:
  2628                           
  2629                           	psect	text12
  2630  0441                     __ptext12:	
  2631 ;; *************** function _WriteMSSP *****************
  2632 ;; Defined at:
  2633 ;;		line 55 in file "SPI.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  Data            1    wreg     unsigned char 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  Data            1    2[COMMON] unsigned char 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       0       0       0       0
  2648 ;;      Locals:         1       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0
  2650 ;;      Totals:         1       0       0       0       0
  2651 ;;Total ram usage:        1 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _WriteMSSP
  2663  0441                     _WriteMSSP:
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in _WriteMSSP: [wreg]
  2667                           ;WriteMSSP@Data stored from wreg
  2668  0441  00F2               	movwf	WriteMSSP@Data
  2669  0442                     l1538:
  2670                           
  2671                           ;SPI.c: 59:     SSPBUF = Data;
  2672  0442  0872               	movf	WriteMSSP@Data,w
  2673  0443  1283               	bcf	3,5	;RP0=0, select bank0
  2674  0444  1303               	bcf	3,6	;RP1=0, select bank0
  2675  0445  0093               	movwf	19	;volatile
  2676  0446                     l130:
  2677  0446  0008               	return
  2678  0447                     __end_of_WriteMSSP:
  2679                           
  2680                           	psect	text13
  2681  0430                     __ptext13:	
  2682 ;; *************** function _ReadMSSP *****************
  2683 ;; Defined at:
  2684 ;;		line 63 in file "SPI.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2698 ;;      Params:         0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 1
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           
  2713                           ;psect for function _ReadMSSP
  2714  0430                     _ReadMSSP:
  2715  0430                     l1540:	
  2716                           ;incstack = 0
  2717                           ; Regs used in _ReadMSSP: [wreg]
  2718                           
  2719  0430                     l133:	
  2720                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  2721                           
  2722  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0432  1C14               	btfss	20,0	;volatile
  2725  0433  2C35               	goto	u821
  2726  0434  2C36               	goto	u820
  2727  0435                     u821:
  2728  0435  2C30               	goto	l133
  2729  0436                     u820:
  2730  0436                     l1542:
  2731                           
  2732                           ;SPI.c: 65:     return(SSPBUF);
  2733  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0438  0813               	movf	19,w	;volatile
  2736  0439                     l136:
  2737  0439  0008               	return
  2738  043A                     __end_of_ReadMSSP:
  2739                           
  2740                           	psect	text14
  2741  0424                     __ptext14:	
  2742 ;; *************** function _Escribir_caracterLCD *****************
  2743 ;; Defined at:
  2744 ;;		line 63 in file "LCD.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  a               1    wreg     unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  a               1    4[COMMON] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       0       0       0       0
  2759 ;;      Locals:         1       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0
  2761 ;;      Totals:         1       0       0       0       0
  2762 ;;Total ram usage:        1 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 3
  2765 ;; This function calls:
  2766 ;;		_Escribir_comandoLCD
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _Escribir_caracterLCD
  2774  0424                     _Escribir_caracterLCD:
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  2778                           ;Escribir_caracterLCD@a stored from wreg
  2779  0424  00F4               	movwf	Escribir_caracterLCD@a
  2780  0425                     l1628:
  2781                           
  2782                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  2783  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0427  1588               	bsf	8,3	;volatile
  2786  0428  1208               	bcf	8,4	;volatile
  2787  0429                     l1630:
  2788                           
  2789                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  2790  0429  0874               	movf	Escribir_caracterLCD@a,w
  2791  042A  120A  118A  22C8  120A  118A  	fcall	_Escribir_comandoLCD
  2792  042F                     l176:
  2793  042F  0008               	return
  2794  0430                     __end_of_Escribir_caracterLCD:
  2795                           
  2796                           	psect	text15
  2797  02C8                     __ptext15:	
  2798 ;; *************** function _Escribir_comandoLCD *****************
  2799 ;; Defined at:
  2800 ;;		line 17 in file "LCD.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  Comando         1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  Comando         1    3[COMMON] unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg, status,2, status,0, pclath, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2814 ;;      Params:         0       0       0       0       0
  2815 ;;      Locals:         1       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0
  2817 ;;      Totals:         1       0       0       0       0
  2818 ;;Total ram usage:        1 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 2
  2821 ;; This function calls:
  2822 ;;		_prender_ELCD
  2823 ;; This function is called by:
  2824 ;;		_Iniciar_LCD
  2825 ;;		_Escribir_stringLCD
  2826 ;;		_Escribir_caracterLCD
  2827 ;;		_Limpiar_pantallaLCD
  2828 ;;		_set_cursor
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _Escribir_comandoLCD
  2834  02C8                     _Escribir_comandoLCD:
  2835                           
  2836                           ;incstack = 0
  2837                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2838                           ;Escribir_comandoLCD@Comando stored from wreg
  2839  02C8  00F3               	movwf	Escribir_comandoLCD@Comando
  2840  02C9                     l1288:
  2841                           
  2842                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2843  02C9  1C73               	btfss	Escribir_comandoLCD@Comando,0
  2844  02CA  2ACC               	goto	u431
  2845  02CB  2ACD               	goto	u430
  2846  02CC                     u431:
  2847  02CC  2AD1               	goto	l148
  2848  02CD                     u430:
  2849  02CD                     l1290:
  2850  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2851  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2852  02CF  1708               	bsf	8,6	;volatile
  2853  02D0  2AD4               	goto	l149
  2854  02D1                     l148:
  2855  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2856  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2857  02D3  1308               	bcf	8,6	;volatile
  2858  02D4                     l149:
  2859                           
  2860                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2861  02D4  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  2862  02D5  2AD7               	goto	u441
  2863  02D6  2AD8               	goto	u440
  2864  02D7                     u441:
  2865  02D7  2ADA               	goto	l150
  2866  02D8                     u440:
  2867  02D8                     l1292:
  2868  02D8  1788               	bsf	8,7	;volatile
  2869  02D9  2ADB               	goto	l151
  2870  02DA                     l150:
  2871  02DA  1388               	bcf	8,7	;volatile
  2872  02DB                     l151:
  2873                           
  2874                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2875  02DB  1D73               	btfss	Escribir_comandoLCD@Comando,2
  2876  02DC  2ADE               	goto	u451
  2877  02DD  2ADF               	goto	u450
  2878  02DE                     u451:
  2879  02DE  2AE1               	goto	l152
  2880  02DF                     u450:
  2881  02DF                     l1294:
  2882  02DF  1406               	bsf	6,0	;volatile
  2883  02E0  2AE2               	goto	l153
  2884  02E1                     l152:
  2885  02E1  1006               	bcf	6,0	;volatile
  2886  02E2                     l153:
  2887                           
  2888                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2889  02E2  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  2890  02E3  2AE5               	goto	u461
  2891  02E4  2AE6               	goto	u460
  2892  02E5                     u461:
  2893  02E5  2AE8               	goto	l154
  2894  02E6                     u460:
  2895  02E6                     l1296:
  2896  02E6  1486               	bsf	6,1	;volatile
  2897  02E7  2AE9               	goto	l155
  2898  02E8                     l154:
  2899  02E8  1086               	bcf	6,1	;volatile
  2900  02E9                     l155:
  2901                           
  2902                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2903  02E9  1E73               	btfss	Escribir_comandoLCD@Comando,4
  2904  02EA  2AEC               	goto	u471
  2905  02EB  2AED               	goto	u470
  2906  02EC                     u471:
  2907  02EC  2AEF               	goto	l156
  2908  02ED                     u470:
  2909  02ED                     l1298:
  2910  02ED  1506               	bsf	6,2	;volatile
  2911  02EE  2AF0               	goto	l157
  2912  02EF                     l156:
  2913  02EF  1106               	bcf	6,2	;volatile
  2914  02F0                     l157:
  2915                           
  2916                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2917  02F0  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  2918  02F1  2AF3               	goto	u481
  2919  02F2  2AF4               	goto	u480
  2920  02F3                     u481:
  2921  02F3  2AF6               	goto	l158
  2922  02F4                     u480:
  2923  02F4                     l1300:
  2924  02F4  1586               	bsf	6,3	;volatile
  2925  02F5  2AF7               	goto	l159
  2926  02F6                     l158:
  2927  02F6  1186               	bcf	6,3	;volatile
  2928  02F7                     l159:
  2929                           
  2930                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2931  02F7  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2932  02F8  2AFA               	goto	u491
  2933  02F9  2AFB               	goto	u490
  2934  02FA                     u491:
  2935  02FA  2AFD               	goto	l160
  2936  02FB                     u490:
  2937  02FB                     l1302:
  2938  02FB  1606               	bsf	6,4	;volatile
  2939  02FC  2AFE               	goto	l161
  2940  02FD                     l160:
  2941  02FD  1206               	bcf	6,4	;volatile
  2942  02FE                     l161:
  2943                           
  2944                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2945  02FE  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2946  02FF  2B01               	goto	u501
  2947  0300  2B02               	goto	u500
  2948  0301                     u501:
  2949  0301  2B04               	goto	l162
  2950  0302                     u500:
  2951  0302                     l1304:
  2952  0302  1686               	bsf	6,5	;volatile
  2953  0303  2B05               	goto	l1306
  2954  0304                     l162:
  2955  0304  1286               	bcf	6,5	;volatile
  2956  0305                     l1306:
  2957                           
  2958                           ;LCD.c: 27:     prender_ELCD();
  2959  0305  120A  118A  2416  120A  118A  	fcall	_prender_ELCD
  2960  030A                     l164:
  2961  030A  0008               	return
  2962  030B                     __end_of_Escribir_comandoLCD:
  2963                           
  2964                           	psect	text16
  2965  0416                     __ptext16:	
  2966 ;; *************** function _prender_ELCD *****************
  2967 ;; Defined at:
  2968 ;;		line 11 in file "LCD.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          1       0       0       0       0
  2985 ;;      Totals:         1       0       0       0       0
  2986 ;;Total ram usage:        1 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 1
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_Escribir_comandoLCD
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _prender_ELCD
  2998  0416                     _prender_ELCD:
  2999  0416                     l1282:	
  3000                           ;incstack = 0
  3001                           ; Regs used in _prender_ELCD: [wreg]
  3002                           
  3003                           
  3004                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3005  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0418  1688               	bsf	8,5	;volatile
  3008  0419                     l1284:
  3009                           
  3010                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3011  0419  30C7               	movlw	199
  3012  041A  00F2               	movwf	??_prender_ELCD
  3013  041B                     u1117:
  3014  041B  2C1C               	nop2
  3015  041C  0BF2               	decfsz	??_prender_ELCD,f
  3016  041D  2C1B               	goto	u1117
  3017  041E  2C1F               	nop2
  3018  041F  2C20               	nop2
  3019  0420                     l1286:
  3020                           
  3021                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3022  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3024  0422  1288               	bcf	8,5	;volatile
  3025  0423                     l145:
  3026  0423  0008               	return
  3027  0424                     __end_of_prender_ELCD:
  3028                           
  3029                           	psect	text17
  3030  043A                     __ptext17:	
  3031 ;; *************** function _isr *****************
  3032 ;; Defined at:
  3033 ;;		line 69 in file "Maestro.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		None
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0
  3049 ;;      Temps:          2       0       0       0       0
  3050 ;;      Totals:         2       0       0       0       0
  3051 ;;Total ram usage:        2 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; This function calls:
  3054 ;;		Nothing
  3055 ;; This function is called by:
  3056 ;;		Interrupt level 1
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           
  3061                           ;psect for function _isr
  3062  043A                     _isr:
  3063  043A                     i1l77:
  3064  043A  0871               	movf	??_isr+1,w
  3065  043B  008A               	movwf	10
  3066  043C  0E70               	swapf	??_isr,w
  3067  043D  0083               	movwf	3
  3068  043E  0EFE               	swapf	btemp,f
  3069  043F  0E7E               	swapf	btemp,w
  3070  0440  0009               	retfie
  3071  0441                     __end_of_isr:
  3072  007E                     btemp	set	126	;btemp
  3073  007E                     wtemp0	set	126
  3074                           
  3075                           	psect	intentry
  3076  0004                     __pintentry:	
  3077                           ;incstack = 0
  3078                           ; Regs used in _isr: []
  3079                           
  3080  0004                     interrupt_function:
  3081  007E                     saved_w	set	btemp
  3082  0004  00FE               	movwf	btemp
  3083  0005  0E03               	swapf	3,w
  3084  0006  00F0               	movwf	??_isr
  3085  0007  080A               	movf	10,w
  3086  0008  00F1               	movwf	??_isr+1
  3087  0009  120A  118A  2C3A   	ljmp	_isr
  3088                           
  3089                           	psect	config
  3090                           
  3091                           ;Config register CONFIG1 @ 0x2007
  3092                           ;	Oscillator Selection bits
  3093                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3094                           ;	Watchdog Timer Enable bit
  3095                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3096                           ;	Power-up Timer Enable bit
  3097                           ;	PWRTE = OFF, PWRT disabled
  3098                           ;	RE3/MCLR pin function select bit
  3099                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3100                           ;	Code Protection bit
  3101                           ;	CP = OFF, Program memory code protection is disabled
  3102                           ;	Data Code Protection bit
  3103                           ;	CPD = OFF, Data memory code protection is disabled
  3104                           ;	Brown Out Reset Selection bits
  3105                           ;	BOREN = OFF, BOR disabled
  3106                           ;	Internal External Switchover bit
  3107                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3108                           ;	Fail-Safe Clock Monitor Enabled bit
  3109                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3110                           ;	Low Voltage Programming Enable bit
  3111                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3112                           ;	In-Circuit Debugger Mode bit
  3113                           ;	DEBUG = 0x1, unprogrammed default
  3114  2007                     	org	8199
  3115  2007  20D4               	dw	8404
  3116                           
  3117                           ;Config register CONFIG2 @ 0x2008
  3118                           ;	Brown-out Reset Selection bit
  3119                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3120                           ;	Flash Program Memory Self Write Enable bits
  3121                           ;	WRT = OFF, Write protection off
  3122  2008                     	org	8200
  3123  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     12      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[13]), STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_dec
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4238
                                             11 BANK0      1     1      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                           _ReadMSSP
                          _WriteMSSP
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1462
                                              0 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     569
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     365
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1600
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _ReadMSSP
   _WriteMSSP
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMSSP
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 18 07:55:18 2022

                            pc 0002                    _SSPSTATbits 0094                             l93 0349  
                           l88 010D                   ___awdiv@sign 0021                             fsr 0004  
              set_cursor@linea 0077                   ?_divisor_dec 0079                            l130 0446  
                          l124 0365                            l133 0430                            l150 02DA  
                          l230 0284                            l151 02DB                            l127 037C  
                          l160 02FD                            l152 02E1                            l136 0439  
                          l145 0423                            l161 02FE                            l153 02E2  
                          l162 0304                            l154 02E8                            l155 02E9  
                          l164 030A                            l156 02EF                            l148 02D1  
                          l157 02F0                            l149 02D4                            l173 03FB  
                          l158 02F6                            l159 02F7                            l167 01DB  
                          l176 042F                            l179 0415                            l197 03A9  
                          l189 02C7                            l198 03AC                            l482 0234  
                          l469 0176                            u500 0302                            u501 0301  
                          u430 02CD                            u510 028F                            u431 02CC  
                          u511 028E                            u440 02D8                            u600 035D  
                          u520 029C                            u441 02D7                            u601 035C  
                          u521 029B                            u450 02DF                            u610 0363  
                          u530 02B0                            u451 02DE                            u611 0362  
                          u531 02AF                            u460 02E6                            u620 036C  
                          u540 02BE                            u461 02E5                            u621 036B  
                          u541 02BD                            u470 02ED                            u550 03FB  
                          u471 02EC                            u551 03FA                            u480 02F4  
                          u800 0226                            u560 0384                            u481 02F3  
                          u801 0225                            u561 0383                            u490 02FB  
                          u810 022B                            u730 01E1                            u570 038F  
                          u491 02FA                            u811 022A                            u731 01E0  
                          u571 038E                            u820 0436                            u740 01EC  
                          u580 039A                            u821 0435                            u741 01EB  
                          u581 0399                            u910 0154                            u750 01F7  
                          u590 03A4                            u911 0153                            u751 01F6  
                          u591 03A3                            u905 0144                            u930 0168  
                          u850 0115                            u770 0209                            u931 0167  
                          u915 0150                            u851 0114                            u771 0208  
                          u940 016D                            u860 0120                            u780 0213  
                          u941 016C                            u925 015C                            u861 011F  
                          u781 0212                            u765 01FB                            u870 0131  
                          u950 0284                            u871 0130                            u951 0283  
                          u785 020F                            u890 0143                            u891 0142  
                          u795 021A                            u955 0280                            u885 0135  
                          u977 003A                            u987 004F                            u997 0101  
                          _isr 043A                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0078                           l1300 02F4                           l1302 02FB  
                         l1310 028A                           l1304 0302                           l1400 01A9  
                         l1320 02AB                           l1312 028F                           l1306 0305  
                         l1410 01D0                           l1402 01AF                           l1330 02BE  
                         l1314 0296                           l1500 0230                           l1340 03EE  
                         l1332 03D7                           l1404 01BA                           l1420 040F  
                         l1324 02B1                           l1316 029C                           l1308 0286  
                         l1334 03DB                           l1406 01BF                           l1414 03FC  
                         l1350 0394                           l1342 037E                           l1326 02B7  
                         l1318 02A2                           l1336 03DD                           l1408 01CA  
                         l1360 0351                           l1416 0400                           l1352 039A  
                         l1344 0384                           l1328 02B9                           l1282 0416  
                         l1290 02CD                           l1338 03EA                           l1370 035D  
                         l1362 0352                           l1418 0406                           l1354 039F  
                         l1346 0389                           l1602 031B                           l1284 0419  
                         l1292 02D8                           l1540 0430                           l1700 010E  
                         l1380 0372                           l1372 0363                           l1364 0353  
                         l1356 03A4                           l1348 038F                           l1286 0420  
                         l1294 02DF                           l1630 0429                           l1542 0436  
                         l1710 0120                           l1702 0111                           l1470 01E1  
                         l1390 017B                           l1382 0375                           l1374 0366  
                         l1366 0356                           l1358 034B                           l1614 031F  
                         l1622 0321                           l1296 02E6                           l1288 02C9  
                         l1720 0134                           l1712 0125                           l1704 0115  
                         l1480 01F7                           l1472 01E6                           l1392 0184  
                         l1384 0378                           l1376 036C                           l1368 0357  
                         l1608 031D                           l1560 030D                           l1800 0036  
                         l1298 02ED                           l1538 0442                           l1730 015A  
                         l1722 013B                           l1714 0129                           l1706 011A  
                         l1490 0213                           l1482 01FA                           l1474 01E8  
                         l1466 01DC                           l1394 018A                           l1386 037B  
                         l1378 036D                           l1810 0055                           l1802 003D  
                         l1628 0425                           l1740 0172                           l1732 015B  
                         l1724 013F                           l1716 012B                           l1708 011C  
                         l1492 0219                           l1484 0201                           l1476 01EC  
                         l1468 01DD                           l1396 0199                           l1388 0177  
                         l1572 0311                           l1820 0087                           l1812 005F  
                         l1804 0043                           l1734 0162                           l1726 0143  
                         l1718 0131                           l1494 0220                           l1486 0205  
                         l1478 01F1                           l1398 019E                           l1750 00B8  
                         l1590 0317                           l1566 030F                           l1558 030C  
                         l1822 008D                           l1814 006A                           l1806 004B  
                         l1728 0154                           l1736 0168                           l1488 0209  
                         l1496 0226                           l1760 00CA                           l1752 00BB  
                         l1744 00A1                           l1584 0315                           l1824 0095  
                         l1816 0075                           l1808 0052                           l1738 016D  
                         l1498 022B                           l1770 00E7                           l1762 00D0  
                         l1754 00BE                           l1746 00B2                           l1578 0313  
                         l1818 0080                           l1772 00F3                           l1764 00D5  
                         l1756 00C1                           l1748 00B5                           l1596 0319  
                         l1774 00F9                           l1766 00DA                           l1758 00C4  
                         l1790 001E                           l1784 023A                           l1776 0108  
                         l1768 00E1                           l1792 0023                           l1786 0271  
                         l1778 0238                           l1858 0329                           l1794 0026  
                         l1788 0277                           l1796 002D                           l1798 0033  
                         ?_isr 0070                           STR_1 03B3                           STR_2 03D1  
                         STR_3 03C4                           u1007 02A6                           u1017 02C2  
                         u1107 01D2                           u1027 040A                           u1117 041B  
                         u1037 017F                           u1047 018E                           u1057 019B  
                         u1067 01A6                           u1077 01B1                           u1087 01BC  
                         u1097 01C7                           i1l77 043A                  ??_Iniciar_LCD 0074  
                         _main 001E                           btemp 007E                           start 000C  
         _Escribir_caracterLCD 0424                          ??_isr 0070     __end_of_Escribir_stringLCD 03FC  
                        ?_main 0070                __end_of___awdiv 0177                __end_of___awmod 0235  
                        _ANSEL 0188                ___awdiv@divisor 0072                ___awdiv@counter 0020  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          _TRISA 0085  
                        _TRISB 0086                          _TRISD 0088                          _TRISE 0089  
                 InitMSSP@Modo 0072                __end_of_initOsc 03AD                          _setup 00A1  
          _Limpiar_pantallaLCD 03FC                          pclath 000A                          status 0003  
                        wtemp0 007E          ?_Escribir_caracterLCD 0070                __initialization 000F  
          __end_of_Iniciar_LCD 01DC                   __end_of_main 00A1               __end_of_InitMSSP 037D  
             __end_of_ReadMSSP 043A           ?_Limpiar_pantallaLCD 0070                         ??_main 002B  
                 divisor_dec@b 0028                   divisor_dec@n 0029             set_cursor@posicion 0074  
             ___awdiv@dividend 0074                         ?_setup 0070                         _ANSELH 0189  
                       _MSSPin 002C                         _TRISC0 0438                         _TRISC1 0439  
                       _TRISC2 043A                         _SSPCON 0014                         _SSPBUF 0013  
             ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074                      ??___awdiv 0076  
                    ??___awmod 0076               ___awdiv@quotient 0022                ___awmod@divisor 0072  
              ___awmod@counter 0077                      ??_initOsc 0072           __size_of_divisor_dec 0050  
                       saved_w 007E                divisor_dec@dig1 0079        __end_of__initialization 001A  
                  _Iniciar_LCD 0177             __size_of_WriteMSSP 0006         ??_Escribir_caracterLCD 0074  
               __pcstackCOMMON 0070                  __end_of_setup 010E                        ??_setup 0020  
                   __pbssBANK0 002C                      ?_InitMSSP 0070                      ?_ReadMSSP 0070  
                   __pmaintext 001E                     __pintentry 0004   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 007B              __end_of_WriteMSSP 0447                   initOsc@Valor 0072  
                      _SSPSTAT 0094             _Escribir_stringLCD 03D6                     __stringtab 03AD  
                   ??_InitMSSP 0072                     ??_ReadMSSP 0072                tabla_numASCII@a 0074  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074                        ___awdiv 010E  
                      ___awmod 01DC                        _dec_ADC 002F                        _cen_ADC 002E  
                      _dig_ADC 0030                        __ptext1 030B                        __ptext2 00A1  
                      __ptext3 0285                        __ptext4 037D                        __ptext5 03FC  
                      __ptext6 034A                        __ptext7 0177                        __ptext8 03D6  
                      __ptext9 0235           ??_Escribir_stringLCD 0074                        _initOsc 037D  
                 __size_of_isr 0007                        _val_ADC 0032               ___awmod@dividend 0074  
                ?_prender_ELCD 0070                        _uni_ADC 007A           end_of_initialization 001A  
                   _set_cursor 0285                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                 ??_prender_ELCD 0072                      _TRISAbits 0085  
                    _TRISCbits 0087                   ?_Iniciar_LCD 0070    __end_of_Limpiar_pantallaLCD 0416  
                WriteMSSP@Data 0072                  ??_divisor_dec 0024            start_initialization 000F  
                  __end_of_isr 0441            _Escribir_comandoLCD 02C8     Escribir_comandoLCD@Comando 0073  
            __size_of_InitMSSP 0033              __size_of_ReadMSSP 000A  __size_of_Escribir_caracterLCD 000C  
                  ?_set_cursor 0074           ?_Escribir_comandoLCD 0070                    __pbssCOMMON 007A  
      __size_of_tabla_numASCII 003F                      ___latbits 0002                  __pcstackBANK0 0020  
                    _WriteMSSP 0441            __end_of_divisor_dec 0285           __end_of_prender_ELCD 0424  
                     ?___awdiv 0072                       ?___awmod 0072          ??_Escribir_comandoLCD 0073  
                    __pstrings 03AD                       ?_initOsc 0070                     ?_WriteMSSP 0070  
          __size_of_set_cursor 0043                 __size_of_setup 006D              interrupt_function 0004  
                     _PIE1bits 008C           __size_of_Iniciar_LCD 0065                    __stringbase 03B2  
                  _divisor_dec 0235    __size_of_Escribir_stringLCD 0026                       _InitMSSP 034A  
                     _ReadMSSP 0430            Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075  
             __size_of___awdiv 0069               __size_of___awmod 0059             __end_of__stringtab 03B3  
               _tabla_numASCII 030B               __size_of_initOsc 0030                    ??_WriteMSSP 0072  
                     __ptext10 01DC                       __ptext11 010E                       __ptext12 0441  
                     __ptext13 0430                       __ptext14 0424                       __ptext15 02C8  
                     __ptext16 0416                       __ptext17 043A                    _val_ADC_fin 0031  
        __size_of_prender_ELCD 000E                  __size_of_main 0083                   ??_set_cursor 0075  
 __size_of_Limpiar_pantallaLCD 001A         __end_of_tabla_numASCII 034A   __end_of_Escribir_caracterLCD 0430  
                 _prender_ELCD 0416             __end_of_set_cursor 02C8                       intlevel1 0000  
                    stringcode 03AD                     _OSCCONbits 008F                ?_tabla_numASCII 0070  
                     stringdir 03AD                       stringtab 03AD                     _SSPCONbits 0014  
  __end_of_Escribir_comandoLCD 030B  
