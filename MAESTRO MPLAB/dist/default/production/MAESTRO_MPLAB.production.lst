

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Feb 15 23:39:05 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0000                     	;# 
   454  0001                     	;# 
   455  0002                     	;# 
   456  0003                     	;# 
   457  0004                     	;# 
   458  0005                     	;# 
   459  0006                     	;# 
   460  0007                     	;# 
   461  0008                     	;# 
   462  0009                     	;# 
   463  000A                     	;# 
   464  000B                     	;# 
   465  000C                     	;# 
   466  000D                     	;# 
   467  000E                     	;# 
   468  000E                     	;# 
   469  000F                     	;# 
   470  0010                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0014                     	;# 
   475  0015                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001D                     	;# 
   486  001E                     	;# 
   487  001F                     	;# 
   488  0081                     	;# 
   489  0085                     	;# 
   490  0086                     	;# 
   491  0087                     	;# 
   492  0088                     	;# 
   493  0089                     	;# 
   494  008C                     	;# 
   495  008D                     	;# 
   496  008E                     	;# 
   497  008F                     	;# 
   498  0090                     	;# 
   499  0091                     	;# 
   500  0092                     	;# 
   501  0093                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0094                     	;# 
   505  0095                     	;# 
   506  0096                     	;# 
   507  0097                     	;# 
   508  0098                     	;# 
   509  0099                     	;# 
   510  009A                     	;# 
   511  009B                     	;# 
   512  009C                     	;# 
   513  009D                     	;# 
   514  009E                     	;# 
   515  009F                     	;# 
   516  0105                     	;# 
   517  0107                     	;# 
   518  0108                     	;# 
   519  0109                     	;# 
   520  010C                     	;# 
   521  010C                     	;# 
   522  010D                     	;# 
   523  010E                     	;# 
   524  010F                     	;# 
   525  0185                     	;# 
   526  0187                     	;# 
   527  0188                     	;# 
   528  0189                     	;# 
   529  018C                     	;# 
   530  018D                     	;# 
   531  0006                     _PORTBbits	set	6
   532  0008                     _PORTDbits	set	8
   533  0013                     _SSPBUF	set	19
   534  0014                     _SSPCON	set	20
   535  0006                     _PORTB	set	6
   536  0009                     _PORTE	set	9
   537  0008                     _PORTD	set	8
   538  0005                     _PORTA	set	5
   539  0007                     _PORTCbits	set	7
   540  008F                     _OSCCONbits	set	143
   541  0094                     _SSPSTATbits	set	148
   542  0094                     _SSPSTAT	set	148
   543  0089                     _TRISE	set	137
   544  0088                     _TRISD	set	136
   545  0086                     _TRISB	set	134
   546  0085                     _TRISA	set	133
   547  043B                     _TRISC3	set	1083
   548  043D                     _TRISC5	set	1085
   549  043A                     _TRISC2	set	1082
   550  0189                     _ANSELH	set	393
   551  0188                     _ANSEL	set	392
   552                           
   553                           	psect	strings
   554  0003                     __pstrings:
   555  0003                     stringtab:
   556  0003                     __stringtab:
   557  0003                     stringcode:	
   558                           ;	String table - string pointers are 1 byte each
   559                           
   560  0003                     stringdir:
   561  0003  3000               	movlw	high stringdir
   562  0004  008A               	movwf	10
   563  0005  0804               	movf	4,w
   564  0006  0A84               	incf	4,f
   565  0007  0782               	addwf	2,f
   566  0008                     __stringbase:
   567  0008  3400               	retlw	0
   568  0009                     __end_of__stringtab:
   569  0009                     STR_2:
   570  0009  344A               	retlw	74	;'J'
   571  000A  346F               	retlw	111	;'o'
   572  000B  3473               	retlw	115	;'s'
   573  000C  3465               	retlw	101	;'e'
   574  000D  3420               	retlw	32	;' '
   575  000E  3453               	retlw	83	;'S'
   576  000F  3461               	retlw	97	;'a'
   577  0010  346E               	retlw	110	;'n'
   578  0011  3474               	retlw	116	;'t'
   579  0012  3469               	retlw	105	;'i'
   580  0013  347A               	retlw	122	;'z'
   581  0014  346F               	retlw	111	;'o'
   582  0015  3400               	retlw	0
   583  0016                     STR_3:
   584  0016  3441               	retlw	65	;'A'
   585  0017  3444               	retlw	68	;'D'
   586  0018  3443               	retlw	67	;'C'
   587  0019  343A               	retlw	58	;':'
   588  001A  3400               	retlw	0
   589  001B                     STR_1:
   590  001B  3448               	retlw	72	;'H'
   591  001C  346F               	retlw	111	;'o'
   592  001D  346C               	retlw	108	;'l'
   593  001E  3461               	retlw	97	;'a'
   594  001F  3400               	retlw	0
   595                           
   596                           	psect	cinit
   597  07F5                     start_initialization:	
   598                           ; #config settings
   599                           
   600  07F5                     __initialization:
   601                           
   602                           ; Clear objects allocated to BANK0
   603  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   604  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   605  07F7  01A6               	clrf	__pbssBANK0& (0+127)
   606  07F8  01A7               	clrf	(__pbssBANK0+1)& (0+127)
   607  07F9  01A8               	clrf	(__pbssBANK0+2)& (0+127)
   608  07FA  01A9               	clrf	(__pbssBANK0+3)& (0+127)
   609  07FB  01AA               	clrf	(__pbssBANK0+4)& (0+127)
   610  07FC                     end_of_initialization:	
   611                           ;End of C runtime variable initialization code
   612                           
   613  07FC                     __end_of__initialization:
   614  07FC  0183               	clrf	3
   615  07FD  120A  118A  2F1F   	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	bssBANK0
   618  0026                     __pbssBANK0:
   619  0026                     _cen_ADC:
   620  0026                     	ds	1
   621  0027                     _dec_ADC:
   622  0027                     	ds	1
   623  0028                     _uni_ADC:
   624  0028                     	ds	1
   625  0029                     _val_ADC:
   626  0029                     	ds	1
   627  002A                     _ADC_dig:
   628  002A                     	ds	1
   629                           
   630                           	psect	cstackCOMMON
   631  0070                     __pcstackCOMMON:
   632  0070                     ?_setup:
   633  0070                     ?_Iniciar_LCD:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_Limpiar_pantallaLCD:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_Escribir_stringLCD:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_spiRead:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ??_spiRead:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_Escribir_caracterLCD:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_initOsc:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_initOsc:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_spiInit:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_main:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_spiReceiveWait:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_spiReceiveWait:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_prender_ELCD:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ??_prender_ELCD:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Escribir_comandoLCD:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_tabla_numASCII:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?___awdiv:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     ?___awmod:	
   685                           ; 2 bytes @ 0x0
   686                           
   687  0070                     spiInit@sDataSample:	
   688                           ; 2 bytes @ 0x0
   689                           
   690  0070                     initOsc@Valor:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     tabla_numASCII@a:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ___awdiv@divisor:	
   697                           ; 2 bytes @ 0x0
   698                           
   699  0070                     ___awmod@divisor:	
   700                           ; 2 bytes @ 0x0
   701                           
   702                           
   703                           ; 2 bytes @ 0x0
   704  0070                     	ds	1
   705  0071                     ??_Escribir_comandoLCD:
   706  0071                     spiInit@sClockIdle:	
   707                           ; 1 bytes @ 0x1
   708                           
   709  0071                     Escribir_comandoLCD@Comando:	
   710                           ; 1 bytes @ 0x1
   711                           
   712                           
   713                           ; 1 bytes @ 0x1
   714  0071                     	ds	1
   715  0072                     ??_Iniciar_LCD:
   716  0072                     ??_Limpiar_pantallaLCD:	
   717                           ; 1 bytes @ 0x2
   718                           
   719  0072                     ?_set_cursor:	
   720                           ; 1 bytes @ 0x2
   721                           
   722  0072                     ??_Escribir_stringLCD:	
   723                           ; 1 bytes @ 0x2
   724                           
   725  0072                     ??_tabla_numASCII:	
   726                           ; 1 bytes @ 0x2
   727                           
   728  0072                     ??_Escribir_caracterLCD:	
   729                           ; 1 bytes @ 0x2
   730                           
   731  0072                     spiInit@sTransmitEdge:	
   732                           ; 1 bytes @ 0x2
   733                           
   734  0072                     Escribir_caracterLCD@a:	
   735                           ; 1 bytes @ 0x2
   736                           
   737  0072                     set_cursor@posicion:	
   738                           ; 1 bytes @ 0x2
   739                           
   740  0072                     ___awdiv@dividend:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0072                     ___awmod@dividend:	
   744                           ; 2 bytes @ 0x2
   745                           
   746                           
   747                           ; 2 bytes @ 0x2
   748  0072                     	ds	1
   749  0073                     ??_set_cursor:
   750  0073                     ??_spiInit:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     spiInit@sType:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     Escribir_stringLCD@i:	
   757                           ; 1 bytes @ 0x3
   758                           
   759                           
   760                           ; 1 bytes @ 0x3
   761  0073                     	ds	1
   762  0074                     ??_setup:
   763  0074                     ??___awdiv:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ??___awmod:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     Escribir_stringLCD@d:	
   770                           ; 1 bytes @ 0x4
   771                           
   772                           
   773                           ; 1 bytes @ 0x4
   774  0074                     	ds	1
   775  0075                     set_cursor@linea:
   776  0075                     ___awdiv@counter:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     ___awmod@counter:	
   780                           ; 1 bytes @ 0x5
   781                           
   782                           
   783                           ; 1 bytes @ 0x5
   784  0075                     	ds	1
   785  0076                     ___awdiv@sign:
   786  0076                     ___awmod@sign:	
   787                           ; 1 bytes @ 0x6
   788                           
   789                           
   790                           ; 1 bytes @ 0x6
   791  0076                     	ds	1
   792  0077                     ___awdiv@quotient:
   793                           
   794                           ; 2 bytes @ 0x7
   795  0077                     	ds	2
   796  0079                     ?_divisor_dec:
   797  0079                     divisor_dec@dig1:	
   798                           ; 1 bytes @ 0x9
   799                           
   800                           
   801                           ; 1 bytes @ 0x9
   802  0079                     	ds	1
   803  007A                     ??_divisor_dec:
   804                           
   805                           ; 1 bytes @ 0xA
   806  007A                     	ds	4
   807                           
   808                           	psect	cstackBANK0
   809  0020                     __pcstackBANK0:
   810  0020                     divisor_dec@b:
   811                           
   812                           ; 1 bytes @ 0x0
   813  0020                     	ds	1
   814  0021                     divisor_dec@n:
   815                           
   816                           ; 2 bytes @ 0x1
   817  0021                     	ds	2
   818  0023                     ??_main:
   819                           
   820                           ; 1 bytes @ 0x3
   821  0023                     	ds	3
   822                           
   823                           	psect	maintext
   824  071F                     __pmaintext:	
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   827 ;;
   828 ;; *************** function _main *****************
   829 ;; Defined at:
   830 ;;		line 68 in file "Maestro.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   839 ;; Tracked objects:
   840 ;;		On entry : B00/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0
   846 ;;      Temps:          0       3       0       0       0
   847 ;;      Totals:         0       3       0       0       0
   848 ;;Total ram usage:        3 bytes
   849 ;; Hardware stack levels required when called: 3
   850 ;; This function calls:
   851 ;;		_Escribir_caracterLCD
   852 ;;		_Escribir_stringLCD
   853 ;;		_Iniciar_LCD
   854 ;;		_Limpiar_pantallaLCD
   855 ;;		_divisor_dec
   856 ;;		_set_cursor
   857 ;;		_setup
   858 ;;		_spiRead
   859 ;;		_tabla_numASCII
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _main
   867  071F                     _main:
   868  071F                     l1541:	
   869                           ;incstack = 0
   870                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   871                           
   872                           
   873                           ;Maestro.c: 69:     setup();
   874  071F  120A  118A  2474  120A  118A  	fcall	_setup
   875                           
   876                           ;Maestro.c: 70:     Iniciar_LCD();
   877  0724  120A  118A  2653  120A  118A  	fcall	_Iniciar_LCD
   878                           
   879                           ;Maestro.c: 71:     Limpiar_pantallaLCD();
   880  0729  120A  118A  2434  120A  118A  	fcall	_Limpiar_pantallaLCD
   881                           
   882                           ;Maestro.c: 72:     set_cursor(1,0);
   883  072E  01F2               	clrf	set_cursor@posicion
   884  072F  3001               	movlw	1
   885  0730  120A  118A  250D  120A  118A  	fcall	_set_cursor
   886  0735                     l1543:
   887                           
   888                           ;Maestro.c: 73:     Escribir_stringLCD("Hola");
   889  0735  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   890  0736  120A  118A  244E  120A  118A  	fcall	_Escribir_stringLCD
   891  073B                     l1545:
   892                           
   893                           ;Maestro.c: 74:     set_cursor(2,2);
   894  073B  3002               	movlw	2
   895  073C  1283               	bcf	3,5	;RP0=0, select bank0
   896  073D  1303               	bcf	3,6	;RP1=0, select bank0
   897  073E  00A3               	movwf	??_main
   898  073F  0823               	movf	??_main,w
   899  0740  00F2               	movwf	set_cursor@posicion
   900  0741  3002               	movlw	2
   901  0742  120A  118A  250D  120A  118A  	fcall	_set_cursor
   902                           
   903                           ;Maestro.c: 75:     Escribir_stringLCD("Jose Santizo");
   904  0747  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   905  0748  120A  118A  244E  120A  118A  	fcall	_Escribir_stringLCD
   906  074D                     l1547:
   907                           
   908                           ;Maestro.c: 76:     _delay((unsigned long)((5000)*(4000000/4000.0)));
   909  074D  301A               	movlw	26
   910  074E  1283               	bcf	3,5	;RP0=0, select bank0
   911  074F  1303               	bcf	3,6	;RP1=0, select bank0
   912  0750  00A5               	movwf	??_main+2
   913  0751  305E               	movlw	94
   914  0752  00A4               	movwf	??_main+1
   915  0753  306D               	movlw	109
   916  0754  00A3               	movwf	??_main
   917  0755                     u817:
   918  0755  0BA3               	decfsz	??_main,f
   919  0756  2F55               	goto	u817
   920  0757  0BA4               	decfsz	??_main+1,f
   921  0758  2F55               	goto	u817
   922  0759  0BA5               	decfsz	??_main+2,f
   923  075A  2F55               	goto	u817
   924  075B  2F5C               	nop2
   925  075C                     l1549:
   926                           
   927                           ;Maestro.c: 77:     Limpiar_pantallaLCD();
   928  075C  120A  118A  2434  120A  118A  	fcall	_Limpiar_pantallaLCD
   929  0761                     l1551:
   930                           
   931                           ;Maestro.c: 83:         PORTCbits.RC2 = 0;
   932  0761  1283               	bcf	3,5	;RP0=0, select bank0
   933  0762  1303               	bcf	3,6	;RP1=0, select bank0
   934  0763  1107               	bcf	7,2	;volatile
   935  0764                     l1553:
   936                           
   937                           ;Maestro.c: 84:         _delay((unsigned long)((1)*(4000000/4000.0)));
   938  0764  30C7               	movlw	199
   939  0765  1283               	bcf	3,5	;RP0=0, select bank0
   940  0766  1303               	bcf	3,6	;RP1=0, select bank0
   941  0767  00A3               	movwf	??_main
   942  0768                     u827:
   943  0768  2F69               	nop2
   944  0769  0BA3               	decfsz	??_main,f
   945  076A  2F68               	goto	u827
   946  076B  2F6C               	nop2
   947  076C                     l1555:
   948                           
   949                           ;Maestro.c: 86:         val_ADC = spiRead();
   950  076C  120A  118A  23F6  120A  118A  	fcall	_spiRead
   951  0771  1283               	bcf	3,5	;RP0=0, select bank0
   952  0772  1303               	bcf	3,6	;RP1=0, select bank0
   953  0773  00A3               	movwf	??_main
   954  0774  0823               	movf	??_main,w
   955  0775  00A9               	movwf	_val_ADC
   956  0776                     l1557:
   957                           
   958                           ;Maestro.c: 88:         _delay((unsigned long)((1)*(4000000/4000.0)));
   959  0776  30C7               	movlw	199
   960  0777  1283               	bcf	3,5	;RP0=0, select bank0
   961  0778  1303               	bcf	3,6	;RP1=0, select bank0
   962  0779  00A3               	movwf	??_main
   963  077A                     u837:
   964  077A  2F7B               	nop2
   965  077B  0BA3               	decfsz	??_main,f
   966  077C  2F7A               	goto	u837
   967  077D  2F7E               	nop2
   968  077E                     l1559:
   969                           
   970                           ;Maestro.c: 89:         PORTCbits.RC2 = 1;
   971  077E  1283               	bcf	3,5	;RP0=0, select bank0
   972  077F  1303               	bcf	3,6	;RP1=0, select bank0
   973  0780  1507               	bsf	7,2	;volatile
   974  0781                     l1561:
   975                           
   976                           ;Maestro.c: 91:         divisor_dec(val_ADC, ADC_dig);
   977  0781  302A               	movlw	(low (_ADC_dig| 0))& (0+255)
   978  0782  00A3               	movwf	??_main
   979  0783  0823               	movf	??_main,w
   980  0784  00F9               	movwf	divisor_dec@dig1
   981  0785  0829               	movf	_val_ADC,w
   982  0786  120A  118A  2550  120A  118A  	fcall	_divisor_dec
   983  078B                     l1563:
   984                           
   985                           ;Maestro.c: 93:         uni_ADC = tabla_numASCII(ADC_dig[0]);
   986  078B  1283               	bcf	3,5	;RP0=0, select bank0
   987  078C  1303               	bcf	3,6	;RP1=0, select bank0
   988  078D  082A               	movf	_ADC_dig,w
   989  078E  00A3               	movwf	??_main
   990  078F  01A4               	clrf	??_main+1
   991  0790  0823               	movf	??_main,w
   992  0791  00F0               	movwf	tabla_numASCII@a
   993  0792  0824               	movf	??_main+1,w
   994  0793  00F1               	movwf	tabla_numASCII@a+1
   995  0794  120A  118A  25FA  120A  118A  	fcall	_tabla_numASCII
   996  0799  0870               	movf	?_tabla_numASCII,w
   997  079A  1283               	bcf	3,5	;RP0=0, select bank0
   998  079B  1303               	bcf	3,6	;RP1=0, select bank0
   999  079C  00A5               	movwf	??_main+2
  1000  079D  0825               	movf	??_main+2,w
  1001  079E  00A8               	movwf	_uni_ADC
  1002  079F                     l1565:
  1003                           
  1004                           ;Maestro.c: 94:         dec_ADC = tabla_numASCII(ADC_dig[1]);
  1005  079F  082B               	movf	_ADC_dig+1,w
  1006  07A0  00A3               	movwf	??_main
  1007  07A1  01A4               	clrf	??_main+1
  1008  07A2  0823               	movf	??_main,w
  1009  07A3  00F0               	movwf	tabla_numASCII@a
  1010  07A4  0824               	movf	??_main+1,w
  1011  07A5  00F1               	movwf	tabla_numASCII@a+1
  1012  07A6  120A  118A  25FA  120A  118A  	fcall	_tabla_numASCII
  1013  07AB  0870               	movf	?_tabla_numASCII,w
  1014  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1015  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1016  07AE  00A5               	movwf	??_main+2
  1017  07AF  0825               	movf	??_main+2,w
  1018  07B0  00A7               	movwf	_dec_ADC
  1019  07B1                     l1567:
  1020                           
  1021                           ;Maestro.c: 95:         cen_ADC = tabla_numASCII(ADC_dig[2]);
  1022  07B1  082C               	movf	_ADC_dig+2,w
  1023  07B2  00A3               	movwf	??_main
  1024  07B3  01A4               	clrf	??_main+1
  1025  07B4  0823               	movf	??_main,w
  1026  07B5  00F0               	movwf	tabla_numASCII@a
  1027  07B6  0824               	movf	??_main+1,w
  1028  07B7  00F1               	movwf	tabla_numASCII@a+1
  1029  07B8  120A  118A  25FA  120A  118A  	fcall	_tabla_numASCII
  1030  07BD  0870               	movf	?_tabla_numASCII,w
  1031  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  1032  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  1033  07C0  00A5               	movwf	??_main+2
  1034  07C1  0825               	movf	??_main+2,w
  1035  07C2  00A6               	movwf	_cen_ADC
  1036  07C3                     l1569:
  1037                           
  1038                           ;Maestro.c: 106:         set_cursor(1,1);
  1039  07C3  01F2               	clrf	set_cursor@posicion
  1040  07C4  0AF2               	incf	set_cursor@posicion,f
  1041  07C5  3001               	movlw	1
  1042  07C6  120A  118A  250D  120A  118A  	fcall	_set_cursor
  1043  07CB                     l1571:
  1044                           
  1045                           ;Maestro.c: 107:         Escribir_stringLCD("ADC:");
  1046  07CB  300E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1047  07CC  120A  118A  244E  120A  118A  	fcall	_Escribir_stringLCD
  1048  07D1                     l1573:
  1049                           
  1050                           ;Maestro.c: 108:         set_cursor(2,1);
  1051  07D1  01F2               	clrf	set_cursor@posicion
  1052  07D2  0AF2               	incf	set_cursor@posicion,f
  1053  07D3  3002               	movlw	2
  1054  07D4  120A  118A  250D  120A  118A  	fcall	_set_cursor
  1055  07D9                     l1575:
  1056                           
  1057                           ;Maestro.c: 109:         Escribir_caracterLCD(uni_ADC);
  1058  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1059  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1060  07DB  0828               	movf	_uni_ADC,w
  1061  07DC  120A  118A  240D  120A  118A  	fcall	_Escribir_caracterLCD
  1062  07E1                     l1577:
  1063                           
  1064                           ;Maestro.c: 110:         Escribir_caracterLCD(dec_ADC);
  1065  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1066  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1067  07E3  0827               	movf	_dec_ADC,w
  1068  07E4  120A  118A  240D  120A  118A  	fcall	_Escribir_caracterLCD
  1069  07E9                     l1579:
  1070                           
  1071                           ;Maestro.c: 111:         Escribir_caracterLCD(cen_ADC);
  1072  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  1073  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  1074  07EB  0826               	movf	_cen_ADC,w
  1075  07EC  120A  118A  240D  120A  118A  	fcall	_Escribir_caracterLCD
  1076  07F1  2F61               	goto	l1551
  1077  07F2  120A  118A  2800   	ljmp	start
  1078  07F5                     __end_of_main:
  1079                           
  1080                           	psect	text1
  1081  05FA                     __ptext1:	
  1082 ;; *************** function _tabla_numASCII *****************
  1083 ;; Defined at:
  1084 ;;		line 146 in file "Maestro.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  a               2    0[COMMON] int 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2    0[COMMON] int 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1098 ;;      Params:         2       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0
  1101 ;;      Totals:         2       0       0       0       0
  1102 ;;Total ram usage:        2 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _tabla_numASCII
  1113  05FA                     _tabla_numASCII:
  1114  05FA                     l1467:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1117                           
  1118                           
  1119                           ;Maestro.c: 147:     switch(a){
  1120  05FA  2E2D               	goto	l1531
  1121  05FB                     l1469:
  1122                           
  1123                           ;Maestro.c: 149:             return 48;
  1124  05FB  3030               	movlw	48
  1125  05FC  00F0               	movwf	?_tabla_numASCII
  1126  05FD  3000               	movlw	0
  1127  05FE  00F1               	movwf	?_tabla_numASCII+1
  1128  05FF  2E52               	goto	l74
  1129  0600                     l1475:
  1130                           
  1131                           ;Maestro.c: 152:             return 49;
  1132  0600  3031               	movlw	49
  1133  0601  00F0               	movwf	?_tabla_numASCII
  1134  0602  3000               	movlw	0
  1135  0603  00F1               	movwf	?_tabla_numASCII+1
  1136  0604  2E52               	goto	l74
  1137  0605                     l1481:
  1138                           
  1139                           ;Maestro.c: 155:             return 50;
  1140  0605  3032               	movlw	50
  1141  0606  00F0               	movwf	?_tabla_numASCII
  1142  0607  3000               	movlw	0
  1143  0608  00F1               	movwf	?_tabla_numASCII+1
  1144  0609  2E52               	goto	l74
  1145  060A                     l1487:
  1146                           
  1147                           ;Maestro.c: 158:             return 51;
  1148  060A  3033               	movlw	51
  1149  060B  00F0               	movwf	?_tabla_numASCII
  1150  060C  3000               	movlw	0
  1151  060D  00F1               	movwf	?_tabla_numASCII+1
  1152  060E  2E52               	goto	l74
  1153  060F                     l1493:
  1154                           
  1155                           ;Maestro.c: 161:             return 52;
  1156  060F  3034               	movlw	52
  1157  0610  00F0               	movwf	?_tabla_numASCII
  1158  0611  3000               	movlw	0
  1159  0612  00F1               	movwf	?_tabla_numASCII+1
  1160  0613  2E52               	goto	l74
  1161  0614                     l1499:
  1162                           
  1163                           ;Maestro.c: 164:             return 53;
  1164  0614  3035               	movlw	53
  1165  0615  00F0               	movwf	?_tabla_numASCII
  1166  0616  3000               	movlw	0
  1167  0617  00F1               	movwf	?_tabla_numASCII+1
  1168  0618  2E52               	goto	l74
  1169  0619                     l1505:
  1170                           
  1171                           ;Maestro.c: 167:             return 54;
  1172  0619  3036               	movlw	54
  1173  061A  00F0               	movwf	?_tabla_numASCII
  1174  061B  3000               	movlw	0
  1175  061C  00F1               	movwf	?_tabla_numASCII+1
  1176  061D  2E52               	goto	l74
  1177  061E                     l1511:
  1178                           
  1179                           ;Maestro.c: 170:             return 55;
  1180  061E  3037               	movlw	55
  1181  061F  00F0               	movwf	?_tabla_numASCII
  1182  0620  3000               	movlw	0
  1183  0621  00F1               	movwf	?_tabla_numASCII+1
  1184  0622  2E52               	goto	l74
  1185  0623                     l1517:
  1186                           
  1187                           ;Maestro.c: 173:             return 56;
  1188  0623  3038               	movlw	56
  1189  0624  00F0               	movwf	?_tabla_numASCII
  1190  0625  3000               	movlw	0
  1191  0626  00F1               	movwf	?_tabla_numASCII+1
  1192  0627  2E52               	goto	l74
  1193  0628                     l1523:
  1194                           
  1195                           ;Maestro.c: 176:             return 57;
  1196  0628  3039               	movlw	57
  1197  0629  00F0               	movwf	?_tabla_numASCII
  1198  062A  3000               	movlw	0
  1199  062B  00F1               	movwf	?_tabla_numASCII+1
  1200  062C  2E52               	goto	l74
  1201  062D                     l1531:
  1202                           
  1203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 1, Range of values is 0 to 0
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte            4     3 (average)
  1209                           ; direct_byte           11     8 (fixed)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  062D  0871               	movf	tabla_numASCII@a+1,w
  1213  062E  3A00               	xorlw	0	; case 0
  1214  062F  1903               	skipnz
  1215  0630  2E32               	goto	l1613
  1216  0631  2E52               	goto	l74
  1217  0632                     l1613:
  1218                           
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 10, Range of values is 0 to 9
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           31    16 (average)
  1224                           ; direct_byte           38     8 (fixed)
  1225                           ; jumptable            260     6 (fixed)
  1226                           ;	Chosen strategy is simple_byte
  1227  0632  0870               	movf	tabla_numASCII@a,w
  1228  0633  3A00               	xorlw	0	; case 0
  1229  0634  1903               	skipnz
  1230  0635  2DFB               	goto	l1469
  1231  0636  3A01               	xorlw	1	; case 1
  1232  0637  1903               	skipnz
  1233  0638  2E00               	goto	l1475
  1234  0639  3A03               	xorlw	3	; case 2
  1235  063A  1903               	skipnz
  1236  063B  2E05               	goto	l1481
  1237  063C  3A01               	xorlw	1	; case 3
  1238  063D  1903               	skipnz
  1239  063E  2E0A               	goto	l1487
  1240  063F  3A07               	xorlw	7	; case 4
  1241  0640  1903               	skipnz
  1242  0641  2E0F               	goto	l1493
  1243  0642  3A01               	xorlw	1	; case 5
  1244  0643  1903               	skipnz
  1245  0644  2E14               	goto	l1499
  1246  0645  3A03               	xorlw	3	; case 6
  1247  0646  1903               	skipnz
  1248  0647  2E19               	goto	l1505
  1249  0648  3A01               	xorlw	1	; case 7
  1250  0649  1903               	skipnz
  1251  064A  2E1E               	goto	l1511
  1252  064B  3A0F               	xorlw	15	; case 8
  1253  064C  1903               	skipnz
  1254  064D  2E23               	goto	l1517
  1255  064E  3A01               	xorlw	1	; case 9
  1256  064F  1903               	skipnz
  1257  0650  2E28               	goto	l1523
  1258  0651  2E52               	goto	l74
  1259  0652                     l74:
  1260  0652  0008               	return
  1261  0653                     __end_of_tabla_numASCII:
  1262                           
  1263                           	psect	text2
  1264  03F6                     __ptext2:	
  1265 ;; *************** function _spiRead *****************
  1266 ;; Defined at:
  1267 ;;		line 45 in file "SPI.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      unsigned char 
  1274 ;; Registers used:
  1275 ;;		wreg, status,2, status,0, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 1
  1288 ;; This function calls:
  1289 ;;		_spiReceiveWait
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _spiRead
  1297  03F6                     _spiRead:
  1298  03F6                     l1449:	
  1299                           ;incstack = 0
  1300                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1301                           
  1302                           
  1303                           ;SPI.c: 47:     spiReceiveWait();
  1304  03F6  120A  118A  23EF  120A  118A  	fcall	_spiReceiveWait
  1305  03FB                     l1451:
  1306                           
  1307                           ;SPI.c: 48:     return(SSPBUF);
  1308  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1309  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1310  03FD  0813               	movf	19,w	;volatile
  1311  03FE                     l119:
  1312  03FE  0008               	return
  1313  03FF                     __end_of_spiRead:
  1314                           
  1315                           	psect	text3
  1316  03EF                     __ptext3:	
  1317 ;; *************** function _spiReceiveWait *****************
  1318 ;; Defined at:
  1319 ;;		line 27 in file "SPI.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		None
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0
  1336 ;;      Totals:         0       0       0       0       0
  1337 ;;Total ram usage:        0 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_spiRead
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _spiReceiveWait
  1348  03EF                     _spiReceiveWait:
  1349  03EF                     l1267:	
  1350                           ;incstack = 0
  1351                           ; Regs used in _spiReceiveWait: []
  1352                           
  1353  03EF                     l105:	
  1354                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
  1355                           
  1356  03EF  1683               	bsf	3,5	;RP0=1, select bank1
  1357  03F0  1303               	bcf	3,6	;RP1=0, select bank1
  1358  03F1  1C14               	btfss	20,0	;volatile
  1359  03F2  2BF4               	goto	u461
  1360  03F3  2BF5               	goto	u460
  1361  03F4                     u461:
  1362  03F4  2BEF               	goto	l105
  1363  03F5                     u460:
  1364  03F5                     l108:
  1365  03F5  0008               	return
  1366  03F6                     __end_of_spiReceiveWait:
  1367                           
  1368                           	psect	text4
  1369  0474                     __ptext4:	
  1370 ;; *************** function _setup *****************
  1371 ;; Defined at:
  1372 ;;		line 117 in file "Maestro.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 1
  1393 ;; This function calls:
  1394 ;;		_initOsc
  1395 ;;		_spiInit
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _setup
  1403  0474                     _setup:
  1404  0474                     l1371:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1407                           
  1408                           
  1409                           ;Maestro.c: 120:     ANSEL = 0;
  1410  0474  1683               	bsf	3,5	;RP0=1, select bank3
  1411  0475  1703               	bsf	3,6	;RP1=1, select bank3
  1412  0476  0188               	clrf	8	;volatile
  1413                           
  1414                           ;Maestro.c: 121:     ANSELH = 0;
  1415  0477  0189               	clrf	9	;volatile
  1416                           
  1417                           ;Maestro.c: 123:     TRISA = 0;
  1418  0478  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0479  1303               	bcf	3,6	;RP1=0, select bank1
  1420  047A  0185               	clrf	5	;volatile
  1421                           
  1422                           ;Maestro.c: 124:     TRISB = 0;
  1423  047B  0186               	clrf	6	;volatile
  1424                           
  1425                           ;Maestro.c: 125:     TRISD = 0;
  1426  047C  0188               	clrf	8	;volatile
  1427                           
  1428                           ;Maestro.c: 126:     TRISE = 0;
  1429  047D  0189               	clrf	9	;volatile
  1430                           
  1431                           ;Maestro.c: 128:     PORTA = 0;
  1432  047E  1283               	bcf	3,5	;RP0=0, select bank0
  1433  047F  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0480  0185               	clrf	5	;volatile
  1435                           
  1436                           ;Maestro.c: 129:     PORTD = 0;
  1437  0481  0188               	clrf	8	;volatile
  1438                           
  1439                           ;Maestro.c: 130:     PORTE = 0;
  1440  0482  0189               	clrf	9	;volatile
  1441                           
  1442                           ;Maestro.c: 131:     PORTB = 0;
  1443  0483  0186               	clrf	6	;volatile
  1444  0484                     l1373:
  1445                           
  1446                           ;Maestro.c: 134:     TRISC2 = 0;
  1447  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0486  1107               	bcf	7,2	;volatile
  1450  0487                     l1375:
  1451                           
  1452                           ;Maestro.c: 135:     PORTCbits.RC2 = 1;
  1453  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0489  1507               	bsf	7,2	;volatile
  1456  048A                     l1377:
  1457                           
  1458                           ;Maestro.c: 138:     initOsc(4);
  1459  048A  3004               	movlw	4
  1460  048B  120A  118A  249A  120A  118A  	fcall	_initOsc
  1461  0490                     l1379:
  1462                           
  1463                           ;Maestro.c: 141:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE
      +                          _LOW, SPI_IDLE_2_ACTIVE);
  1464  0490  01F0               	clrf	spiInit@sDataSample
  1465  0491  01F1               	clrf	spiInit@sClockIdle
  1466  0492  01F2               	clrf	spiInit@sTransmitEdge
  1467  0493  3020               	movlw	32
  1468  0494  120A  118A  241E  120A  118A  	fcall	_spiInit
  1469  0499                     l69:
  1470  0499  0008               	return
  1471  049A                     __end_of_setup:
  1472                           
  1473                           	psect	text5
  1474  041E                     __ptext5:	
  1475 ;; *************** function _spiInit *****************
  1476 ;; Defined at:
  1477 ;;		line 10 in file "SPI.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  sType           1    wreg     enum E1264
  1480 ;;  sDataSample     1    0[COMMON] enum E1272
  1481 ;;  sClockIdle      1    1[COMMON] enum E1276
  1482 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  sType           1    3[COMMON] enum E1264
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1494 ;;      Params:         3       0       0       0       0
  1495 ;;      Locals:         1       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0
  1497 ;;      Totals:         4       0       0       0       0
  1498 ;;Total ram usage:        4 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_setup
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _spiInit
  1509  041E                     _spiInit:
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1513                           ;spiInit@sType stored from wreg
  1514  041E  00F3               	movwf	spiInit@sType
  1515  041F                     l1257:
  1516                           
  1517                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_polarity
      +                           sClockIdle, Spi_Clock_edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1518  041F  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0420  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0421  1287               	bcf	7,5	;volatile
  1521                           
  1522                           ;SPI.c: 13:     if(sType & 0b00000100)
  1523  0422  1D73               	btfss	spiInit@sType,2
  1524  0423  2C25               	goto	u451
  1525  0424  2C26               	goto	u450
  1526  0425                     u451:
  1527  0425  2C2A               	goto	l1263
  1528  0426                     u450:
  1529  0426                     l1259:
  1530                           
  1531                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1532  0426  0872               	movf	spiInit@sTransmitEdge,w
  1533  0427  0094               	movwf	20	;volatile
  1534  0428                     l1261:
  1535                           
  1536                           ;SPI.c: 16:         TRISC3 = 1;
  1537  0428  1587               	bsf	7,3	;volatile
  1538                           
  1539                           ;SPI.c: 17:     }
  1540  0429  2C2E               	goto	l101
  1541  042A                     l1263:
  1542                           
  1543                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1544  042A  0870               	movf	spiInit@sDataSample,w
  1545  042B  0472               	iorwf	spiInit@sTransmitEdge,w
  1546  042C  0094               	movwf	20	;volatile
  1547  042D                     l1265:
  1548                           
  1549                           ;SPI.c: 21:         TRISC3 = 0;
  1550  042D  1187               	bcf	7,3	;volatile
  1551  042E                     l101:	
  1552                           ;SPI.c: 22:     }
  1553                           
  1554                           
  1555                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1556  042E  0873               	movf	spiInit@sType,w
  1557  042F  0471               	iorwf	spiInit@sClockIdle,w
  1558  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0432  0094               	movwf	20	;volatile
  1561  0433                     l102:
  1562  0433  0008               	return
  1563  0434                     __end_of_spiInit:
  1564                           
  1565                           	psect	text6
  1566  049A                     __ptext6:	
  1567 ;; *************** function _initOsc *****************
  1568 ;; Defined at:
  1569 ;;		line 12 in file "Oscilador.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  Valor           1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  Valor           1    0[COMMON] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         1       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0
  1586 ;;      Totals:         1       0       0       0       0
  1587 ;;Total ram usage:        1 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_setup
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function _initOsc
  1598  049A                     _initOsc:
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1602                           ;initOsc@Valor stored from wreg
  1603  049A  00F0               	movwf	initOsc@Valor
  1604  049B                     l1241:
  1605                           
  1606                           ;Oscilador.c: 14:     if(Valor == 8){
  1607  049B  3008               	movlw	8
  1608  049C  0670               	xorwf	initOsc@Valor,w
  1609  049D  1D03               	btfss	3,2
  1610  049E  2CA0               	goto	u411
  1611  049F  2CA1               	goto	u410
  1612  04A0                     u411:
  1613  04A0  2CA6               	goto	l1245
  1614  04A1                     u410:
  1615  04A1                     l1243:
  1616                           
  1617                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1618  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  1619  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  1620  04A3  160F               	bsf	15,4	;volatile
  1621                           
  1622                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1623  04A4  168F               	bsf	15,5	;volatile
  1624                           
  1625                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1626  04A5  170F               	bsf	15,6	;volatile
  1627  04A6                     l1245:
  1628                           
  1629                           ;Oscilador.c: 19:     if(Valor == 4){
  1630  04A6  3004               	movlw	4
  1631  04A7  0670               	xorwf	initOsc@Valor,w
  1632  04A8  1D03               	btfss	3,2
  1633  04A9  2CAB               	goto	u421
  1634  04AA  2CAC               	goto	u420
  1635  04AB                     u421:
  1636  04AB  2CB1               	goto	l1249
  1637  04AC                     u420:
  1638  04AC                     l1247:
  1639                           
  1640                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1641  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  1642  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  1643  04AE  120F               	bcf	15,4	;volatile
  1644                           
  1645                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1646  04AF  168F               	bsf	15,5	;volatile
  1647                           
  1648                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1649  04B0  170F               	bsf	15,6	;volatile
  1650  04B1                     l1249:
  1651                           
  1652                           ;Oscilador.c: 24:     if(Valor == 2){
  1653  04B1  3002               	movlw	2
  1654  04B2  0670               	xorwf	initOsc@Valor,w
  1655  04B3  1D03               	btfss	3,2
  1656  04B4  2CB6               	goto	u431
  1657  04B5  2CB7               	goto	u430
  1658  04B6                     u431:
  1659  04B6  2CBC               	goto	l1253
  1660  04B7                     u430:
  1661  04B7                     l1251:
  1662                           
  1663                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1664  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  1665  04B8  1303               	bcf	3,6	;RP1=0, select bank1
  1666  04B9  160F               	bsf	15,4	;volatile
  1667                           
  1668                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1669  04BA  128F               	bcf	15,5	;volatile
  1670                           
  1671                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1672  04BB  170F               	bsf	15,6	;volatile
  1673  04BC                     l1253:
  1674                           
  1675                           ;Oscilador.c: 29:     if(Valor == 1){
  1676  04BC  0370               	decf	initOsc@Valor,w
  1677  04BD  1D03               	btfss	3,2
  1678  04BE  2CC0               	goto	u441
  1679  04BF  2CC1               	goto	u440
  1680  04C0                     u441:
  1681  04C0  2CC6               	goto	l182
  1682  04C1                     u440:
  1683  04C1                     l1255:
  1684                           
  1685                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1686  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  1687  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  1688  04C3  120F               	bcf	15,4	;volatile
  1689                           
  1690                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1691  04C4  128F               	bcf	15,5	;volatile
  1692                           
  1693                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1694  04C5  170F               	bsf	15,6	;volatile
  1695  04C6                     l182:	
  1696                           ;Oscilador.c: 33:     }
  1697                           
  1698                           
  1699                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1700  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  1701  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  1702  04C8  140F               	bsf	15,0	;volatile
  1703  04C9                     l183:
  1704  04C9  0008               	return
  1705  04CA                     __end_of_initOsc:
  1706                           
  1707                           	psect	text7
  1708  050D                     __ptext7:	
  1709 ;; *************** function _set_cursor *****************
  1710 ;; Defined at:
  1711 ;;		line 79 in file "LCD.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  linea           1    wreg     unsigned char 
  1714 ;;  posicion        1    2[COMMON] unsigned char 
  1715 ;; Auto vars:     Size  Location     Type
  1716 ;;  linea           1    5[COMMON] unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  1    wreg      void 
  1719 ;; Registers used:
  1720 ;;		wreg, status,2, status,0, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         1       0       0       0       0
  1727 ;;      Locals:         1       0       0       0       0
  1728 ;;      Temps:          2       0       0       0       0
  1729 ;;      Totals:         4       0       0       0       0
  1730 ;;Total ram usage:        4 bytes
  1731 ;; Hardware stack levels used: 1
  1732 ;; Hardware stack levels required when called: 2
  1733 ;; This function calls:
  1734 ;;		_Escribir_comandoLCD
  1735 ;; This function is called by:
  1736 ;;		_main
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _set_cursor
  1742  050D                     _set_cursor:
  1743                           
  1744                           ;incstack = 0
  1745                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1746                           ;set_cursor@linea stored from wreg
  1747  050D  00F5               	movwf	set_cursor@linea
  1748  050E                     l1415:
  1749                           
  1750                           ;LCD.c: 80:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  1751  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1752  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1753  0510  1287               	bcf	7,5	;volatile
  1754  0511  1208               	bcf	8,4	;volatile
  1755  0512                     l1417:
  1756                           
  1757                           ;LCD.c: 83:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1758  0512  0375               	decf	set_cursor@linea,w
  1759  0513  1D03               	btfss	3,2
  1760  0514  2D16               	goto	u741
  1761  0515  2D17               	goto	u740
  1762  0516                     u741:
  1763  0516  2D1E               	goto	l1421
  1764  0517                     u740:
  1765  0517                     l1419:
  1766  0517  3080               	movlw	128
  1767  0518  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  1768  051D  2D2A               	goto	l1425
  1769  051E                     l1421:
  1770  051E  3002               	movlw	2
  1771  051F  0675               	xorwf	set_cursor@linea,w
  1772  0520  1D03               	btfss	3,2
  1773  0521  2D23               	goto	u751
  1774  0522  2D24               	goto	u750
  1775  0523                     u751:
  1776  0523  2D2A               	goto	l1425
  1777  0524                     u750:
  1778  0524                     l1423:
  1779  0524  30C0               	movlw	192
  1780  0525  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  1781  052A                     l1425:
  1782                           
  1783                           ;LCD.c: 86:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1784  052A  3068               	movlw	104
  1785  052B  00F4               	movwf	??_set_cursor+1
  1786  052C  30E4               	movlw	228
  1787  052D  00F3               	movwf	??_set_cursor
  1788  052E                     u847:
  1789  052E  0BF3               	decfsz	??_set_cursor,f
  1790  052F  2D2E               	goto	u847
  1791  0530  0BF4               	decfsz	??_set_cursor+1,f
  1792  0531  2D2E               	goto	u847
  1793  0532  0000               	nop
  1794  0533                     l1427:
  1795                           
  1796                           ;LCD.c: 88:     if (posicion != 0){
  1797  0533  0872               	movf	set_cursor@posicion,w
  1798  0534  1903               	btfsc	3,2
  1799  0535  2D37               	goto	u761
  1800  0536  2D38               	goto	u760
  1801  0537                     u761:
  1802  0537  2D4F               	goto	l174
  1803  0538                     u760:
  1804  0538  2D41               	goto	l1435
  1805  0539                     l1431:
  1806                           
  1807                           ;LCD.c: 90:             Escribir_comandoLCD(0b00010100);
  1808  0539  3014               	movlw	20
  1809  053A  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  1810  053F                     l1433:
  1811                           
  1812                           ;LCD.c: 91:             posicion--;
  1813  053F  3001               	movlw	1
  1814  0540  02F2               	subwf	set_cursor@posicion,f
  1815  0541                     l1435:
  1816                           
  1817                           ;LCD.c: 89:         while(posicion > 0){
  1818  0541  0872               	movf	set_cursor@posicion,w
  1819  0542  1D03               	btfss	3,2
  1820  0543  2D45               	goto	u771
  1821  0544  2D46               	goto	u770
  1822  0545                     u771:
  1823  0545  2D39               	goto	l1431
  1824  0546                     u770:
  1825  0546                     l1437:
  1826                           
  1827                           ;LCD.c: 94:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1828  0546  3068               	movlw	104
  1829  0547  00F4               	movwf	??_set_cursor+1
  1830  0548  30E4               	movlw	228
  1831  0549  00F3               	movwf	??_set_cursor
  1832  054A                     u857:
  1833  054A  0BF3               	decfsz	??_set_cursor,f
  1834  054B  2D4A               	goto	u857
  1835  054C  0BF4               	decfsz	??_set_cursor+1,f
  1836  054D  2D4A               	goto	u857
  1837  054E  0000               	nop
  1838  054F                     l174:
  1839  054F  0008               	return
  1840  0550                     __end_of_set_cursor:
  1841                           
  1842                           	psect	text8
  1843  0550                     __ptext8:	
  1844 ;; *************** function _divisor_dec *****************
  1845 ;; Defined at:
  1846 ;;		line 76 in file "7SEG-hex.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  b               1    wreg     unsigned char 
  1849 ;;  dig1            1    9[COMMON] PTR unsigned char 
  1850 ;;		 -> ADC_dig(1), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  b               1    0[BANK0 ] unsigned char 
  1853 ;;  n               2    1[BANK0 ] int 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         1       0       0       0       0
  1864 ;;      Locals:         0       3       0       0       0
  1865 ;;      Temps:          4       0       0       0       0
  1866 ;;      Totals:         5       3       0       0       0
  1867 ;;Total ram usage:        8 bytes
  1868 ;; Hardware stack levels used: 1
  1869 ;; Hardware stack levels required when called: 1
  1870 ;; This function calls:
  1871 ;;		___awdiv
  1872 ;;		___awmod
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _divisor_dec
  1880  0550                     _divisor_dec:
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1884                           ;divisor_dec@b stored from wreg
  1885  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0552  00A0               	movwf	divisor_dec@b
  1888  0553                     l1455:
  1889  0553  01A1               	clrf	divisor_dec@n
  1890  0554  01A2               	clrf	divisor_dec@n+1
  1891  0555                     l1461:
  1892  0555  300A               	movlw	10
  1893  0556  00F0               	movwf	___awmod@divisor
  1894  0557  3000               	movlw	0
  1895  0558  00F1               	movwf	___awmod@divisor+1
  1896  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1897  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1898  055B  0820               	movf	divisor_dec@b,w
  1899  055C  00FA               	movwf	??_divisor_dec
  1900  055D  01FB               	clrf	??_divisor_dec+1
  1901  055E  087A               	movf	??_divisor_dec,w
  1902  055F  00F2               	movwf	___awmod@dividend
  1903  0560  087B               	movf	??_divisor_dec+1,w
  1904  0561  00F3               	movwf	___awmod@dividend+1
  1905  0562  120A  118A  25A1  120A  118A  	fcall	___awmod
  1906  0567  0870               	movf	?___awmod,w
  1907  0568  00FC               	movwf	??_divisor_dec+2
  1908  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1909  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1910  056B  0821               	movf	divisor_dec@n,w
  1911  056C  0779               	addwf	divisor_dec@dig1,w
  1912  056D  00FD               	movwf	??_divisor_dec+3
  1913  056E  087D               	movf	??_divisor_dec+3,w
  1914  056F  0084               	movwf	4
  1915  0570  087C               	movf	??_divisor_dec+2,w
  1916  0571  1383               	bcf	3,7	;select IRP bank0
  1917  0572  0080               	movwf	0
  1918  0573  300A               	movlw	10
  1919  0574  00F0               	movwf	___awdiv@divisor
  1920  0575  3000               	movlw	0
  1921  0576  00F1               	movwf	___awdiv@divisor+1
  1922  0577  0821               	movf	divisor_dec@n,w
  1923  0578  0779               	addwf	divisor_dec@dig1,w
  1924  0579  00FA               	movwf	??_divisor_dec
  1925  057A  087A               	movf	??_divisor_dec,w
  1926  057B  0084               	movwf	4
  1927  057C  0800               	movf	0,w
  1928  057D  0220               	subwf	divisor_dec@b,w
  1929  057E  00F2               	movwf	___awdiv@dividend
  1930  057F  01F3               	clrf	___awdiv@dividend+1
  1931  0580  1C03               	skipc
  1932  0581  03F3               	decf	___awdiv@dividend+1,f
  1933  0582  120A  118A  26B8  120A  118A  	fcall	___awdiv
  1934  0587  0870               	movf	?___awdiv,w
  1935  0588  00FB               	movwf	??_divisor_dec+1
  1936  0589  087B               	movf	??_divisor_dec+1,w
  1937  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1938  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1939  058C  00A0               	movwf	divisor_dec@b
  1940  058D                     l1463:
  1941  058D  3001               	movlw	1
  1942  058E  07A1               	addwf	divisor_dec@n,f
  1943  058F  1803               	skipnc
  1944  0590  0AA2               	incf	divisor_dec@n+1,f
  1945  0591  3000               	movlw	0
  1946  0592  07A2               	addwf	divisor_dec@n+1,f
  1947  0593                     l1465:
  1948  0593  0822               	movf	divisor_dec@n+1,w
  1949  0594  3A80               	xorlw	128
  1950  0595  00FF               	movwf	btemp+1
  1951  0596  3080               	movlw	128
  1952  0597  027F               	subwf	btemp+1,w
  1953  0598  1D03               	skipz
  1954  0599  2D9C               	goto	u795
  1955  059A  3003               	movlw	3
  1956  059B  0221               	subwf	divisor_dec@n,w
  1957  059C                     u795:
  1958  059C  1C03               	skipc
  1959  059D  2D9F               	goto	u791
  1960  059E  2DA0               	goto	u790
  1961  059F                     u791:
  1962  059F  2D55               	goto	l1461
  1963  05A0                     u790:
  1964  05A0                     l215:
  1965  05A0  0008               	return
  1966  05A1                     __end_of_divisor_dec:
  1967                           
  1968                           	psect	text9
  1969  05A1                     __ptext9:	
  1970 ;; *************** function ___awmod *****************
  1971 ;; Defined at:
  1972 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  divisor         2    0[COMMON] int 
  1975 ;;  dividend        2    2[COMMON] int 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  sign            1    6[COMMON] unsigned char 
  1978 ;;  counter         1    5[COMMON] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  2    0[COMMON] int 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1988 ;;      Params:         4       0       0       0       0
  1989 ;;      Locals:         2       0       0       0       0
  1990 ;;      Temps:          1       0       0       0       0
  1991 ;;      Totals:         7       0       0       0       0
  1992 ;;Total ram usage:        7 bytes
  1993 ;; Hardware stack levels used: 1
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_divisor_dec
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function ___awmod
  2003  05A1                     ___awmod:
  2004  05A1                     l1333:	
  2005                           ;incstack = 0
  2006                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2007                           
  2008  05A1  01F6               	clrf	___awmod@sign
  2009  05A2                     l1335:
  2010  05A2  1FF3               	btfss	___awmod@dividend+1,7
  2011  05A3  2DA5               	goto	u651
  2012  05A4  2DA6               	goto	u650
  2013  05A5                     u651:
  2014  05A5  2DAD               	goto	l1341
  2015  05A6                     u650:
  2016  05A6                     l1337:
  2017  05A6  09F2               	comf	___awmod@dividend,f
  2018  05A7  09F3               	comf	___awmod@dividend+1,f
  2019  05A8  0AF2               	incf	___awmod@dividend,f
  2020  05A9  1903               	skipnz
  2021  05AA  0AF3               	incf	___awmod@dividend+1,f
  2022  05AB                     l1339:
  2023  05AB  01F6               	clrf	___awmod@sign
  2024  05AC  0AF6               	incf	___awmod@sign,f
  2025  05AD                     l1341:
  2026  05AD  1FF1               	btfss	___awmod@divisor+1,7
  2027  05AE  2DB0               	goto	u661
  2028  05AF  2DB1               	goto	u660
  2029  05B0                     u661:
  2030  05B0  2DB6               	goto	l1345
  2031  05B1                     u660:
  2032  05B1                     l1343:
  2033  05B1  09F0               	comf	___awmod@divisor,f
  2034  05B2  09F1               	comf	___awmod@divisor+1,f
  2035  05B3  0AF0               	incf	___awmod@divisor,f
  2036  05B4  1903               	skipnz
  2037  05B5  0AF1               	incf	___awmod@divisor+1,f
  2038  05B6                     l1345:
  2039  05B6  0870               	movf	___awmod@divisor,w
  2040  05B7  0471               	iorwf	___awmod@divisor+1,w
  2041  05B8  1903               	btfsc	3,2
  2042  05B9  2DBB               	goto	u671
  2043  05BA  2DBC               	goto	u670
  2044  05BB                     u671:
  2045  05BB  2DEB               	goto	l1363
  2046  05BC                     u670:
  2047  05BC                     l1347:
  2048  05BC  01F5               	clrf	___awmod@counter
  2049  05BD  0AF5               	incf	___awmod@counter,f
  2050  05BE  2DCA               	goto	l1353
  2051  05BF                     l1349:
  2052  05BF  3001               	movlw	1
  2053  05C0                     u685:
  2054  05C0  1003               	clrc
  2055  05C1  0DF0               	rlf	___awmod@divisor,f
  2056  05C2  0DF1               	rlf	___awmod@divisor+1,f
  2057  05C3  3EFF               	addlw	-1
  2058  05C4  1D03               	skipz
  2059  05C5  2DC0               	goto	u685
  2060  05C6                     l1351:
  2061  05C6  3001               	movlw	1
  2062  05C7  00F4               	movwf	??___awmod
  2063  05C8  0874               	movf	??___awmod,w
  2064  05C9  07F5               	addwf	___awmod@counter,f
  2065  05CA                     l1353:
  2066  05CA  1FF1               	btfss	___awmod@divisor+1,7
  2067  05CB  2DCD               	goto	u691
  2068  05CC  2DCE               	goto	u690
  2069  05CD                     u691:
  2070  05CD  2DBF               	goto	l1349
  2071  05CE                     u690:
  2072  05CE                     l1355:
  2073  05CE  0871               	movf	___awmod@divisor+1,w
  2074  05CF  0273               	subwf	___awmod@dividend+1,w
  2075  05D0  1D03               	skipz
  2076  05D1  2DD4               	goto	u705
  2077  05D2  0870               	movf	___awmod@divisor,w
  2078  05D3  0272               	subwf	___awmod@dividend,w
  2079  05D4                     u705:
  2080  05D4  1C03               	skipc
  2081  05D5  2DD7               	goto	u701
  2082  05D6  2DD8               	goto	u700
  2083  05D7                     u701:
  2084  05D7  2DDE               	goto	l1359
  2085  05D8                     u700:
  2086  05D8                     l1357:
  2087  05D8  0870               	movf	___awmod@divisor,w
  2088  05D9  02F2               	subwf	___awmod@dividend,f
  2089  05DA  0871               	movf	___awmod@divisor+1,w
  2090  05DB  1C03               	skipc
  2091  05DC  03F3               	decf	___awmod@dividend+1,f
  2092  05DD  02F3               	subwf	___awmod@dividend+1,f
  2093  05DE                     l1359:
  2094  05DE  3001               	movlw	1
  2095  05DF                     u715:
  2096  05DF  1003               	clrc
  2097  05E0  0CF1               	rrf	___awmod@divisor+1,f
  2098  05E1  0CF0               	rrf	___awmod@divisor,f
  2099  05E2  3EFF               	addlw	-1
  2100  05E3  1D03               	skipz
  2101  05E4  2DDF               	goto	u715
  2102  05E5                     l1361:
  2103  05E5  3001               	movlw	1
  2104  05E6  02F5               	subwf	___awmod@counter,f
  2105  05E7  1D03               	btfss	3,2
  2106  05E8  2DEA               	goto	u721
  2107  05E9  2DEB               	goto	u720
  2108  05EA                     u721:
  2109  05EA  2DCE               	goto	l1355
  2110  05EB                     u720:
  2111  05EB                     l1363:
  2112  05EB  0876               	movf	___awmod@sign,w
  2113  05EC  1903               	btfsc	3,2
  2114  05ED  2DEF               	goto	u731
  2115  05EE  2DF0               	goto	u730
  2116  05EF                     u731:
  2117  05EF  2DF5               	goto	l1367
  2118  05F0                     u730:
  2119  05F0                     l1365:
  2120  05F0  09F2               	comf	___awmod@dividend,f
  2121  05F1  09F3               	comf	___awmod@dividend+1,f
  2122  05F2  0AF2               	incf	___awmod@dividend,f
  2123  05F3  1903               	skipnz
  2124  05F4  0AF3               	incf	___awmod@dividend+1,f
  2125  05F5                     l1367:
  2126  05F5  0873               	movf	___awmod@dividend+1,w
  2127  05F6  00F1               	movwf	?___awmod+1
  2128  05F7  0872               	movf	___awmod@dividend,w
  2129  05F8  00F0               	movwf	?___awmod
  2130  05F9                     l467:
  2131  05F9  0008               	return
  2132  05FA                     __end_of___awmod:
  2133                           
  2134                           	psect	text10
  2135  06B8                     __ptext10:	
  2136 ;; *************** function ___awdiv *****************
  2137 ;; Defined at:
  2138 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  divisor         2    0[COMMON] int 
  2141 ;;  dividend        2    2[COMMON] int 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  quotient        2    7[COMMON] int 
  2144 ;;  sign            1    6[COMMON] unsigned char 
  2145 ;;  counter         1    5[COMMON] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  2    0[COMMON] int 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         4       0       0       0       0
  2156 ;;      Locals:         4       0       0       0       0
  2157 ;;      Temps:          1       0       0       0       0
  2158 ;;      Totals:         9       0       0       0       0
  2159 ;;Total ram usage:        9 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_divisor_dec
  2165 ;;		_divisor_hex
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function ___awdiv
  2171  06B8                     ___awdiv:
  2172  06B8                     l1289:	
  2173                           ;incstack = 0
  2174                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2175                           
  2176  06B8  01F6               	clrf	___awdiv@sign
  2177  06B9                     l1291:
  2178  06B9  1FF1               	btfss	___awdiv@divisor+1,7
  2179  06BA  2EBC               	goto	u551
  2180  06BB  2EBD               	goto	u550
  2181  06BC                     u551:
  2182  06BC  2EC4               	goto	l1297
  2183  06BD                     u550:
  2184  06BD                     l1293:
  2185  06BD  09F0               	comf	___awdiv@divisor,f
  2186  06BE  09F1               	comf	___awdiv@divisor+1,f
  2187  06BF  0AF0               	incf	___awdiv@divisor,f
  2188  06C0  1903               	skipnz
  2189  06C1  0AF1               	incf	___awdiv@divisor+1,f
  2190  06C2                     l1295:
  2191  06C2  01F6               	clrf	___awdiv@sign
  2192  06C3  0AF6               	incf	___awdiv@sign,f
  2193  06C4                     l1297:
  2194  06C4  1FF3               	btfss	___awdiv@dividend+1,7
  2195  06C5  2EC7               	goto	u561
  2196  06C6  2EC8               	goto	u560
  2197  06C7                     u561:
  2198  06C7  2ED1               	goto	l1303
  2199  06C8                     u560:
  2200  06C8                     l1299:
  2201  06C8  09F2               	comf	___awdiv@dividend,f
  2202  06C9  09F3               	comf	___awdiv@dividend+1,f
  2203  06CA  0AF2               	incf	___awdiv@dividend,f
  2204  06CB  1903               	skipnz
  2205  06CC  0AF3               	incf	___awdiv@dividend+1,f
  2206  06CD                     l1301:
  2207  06CD  3001               	movlw	1
  2208  06CE  00F4               	movwf	??___awdiv
  2209  06CF  0874               	movf	??___awdiv,w
  2210  06D0  06F6               	xorwf	___awdiv@sign,f
  2211  06D1                     l1303:
  2212  06D1  01F7               	clrf	___awdiv@quotient
  2213  06D2  01F8               	clrf	___awdiv@quotient+1
  2214  06D3                     l1305:
  2215  06D3  0870               	movf	___awdiv@divisor,w
  2216  06D4  0471               	iorwf	___awdiv@divisor+1,w
  2217  06D5  1903               	btfsc	3,2
  2218  06D6  2ED8               	goto	u571
  2219  06D7  2ED9               	goto	u570
  2220  06D8                     u571:
  2221  06D8  2F10               	goto	l1325
  2222  06D9                     u570:
  2223  06D9                     l1307:
  2224  06D9  01F5               	clrf	___awdiv@counter
  2225  06DA  0AF5               	incf	___awdiv@counter,f
  2226  06DB  2EE7               	goto	l1313
  2227  06DC                     l1309:
  2228  06DC  3001               	movlw	1
  2229  06DD                     u585:
  2230  06DD  1003               	clrc
  2231  06DE  0DF0               	rlf	___awdiv@divisor,f
  2232  06DF  0DF1               	rlf	___awdiv@divisor+1,f
  2233  06E0  3EFF               	addlw	-1
  2234  06E1  1D03               	skipz
  2235  06E2  2EDD               	goto	u585
  2236  06E3                     l1311:
  2237  06E3  3001               	movlw	1
  2238  06E4  00F4               	movwf	??___awdiv
  2239  06E5  0874               	movf	??___awdiv,w
  2240  06E6  07F5               	addwf	___awdiv@counter,f
  2241  06E7                     l1313:
  2242  06E7  1FF1               	btfss	___awdiv@divisor+1,7
  2243  06E8  2EEA               	goto	u591
  2244  06E9  2EEB               	goto	u590
  2245  06EA                     u591:
  2246  06EA  2EDC               	goto	l1309
  2247  06EB                     u590:
  2248  06EB                     l1315:
  2249  06EB  3001               	movlw	1
  2250  06EC                     u605:
  2251  06EC  1003               	clrc
  2252  06ED  0DF7               	rlf	___awdiv@quotient,f
  2253  06EE  0DF8               	rlf	___awdiv@quotient+1,f
  2254  06EF  3EFF               	addlw	-1
  2255  06F0  1D03               	skipz
  2256  06F1  2EEC               	goto	u605
  2257  06F2  0871               	movf	___awdiv@divisor+1,w
  2258  06F3  0273               	subwf	___awdiv@dividend+1,w
  2259  06F4  1D03               	skipz
  2260  06F5  2EF8               	goto	u615
  2261  06F6  0870               	movf	___awdiv@divisor,w
  2262  06F7  0272               	subwf	___awdiv@dividend,w
  2263  06F8                     u615:
  2264  06F8  1C03               	skipc
  2265  06F9  2EFB               	goto	u611
  2266  06FA  2EFC               	goto	u610
  2267  06FB                     u611:
  2268  06FB  2F03               	goto	l1321
  2269  06FC                     u610:
  2270  06FC                     l1317:
  2271  06FC  0870               	movf	___awdiv@divisor,w
  2272  06FD  02F2               	subwf	___awdiv@dividend,f
  2273  06FE  0871               	movf	___awdiv@divisor+1,w
  2274  06FF  1C03               	skipc
  2275  0700  03F3               	decf	___awdiv@dividend+1,f
  2276  0701  02F3               	subwf	___awdiv@dividend+1,f
  2277  0702                     l1319:
  2278  0702  1477               	bsf	___awdiv@quotient,0
  2279  0703                     l1321:
  2280  0703  3001               	movlw	1
  2281  0704                     u625:
  2282  0704  1003               	clrc
  2283  0705  0CF1               	rrf	___awdiv@divisor+1,f
  2284  0706  0CF0               	rrf	___awdiv@divisor,f
  2285  0707  3EFF               	addlw	-1
  2286  0708  1D03               	skipz
  2287  0709  2F04               	goto	u625
  2288  070A                     l1323:
  2289  070A  3001               	movlw	1
  2290  070B  02F5               	subwf	___awdiv@counter,f
  2291  070C  1D03               	btfss	3,2
  2292  070D  2F0F               	goto	u631
  2293  070E  2F10               	goto	u630
  2294  070F                     u631:
  2295  070F  2EEB               	goto	l1315
  2296  0710                     u630:
  2297  0710                     l1325:
  2298  0710  0876               	movf	___awdiv@sign,w
  2299  0711  1903               	btfsc	3,2
  2300  0712  2F14               	goto	u641
  2301  0713  2F15               	goto	u640
  2302  0714                     u641:
  2303  0714  2F1A               	goto	l1329
  2304  0715                     u640:
  2305  0715                     l1327:
  2306  0715  09F7               	comf	___awdiv@quotient,f
  2307  0716  09F8               	comf	___awdiv@quotient+1,f
  2308  0717  0AF7               	incf	___awdiv@quotient,f
  2309  0718  1903               	skipnz
  2310  0719  0AF8               	incf	___awdiv@quotient+1,f
  2311  071A                     l1329:
  2312  071A  0878               	movf	___awdiv@quotient+1,w
  2313  071B  00F1               	movwf	?___awdiv+1
  2314  071C  0877               	movf	___awdiv@quotient,w
  2315  071D  00F0               	movwf	?___awdiv
  2316  071E                     l454:
  2317  071E  0008               	return
  2318  071F                     __end_of___awdiv:
  2319                           
  2320                           	psect	text11
  2321  0434                     __ptext11:	
  2322 ;; *************** function _Limpiar_pantallaLCD *****************
  2323 ;; Defined at:
  2324 ;;		line 71 in file "LCD.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         0       0       0       0       0
  2339 ;;      Locals:         0       0       0       0       0
  2340 ;;      Temps:          2       0       0       0       0
  2341 ;;      Totals:         2       0       0       0       0
  2342 ;;Total ram usage:        2 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 2
  2345 ;; This function calls:
  2346 ;;		_Escribir_comandoLCD
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _Limpiar_pantallaLCD
  2354  0434                     _Limpiar_pantallaLCD:
  2355  0434                     l1407:	
  2356                           ;incstack = 0
  2357                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2358                           
  2359                           
  2360                           ;LCD.c: 72:     PORTCbits.RC5 = 0; PORTDbits.RD4 = 0;
  2361  0434  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0435  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0436  1287               	bcf	7,5	;volatile
  2364  0437  1208               	bcf	8,4	;volatile
  2365  0438                     l1409:
  2366                           
  2367                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000001);
  2368  0438  3001               	movlw	1
  2369  0439  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2370  043E                     l1411:
  2371                           
  2372                           ;LCD.c: 75:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2373  043E  301A               	movlw	26
  2374  043F  00F3               	movwf	??_Limpiar_pantallaLCD+1
  2375  0440  30F8               	movlw	248
  2376  0441  00F2               	movwf	??_Limpiar_pantallaLCD
  2377  0442                     u867:
  2378  0442  0BF2               	decfsz	??_Limpiar_pantallaLCD,f
  2379  0443  2C42               	goto	u867
  2380  0444  0BF3               	decfsz	??_Limpiar_pantallaLCD+1,f
  2381  0445  2C42               	goto	u867
  2382  0446  0000               	nop
  2383  0447                     l1413:
  2384                           
  2385                           ;LCD.c: 76:     Escribir_comandoLCD(0b00000010);
  2386  0447  3002               	movlw	2
  2387  0448  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2388  044D                     l164:
  2389  044D  0008               	return
  2390  044E                     __end_of_Limpiar_pantallaLCD:
  2391                           
  2392                           	psect	text12
  2393  0653                     __ptext12:	
  2394 ;; *************** function _Iniciar_LCD *****************
  2395 ;; Defined at:
  2396 ;;		line 30 in file "LCD.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2, status,0, pclath, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2410 ;;      Params:         0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0
  2412 ;;      Temps:          2       0       0       0       0
  2413 ;;      Totals:         2       0       0       0       0
  2414 ;;Total ram usage:        2 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 2
  2417 ;; This function calls:
  2418 ;;		_Escribir_comandoLCD
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function _Iniciar_LCD
  2426  0653                     _Iniciar_LCD:
  2427  0653                     l1381:	
  2428                           ;incstack = 0
  2429                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2430                           
  2431                           
  2432                           ;LCD.c: 31:     PORTCbits.RC5 = 0;
  2433  0653  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0654  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0655  1287               	bcf	7,5	;volatile
  2436                           
  2437                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2438  0656  1208               	bcf	8,4	;volatile
  2439  0657                     l1383:
  2440                           
  2441                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  2442  0657  3025               	movlw	37
  2443  0658  00F3               	movwf	??_Iniciar_LCD+1
  2444  0659  305B               	movlw	91
  2445  065A  00F2               	movwf	??_Iniciar_LCD
  2446  065B                     u877:
  2447  065B  0BF2               	decfsz	??_Iniciar_LCD,f
  2448  065C  2E5B               	goto	u877
  2449  065D  0BF3               	decfsz	??_Iniciar_LCD+1,f
  2450  065E  2E5B               	goto	u877
  2451  065F  2E60               	nop2
  2452  0660                     l1385:
  2453                           
  2454                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2455  0660  3030               	movlw	48
  2456  0661  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2457  0666                     l1387:
  2458                           
  2459                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2460  0666  300B               	movlw	11
  2461  0667  00F3               	movwf	??_Iniciar_LCD+1
  2462  0668  3062               	movlw	98
  2463  0669  00F2               	movwf	??_Iniciar_LCD
  2464  066A                     u887:
  2465  066A  0BF2               	decfsz	??_Iniciar_LCD,f
  2466  066B  2E6A               	goto	u887
  2467  066C  0BF3               	decfsz	??_Iniciar_LCD+1,f
  2468  066D  2E6A               	goto	u887
  2469  066E  0000               	nop
  2470                           
  2471                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2472  066F  3030               	movlw	48
  2473  0670  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2474  0675                     l1389:
  2475                           
  2476                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2477  0675  3042               	movlw	66
  2478  0676  00F2               	movwf	??_Iniciar_LCD
  2479  0677                     u897:
  2480  0677  0BF2               	decfsz	??_Iniciar_LCD,f
  2481  0678  2E77               	goto	u897
  2482  0679  0000               	nop
  2483  067A                     l1391:
  2484                           
  2485                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2486  067A  3030               	movlw	48
  2487  067B  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2488                           
  2489                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2490  0680  3042               	movlw	66
  2491  0681  00F2               	movwf	??_Iniciar_LCD
  2492  0682                     u907:
  2493  0682  0BF2               	decfsz	??_Iniciar_LCD,f
  2494  0683  2E82               	goto	u907
  2495  0684  0000               	nop
  2496  0685                     l1393:
  2497                           
  2498                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2499  0685  3038               	movlw	56
  2500  0686  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2501  068B                     l1395:
  2502                           
  2503                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2504  068B  3042               	movlw	66
  2505  068C  00F2               	movwf	??_Iniciar_LCD
  2506  068D                     u917:
  2507  068D  0BF2               	decfsz	??_Iniciar_LCD,f
  2508  068E  2E8D               	goto	u917
  2509  068F  0000               	nop
  2510                           
  2511                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2512  0690  3008               	movlw	8
  2513  0691  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2514  0696                     l1397:
  2515                           
  2516                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2517  0696  3042               	movlw	66
  2518  0697  00F2               	movwf	??_Iniciar_LCD
  2519  0698                     u927:
  2520  0698  0BF2               	decfsz	??_Iniciar_LCD,f
  2521  0699  2E98               	goto	u927
  2522  069A  0000               	nop
  2523  069B                     l1399:
  2524                           
  2525                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2526  069B  3001               	movlw	1
  2527  069C  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2528                           
  2529                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2530  06A1  3042               	movlw	66
  2531  06A2  00F2               	movwf	??_Iniciar_LCD
  2532  06A3                     u937:
  2533  06A3  0BF2               	decfsz	??_Iniciar_LCD,f
  2534  06A4  2EA3               	goto	u937
  2535  06A5  0000               	nop
  2536  06A6                     l1401:
  2537                           
  2538                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2539  06A6  3006               	movlw	6
  2540  06A7  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2541  06AC                     l1403:
  2542                           
  2543                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2544  06AC  3042               	movlw	66
  2545  06AD  00F2               	movwf	??_Iniciar_LCD
  2546  06AE                     u947:
  2547  06AE  0BF2               	decfsz	??_Iniciar_LCD,f
  2548  06AF  2EAE               	goto	u947
  2549  06B0  0000               	nop
  2550                           
  2551                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2552  06B1  300C               	movlw	12
  2553  06B2  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2554  06B7                     l152:
  2555  06B7  0008               	return
  2556  06B8                     __end_of_Iniciar_LCD:
  2557                           
  2558                           	psect	text13
  2559  044E                     __ptext13:	
  2560 ;; *************** function _Escribir_stringLCD *****************
  2561 ;; Defined at:
  2562 ;;		line 55 in file "LCD.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  d               1    wreg     PTR const unsigned char 
  2565 ;;		 -> STR_3(5), STR_2(13), STR_1(5), 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  d               1    4[COMMON] PTR const unsigned char 
  2568 ;;		 -> STR_3(5), STR_2(13), STR_1(5), 
  2569 ;;  i               1    3[COMMON] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       0       0       0       0
  2580 ;;      Locals:         2       0       0       0       0
  2581 ;;      Temps:          1       0       0       0       0
  2582 ;;      Totals:         3       0       0       0       0
  2583 ;;Total ram usage:        3 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 2
  2586 ;; This function calls:
  2587 ;;		_Escribir_comandoLCD
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _Escribir_stringLCD
  2595  044E                     _Escribir_stringLCD:
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2599                           ;Escribir_stringLCD@d stored from wreg
  2600  044E  00F4               	movwf	Escribir_stringLCD@d
  2601  044F                     l1439:
  2602                           
  2603                           ;LCD.c: 56:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  2604  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2605  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2606  0451  1687               	bsf	7,5	;volatile
  2607  0452  1208               	bcf	8,4	;volatile
  2608  0453                     l1441:
  2609                           
  2610                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2611  0453  01F3               	clrf	Escribir_stringLCD@i
  2612  0454  2C66               	goto	l1447
  2613  0455                     l1443:
  2614                           
  2615                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2616  0455  0873               	movf	Escribir_stringLCD@i,w
  2617  0456  0774               	addwf	Escribir_stringLCD@d,w
  2618  0457  0084               	movwf	4
  2619  0458  120A  118A  2003  120A  118A  	fcall	stringdir
  2620  045D  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2621  0462                     l1445:
  2622                           
  2623                           ;LCD.c: 60:     }
  2624  0462  3001               	movlw	1
  2625  0463  00F2               	movwf	??_Escribir_stringLCD
  2626  0464  0872               	movf	??_Escribir_stringLCD,w
  2627  0465  07F3               	addwf	Escribir_stringLCD@i,f
  2628  0466                     l1447:
  2629  0466  0873               	movf	Escribir_stringLCD@i,w
  2630  0467  0774               	addwf	Escribir_stringLCD@d,w
  2631  0468  0084               	movwf	4
  2632  0469  120A  118A  2003  120A  118A  	fcall	stringdir
  2633  046E  3A00               	xorlw	0
  2634  046F  1D03               	skipz
  2635  0470  2C72               	goto	u781
  2636  0471  2C73               	goto	u780
  2637  0472                     u781:
  2638  0472  2C55               	goto	l1443
  2639  0473                     u780:
  2640  0473                     l158:
  2641  0473  0008               	return
  2642  0474                     __end_of_Escribir_stringLCD:
  2643                           
  2644                           	psect	text14
  2645  040D                     __ptext14:	
  2646 ;; *************** function _Escribir_caracterLCD *****************
  2647 ;; Defined at:
  2648 ;;		line 63 in file "LCD.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  a               1    wreg     unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  a               1    2[COMMON] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         1       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         1       0       0       0       0
  2666 ;;Total ram usage:        1 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		_Escribir_comandoLCD
  2671 ;;		_prender_ELCD
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _Escribir_caracterLCD
  2679  040D                     _Escribir_caracterLCD:
  2680                           
  2681                           ;incstack = 0
  2682                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  2683                           ;Escribir_caracterLCD@a stored from wreg
  2684  040D  00F2               	movwf	Escribir_caracterLCD@a
  2685  040E                     l1537:
  2686                           
  2687                           ;LCD.c: 64:     PORTCbits.RC5 = 1; PORTDbits.RD4 = 0;
  2688  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2689  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2690  0410  1687               	bsf	7,5	;volatile
  2691  0411  1208               	bcf	8,4	;volatile
  2692  0412                     l1539:
  2693                           
  2694                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  2695  0412  0872               	movf	Escribir_caracterLCD@a,w
  2696  0413  120A  118A  24CA  120A  118A  	fcall	_Escribir_comandoLCD
  2697                           
  2698                           ;LCD.c: 68:     prender_ELCD();
  2699  0418  120A  118A  23FF  120A  118A  	fcall	_prender_ELCD
  2700  041D                     l161:
  2701  041D  0008               	return
  2702  041E                     __end_of_Escribir_caracterLCD:
  2703                           
  2704                           	psect	text15
  2705  04CA                     __ptext15:	
  2706 ;; *************** function _Escribir_comandoLCD *****************
  2707 ;; Defined at:
  2708 ;;		line 17 in file "LCD.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  Comando         1    wreg     unsigned char 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  Comando         1    1[COMMON] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, pclath, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         0       0       0       0       0
  2723 ;;      Locals:         1       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0
  2725 ;;      Totals:         1       0       0       0       0
  2726 ;;Total ram usage:        1 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 1
  2729 ;; This function calls:
  2730 ;;		_prender_ELCD
  2731 ;; This function is called by:
  2732 ;;		_Iniciar_LCD
  2733 ;;		_Escribir_stringLCD
  2734 ;;		_Escribir_caracterLCD
  2735 ;;		_Limpiar_pantallaLCD
  2736 ;;		_set_cursor
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _Escribir_comandoLCD
  2742  04CA                     _Escribir_comandoLCD:
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  2746                           ;Escribir_comandoLCD@Comando stored from wreg
  2747  04CA  00F1               	movwf	Escribir_comandoLCD@Comando
  2748  04CB                     l1269:
  2749                           
  2750                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  2751  04CB  1C71               	btfss	Escribir_comandoLCD@Comando,0
  2752  04CC  2CCE               	goto	u471
  2753  04CD  2CCF               	goto	u470
  2754  04CE                     u471:
  2755  04CE  2CD3               	goto	l133
  2756  04CF                     u470:
  2757  04CF                     l1271:
  2758  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2759  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2760  04D1  1708               	bsf	8,6	;volatile
  2761  04D2  2CD6               	goto	l134
  2762  04D3                     l133:
  2763  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2764  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2765  04D5  1308               	bcf	8,6	;volatile
  2766  04D6                     l134:
  2767                           
  2768                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  2769  04D6  1CF1               	btfss	Escribir_comandoLCD@Comando,1
  2770  04D7  2CD9               	goto	u481
  2771  04D8  2CDA               	goto	u480
  2772  04D9                     u481:
  2773  04D9  2CDC               	goto	l135
  2774  04DA                     u480:
  2775  04DA                     l1273:
  2776  04DA  1788               	bsf	8,7	;volatile
  2777  04DB  2CDD               	goto	l136
  2778  04DC                     l135:
  2779  04DC  1388               	bcf	8,7	;volatile
  2780  04DD                     l136:
  2781                           
  2782                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  2783  04DD  1D71               	btfss	Escribir_comandoLCD@Comando,2
  2784  04DE  2CE0               	goto	u491
  2785  04DF  2CE1               	goto	u490
  2786  04E0                     u491:
  2787  04E0  2CE3               	goto	l137
  2788  04E1                     u490:
  2789  04E1                     l1275:
  2790  04E1  1406               	bsf	6,0	;volatile
  2791  04E2  2CE4               	goto	l138
  2792  04E3                     l137:
  2793  04E3  1006               	bcf	6,0	;volatile
  2794  04E4                     l138:
  2795                           
  2796                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  2797  04E4  1DF1               	btfss	Escribir_comandoLCD@Comando,3
  2798  04E5  2CE7               	goto	u501
  2799  04E6  2CE8               	goto	u500
  2800  04E7                     u501:
  2801  04E7  2CEA               	goto	l139
  2802  04E8                     u500:
  2803  04E8                     l1277:
  2804  04E8  1486               	bsf	6,1	;volatile
  2805  04E9  2CEB               	goto	l140
  2806  04EA                     l139:
  2807  04EA  1086               	bcf	6,1	;volatile
  2808  04EB                     l140:
  2809                           
  2810                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  2811  04EB  1E71               	btfss	Escribir_comandoLCD@Comando,4
  2812  04EC  2CEE               	goto	u511
  2813  04ED  2CEF               	goto	u510
  2814  04EE                     u511:
  2815  04EE  2CF1               	goto	l141
  2816  04EF                     u510:
  2817  04EF                     l1279:
  2818  04EF  1506               	bsf	6,2	;volatile
  2819  04F0  2CF2               	goto	l142
  2820  04F1                     l141:
  2821  04F1  1106               	bcf	6,2	;volatile
  2822  04F2                     l142:
  2823                           
  2824                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  2825  04F2  1EF1               	btfss	Escribir_comandoLCD@Comando,5
  2826  04F3  2CF5               	goto	u521
  2827  04F4  2CF6               	goto	u520
  2828  04F5                     u521:
  2829  04F5  2CF8               	goto	l143
  2830  04F6                     u520:
  2831  04F6                     l1281:
  2832  04F6  1586               	bsf	6,3	;volatile
  2833  04F7  2CF9               	goto	l144
  2834  04F8                     l143:
  2835  04F8  1186               	bcf	6,3	;volatile
  2836  04F9                     l144:
  2837                           
  2838                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2839  04F9  1F71               	btfss	Escribir_comandoLCD@Comando,6
  2840  04FA  2CFC               	goto	u531
  2841  04FB  2CFD               	goto	u530
  2842  04FC                     u531:
  2843  04FC  2CFF               	goto	l145
  2844  04FD                     u530:
  2845  04FD                     l1283:
  2846  04FD  1606               	bsf	6,4	;volatile
  2847  04FE  2D00               	goto	l146
  2848  04FF                     l145:
  2849  04FF  1206               	bcf	6,4	;volatile
  2850  0500                     l146:
  2851                           
  2852                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2853  0500  1FF1               	btfss	Escribir_comandoLCD@Comando,7
  2854  0501  2D03               	goto	u541
  2855  0502  2D04               	goto	u540
  2856  0503                     u541:
  2857  0503  2D06               	goto	l147
  2858  0504                     u540:
  2859  0504                     l1285:
  2860  0504  1686               	bsf	6,5	;volatile
  2861  0505  2D07               	goto	l1287
  2862  0506                     l147:
  2863  0506  1286               	bcf	6,5	;volatile
  2864  0507                     l1287:
  2865                           
  2866                           ;LCD.c: 27:     prender_ELCD();
  2867  0507  120A  118A  23FF  120A  118A  	fcall	_prender_ELCD
  2868  050C                     l149:
  2869  050C  0008               	return
  2870  050D                     __end_of_Escribir_comandoLCD:
  2871                           
  2872                           	psect	text16
  2873  03FF                     __ptext16:	
  2874 ;; *************** function _prender_ELCD *****************
  2875 ;; Defined at:
  2876 ;;		line 11 in file "LCD.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0
  2892 ;;      Temps:          1       0       0       0       0
  2893 ;;      Totals:         1       0       0       0       0
  2894 ;;Total ram usage:        1 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_Escribir_comandoLCD
  2900 ;;		_Escribir_caracterLCD
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _prender_ELCD
  2906  03FF                     _prender_ELCD:
  2907  03FF                     l1235:	
  2908                           ;incstack = 0
  2909                           ; Regs used in _prender_ELCD: [wreg]
  2910                           
  2911                           
  2912                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  2913  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0401  1688               	bsf	8,5	;volatile
  2916  0402                     l1237:
  2917                           
  2918                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2919  0402  30C7               	movlw	199
  2920  0403  00F0               	movwf	??_prender_ELCD
  2921  0404                     u957:
  2922  0404  2C05               	nop2
  2923  0405  0BF0               	decfsz	??_prender_ELCD,f
  2924  0406  2C04               	goto	u957
  2925  0407  2C08               	nop2
  2926  0408  2C09               	nop2
  2927  0409                     l1239:
  2928                           
  2929                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  2930  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2931  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2932  040B  1288               	bcf	8,5	;volatile
  2933  040C                     l130:
  2934  040C  0008               	return
  2935  040D                     __end_of_prender_ELCD:
  2936  007E                     btemp	set	126	;btemp
  2937  007E                     wtemp0	set	126
  2938                           
  2939                           	psect	config
  2940                           
  2941                           ;Config register CONFIG1 @ 0x2007
  2942                           ;	Oscillator Selection bits
  2943                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2944                           ;	Watchdog Timer Enable bit
  2945                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2946                           ;	Power-up Timer Enable bit
  2947                           ;	PWRTE = OFF, PWRT disabled
  2948                           ;	RE3/MCLR pin function select bit
  2949                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2950                           ;	Code Protection bit
  2951                           ;	CP = OFF, Program memory code protection is disabled
  2952                           ;	Data Code Protection bit
  2953                           ;	CPD = OFF, Data memory code protection is disabled
  2954                           ;	Brown Out Reset Selection bits
  2955                           ;	BOREN = OFF, BOR disabled
  2956                           ;	Internal External Switchover bit
  2957                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2958                           ;	Fail-Safe Clock Monitor Enabled bit
  2959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2960                           ;	Low Voltage Programming Enable bit
  2961                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2962                           ;	In-Circuit Debugger Mode bit
  2963                           ;	DEBUG = 0x1, unprogrammed default
  2964  2007                     	org	8199
  2965  2007  20D4               	dw	8404
  2966                           
  2967                           ;Config register CONFIG2 @ 0x2008
  2968                           ;	Brown-out Reset Selection bit
  2969                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2970                           ;	Flash Program Memory Self Write Enable bits
  2971                           ;	WRT = OFF, Write protection off
  2972  2008                     	org	8200
  2973  2008  3FFF               	dw	16383

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> ADC_dig(BANK0[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_3(CODE[5]), STR_2(CODE[13]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_spiInit
    _set_cursor->_Escribir_comandoLCD
    _divisor_dec->___awdiv
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _main in BANK0

    _main->_divisor_dec

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3489
                                              3 BANK0      3     3      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                        _Iniciar_LCD
                _Limpiar_pantallaLCD
                        _divisor_dec
                         _set_cursor
                              _setup
                            _spiRead
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     448
                            _initOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_cursor                                           4     3      1     569
                                              2 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1307
                                              9 COMMON     5     4      1
                                              0 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Limpiar_pantallaLCD                                  2     2      0     176
                                              2 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Iniciar_LCD                                          2     2      0     176
                                              2 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_stringLCD                                   3     3      0     365
                                              2 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              2 COMMON     1     1      0
                _Escribir_comandoLCD
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_comandoLCD                                  1     1      0     176
                                              1 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (3) _prender_ELCD                                         1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
     _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _Iniciar_LCD
     _Escribir_comandoLCD
   _Limpiar_pantallaLCD
     _Escribir_comandoLCD
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _initOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _tabla_numASCII

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Feb 15 23:39:05 2022

                            pc 0002                    _SSPSTATbits 0094                             l74 0652  
                           l69 0499                   ___awdiv@sign 0076                             fsr 0004  
              set_cursor@linea 0075                   ?_divisor_dec 0079                            l101 042E  
                          l102 0433                            l105 03EF                            l130 040C  
                          l140 04EB                            l108 03F5                            l141 04F1  
                          l133 04D3                            l142 04F2                            l134 04D6  
                          l143 04F8                            l135 04DC                            l215 05A0  
                          l119 03FE                            l144 04F9                            l136 04DD  
                          l152 06B7                            l145 04FF                            l137 04E3  
                          l161 041D                            l146 0500                            l138 04E4  
                          l147 0506                            l139 04EA                            l164 044D  
                          l149 050C                            l158 0473                            l174 054F  
                          l182 04C6                            l183 04C9                            l454 071E  
                          l467 05F9                            u410 04A1                            u411 04A0  
                          u500 04E8                            u420 04AC                            u501 04E7  
                          u421 04AB                            u510 04EF                            u430 04B7  
                          u511 04EE                            u431 04B6                            u520 04F6  
                          u440 04C1                            u521 04F5                            u441 04C0  
                          u530 04FD                            u610 06FC                            u450 0426  
                          u531 04FC                            u611 06FB                            u451 0425  
                          u540 0504                            u700 05D8                            u460 03F5  
                          u541 0503                            u605 06EC                            u701 05D7  
                          u461 03F4                            u470 04CF                            u630 0710  
                          u550 06BD                            u471 04CE                            u631 070F  
                          u615 06F8                            u551 06BC                            u480 04DA  
                          u640 0715                            u560 06C8                            u720 05EB  
                          u481 04D9                            u641 0714                            u625 0704  
                          u561 06C7                            u721 05EA                            u705 05D4  
                          u490 04E1                            u570 06D9                            u730 05F0  
                          u650 05A6                            u491 04E0                            u571 06D8  
                          u731 05EF                            u715 05DF                            u651 05A5  
                          u660 05B1                            u740 0517                            u661 05B0  
                          u741 0516                            u590 06EB                            u670 05BC  
                          u750 0524                            u591 06EA                            u671 05BB  
                          u751 0523                            u760 0538                            u585 06DD  
                          u761 0537                            u817 0755                            u690 05CE  
                          u770 0546                            u907 0682                            u691 05CD  
                          u771 0545                            u827 0768                            u780 0473  
                          u781 0472                            u917 068D                            u685 05C0  
                          u837 077A                            u790 05A0                            u927 0698  
                          u791 059F                            u847 052E                            u937 06A3  
                          u857 054A                            u947 06AE                            u867 0442  
                          u795 059C                            u957 0404                            u877 065B  
                          u887 066A                            u897 0677                            fsr0 0004  
                          indf 0000                   ___awmod@sign 0076                           l1301 06CD  
                         l1311 06E3                           l1303 06D1                           l1401 06A6  
                         l1321 0703                           l1313 06E7                           l1305 06D3  
                         l1241 049B                           l1235 03FF                           l1403 06AC  
                         l1411 043E                           l1323 070A                           l1315 06EB  
                         l1307 06D9                           l1251 04B7                           l1243 04A1  
                         l1237 0402                           l1413 0447                           l1317 06FC  
                         l1309 06DC                           l1325 0710                           l1341 05AD  
                         l1333 05A1                           l1421 051E                           l1253 04BC  
                         l1245 04A6                           l1261 0428                           l1239 0409  
                         l1271 04CF                           l1407 0434                           l1327 0715  
                         l1319 0702                           l1351 05C6                           l1343 05B1  
                         l1335 05A2                           l1431 0539                           l1423 0524  
                         l1415 050E                           l1255 04C1                           l1247 04AC  
                         l1263 042A                           l1511 061E                           l1281 04F6  
                         l1273 04DA                           l1441 0453                           l1409 0438  
                         l1329 071A                           l1361 05E5                           l1353 05CA  
                         l1345 05B6                           l1337 05A6                           l1433 053F  
                         l1425 052A                           l1417 0512                           l1249 04B1  
                         l1265 042D                           l1257 041F                           l1505 0619  
                         l1283 04FD                           l1275 04E1                           l1443 0455  
                         l1291 06B9                           l1355 05CE                           l1347 05BC  
                         l1363 05EB                           l1339 05AB                           l1435 0541  
                         l1427 0533                           l1419 0517                           l1259 0426  
                         l1371 0474                           l1267 03EF                           l1451 03FB  
                         l1523 0628                           l1531 062D                           l1285 0504  
                         l1277 04E8                           l1269 04CB                           l1445 0462  
                         l1381 0653                           l1293 06BD                           l1365 05F0  
                         l1357 05D8                           l1349 05BF                           l1461 0555  
                         l1437 0546                           l1373 0484                           l1613 0632  
                         l1517 0623                           l1541 071F                           l1287 0507  
                         l1279 04EF                           l1447 0466                           l1439 044F  
                         l1391 067A                           l1383 0657                           l1295 06C2  
                         l1367 05F5                           l1359 05DE                           l1463 058D  
                         l1455 0553                           l1375 0487                           l1551 0761  
                         l1543 0735                           l1537 040E                           l1393 0685  
                         l1385 0660                           l1297 06C4                           l1289 06B8  
                         l1465 0593                           l1377 048A                           l1449 03F6  
                         l1481 0605                           l1561 0781                           l1553 0764  
                         l1545 073B                           l1539 0412                           l1395 068B  
                         l1387 0666                           l1299 06C8                           l1379 0490  
                         l1475 0600                           l1467 05FA                           l1571 07CB  
                         l1563 078B                           l1555 076C                           l1547 074D  
                         l1397 0696                           l1389 0675                           l1493 060F  
                         l1469 05FB                           l1573 07D1                           l1565 079F  
                         l1557 0776                           l1549 075C                           l1399 069B  
                         l1487 060A                           l1575 07D9                           l1567 07B1  
                         l1559 077E                           l1577 07E1                           l1569 07C3  
                         l1499 0614                           l1579 07E9                           STR_1 001B  
                         STR_2 0009                           STR_3 0016                  ??_Iniciar_LCD 0072  
                         _main 071F                           btemp 007E                           start 0000  
         _Escribir_caracterLCD 040D     __end_of_Escribir_stringLCD 0474                          ?_main 0070  
              __end_of___awdiv 071F                __end_of___awmod 05FA                          _ANSEL 0188  
              ___awdiv@divisor 0070                ___awdiv@counter 0075                          _PORTA 0005  
                        _PORTB 0006                          _PORTD 0008                          _PORTE 0009  
                        _TRISA 0085                          _TRISB 0086                          _TRISD 0088  
                        _TRISE 0089                __end_of_initOsc 04CA                          _setup 0474  
          _Limpiar_pantallaLCD 0434                          pclath 000A                __end_of_spiInit 0434  
              __end_of_spiRead 03FF                          status 0003                          wtemp0 007E  
        ?_Escribir_caracterLCD 0070                __initialization 07F5            __end_of_Iniciar_LCD 06B8  
                 __end_of_main 07F5           ?_Limpiar_pantallaLCD 0070                         ??_main 0023  
                 divisor_dec@b 0020                   divisor_dec@n 0021             set_cursor@posicion 0072  
             ___awdiv@dividend 0072                         ?_setup 0070                         _ANSELH 0189  
                       _TRISC2 043A                         _TRISC3 043B                         _TRISC5 043D  
                       _SSPCON 0014                         _SSPBUF 0013               ??_tabla_numASCII 0072  
        ??_Limpiar_pantallaLCD 0072                      ??___awdiv 0074                      ??___awmod 0074  
             ___awdiv@quotient 0077                ___awmod@divisor 0070                ___awmod@counter 0075  
                    ??_initOsc 0070           __size_of_divisor_dec 0051                      ??_spiInit 0073  
                    ??_spiRead 0070                divisor_dec@dig1 0079        __end_of__initialization 07FC  
                  _Iniciar_LCD 0653         ??_Escribir_caracterLCD 0072                 __pcstackCOMMON 0070  
                __end_of_setup 049A                        ??_setup 0074                     __pbssBANK0 0026  
                   __pmaintext 071F        __size_of_spiReceiveWait 0007   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 002A                   initOsc@Valor 0070                        _SSPSTAT 0094  
           _Escribir_stringLCD 044E                     __stringtab 0003                tabla_numASCII@a 0070  
          ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0072                        ___awdiv 06B8  
                      ___awmod 05A1                        _dec_ADC 0027                        _cen_ADC 0026  
                      __ptext1 05FA                        __ptext2 03F6                        __ptext3 03EF  
                      __ptext4 0474                        __ptext5 041E                        __ptext6 049A  
                      __ptext7 050D                        __ptext8 0550                        __ptext9 05A1  
         ??_Escribir_stringLCD 0072                        _initOsc 049A                        _val_ADC 0029  
             ___awmod@dividend 0072                  ?_prender_ELCD 0070                        _uni_ADC 0028  
                      _spiInit 041E                        _spiRead 03F6           end_of_initialization 07FC  
                   _set_cursor 050D                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                 ??_prender_ELCD 0070                   ?_Iniciar_LCD 0070  
  __end_of_Limpiar_pantallaLCD 044E                 _spiReceiveWait 03EF                  ??_divisor_dec 007A  
          start_initialization 07F5            _Escribir_comandoLCD 04CA     Escribir_comandoLCD@Comando 0071  
__size_of_Escribir_caracterLCD 0011                    ?_set_cursor 0072         __end_of_spiReceiveWait 03F6  
         ?_Escribir_comandoLCD 0070        __size_of_tabla_numASCII 0059                      ___latbits 0002  
                __pcstackBANK0 0020            __end_of_divisor_dec 05A1           __end_of_prender_ELCD 040D  
              ?_spiReceiveWait 0070                       ?___awdiv 0070                       ?___awmod 0070  
        ??_Escribir_comandoLCD 0071                      __pstrings 0003                       ?_initOsc 0070  
                     ?_spiInit 0070                       ?_spiRead 0070            __size_of_set_cursor 0043  
               __size_of_setup 0026           spiInit@sTransmitEdge 0072           __size_of_Iniciar_LCD 0065  
           spiInit@sDataSample 0070                    __stringbase 0008                    _divisor_dec 0550  
  __size_of_Escribir_stringLCD 0026            Escribir_stringLCD@d 0074            Escribir_stringLCD@i 0073  
             __size_of___awdiv 0067               __size_of___awmod 0059             __end_of__stringtab 0009  
               _tabla_numASCII 05FA               __size_of_initOsc 0030                       __ptext10 06B8  
                     __ptext11 0434                       __ptext12 0653                       __ptext13 044E  
                     __ptext14 040D                       __ptext15 04CA                       __ptext16 03FF  
             __size_of_spiInit 0016               __size_of_spiRead 0009          __size_of_prender_ELCD 000E  
                __size_of_main 00D6                   ??_set_cursor 0073                   spiInit@sType 0073  
 __size_of_Limpiar_pantallaLCD 001A              spiInit@sClockIdle 0071         __end_of_tabla_numASCII 0653  
 __end_of_Escribir_caracterLCD 041E                   _prender_ELCD 03FF             __end_of_set_cursor 0550  
             ??_spiReceiveWait 0070                      stringcode 0003                     _OSCCONbits 008F  
              ?_tabla_numASCII 0070                       stringdir 0003                       stringtab 0003  
  __end_of_Escribir_comandoLCD 050D  
