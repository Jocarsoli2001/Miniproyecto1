

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 16:11:08 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  0088                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0006                     _PORTBbits	set	6
   530  0008                     _PORTDbits	set	8
   531  0013                     _SSPBUF	set	19
   532  0014                     _SSPCONbits	set	20
   533  0014                     _SSPCON	set	20
   534  0007                     _PORTC	set	7
   535  0006                     _PORTB	set	6
   536  0009                     _PORTE	set	9
   537  0008                     _PORTD	set	8
   538  0005                     _PORTA	set	5
   539  0007                     _PORTCbits	set	7
   540  008F                     _OSCCONbits	set	143
   541  0094                     _SSPSTATbits	set	148
   542  008C                     _PIE1bits	set	140
   543  0085                     _TRISAbits	set	133
   544  0087                     _TRISCbits	set	135
   545  0089                     _TRISE	set	137
   546  0088                     _TRISD	set	136
   547  0086                     _TRISB	set	134
   548  0085                     _TRISA	set	133
   549  0094                     _SSPSTAT	set	148
   550  0438                     _TRISC0	set	1080
   551  0439                     _TRISC1	set	1081
   552  043A                     _TRISC2	set	1082
   553  0189                     _ANSELH	set	393
   554  0188                     _ANSEL	set	392
   555                           
   556                           	psect	strings
   557  022E                     __pstrings:
   558  022E                     stringtab:
   559  022E                     __stringtab:
   560  022E                     stringcode:	
   561                           ;	String table - string pointers are 1 byte each
   562                           
   563  022E                     stringdir:
   564  022E  3002               	movlw	high stringdir
   565  022F  008A               	movwf	10
   566  0230  0804               	movf	4,w
   567  0231  0A84               	incf	4,f
   568  0232  0782               	addwf	2,f
   569  0233                     __stringbase:
   570  0233  3400               	retlw	0
   571  0234                     __end_of__stringtab:
   572  0234                     STR_1:
   573  0234  3453               	retlw	83	;'S'
   574  0235  3431               	retlw	49	;'1'
   575  0236  343A               	retlw	58	;':'
   576  0237  3420               	retlw	32	;' '
   577  0238  3420               	retlw	32	;' '
   578  0239  3420               	retlw	32	;' '
   579  023A  3420               	retlw	32	;' '
   580  023B  3453               	retlw	83	;'S'
   581  023C  3432               	retlw	50	;'2'
   582  023D  343A               	retlw	58	;':'
   583  023E  3420               	retlw	32	;' '
   584  023F  3420               	retlw	32	;' '
   585  0240  3420               	retlw	32	;' '
   586  0241  3453               	retlw	83	;'S'
   587  0242  3433               	retlw	51	;'3'
   588  0243  343A               	retlw	58	;':'
   589  0244  3400               	retlw	0
   590  0245                     STR_3:
   591  0245  344A               	retlw	74	;'J'
   592  0246  346F               	retlw	111	;'o'
   593  0247  3473               	retlw	115	;'s'
   594  0248  3465               	retlw	101	;'e'
   595  0249  3420               	retlw	32	;' '
   596  024A  3453               	retlw	83	;'S'
   597  024B  3461               	retlw	97	;'a'
   598  024C  346E               	retlw	110	;'n'
   599  024D  3474               	retlw	116	;'t'
   600  024E  3469               	retlw	105	;'i'
   601  024F  347A               	retlw	122	;'z'
   602  0250  346F               	retlw	111	;'o'
   603  0251  3400               	retlw	0
   604  0252                     STR_2:
   605  0252  3448               	retlw	72	;'H'
   606  0253  346F               	retlw	111	;'o'
   607  0254  346C               	retlw	108	;'l'
   608  0255  3461               	retlw	97	;'a'
   609  0256  3400               	retlw	0
   610                           
   611                           	psect	cinit
   612  000F                     start_initialization:	
   613                           ; #config settings
   614                           
   615  000F                     __initialization:
   616                           
   617                           ; Clear objects allocated to COMMON
   618  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   619  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   620  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   621                           
   622                           ; Clear objects allocated to BANK0
   623  0012  1283               	bcf	3,5	;RP0=0, select bank0
   624  0013  1303               	bcf	3,6	;RP1=0, select bank0
   625  0014  01A0               	clrf	__pbssBANK0& (0+127)
   626  0015  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   627  0016  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   628  0017  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   629  0018  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   630  0019                     end_of_initialization:	
   631                           ;End of C runtime variable initialization code
   632                           
   633  0019                     __end_of__initialization:
   634  0019  0183               	clrf	3
   635  001A  120A  118A  28EF   	ljmp	_main	;jump to C main() function
   636                           
   637                           	psect	bssCOMMON
   638  0078                     __pbssCOMMON:
   639  0078                     _dig_ADC:
   640  0078                     	ds	1
   641  0079                     _ADC_dig:
   642  0079                     	ds	1
   643  007A                     _val_ADC:
   644  007A                     	ds	1
   645                           
   646                           	psect	bssBANK0
   647  0020                     __pbssBANK0:
   648  0020                     _MSSPin:
   649  0020                     	ds	2
   650  0022                     _cen_ADC:
   651  0022                     	ds	1
   652  0023                     _dec_ADC:
   653  0023                     	ds	1
   654  0024                     _uni_ADC:
   655  0024                     	ds	1
   656                           
   657                           	psect	cstackCOMMON
   658  0070                     __pcstackCOMMON:
   659  0070                     ?_setup:
   660  0070                     ?_Escribir_stringLCD:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_WriteMSSP:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_ReadMSSP:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_initOsc:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_InitMSSP:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Iniciar_LCD:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_Limpiar_pantallaLCD:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_isr:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ??_isr:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_main:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_prender_ELCD:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_Escribir_comandoLCD:	
   694                           ; 1 bytes @ 0x0
   695                           
   696                           
   697                           ; 1 bytes @ 0x0
   698  0070                     	ds	2
   699  0072                     ??_WriteMSSP:
   700  0072                     ??_ReadMSSP:	
   701                           ; 1 bytes @ 0x2
   702                           
   703  0072                     ??_initOsc:	
   704                           ; 1 bytes @ 0x2
   705                           
   706  0072                     ??_InitMSSP:	
   707                           ; 1 bytes @ 0x2
   708                           
   709  0072                     ??_prender_ELCD:	
   710                           ; 1 bytes @ 0x2
   711                           
   712  0072                     InitMSSP@Modo:	
   713                           ; 1 bytes @ 0x2
   714                           
   715  0072                     WriteMSSP@Data:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0072                     initOsc@Valor:	
   719                           ; 1 bytes @ 0x2
   720                           
   721                           
   722                           ; 1 bytes @ 0x2
   723  0072                     	ds	1
   724  0073                     ??_Escribir_comandoLCD:
   725  0073                     Escribir_comandoLCD@Comando:	
   726                           ; 1 bytes @ 0x3
   727                           
   728                           
   729                           ; 1 bytes @ 0x3
   730  0073                     	ds	1
   731  0074                     ?_set_cursor:
   732  0074                     ??_Escribir_stringLCD:	
   733                           ; 1 bytes @ 0x4
   734                           
   735  0074                     ??_Iniciar_LCD:	
   736                           ; 1 bytes @ 0x4
   737                           
   738  0074                     ??_Limpiar_pantallaLCD:	
   739                           ; 1 bytes @ 0x4
   740                           
   741  0074                     set_cursor@posicion:	
   742                           ; 1 bytes @ 0x4
   743                           
   744                           
   745                           ; 1 bytes @ 0x4
   746  0074                     	ds	1
   747  0075                     ??_set_cursor:
   748  0075                     Escribir_stringLCD@i:	
   749                           ; 1 bytes @ 0x5
   750                           
   751                           
   752                           ; 1 bytes @ 0x5
   753  0075                     	ds	1
   754  0076                     Escribir_stringLCD@d:
   755                           
   756                           ; 1 bytes @ 0x6
   757  0076                     	ds	1
   758  0077                     set_cursor@linea:
   759                           
   760                           ; 1 bytes @ 0x7
   761  0077                     	ds	1
   762                           
   763                           	psect	cstackBANK0
   764  0025                     __pcstackBANK0:
   765  0025                     ??_setup:
   766                           
   767                           ; 1 bytes @ 0x0
   768  0025                     	ds	3
   769  0028                     ??_main:
   770                           
   771                           ; 1 bytes @ 0x3
   772  0028                     	ds	2
   773                           
   774                           	psect	maintext
   775  00EF                     __pmaintext:	
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 74 in file "Maestro.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          0       2       0       0       0
   798 ;;      Totals:         0       2       0       0       0
   799 ;;Total ram usage:        2 bytes
   800 ;; Hardware stack levels required when called: 5
   801 ;; This function calls:
   802 ;;		_Escribir_stringLCD
   803 ;;		_ReadMSSP
   804 ;;		_WriteMSSP
   805 ;;		_set_cursor
   806 ;;		_setup
   807 ;; This function is called by:
   808 ;;		Startup code after reset
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           
   813                           ;psect for function _main
   814  00EF                     _main:
   815  00EF                     l1371:	
   816                           ;incstack = 0
   817                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   818                           
   819                           
   820                           ;Maestro.c: 75:     setup();
   821  00EF  120A  118A  201D  120A  118A  	fcall	_setup
   822  00F4                     l1373:
   823                           
   824                           ;Maestro.c: 77:     val_ADC = 0;
   825  00F4  01FA               	clrf	_val_ADC
   826  00F5                     l1375:
   827                           
   828                           ;Maestro.c: 79:         set_cursor(1,0);
   829  00F5  01F4               	clrf	set_cursor@posicion
   830  00F6  3001               	movlw	1
   831  00F7  120A  118A  2145  120A  118A  	fcall	_set_cursor
   832  00FC                     l1377:
   833                           
   834                           ;Maestro.c: 80:         Escribir_stringLCD("S1:    S2:   S3:");
   835  00FC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   836  00FD  120A  118A  2257  120A  118A  	fcall	_Escribir_stringLCD
   837  0102                     l1379:
   838                           
   839                           ;Maestro.c: 86:         PORTCbits.RC2 = 0;
   840  0102  1283               	bcf	3,5	;RP0=0, select bank0
   841  0103  1303               	bcf	3,6	;RP1=0, select bank0
   842  0104  1107               	bcf	7,2	;volatile
   843  0105                     l1381:
   844                           
   845                           ;Maestro.c: 87:         _delay((unsigned long)((1)*(4000000/4000.0)));
   846  0105  30C7               	movlw	199
   847  0106  1283               	bcf	3,5	;RP0=0, select bank0
   848  0107  1303               	bcf	3,6	;RP1=0, select bank0
   849  0108  00A8               	movwf	??_main
   850  0109                     u487:
   851  0109  290A               	nop2
   852  010A  0BA8               	decfsz	??_main,f
   853  010B  2909               	goto	u487
   854  010C  290D               	nop2
   855  010D                     l1383:
   856                           
   857                           ;Maestro.c: 89:         WriteMSSP(1);
   858  010D  3001               	movlw	1
   859  010E  120A  118A  22B6  120A  118A  	fcall	_WriteMSSP
   860  0113                     l1385:
   861                           
   862                           ;Maestro.c: 90:         _delay((unsigned long)((100)*(4000000/4000.0)));
   863  0113  3082               	movlw	130
   864  0114  1283               	bcf	3,5	;RP0=0, select bank0
   865  0115  1303               	bcf	3,6	;RP1=0, select bank0
   866  0116  00A9               	movwf	??_main+1
   867  0117  30DD               	movlw	221
   868  0118  00A8               	movwf	??_main
   869  0119                     u497:
   870  0119  0BA8               	decfsz	??_main,f
   871  011A  2919               	goto	u497
   872  011B  0BA9               	decfsz	??_main+1,f
   873  011C  2919               	goto	u497
   874  011D                     l1387:
   875                           
   876                           ;Maestro.c: 91:         if (SSPSTAT & 0b00000001) {
   877  011D  1683               	bsf	3,5	;RP0=1, select bank1
   878  011E  1303               	bcf	3,6	;RP1=0, select bank1
   879  011F  1C14               	btfss	20,0	;volatile
   880  0120  2922               	goto	u471
   881  0121  2923               	goto	u470
   882  0122                     u471:
   883  0122  2930               	goto	l1391
   884  0123                     u470:
   885  0123                     l1389:
   886                           
   887                           ;Maestro.c: 92:             MSSPin = ReadMSSP();
   888  0123  120A  118A  22A5  120A  118A  	fcall	_ReadMSSP
   889  0128  1283               	bcf	3,5	;RP0=0, select bank0
   890  0129  1303               	bcf	3,6	;RP1=0, select bank0
   891  012A  00A8               	movwf	??_main
   892  012B  01A9               	clrf	??_main+1
   893  012C  0828               	movf	??_main,w
   894  012D  00A0               	movwf	_MSSPin
   895  012E  0829               	movf	??_main+1,w
   896  012F  00A1               	movwf	_MSSPin+1
   897  0130                     l1391:
   898                           
   899                           ;Maestro.c: 95:         _delay((unsigned long)((1)*(4000000/4000.0)));
   900  0130  30C7               	movlw	199
   901  0131  1283               	bcf	3,5	;RP0=0, select bank0
   902  0132  1303               	bcf	3,6	;RP1=0, select bank0
   903  0133  00A8               	movwf	??_main
   904  0134                     u507:
   905  0134  2935               	nop2
   906  0135  0BA8               	decfsz	??_main,f
   907  0136  2934               	goto	u507
   908  0137  2938               	nop2
   909  0138                     l1393:
   910                           
   911                           ;Maestro.c: 96:         PORTCbits.RC2 = 1;
   912  0138  1283               	bcf	3,5	;RP0=0, select bank0
   913  0139  1303               	bcf	3,6	;RP1=0, select bank0
   914  013A  1507               	bsf	7,2	;volatile
   915  013B                     l1395:
   916                           
   917                           ;Maestro.c: 98:         Escribir_stringLCD(MSSPin);
   918  013B  0820               	movf	_MSSPin,w
   919  013C  120A  118A  2257  120A  118A  	fcall	_Escribir_stringLCD
   920  0141  28F5               	goto	l1375
   921  0142  120A  118A  280C   	ljmp	start
   922  0145                     __end_of_main:
   923                           
   924                           	psect	text1
   925  001D                     __ptext1:	
   926 ;; *************** function _setup *****************
   927 ;; Defined at:
   928 ;;		line 125 in file "Maestro.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          0       3       0       0       0
   945 ;;      Totals:         0       3       0       0       0
   946 ;;Total ram usage:        3 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 4
   949 ;; This function calls:
   950 ;;		_Escribir_stringLCD
   951 ;;		_Iniciar_LCD
   952 ;;		_InitMSSP
   953 ;;		_Limpiar_pantallaLCD
   954 ;;		_initOsc
   955 ;;		_set_cursor
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _setup
   963  001D                     _setup:
   964  001D                     l1337:	
   965                           ;incstack = 0
   966                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   967                           
   968                           
   969                           ;Maestro.c: 128:     ANSEL = 0;
   970  001D  1683               	bsf	3,5	;RP0=1, select bank3
   971  001E  1703               	bsf	3,6	;RP1=1, select bank3
   972  001F  0188               	clrf	8	;volatile
   973                           
   974                           ;Maestro.c: 129:     ANSELH = 0;
   975  0020  0189               	clrf	9	;volatile
   976                           
   977                           ;Maestro.c: 131:     TRISA = 0;
   978  0021  1683               	bsf	3,5	;RP0=1, select bank1
   979  0022  1303               	bcf	3,6	;RP1=0, select bank1
   980  0023  0185               	clrf	5	;volatile
   981                           
   982                           ;Maestro.c: 132:     TRISB = 0;
   983  0024  0186               	clrf	6	;volatile
   984                           
   985                           ;Maestro.c: 133:     TRISD = 0;
   986  0025  0188               	clrf	8	;volatile
   987                           
   988                           ;Maestro.c: 134:     TRISE = 0;
   989  0026  0189               	clrf	9	;volatile
   990                           
   991                           ;Maestro.c: 136:     PORTA = 0;
   992  0027  1283               	bcf	3,5	;RP0=0, select bank0
   993  0028  1303               	bcf	3,6	;RP1=0, select bank0
   994  0029  0185               	clrf	5	;volatile
   995                           
   996                           ;Maestro.c: 137:     PORTD = 0;
   997  002A  0188               	clrf	8	;volatile
   998                           
   999                           ;Maestro.c: 138:     PORTE = 0;
  1000  002B  0189               	clrf	9	;volatile
  1001                           
  1002                           ;Maestro.c: 139:     PORTB = 0;
  1003  002C  0186               	clrf	6	;volatile
  1004                           
  1005                           ;Maestro.c: 140:     PORTC = 0;
  1006  002D  0187               	clrf	7	;volatile
  1007  002E                     l1339:
  1008                           
  1009                           ;Maestro.c: 143:     TRISC2 = 0;
  1010  002E  1683               	bsf	3,5	;RP0=1, select bank1
  1011  002F  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0030  1107               	bcf	7,2	;volatile
  1013  0031                     l1341:
  1014                           
  1015                           ;Maestro.c: 144:     PORTCbits.RC2 = 1;
  1016  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0033  1507               	bsf	7,2	;volatile
  1019  0034                     l1343:
  1020                           
  1021                           ;Maestro.c: 146:     TRISC1 = 0;
  1022  0034  1683               	bsf	3,5	;RP0=1, select bank1
  1023  0035  1303               	bcf	3,6	;RP1=0, select bank1
  1024  0036  1087               	bcf	7,1	;volatile
  1025  0037                     l1345:
  1026                           
  1027                           ;Maestro.c: 147:     PORTCbits.RC1 = 1;
  1028  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1029  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1030  0039  1487               	bsf	7,1	;volatile
  1031  003A                     l1347:
  1032                           
  1033                           ;Maestro.c: 149:     TRISC0 = 0;
  1034  003A  1683               	bsf	3,5	;RP0=1, select bank1
  1035  003B  1303               	bcf	3,6	;RP1=0, select bank1
  1036  003C  1007               	bcf	7,0	;volatile
  1037  003D                     l1349:
  1038                           
  1039                           ;Maestro.c: 150:     PORTCbits.RC0 = 1;
  1040  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1041  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1042  003F  1407               	bsf	7,0	;volatile
  1043  0040                     l1351:
  1044                           
  1045                           ;Maestro.c: 153:     initOsc(4);
  1046  0040  3004               	movlw	4
  1047  0041  120A  118A  21FE  120A  118A  	fcall	_initOsc
  1048  0046                     l1353:
  1049                           
  1050                           ;Maestro.c: 156:     InitMSSP(SPI_MASTER_FOSC4);
  1051  0046  3000               	movlw	0
  1052  0047  120A  118A  21CB  120A  118A  	fcall	_InitMSSP
  1053  004C                     l1355:
  1054                           
  1055                           ;Maestro.c: 159:     Iniciar_LCD();
  1056  004C  120A  118A  208A  120A  118A  	fcall	_Iniciar_LCD
  1057  0051                     l1357:
  1058                           
  1059                           ;Maestro.c: 160:     Limpiar_pantallaLCD();
  1060  0051  120A  118A  227D  120A  118A  	fcall	_Limpiar_pantallaLCD
  1061  0056                     l1359:
  1062                           
  1063                           ;Maestro.c: 161:     set_cursor(1,0);
  1064  0056  01F4               	clrf	set_cursor@posicion
  1065  0057  3001               	movlw	1
  1066  0058  120A  118A  2145  120A  118A  	fcall	_set_cursor
  1067  005D                     l1361:
  1068                           
  1069                           ;Maestro.c: 162:     Escribir_stringLCD("Hola");
  1070  005D  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1071  005E  120A  118A  2257  120A  118A  	fcall	_Escribir_stringLCD
  1072  0063                     l1363:
  1073                           
  1074                           ;Maestro.c: 163:     set_cursor(2,2);
  1075  0063  3002               	movlw	2
  1076  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1078  0066  00A5               	movwf	??_setup
  1079  0067  0825               	movf	??_setup,w
  1080  0068  00F4               	movwf	set_cursor@posicion
  1081  0069  3002               	movlw	2
  1082  006A  120A  118A  2145  120A  118A  	fcall	_set_cursor
  1083  006F                     l1365:
  1084                           
  1085                           ;Maestro.c: 164:     Escribir_stringLCD("Jose Santizo");
  1086  006F  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1087  0070  120A  118A  2257  120A  118A  	fcall	_Escribir_stringLCD
  1088  0075                     l1367:
  1089                           
  1090                           ;Maestro.c: 165:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1091  0075  301A               	movlw	26
  1092  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1093  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0078  00A7               	movwf	??_setup+2
  1095  0079  305E               	movlw	94
  1096  007A  00A6               	movwf	??_setup+1
  1097  007B  306D               	movlw	109
  1098  007C  00A5               	movwf	??_setup
  1099  007D                     u517:
  1100  007D  0BA5               	decfsz	??_setup,f
  1101  007E  287D               	goto	u517
  1102  007F  0BA6               	decfsz	??_setup+1,f
  1103  0080  287D               	goto	u517
  1104  0081  0BA7               	decfsz	??_setup+2,f
  1105  0082  287D               	goto	u517
  1106  0083  2884               	nop2
  1107  0084                     l1369:
  1108                           
  1109                           ;Maestro.c: 166:     Limpiar_pantallaLCD();
  1110  0084  120A  118A  227D  120A  118A  	fcall	_Limpiar_pantallaLCD
  1111  0089                     l83:
  1112  0089  0008               	return
  1113  008A                     __end_of_setup:
  1114                           
  1115                           	psect	text2
  1116  0145                     __ptext2:	
  1117 ;; *************** function _set_cursor *****************
  1118 ;; Defined at:
  1119 ;;		line 77 in file "LCD.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  linea           1    wreg     unsigned char 
  1122 ;;  posicion        1    4[COMMON] unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  linea           1    7[COMMON] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         1       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0
  1137 ;;      Totals:         4       0       0       0       0
  1138 ;;Total ram usage:        4 bytes
  1139 ;; Hardware stack levels used: 1
  1140 ;; Hardware stack levels required when called: 3
  1141 ;; This function calls:
  1142 ;;		_Escribir_comandoLCD
  1143 ;; This function is called by:
  1144 ;;		_main
  1145 ;;		_setup
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _set_cursor
  1151  0145                     _set_cursor:
  1152                           
  1153                           ;incstack = 0
  1154                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1155                           ;set_cursor@linea stored from wreg
  1156  0145  00F7               	movwf	set_cursor@linea
  1157  0146                     l1151:
  1158                           
  1159                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1160  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0148  1188               	bcf	8,3	;volatile
  1163  0149  1208               	bcf	8,4	;volatile
  1164  014A                     l1153:
  1165                           
  1166                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1167  014A  0377               	decf	set_cursor@linea,w
  1168  014B  1D03               	btfss	3,2
  1169  014C  294E               	goto	u331
  1170  014D  294F               	goto	u330
  1171  014E                     u331:
  1172  014E  2956               	goto	l1157
  1173  014F                     u330:
  1174  014F                     l1155:
  1175  014F  3080               	movlw	128
  1176  0150  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1177  0155  2962               	goto	l1161
  1178  0156                     l1157:
  1179  0156  3002               	movlw	2
  1180  0157  0677               	xorwf	set_cursor@linea,w
  1181  0158  1D03               	btfss	3,2
  1182  0159  295B               	goto	u341
  1183  015A  295C               	goto	u340
  1184  015B                     u341:
  1185  015B  2962               	goto	l1161
  1186  015C                     u340:
  1187  015C                     l1159:
  1188  015C  30C0               	movlw	192
  1189  015D  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1190  0162                     l1161:
  1191                           
  1192                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1193  0162  3068               	movlw	104
  1194  0163  00F6               	movwf	??_set_cursor+1
  1195  0164  30E4               	movlw	228
  1196  0165  00F5               	movwf	??_set_cursor
  1197  0166                     u527:
  1198  0166  0BF5               	decfsz	??_set_cursor,f
  1199  0167  2966               	goto	u527
  1200  0168  0BF6               	decfsz	??_set_cursor+1,f
  1201  0169  2966               	goto	u527
  1202  016A  0000               	nop
  1203  016B                     l1163:
  1204                           
  1205                           ;LCD.c: 86:     if (posicion != 0){
  1206  016B  0874               	movf	set_cursor@posicion,w
  1207  016C  1903               	btfsc	3,2
  1208  016D  296F               	goto	u351
  1209  016E  2970               	goto	u350
  1210  016F                     u351:
  1211  016F  2987               	goto	l184
  1212  0170                     u350:
  1213  0170  2979               	goto	l1171
  1214  0171                     l1167:
  1215                           
  1216                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1217  0171  3014               	movlw	20
  1218  0172  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1219  0177                     l1169:
  1220                           
  1221                           ;LCD.c: 89:             posicion--;
  1222  0177  3001               	movlw	1
  1223  0178  02F4               	subwf	set_cursor@posicion,f
  1224  0179                     l1171:
  1225                           
  1226                           ;LCD.c: 87:         while(posicion > 0){
  1227  0179  0874               	movf	set_cursor@posicion,w
  1228  017A  1D03               	btfss	3,2
  1229  017B  297D               	goto	u361
  1230  017C  297E               	goto	u360
  1231  017D                     u361:
  1232  017D  2971               	goto	l1167
  1233  017E                     u360:
  1234  017E                     l1173:
  1235                           
  1236                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1237  017E  3068               	movlw	104
  1238  017F  00F6               	movwf	??_set_cursor+1
  1239  0180  30E4               	movlw	228
  1240  0181  00F5               	movwf	??_set_cursor
  1241  0182                     u537:
  1242  0182  0BF5               	decfsz	??_set_cursor,f
  1243  0183  2982               	goto	u537
  1244  0184  0BF6               	decfsz	??_set_cursor+1,f
  1245  0185  2982               	goto	u537
  1246  0186  0000               	nop
  1247  0187                     l184:
  1248  0187  0008               	return
  1249  0188                     __end_of_set_cursor:
  1250                           
  1251                           	psect	text3
  1252  01FE                     __ptext3:	
  1253 ;; *************** function _initOsc *****************
  1254 ;; Defined at:
  1255 ;;		line 12 in file "Oscilador.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  Valor           1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  Valor           1    2[COMMON] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         1       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0
  1272 ;;      Totals:         1       0       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_setup
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _initOsc
  1285  01FE                     _initOsc:
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  1289                           ;initOsc@Valor stored from wreg
  1290  01FE  00F2               	movwf	initOsc@Valor
  1291  01FF                     l1185:
  1292                           
  1293                           ;Oscilador.c: 14:     if(Valor == 8){
  1294  01FF  3008               	movlw	8
  1295  0200  0672               	xorwf	initOsc@Valor,w
  1296  0201  1D03               	btfss	3,2
  1297  0202  2A04               	goto	u381
  1298  0203  2A05               	goto	u380
  1299  0204                     u381:
  1300  0204  2A0A               	goto	l1189
  1301  0205                     u380:
  1302  0205                     l1187:
  1303                           
  1304                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  1305  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0207  160F               	bsf	15,4	;volatile
  1308                           
  1309                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  1310  0208  168F               	bsf	15,5	;volatile
  1311                           
  1312                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  1313  0209  170F               	bsf	15,6	;volatile
  1314  020A                     l1189:
  1315                           
  1316                           ;Oscilador.c: 19:     if(Valor == 4){
  1317  020A  3004               	movlw	4
  1318  020B  0672               	xorwf	initOsc@Valor,w
  1319  020C  1D03               	btfss	3,2
  1320  020D  2A0F               	goto	u391
  1321  020E  2A10               	goto	u390
  1322  020F                     u391:
  1323  020F  2A15               	goto	l1193
  1324  0210                     u390:
  1325  0210                     l1191:
  1326                           
  1327                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  1328  0210  1683               	bsf	3,5	;RP0=1, select bank1
  1329  0211  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0212  120F               	bcf	15,4	;volatile
  1331                           
  1332                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  1333  0213  168F               	bsf	15,5	;volatile
  1334                           
  1335                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  1336  0214  170F               	bsf	15,6	;volatile
  1337  0215                     l1193:
  1338                           
  1339                           ;Oscilador.c: 24:     if(Valor == 2){
  1340  0215  3002               	movlw	2
  1341  0216  0672               	xorwf	initOsc@Valor,w
  1342  0217  1D03               	btfss	3,2
  1343  0218  2A1A               	goto	u401
  1344  0219  2A1B               	goto	u400
  1345  021A                     u401:
  1346  021A  2A20               	goto	l1197
  1347  021B                     u400:
  1348  021B                     l1195:
  1349                           
  1350                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  1351  021B  1683               	bsf	3,5	;RP0=1, select bank1
  1352  021C  1303               	bcf	3,6	;RP1=0, select bank1
  1353  021D  160F               	bsf	15,4	;volatile
  1354                           
  1355                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  1356  021E  128F               	bcf	15,5	;volatile
  1357                           
  1358                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  1359  021F  170F               	bsf	15,6	;volatile
  1360  0220                     l1197:
  1361                           
  1362                           ;Oscilador.c: 29:     if(Valor == 1){
  1363  0220  0372               	decf	initOsc@Valor,w
  1364  0221  1D03               	btfss	3,2
  1365  0222  2A24               	goto	u411
  1366  0223  2A25               	goto	u410
  1367  0224                     u411:
  1368  0224  2A2A               	goto	l192
  1369  0225                     u410:
  1370  0225                     l1199:
  1371                           
  1372                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  1373  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1374  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1375  0227  120F               	bcf	15,4	;volatile
  1376                           
  1377                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  1378  0228  128F               	bcf	15,5	;volatile
  1379                           
  1380                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  1381  0229  170F               	bsf	15,6	;volatile
  1382  022A                     l192:	
  1383                           ;Oscilador.c: 33:     }
  1384                           
  1385                           
  1386                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  1387  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1388  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1389  022C  140F               	bsf	15,0	;volatile
  1390  022D                     l193:
  1391  022D  0008               	return
  1392  022E                     __end_of_initOsc:
  1393                           
  1394                           	psect	text4
  1395  027D                     __ptext4:	
  1396 ;; *************** function _Limpiar_pantallaLCD *****************
  1397 ;; Defined at:
  1398 ;;		line 69 in file "LCD.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, pclath, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0
  1415 ;;      Totals:         2       0       0       0       0
  1416 ;;Total ram usage:        2 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 3
  1419 ;; This function calls:
  1420 ;;		_Escribir_comandoLCD
  1421 ;; This function is called by:
  1422 ;;		_setup
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _Limpiar_pantallaLCD
  1428  027D                     _Limpiar_pantallaLCD:
  1429  027D                     l1257:	
  1430                           ;incstack = 0
  1431                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  1432                           
  1433                           
  1434                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1435  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1436  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1437  027F  1188               	bcf	8,3	;volatile
  1438  0280  1208               	bcf	8,4	;volatile
  1439  0281                     l1259:
  1440                           
  1441                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  1442  0281  3001               	movlw	1
  1443  0282  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1444  0287                     l1261:
  1445                           
  1446                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  1447  0287  301A               	movlw	26
  1448  0288  00F5               	movwf	??_Limpiar_pantallaLCD+1
  1449  0289  30F8               	movlw	248
  1450  028A  00F4               	movwf	??_Limpiar_pantallaLCD
  1451  028B                     u547:
  1452  028B  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  1453  028C  2A8B               	goto	u547
  1454  028D  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  1455  028E  2A8B               	goto	u547
  1456  028F  0000               	nop
  1457  0290                     l1263:
  1458                           
  1459                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  1460  0290  3002               	movlw	2
  1461  0291  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1462  0296                     l174:
  1463  0296  0008               	return
  1464  0297                     __end_of_Limpiar_pantallaLCD:
  1465                           
  1466                           	psect	text5
  1467  01CB                     __ptext5:	
  1468 ;; *************** function _InitMSSP *****************
  1469 ;; Defined at:
  1470 ;;		line 10 in file "SPI.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  Modo            1    wreg     enum E1264
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  Modo            1    2[COMMON] enum E1264
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0
  1487 ;;      Totals:         1       0       0       0       0
  1488 ;;Total ram usage:        1 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_setup
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _InitMSSP
  1500  01CB                     _InitMSSP:
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1504                           ;InitMSSP@Modo stored from wreg
  1505  01CB  00F2               	movwf	InitMSSP@Modo
  1506  01CC                     l1201:
  1507                           
  1508                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  1509  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1510  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1511  01CE  0194               	clrf	20	;volatile
  1512                           
  1513                           ;SPI.c: 13:     SSPCON = 0b00000000;
  1514  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1515  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1516  01D1  0194               	clrf	20	;volatile
  1517  01D2                     l1203:
  1518                           
  1519                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  1520  01D2  1294               	bcf	20,5	;volatile
  1521  01D3                     l1205:
  1522                           
  1523                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  1524  01D3  1694               	bsf	20,5	;volatile
  1525  01D4                     l1207:
  1526                           
  1527                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  1528  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  1529  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  1530  01D6  1287               	bcf	7,5	;volatile
  1531  01D7                     l1209:
  1532                           
  1533                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  1534  01D7  1607               	bsf	7,4	;volatile
  1535  01D8                     l1211:
  1536                           
  1537                           ;SPI.c: 25:     if (Modo < 0b00000110){
  1538  01D8  3006               	movlw	6
  1539  01D9  0272               	subwf	InitMSSP@Modo,w
  1540  01DA  1803               	skipnc
  1541  01DB  29DD               	goto	u421
  1542  01DC  29DE               	goto	u420
  1543  01DD                     u421:
  1544  01DD  29E7               	goto	l1217
  1545  01DE                     u420:
  1546  01DE                     l1213:
  1547                           
  1548                           ;SPI.c: 27:         if (Modo < 0b00000100){
  1549  01DE  3004               	movlw	4
  1550  01DF  0272               	subwf	InitMSSP@Modo,w
  1551  01E0  1803               	skipnc
  1552  01E1  29E3               	goto	u431
  1553  01E2  29E4               	goto	u430
  1554  01E3                     u431:
  1555  01E3  29E6               	goto	l119
  1556  01E4                     u430:
  1557  01E4                     l1215:
  1558                           
  1559                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  1560  01E4  1187               	bcf	7,3	;volatile
  1561                           
  1562                           ;SPI.c: 29:         }
  1563  01E5  29E7               	goto	l1217
  1564  01E6                     l119:	
  1565                           ;SPI.c: 30:         else {
  1566                           
  1567                           
  1568                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  1569  01E6  1587               	bsf	7,3	;volatile
  1570  01E7                     l1217:
  1571                           
  1572                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  1573  01E7  3004               	movlw	4
  1574  01E8  0672               	xorwf	InitMSSP@Modo,w
  1575  01E9  1D03               	btfss	3,2
  1576  01EA  29EC               	goto	u441
  1577  01EB  29ED               	goto	u440
  1578  01EC                     u441:
  1579  01EC  29EE               	goto	l1221
  1580  01ED                     u440:
  1581  01ED                     l1219:
  1582  01ED  1685               	bsf	5,5	;volatile
  1583  01EE                     l1221:
  1584                           
  1585                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  1586  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1587  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1588  01F0  0814               	movf	20,w	;volatile
  1589  01F1  0472               	iorwf	InitMSSP@Modo,w	;volatile
  1590  01F2  0094               	movwf	20	;volatile
  1591  01F3                     l1223:
  1592                           
  1593                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  1594  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1595  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  1596  01F5  118C               	bcf	12,3	;volatile
  1597  01F6                     l1225:
  1598                           
  1599                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  1600  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1601  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1602  01F8  1214               	bcf	20,4	;volatile
  1603  01F9                     l1227:
  1604                           
  1605                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  1606  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  1607  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  1608  01FB  1314               	bcf	20,6	;volatile
  1609  01FC                     l1229:
  1610                           
  1611                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  1612  01FC  1394               	bcf	20,7	;volatile
  1613  01FD                     l122:
  1614  01FD  0008               	return
  1615  01FE                     __end_of_InitMSSP:
  1616                           
  1617                           	psect	text6
  1618  008A                     __ptext6:	
  1619 ;; *************** function _Iniciar_LCD *****************
  1620 ;; Defined at:
  1621 ;;		line 30 in file "LCD.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          2       0       0       0       0
  1638 ;;      Totals:         2       0       0       0       0
  1639 ;;Total ram usage:        2 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 3
  1642 ;; This function calls:
  1643 ;;		_Escribir_comandoLCD
  1644 ;; This function is called by:
  1645 ;;		_setup
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function _Iniciar_LCD
  1651  008A                     _Iniciar_LCD:
  1652  008A                     l1231:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  1655                           
  1656                           
  1657                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  1658  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1659  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1660  008C  1188               	bcf	8,3	;volatile
  1661                           
  1662                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  1663  008D  1208               	bcf	8,4	;volatile
  1664  008E                     l1233:
  1665                           
  1666                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  1667  008E  3025               	movlw	37
  1668  008F  00F5               	movwf	??_Iniciar_LCD+1
  1669  0090  305B               	movlw	91
  1670  0091  00F4               	movwf	??_Iniciar_LCD
  1671  0092                     u557:
  1672  0092  0BF4               	decfsz	??_Iniciar_LCD,f
  1673  0093  2892               	goto	u557
  1674  0094  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1675  0095  2892               	goto	u557
  1676  0096  2897               	nop2
  1677  0097                     l1235:
  1678                           
  1679                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  1680  0097  3030               	movlw	48
  1681  0098  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1682  009D                     l1237:
  1683                           
  1684                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1685  009D  300B               	movlw	11
  1686  009E  00F5               	movwf	??_Iniciar_LCD+1
  1687  009F  3062               	movlw	98
  1688  00A0  00F4               	movwf	??_Iniciar_LCD
  1689  00A1                     u567:
  1690  00A1  0BF4               	decfsz	??_Iniciar_LCD,f
  1691  00A2  28A1               	goto	u567
  1692  00A3  0BF5               	decfsz	??_Iniciar_LCD+1,f
  1693  00A4  28A1               	goto	u567
  1694  00A5  0000               	nop
  1695                           
  1696                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  1697  00A6  3030               	movlw	48
  1698  00A7  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1699  00AC                     l1239:
  1700                           
  1701                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1702  00AC  3042               	movlw	66
  1703  00AD  00F4               	movwf	??_Iniciar_LCD
  1704  00AE                     u577:
  1705  00AE  0BF4               	decfsz	??_Iniciar_LCD,f
  1706  00AF  28AE               	goto	u577
  1707  00B0  0000               	nop
  1708  00B1                     l1241:
  1709                           
  1710                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  1711  00B1  3030               	movlw	48
  1712  00B2  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1713                           
  1714                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1715  00B7  3042               	movlw	66
  1716  00B8  00F4               	movwf	??_Iniciar_LCD
  1717  00B9                     u587:
  1718  00B9  0BF4               	decfsz	??_Iniciar_LCD,f
  1719  00BA  28B9               	goto	u587
  1720  00BB  0000               	nop
  1721  00BC                     l1243:
  1722                           
  1723                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  1724  00BC  3038               	movlw	56
  1725  00BD  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1726  00C2                     l1245:
  1727                           
  1728                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1729  00C2  3042               	movlw	66
  1730  00C3  00F4               	movwf	??_Iniciar_LCD
  1731  00C4                     u597:
  1732  00C4  0BF4               	decfsz	??_Iniciar_LCD,f
  1733  00C5  28C4               	goto	u597
  1734  00C6  0000               	nop
  1735                           
  1736                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  1737  00C7  3008               	movlw	8
  1738  00C8  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1739  00CD                     l1247:
  1740                           
  1741                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1742  00CD  3042               	movlw	66
  1743  00CE  00F4               	movwf	??_Iniciar_LCD
  1744  00CF                     u607:
  1745  00CF  0BF4               	decfsz	??_Iniciar_LCD,f
  1746  00D0  28CF               	goto	u607
  1747  00D1  0000               	nop
  1748  00D2                     l1249:
  1749                           
  1750                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  1751  00D2  3001               	movlw	1
  1752  00D3  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1753                           
  1754                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1755  00D8  3042               	movlw	66
  1756  00D9  00F4               	movwf	??_Iniciar_LCD
  1757  00DA                     u617:
  1758  00DA  0BF4               	decfsz	??_Iniciar_LCD,f
  1759  00DB  28DA               	goto	u617
  1760  00DC  0000               	nop
  1761  00DD                     l1251:
  1762                           
  1763                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  1764  00DD  3006               	movlw	6
  1765  00DE  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1766  00E3                     l1253:
  1767                           
  1768                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1769  00E3  3042               	movlw	66
  1770  00E4  00F4               	movwf	??_Iniciar_LCD
  1771  00E5                     u627:
  1772  00E5  0BF4               	decfsz	??_Iniciar_LCD,f
  1773  00E6  28E5               	goto	u627
  1774  00E7  0000               	nop
  1775                           
  1776                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  1777  00E8  300C               	movlw	12
  1778  00E9  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1779  00EE                     l162:
  1780  00EE  0008               	return
  1781  00EF                     __end_of_Iniciar_LCD:
  1782                           
  1783                           	psect	text7
  1784  0257                     __ptext7:	
  1785 ;; *************** function _Escribir_stringLCD *****************
  1786 ;; Defined at:
  1787 ;;		line 55 in file "LCD.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  d               1    wreg     PTR const unsigned char 
  1790 ;;		 -> STR_3(13), STR_2(5), ROM(8192), STR_1(17), 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  d               1    6[COMMON] PTR const unsigned char 
  1793 ;;		 -> STR_3(13), STR_2(5), ROM(8192), STR_1(17), 
  1794 ;;  i               1    5[COMMON] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       0       0       0       0
  1805 ;;      Locals:         2       0       0       0       0
  1806 ;;      Temps:          1       0       0       0       0
  1807 ;;      Totals:         3       0       0       0       0
  1808 ;;Total ram usage:        3 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 3
  1811 ;; This function calls:
  1812 ;;		_Escribir_comandoLCD
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;;		_setup
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           
  1820                           ;psect for function _Escribir_stringLCD
  1821  0257                     _Escribir_stringLCD:
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1825                           ;Escribir_stringLCD@d stored from wreg
  1826  0257  00F6               	movwf	Escribir_stringLCD@d
  1827  0258                     l1175:
  1828                           
  1829                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  1830  0258  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0259  1303               	bcf	3,6	;RP1=0, select bank0
  1832  025A  1588               	bsf	8,3	;volatile
  1833  025B  1208               	bcf	8,4	;volatile
  1834  025C                     l1177:
  1835                           
  1836                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  1837  025C  01F5               	clrf	Escribir_stringLCD@i
  1838  025D  2A6F               	goto	l1183
  1839  025E                     l1179:
  1840                           
  1841                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  1842  025E  0875               	movf	Escribir_stringLCD@i,w
  1843  025F  0776               	addwf	Escribir_stringLCD@d,w
  1844  0260  0084               	movwf	4
  1845  0261  120A  118A  222E  120A  118A  	fcall	stringdir
  1846  0266  120A  118A  2188  120A  118A  	fcall	_Escribir_comandoLCD
  1847  026B                     l1181:
  1848                           
  1849                           ;LCD.c: 60:     }
  1850  026B  3001               	movlw	1
  1851  026C  00F4               	movwf	??_Escribir_stringLCD
  1852  026D  0874               	movf	??_Escribir_stringLCD,w
  1853  026E  07F5               	addwf	Escribir_stringLCD@i,f
  1854  026F                     l1183:
  1855  026F  0875               	movf	Escribir_stringLCD@i,w
  1856  0270  0776               	addwf	Escribir_stringLCD@d,w
  1857  0271  0084               	movwf	4
  1858  0272  120A  118A  222E  120A  118A  	fcall	stringdir
  1859  0277  3A00               	xorlw	0
  1860  0278  1D03               	skipz
  1861  0279  2A7B               	goto	u371
  1862  027A  2A7C               	goto	u370
  1863  027B                     u371:
  1864  027B  2A5E               	goto	l1179
  1865  027C                     u370:
  1866  027C                     l168:
  1867  027C  0008               	return
  1868  027D                     __end_of_Escribir_stringLCD:
  1869                           
  1870                           	psect	text8
  1871  0188                     __ptext8:	
  1872 ;; *************** function _Escribir_comandoLCD *****************
  1873 ;; Defined at:
  1874 ;;		line 17 in file "LCD.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  Comando         1    wreg     unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  Comando         1    3[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      void 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1888 ;;      Params:         0       0       0       0       0
  1889 ;;      Locals:         1       0       0       0       0
  1890 ;;      Temps:          0       0       0       0       0
  1891 ;;      Totals:         1       0       0       0       0
  1892 ;;Total ram usage:        1 bytes
  1893 ;; Hardware stack levels used: 1
  1894 ;; Hardware stack levels required when called: 2
  1895 ;; This function calls:
  1896 ;;		_prender_ELCD
  1897 ;; This function is called by:
  1898 ;;		_Iniciar_LCD
  1899 ;;		_Escribir_stringLCD
  1900 ;;		_Limpiar_pantallaLCD
  1901 ;;		_set_cursor
  1902 ;;		_Escribir_caracterLCD
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _Escribir_comandoLCD
  1908  0188                     _Escribir_comandoLCD:
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  1912                           ;Escribir_comandoLCD@Comando stored from wreg
  1913  0188  00F3               	movwf	Escribir_comandoLCD@Comando
  1914  0189                     l1131:
  1915                           
  1916                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  1917  0189  1C73               	btfss	Escribir_comandoLCD@Comando,0
  1918  018A  298C               	goto	u251
  1919  018B  298D               	goto	u250
  1920  018C                     u251:
  1921  018C  2991               	goto	l143
  1922  018D                     u250:
  1923  018D                     l1133:
  1924  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1925  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1926  018F  1708               	bsf	8,6	;volatile
  1927  0190  2994               	goto	l144
  1928  0191                     l143:
  1929  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0193  1308               	bcf	8,6	;volatile
  1932  0194                     l144:
  1933                           
  1934                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  1935  0194  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  1936  0195  2997               	goto	u261
  1937  0196  2998               	goto	u260
  1938  0197                     u261:
  1939  0197  299A               	goto	l145
  1940  0198                     u260:
  1941  0198                     l1135:
  1942  0198  1788               	bsf	8,7	;volatile
  1943  0199  299B               	goto	l146
  1944  019A                     l145:
  1945  019A  1388               	bcf	8,7	;volatile
  1946  019B                     l146:
  1947                           
  1948                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  1949  019B  1D73               	btfss	Escribir_comandoLCD@Comando,2
  1950  019C  299E               	goto	u271
  1951  019D  299F               	goto	u270
  1952  019E                     u271:
  1953  019E  29A1               	goto	l147
  1954  019F                     u270:
  1955  019F                     l1137:
  1956  019F  1406               	bsf	6,0	;volatile
  1957  01A0  29A2               	goto	l148
  1958  01A1                     l147:
  1959  01A1  1006               	bcf	6,0	;volatile
  1960  01A2                     l148:
  1961                           
  1962                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  1963  01A2  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  1964  01A3  29A5               	goto	u281
  1965  01A4  29A6               	goto	u280
  1966  01A5                     u281:
  1967  01A5  29A8               	goto	l149
  1968  01A6                     u280:
  1969  01A6                     l1139:
  1970  01A6  1486               	bsf	6,1	;volatile
  1971  01A7  29A9               	goto	l150
  1972  01A8                     l149:
  1973  01A8  1086               	bcf	6,1	;volatile
  1974  01A9                     l150:
  1975                           
  1976                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  1977  01A9  1E73               	btfss	Escribir_comandoLCD@Comando,4
  1978  01AA  29AC               	goto	u291
  1979  01AB  29AD               	goto	u290
  1980  01AC                     u291:
  1981  01AC  29AF               	goto	l151
  1982  01AD                     u290:
  1983  01AD                     l1141:
  1984  01AD  1506               	bsf	6,2	;volatile
  1985  01AE  29B0               	goto	l152
  1986  01AF                     l151:
  1987  01AF  1106               	bcf	6,2	;volatile
  1988  01B0                     l152:
  1989                           
  1990                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  1991  01B0  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  1992  01B1  29B3               	goto	u301
  1993  01B2  29B4               	goto	u300
  1994  01B3                     u301:
  1995  01B3  29B6               	goto	l153
  1996  01B4                     u300:
  1997  01B4                     l1143:
  1998  01B4  1586               	bsf	6,3	;volatile
  1999  01B5  29B7               	goto	l154
  2000  01B6                     l153:
  2001  01B6  1186               	bcf	6,3	;volatile
  2002  01B7                     l154:
  2003                           
  2004                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  2005  01B7  1F73               	btfss	Escribir_comandoLCD@Comando,6
  2006  01B8  29BA               	goto	u311
  2007  01B9  29BB               	goto	u310
  2008  01BA                     u311:
  2009  01BA  29BD               	goto	l155
  2010  01BB                     u310:
  2011  01BB                     l1145:
  2012  01BB  1606               	bsf	6,4	;volatile
  2013  01BC  29BE               	goto	l156
  2014  01BD                     l155:
  2015  01BD  1206               	bcf	6,4	;volatile
  2016  01BE                     l156:
  2017                           
  2018                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  2019  01BE  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  2020  01BF  29C1               	goto	u321
  2021  01C0  29C2               	goto	u320
  2022  01C1                     u321:
  2023  01C1  29C4               	goto	l157
  2024  01C2                     u320:
  2025  01C2                     l1147:
  2026  01C2  1686               	bsf	6,5	;volatile
  2027  01C3  29C5               	goto	l1149
  2028  01C4                     l157:
  2029  01C4  1286               	bcf	6,5	;volatile
  2030  01C5                     l1149:
  2031                           
  2032                           ;LCD.c: 27:     prender_ELCD();
  2033  01C5  120A  118A  2297  120A  118A  	fcall	_prender_ELCD
  2034  01CA                     l159:
  2035  01CA  0008               	return
  2036  01CB                     __end_of_Escribir_comandoLCD:
  2037                           
  2038                           	psect	text9
  2039  0297                     __ptext9:	
  2040 ;; *************** function _prender_ELCD *****************
  2041 ;; Defined at:
  2042 ;;		line 11 in file "LCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          1       0       0       0       0
  2059 ;;      Totals:         1       0       0       0       0
  2060 ;;Total ram usage:        1 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 1
  2063 ;; This function calls:
  2064 ;;		Nothing
  2065 ;; This function is called by:
  2066 ;;		_Escribir_comandoLCD
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _prender_ELCD
  2072  0297                     _prender_ELCD:
  2073  0297                     l1125:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _prender_ELCD: [wreg]
  2076                           
  2077                           
  2078                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  2079  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0299  1688               	bsf	8,5	;volatile
  2082  029A                     l1127:
  2083                           
  2084                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  2085  029A  30C7               	movlw	199
  2086  029B  00F2               	movwf	??_prender_ELCD
  2087  029C                     u637:
  2088  029C  2A9D               	nop2
  2089  029D  0BF2               	decfsz	??_prender_ELCD,f
  2090  029E  2A9C               	goto	u637
  2091  029F  2AA0               	nop2
  2092  02A0  2AA1               	nop2
  2093  02A1                     l1129:
  2094                           
  2095                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  2096  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2097  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2098  02A3  1288               	bcf	8,5	;volatile
  2099  02A4                     l140:
  2100  02A4  0008               	return
  2101  02A5                     __end_of_prender_ELCD:
  2102                           
  2103                           	psect	text10
  2104  02B6                     __ptext10:	
  2105 ;; *************** function _WriteMSSP *****************
  2106 ;; Defined at:
  2107 ;;		line 55 in file "SPI.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  Data            1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  Data            1    2[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0
  2124 ;;      Totals:         1       0       0       0       0
  2125 ;;Total ram usage:        1 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _WriteMSSP
  2137  02B6                     _WriteMSSP:
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _WriteMSSP: [wreg]
  2141                           ;WriteMSSP@Data stored from wreg
  2142  02B6  00F2               	movwf	WriteMSSP@Data
  2143  02B7                     l1299:
  2144                           
  2145                           ;SPI.c: 59:     SSPBUF = Data;
  2146  02B7  0872               	movf	WriteMSSP@Data,w
  2147  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2148  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2149  02BA  0093               	movwf	19	;volatile
  2150  02BB                     l125:
  2151  02BB  0008               	return
  2152  02BC                     __end_of_WriteMSSP:
  2153                           
  2154                           	psect	text11
  2155  02A5                     __ptext11:	
  2156 ;; *************** function _ReadMSSP *****************
  2157 ;; Defined at:
  2158 ;;		line 63 in file "SPI.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      unsigned char 
  2165 ;; Registers used:
  2166 ;;		wreg
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           
  2187                           ;psect for function _ReadMSSP
  2188  02A5                     _ReadMSSP:
  2189  02A5                     l1301:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _ReadMSSP: [wreg]
  2192                           
  2193  02A5                     l128:	
  2194                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  2195                           
  2196  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2197  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  2198  02A7  1C14               	btfss	20,0	;volatile
  2199  02A8  2AAA               	goto	u451
  2200  02A9  2AAB               	goto	u450
  2201  02AA                     u451:
  2202  02AA  2AA5               	goto	l128
  2203  02AB                     u450:
  2204  02AB                     l1303:
  2205                           
  2206                           ;SPI.c: 65:     return(SSPBUF);
  2207  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2208  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2209  02AD  0813               	movf	19,w	;volatile
  2210  02AE                     l131:
  2211  02AE  0008               	return
  2212  02AF                     __end_of_ReadMSSP:
  2213                           
  2214                           	psect	text12
  2215  02AF                     __ptext12:	
  2216 ;; *************** function _isr *****************
  2217 ;; Defined at:
  2218 ;;		line 68 in file "Maestro.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		None
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0
  2234 ;;      Temps:          2       0       0       0       0
  2235 ;;      Totals:         2       0       0       0       0
  2236 ;;Total ram usage:        2 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; This function calls:
  2239 ;;		Nothing
  2240 ;; This function is called by:
  2241 ;;		Interrupt level 1
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _isr
  2247  02AF                     _isr:
  2248  02AF                     i1l71:
  2249  02AF  0871               	movf	??_isr+1,w
  2250  02B0  008A               	movwf	10
  2251  02B1  0E70               	swapf	??_isr,w
  2252  02B2  0083               	movwf	3
  2253  02B3  0EFE               	swapf	btemp,f
  2254  02B4  0E7E               	swapf	btemp,w
  2255  02B5  0009               	retfie
  2256  02B6                     __end_of_isr:
  2257  007E                     btemp	set	126	;btemp
  2258  007E                     wtemp0	set	126
  2259                           
  2260                           	psect	intentry
  2261  0004                     __pintentry:	
  2262                           ;incstack = 0
  2263                           ; Regs used in _isr: []
  2264                           
  2265  0004                     interrupt_function:
  2266  007E                     saved_w	set	btemp
  2267  0004  00FE               	movwf	btemp
  2268  0005  0E03               	swapf	3,w
  2269  0006  00F0               	movwf	??_isr
  2270  0007  080A               	movf	10,w
  2271  0008  00F1               	movwf	??_isr+1
  2272  0009  120A  118A  2AAF   	ljmp	_isr
  2273                           
  2274                           	psect	config
  2275                           
  2276                           ;Config register CONFIG1 @ 0x2007
  2277                           ;	Oscillator Selection bits
  2278                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2279                           ;	Watchdog Timer Enable bit
  2280                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2281                           ;	Power-up Timer Enable bit
  2282                           ;	PWRTE = OFF, PWRT disabled
  2283                           ;	RE3/MCLR pin function select bit
  2284                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2285                           ;	Code Protection bit
  2286                           ;	CP = OFF, Program memory code protection is disabled
  2287                           ;	Data Code Protection bit
  2288                           ;	CPD = OFF, Data memory code protection is disabled
  2289                           ;	Brown Out Reset Selection bits
  2290                           ;	BOREN = OFF, BOR disabled
  2291                           ;	Internal External Switchover bit
  2292                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2293                           ;	Fail-Safe Clock Monitor Enabled bit
  2294                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2295                           ;	Low Voltage Programming Enable bit
  2296                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2297                           ;	In-Circuit Debugger Mode bit
  2298                           ;	DEBUG = 0x1, unprogrammed default
  2299  2007                     	org	8199
  2300  2007  20D4               	dw	8404
  2301                           
  2302                           ;Config register CONFIG2 @ 0x2008
  2303                           ;	Brown-out Reset Selection bit
  2304                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2305                           ;	Flash Program Memory Self Write Enable bits
  2306                           ;	WRT = OFF, Write protection off
  2307  2008                     	org	8200
  2308  2008  3FFF               	dw	16383

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      5      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 8192
		 -> STR_3(CODE[13]), STR_2(CODE[5]), ROM(CODE[8192]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_set_cursor
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2332
                                              3 BANK0      2     2      0
                 _Escribir_stringLCD
                           _ReadMSSP
                          _WriteMSSP
                         _set_cursor
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    1419
                                              0 BANK0      3     3      0
                 _Escribir_stringLCD
                        _Iniciar_LCD
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     493
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     398
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_stringLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _ReadMSSP
   _WriteMSSP
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMSSP
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 16:11:08 2022

                           pc 0002                   _SSPSTATbits 0094                            l83 0089  
                          fsr 0004               set_cursor@linea 0077                           l122 01FD  
                         l131 02AE                           l140 02A4                           l125 02BB  
                         l150 01A9                           l151 01AF                           l143 0191  
                         l119 01E6                           l128 02A5                           l152 01B0  
                         l144 0194                           l153 01B6                           l145 019A  
                         l154 01B7                           l146 019B                           l162 00EE  
                         l155 01BD                           l147 01A1                           l156 01BE  
                         l148 01A2                           l157 01C4                           l149 01A8  
                         l174 0296                           l159 01CA                           l168 027C  
                         l192 022A                           l184 0187                           l193 022D  
                         u300 01B4                           u301 01B3                           u310 01BB  
                         u311 01BA                           u320 01C2                           u400 021B  
                         u321 01C1                           u401 021A                           u250 018D  
                         u410 0225                           u330 014F                           u251 018C  
                         u411 0224                           u331 014E                           u260 0198  
                         u420 01DE                           u340 015C                           u261 0197  
                         u421 01DD                           u341 015B                           u270 019F  
                         u430 01E4                           u350 0170                           u271 019E  
                         u431 01E3                           u351 016F                           u280 01A6  
                         u440 01ED                           u360 017E                           u281 01A5  
                         u441 01EC                           u361 017D                           u450 02AB  
                         u290 01AD                           u370 027C                           u451 02AA  
                         u291 01AC                           u371 027B                           u507 0134  
                         u380 0205                           u381 0204                           u517 007D  
                         u390 0210                           u470 0123                           u607 00CF  
                         u391 020F                           u527 0166                           u471 0122  
                         u617 00DA                           u537 0182                           u627 00E5  
                         u547 028B                           u637 029C                           u557 0092  
                         u567 00A1                           u487 0109                           u577 00AE  
                         u497 0119                           u587 00B9                           u597 00C4  
                         _isr 02AF                           fsr0 0004                          l1201 01CC  
                        l1131 0189                          l1211 01D8                          l1203 01D2  
                        l1301 02A5                          l1125 0297                          l1141 01AD  
                        l1133 018D                          l1221 01EE                          l1213 01DE  
                        l1205 01D3                          l1303 02AB                          l1127 029A  
                        l1143 01B4                          l1135 0198                          l1231 008A  
                        l1223 01F3                          l1215 01E4                          l1207 01D4  
                        l1151 0146                          l1129 02A1                          l1145 01BB  
                        l1137 019F                          l1241 00B1                          l1233 008E  
                        l1225 01F6                          l1217 01E7                          l1209 01D7  
                        l1161 0162                          l1153 014A                          l1147 01C2  
                        l1139 01A6                          l1251 00DD                          l1243 00BC  
                        l1235 0097                          l1227 01F9                          l1219 01ED  
                        l1171 0179                          l1163 016B                          l1155 014F  
                        l1149 01C5                          l1181 026B                          l1253 00E3  
                        l1245 00C2                          l1237 009D                          l1229 01FC  
                        l1261 0287                          l1173 017E                          l1157 0156  
                        l1341 0031                          l1183 026F                          l1175 0258  
                        l1247 00CD                          l1239 00AC                          l1263 0290  
                        l1191 0210                          l1167 0171                          l1159 015C  
                        l1351 0040                          l1343 0034                          l1177 025C  
                        l1249 00D2                          l1257 027D                          l1193 0215  
                        l1185 01FF                          l1169 0177                          l1361 005D  
                        l1353 0046                          l1345 0037                          l1337 001D  
                        l1179 025E                          l1259 0281                          l1195 021B  
                        l1187 0205                          l1363 0063                          l1355 004C  
                        l1347 003A                          l1339 002E                          l1371 00EF  
                        l1197 0220                          l1189 020A                          l1365 006F  
                        l1357 0051                          l1349 003D                          l1381 0105  
                        l1373 00F4                          l1199 0225                          l1367 0075  
                        l1359 0056                          l1391 0130                          l1383 010D  
                        l1375 00F5                          l1369 0084                          l1393 0138  
                        l1385 0113                          l1377 00FC                          l1299 02B7  
                        l1395 013B                          l1387 011D                          l1379 0102  
                        l1389 0123                          ?_isr 0070                          STR_1 0234  
                        STR_2 0252                          STR_3 0245                          i1l71 02AF  
               ??_Iniciar_LCD 0074                          _main 00EF                          btemp 007E  
                        start 000C                         ??_isr 0070    __end_of_Escribir_stringLCD 027D  
                       ?_main 0070                         _ANSEL 0188                         _PORTA 0005  
                       _PORTB 0006                         _PORTC 0007                         _PORTD 0008  
                       _PORTE 0009                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                  InitMSSP@Modo 0072  
             __end_of_initOsc 022E                         _setup 001D           _Limpiar_pantallaLCD 027D  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __initialization 000F           __end_of_Iniciar_LCD 00EF                  __end_of_main 0145  
            __end_of_InitMSSP 01FE              __end_of_ReadMSSP 02AF          ?_Limpiar_pantallaLCD 0070  
                      ??_main 0028            set_cursor@posicion 0074                        ?_setup 0070  
                      _ANSELH 0189                        _MSSPin 0020                        _TRISC0 0438  
                      _TRISC1 0439                        _TRISC2 043A                        _SSPCON 0014  
                      _SSPBUF 0013         ??_Limpiar_pantallaLCD 0074                     ??_initOsc 0072  
                      saved_w 007E       __end_of__initialization 0019                   _Iniciar_LCD 008A  
          __size_of_WriteMSSP 0006                __pcstackCOMMON 0070                 __end_of_setup 008A  
                     ??_setup 0025                    __pbssBANK0 0020                     ?_InitMSSP 0070  
                   ?_ReadMSSP 0070                    __pmaintext 00EF                    __pintentry 0004  
__size_of_Escribir_comandoLCD 0043                       _ADC_dig 0079             __end_of_WriteMSSP 02BC  
                initOsc@Valor 0072                       _SSPSTAT 0094            _Escribir_stringLCD 0257  
                  __stringtab 022E                    ??_InitMSSP 0072                    ??_ReadMSSP 0072  
         ?_Escribir_stringLCD 0070                       _dec_ADC 0023                       _cen_ADC 0022  
                     _dig_ADC 0078                       __ptext1 001D                       __ptext2 0145  
                     __ptext3 01FE                       __ptext4 027D                       __ptext5 01CB  
                     __ptext6 008A                       __ptext7 0257                       __ptext8 0188  
                     __ptext9 0297          ??_Escribir_stringLCD 0074                       _initOsc 01FE  
                __size_of_isr 0007                       _val_ADC 007A                 ?_prender_ELCD 0070  
                     _uni_ADC 0024          end_of_initialization 0019                    _set_cursor 0145  
                   _PORTBbits 0006                     _PORTCbits 0007                     _PORTDbits 0008  
              ??_prender_ELCD 0072                     _TRISAbits 0085                     _TRISCbits 0087  
                ?_Iniciar_LCD 0070   __end_of_Limpiar_pantallaLCD 0297                 WriteMSSP@Data 0072  
         start_initialization 000F                   __end_of_isr 02B6           _Escribir_comandoLCD 0188  
  Escribir_comandoLCD@Comando 0073             __size_of_InitMSSP 0033             __size_of_ReadMSSP 000A  
                 ?_set_cursor 0074          ?_Escribir_comandoLCD 0070                   __pbssCOMMON 0078  
                   ___latbits 0002                 __pcstackBANK0 0025                     _WriteMSSP 02B6  
        __end_of_prender_ELCD 02A5         ??_Escribir_comandoLCD 0073                     __pstrings 022E  
                    ?_initOsc 0070                    ?_WriteMSSP 0070           __size_of_set_cursor 0043  
              __size_of_setup 006D             interrupt_function 0004                      _PIE1bits 008C  
        __size_of_Iniciar_LCD 0065                   __stringbase 0233   __size_of_Escribir_stringLCD 0026  
                    _InitMSSP 01CB                      _ReadMSSP 02A5           Escribir_stringLCD@d 0076  
         Escribir_stringLCD@i 0075            __end_of__stringtab 0234              __size_of_initOsc 0030  
                 ??_WriteMSSP 0072                      __ptext10 02B6                      __ptext11 02A5  
                    __ptext12 02AF         __size_of_prender_ELCD 000E                 __size_of_main 0056  
                ??_set_cursor 0075  __size_of_Limpiar_pantallaLCD 001A                  _prender_ELCD 0297  
          __end_of_set_cursor 0188                      intlevel1 0000                     stringcode 022E  
                  _OSCCONbits 008F                      stringdir 022E                      stringtab 022E  
                  _SSPCONbits 0014   __end_of_Escribir_comandoLCD 01CB  
