

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 08:41:51 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  008F                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  0105                     	;# 
   428  0107                     	;# 
   429  0108                     	;# 
   430  0109                     	;# 
   431  010C                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  010F                     	;# 
   436  0185                     	;# 
   437  0187                     	;# 
   438  0188                     	;# 
   439  0189                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  000E                     	;# 
   458  000F                     	;# 
   459  0010                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001D                     	;# 
   475  001E                     	;# 
   476  001F                     	;# 
   477  0081                     	;# 
   478  0085                     	;# 
   479  0086                     	;# 
   480  0087                     	;# 
   481  0088                     	;# 
   482  0089                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  008F                     	;# 
   487  0090                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0095                     	;# 
   495  0096                     	;# 
   496  0097                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009A                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  0105                     	;# 
   506  0107                     	;# 
   507  0108                     	;# 
   508  0109                     	;# 
   509  010C                     	;# 
   510  010C                     	;# 
   511  010D                     	;# 
   512  010E                     	;# 
   513  010F                     	;# 
   514  0185                     	;# 
   515  0187                     	;# 
   516  0188                     	;# 
   517  0189                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  0006                     _PORTBbits	set	6
   521  0008                     _PORTDbits	set	8
   522  0013                     _SSPBUF	set	19
   523  0014                     _SSPCON	set	20
   524  0014                     _SSPCONbits	set	20
   525  0009                     _PORTE	set	9
   526  0008                     _PORTD	set	8
   527  0005                     _PORTA	set	5
   528  0006                     _PORTB	set	6
   529  0007                     _PORTCbits	set	7
   530  008F                     _OSCCONbits	set	143
   531  0094                     _SSPSTATbits	set	148
   532  008C                     _PIE1bits	set	140
   533  0085                     _TRISAbits	set	133
   534  0087                     _TRISCbits	set	135
   535  0089                     _TRISE	set	137
   536  0088                     _TRISD	set	136
   537  0086                     _TRISB	set	134
   538  0085                     _TRISA	set	133
   539  043A                     _TRISC2	set	1082
   540  0189                     _ANSELH	set	393
   541  0188                     _ANSEL	set	392
   542                           
   543                           	psect	cinit
   544  000F                     start_initialization:	
   545                           ; #config settings
   546                           
   547  000F                     __initialization:
   548                           
   549                           ; Clear objects allocated to COMMON
   550  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   551  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   552  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   553  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   554  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   555  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   556  0015                     end_of_initialization:	
   557                           ;End of C runtime variable initialization code
   558                           
   559  0015                     __end_of__initialization:
   560  0015  0183               	clrf	3
   561  0016  120A  118A  2878   	ljmp	_main	;jump to C main() function
   562                           
   563                           	psect	bssCOMMON
   564  0070                     __pbssCOMMON:
   565  0070                     _cen_ADC:
   566  0070                     	ds	1
   567  0071                     _dec_ADC:
   568  0071                     	ds	1
   569  0072                     _uni_ADC:
   570  0072                     	ds	1
   571  0073                     _dig_ADC:
   572  0073                     	ds	1
   573  0074                     _ADC_dig:
   574  0074                     	ds	1
   575  0075                     _val_ADC:
   576  0075                     	ds	1
   577                           
   578                           	psect	cstackCOMMON
   579  0076                     __pcstackCOMMON:
   580  0076                     ?_setup:
   581  0076                     ?_WriteMSSP:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0076                     ?_ReadMSSP:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0076                     ?_initOsc:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0076                     ?_InitMSSP:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0076                     ?_isr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0076                     ??_isr:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0076                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602                           
   603                           ; 1 bytes @ 0x0
   604  0076                     	ds	2
   605  0078                     ??_WriteMSSP:
   606  0078                     ??_ReadMSSP:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  0078                     ??_initOsc:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0078                     ??_InitMSSP:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0078                     InitMSSP@Modo:	
   616                           ; 1 bytes @ 0x2
   617                           
   618  0078                     WriteMSSP@Data:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0078                     initOsc@Valor:	
   622                           ; 1 bytes @ 0x2
   623                           
   624                           
   625                           ; 1 bytes @ 0x2
   626  0078                     	ds	1
   627  0079                     ??_setup:
   628  0079                     ??_main:	
   629                           ; 1 bytes @ 0x3
   630                           
   631                           
   632                           ; 1 bytes @ 0x3
   633  0079                     	ds	1
   634                           
   635                           	psect	maintext
   636  0078                     __pmaintext:	
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 71 in file "Maestro.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0, pclath, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : B00/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          1       0       0       0       0
   659 ;;      Totals:         1       0       0       0       0
   660 ;;Total ram usage:        1 bytes
   661 ;; Hardware stack levels required when called: 3
   662 ;; This function calls:
   663 ;;		_ReadMSSP
   664 ;;		_WriteMSSP
   665 ;;		_setup
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _main
   673  0078                     _main:
   674  0078                     l880:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   677                           
   678                           
   679                           ;Maestro.c: 72:     setup();
   680  0078  120A  118A  20A4  120A  118A  	fcall	_setup
   681  007D                     l882:
   682                           
   683                           ;Maestro.c: 75:     val_ADC = 0;
   684  007D  01F5               	clrf	_val_ADC
   685  007E                     l884:
   686                           
   687                           ;Maestro.c: 86:         PORTCbits.RC2 = 0;
   688  007E  1283               	bcf	3,5	;RP0=0, select bank0
   689  007F  1303               	bcf	3,6	;RP1=0, select bank0
   690  0080  1107               	bcf	7,2	;volatile
   691  0081                     l886:
   692                           
   693                           ;Maestro.c: 87:         _delay((unsigned long)((1)*(4000000/4000.0)));
   694  0081  30C7               	movlw	199
   695  0082  00F9               	movwf	??_main
   696  0083                     u247:
   697  0083  2884               	nop2
   698  0084  0BF9               	decfsz	??_main,f
   699  0085  2883               	goto	u247
   700  0086  2887               	nop2
   701  0087  2888               	nop2
   702  0088                     l888:
   703                           
   704                           ;Maestro.c: 89:         WriteMSSP(1);
   705  0088  3001               	movlw	1
   706  0089  120A  118A  20D8  120A  118A  	fcall	_WriteMSSP
   707  008E                     l890:
   708                           
   709                           ;Maestro.c: 90:         PORTB = ReadMSSP();
   710  008E  120A  118A  20C7  120A  118A  	fcall	_ReadMSSP
   711  0093  1283               	bcf	3,5	;RP0=0, select bank0
   712  0094  1303               	bcf	3,6	;RP1=0, select bank0
   713  0095  0086               	movwf	6	;volatile
   714  0096                     l892:
   715                           
   716                           ;Maestro.c: 92:         _delay((unsigned long)((1)*(4000000/4000.0)));
   717  0096  30C7               	movlw	199
   718  0097  00F9               	movwf	??_main
   719  0098                     u257:
   720  0098  2899               	nop2
   721  0099  0BF9               	decfsz	??_main,f
   722  009A  2898               	goto	u257
   723  009B  289C               	nop2
   724  009C  289D               	nop2
   725  009D                     l894:
   726                           
   727                           ;Maestro.c: 93:         PORTCbits.RC2 = 1;
   728  009D  1283               	bcf	3,5	;RP0=0, select bank0
   729  009E  1303               	bcf	3,6	;RP1=0, select bank0
   730  009F  1507               	bsf	7,2	;volatile
   731  00A0  287E               	goto	l884
   732  00A1  120A  118A  280C   	ljmp	start
   733  00A4                     __end_of_main:
   734                           
   735                           	psect	text1
   736  00A4                     __ptext1:	
   737 ;; *************** function _setup *****************
   738 ;; Defined at:
   739 ;;		line 125 in file "Maestro.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         0       0       0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 2
   760 ;; This function calls:
   761 ;;		_InitMSSP
   762 ;;		_initOsc
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _setup
   770  00A4                     _setup:
   771  00A4                     l842:	
   772                           ;incstack = 0
   773                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   774                           
   775                           
   776                           ;Maestro.c: 128:     ANSEL = 0;
   777  00A4  1683               	bsf	3,5	;RP0=1, select bank3
   778  00A5  1703               	bsf	3,6	;RP1=1, select bank3
   779  00A6  0188               	clrf	8	;volatile
   780                           
   781                           ;Maestro.c: 129:     ANSELH = 0;
   782  00A7  0189               	clrf	9	;volatile
   783                           
   784                           ;Maestro.c: 131:     TRISA = 0;
   785  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   786  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   787  00AA  0185               	clrf	5	;volatile
   788                           
   789                           ;Maestro.c: 132:     TRISB = 0;
   790  00AB  0186               	clrf	6	;volatile
   791                           
   792                           ;Maestro.c: 133:     TRISD = 0;
   793  00AC  0188               	clrf	8	;volatile
   794                           
   795                           ;Maestro.c: 134:     TRISE = 0;
   796  00AD  0189               	clrf	9	;volatile
   797                           
   798                           ;Maestro.c: 136:     PORTA = 0;
   799  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   800  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   801  00B0  0185               	clrf	5	;volatile
   802                           
   803                           ;Maestro.c: 137:     PORTD = 0;
   804  00B1  0188               	clrf	8	;volatile
   805                           
   806                           ;Maestro.c: 138:     PORTE = 0;
   807  00B2  0189               	clrf	9	;volatile
   808                           
   809                           ;Maestro.c: 139:     PORTB = 0;
   810  00B3  0186               	clrf	6	;volatile
   811  00B4                     l844:
   812                           
   813                           ;Maestro.c: 142:     TRISC2 = 0;
   814  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   815  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   816  00B6  1107               	bcf	7,2	;volatile
   817  00B7                     l846:
   818                           
   819                           ;Maestro.c: 143:     PORTCbits.RC2 = 1;
   820  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   821  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   822  00B9  1507               	bsf	7,2	;volatile
   823  00BA                     l848:
   824                           
   825                           ;Maestro.c: 146:     initOsc(4);
   826  00BA  3004               	movlw	4
   827  00BB  120A  118A  2019  120A  118A  	fcall	_initOsc
   828  00C0                     l850:
   829                           
   830                           ;Maestro.c: 149:     InitMSSP(SPI_MASTER_FOSC4);
   831  00C0  3000               	movlw	0
   832  00C1  120A  118A  2049  120A  118A  	fcall	_InitMSSP
   833  00C6                     l64:
   834  00C6  0008               	return
   835  00C7                     __end_of_setup:
   836                           
   837                           	psect	text2
   838  0019                     __ptext2:	
   839 ;; *************** function _initOsc *****************
   840 ;; Defined at:
   841 ;;		line 12 in file "Oscilador.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;  Valor           1    wreg     unsigned char 
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  Valor           1    2[COMMON] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         1       0       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         1       0       0       0       0
   859 ;;Total ram usage:        1 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_setup
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _initOsc
   871  0019                     _initOsc:
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   875                           ;initOsc@Valor stored from wreg
   876  0019  00F8               	movwf	initOsc@Valor
   877  001A                     l798:
   878                           
   879                           ;Oscilador.c: 14:     if(Valor == 8){
   880  001A  3008               	movlw	8
   881  001B  0678               	xorwf	initOsc@Valor,w
   882  001C  1D03               	btfss	3,2
   883  001D  281F               	goto	u11
   884  001E  2820               	goto	u10
   885  001F                     u11:
   886  001F  2825               	goto	l802
   887  0020                     u10:
   888  0020                     l800:
   889                           
   890                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   891  0020  1683               	bsf	3,5	;RP0=1, select bank1
   892  0021  1303               	bcf	3,6	;RP1=0, select bank1
   893  0022  160F               	bsf	15,4	;volatile
   894                           
   895                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   896  0023  168F               	bsf	15,5	;volatile
   897                           
   898                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   899  0024  170F               	bsf	15,6	;volatile
   900  0025                     l802:
   901                           
   902                           ;Oscilador.c: 19:     if(Valor == 4){
   903  0025  3004               	movlw	4
   904  0026  0678               	xorwf	initOsc@Valor,w
   905  0027  1D03               	btfss	3,2
   906  0028  282A               	goto	u21
   907  0029  282B               	goto	u20
   908  002A                     u21:
   909  002A  2830               	goto	l806
   910  002B                     u20:
   911  002B                     l804:
   912                           
   913                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   914  002B  1683               	bsf	3,5	;RP0=1, select bank1
   915  002C  1303               	bcf	3,6	;RP1=0, select bank1
   916  002D  120F               	bcf	15,4	;volatile
   917                           
   918                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   919  002E  168F               	bsf	15,5	;volatile
   920                           
   921                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   922  002F  170F               	bsf	15,6	;volatile
   923  0030                     l806:
   924                           
   925                           ;Oscilador.c: 24:     if(Valor == 2){
   926  0030  3002               	movlw	2
   927  0031  0678               	xorwf	initOsc@Valor,w
   928  0032  1D03               	btfss	3,2
   929  0033  2835               	goto	u31
   930  0034  2836               	goto	u30
   931  0035                     u31:
   932  0035  283B               	goto	l810
   933  0036                     u30:
   934  0036                     l808:
   935                           
   936                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   937  0036  1683               	bsf	3,5	;RP0=1, select bank1
   938  0037  1303               	bcf	3,6	;RP1=0, select bank1
   939  0038  160F               	bsf	15,4	;volatile
   940                           
   941                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   942  0039  128F               	bcf	15,5	;volatile
   943                           
   944                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   945  003A  170F               	bsf	15,6	;volatile
   946  003B                     l810:
   947                           
   948                           ;Oscilador.c: 29:     if(Valor == 1){
   949  003B  0378               	decf	initOsc@Valor,w
   950  003C  1D03               	btfss	3,2
   951  003D  283F               	goto	u41
   952  003E  2840               	goto	u40
   953  003F                     u41:
   954  003F  2845               	goto	l173
   955  0040                     u40:
   956  0040                     l812:
   957                           
   958                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   959  0040  1683               	bsf	3,5	;RP0=1, select bank1
   960  0041  1303               	bcf	3,6	;RP1=0, select bank1
   961  0042  120F               	bcf	15,4	;volatile
   962                           
   963                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   964  0043  128F               	bcf	15,5	;volatile
   965                           
   966                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   967  0044  170F               	bsf	15,6	;volatile
   968  0045                     l173:	
   969                           ;Oscilador.c: 33:     }
   970                           
   971                           
   972                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   973  0045  1683               	bsf	3,5	;RP0=1, select bank1
   974  0046  1303               	bcf	3,6	;RP1=0, select bank1
   975  0047  140F               	bsf	15,0	;volatile
   976  0048                     l174:
   977  0048  0008               	return
   978  0049                     __end_of_initOsc:
   979                           
   980                           	psect	text3
   981  0049                     __ptext3:	
   982 ;; *************** function _InitMSSP *****************
   983 ;; Defined at:
   984 ;;		line 10 in file "SPI.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  Modo            1    wreg     enum E1264
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  Modo            1    2[COMMON] enum E1264
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         1       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0
  1001 ;;      Totals:         1       0       0       0       0
  1002 ;;Total ram usage:        1 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_setup
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _InitMSSP
  1014  0049                     _InitMSSP:
  1015                           
  1016                           ;incstack = 0
  1017                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1018                           ;InitMSSP@Modo stored from wreg
  1019  0049  00F8               	movwf	InitMSSP@Modo
  1020  004A                     l814:
  1021                           
  1022                           ;SPI.c: 14:     SSPCONbits.SSPEN = 0;
  1023  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1024  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1025  004C  1294               	bcf	20,5	;volatile
  1026                           
  1027                           ;SPI.c: 16:     SSPCONbits.SSPEN = 1;
  1028  004D  1694               	bsf	20,5	;volatile
  1029                           
  1030                           ;SPI.c: 19:     TRISCbits.TRISC5 = 0;
  1031  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1032  004F  1303               	bcf	3,6	;RP1=0, select bank1
  1033  0050  1287               	bcf	7,5	;volatile
  1034                           
  1035                           ;SPI.c: 20:     TRISCbits.TRISC4 = 1;
  1036  0051  1607               	bsf	7,4	;volatile
  1037  0052                     l816:
  1038                           
  1039                           ;SPI.c: 21:     if (Modo < 0b00000110){
  1040  0052  3006               	movlw	6
  1041  0053  0278               	subwf	InitMSSP@Modo,w
  1042  0054  1803               	skipnc
  1043  0055  2857               	goto	u51
  1044  0056  2858               	goto	u50
  1045  0057                     u51:
  1046  0057  2861               	goto	l822
  1047  0058                     u50:
  1048  0058                     l818:
  1049                           
  1050                           ;SPI.c: 23:         if (Modo < 0b00000100){
  1051  0058  3004               	movlw	4
  1052  0059  0278               	subwf	InitMSSP@Modo,w
  1053  005A  1803               	skipnc
  1054  005B  285D               	goto	u61
  1055  005C  285E               	goto	u60
  1056  005D                     u61:
  1057  005D  2860               	goto	l98
  1058  005E                     u60:
  1059  005E                     l820:
  1060                           
  1061                           ;SPI.c: 24:             TRISCbits.TRISC3 = 0;
  1062  005E  1187               	bcf	7,3	;volatile
  1063                           
  1064                           ;SPI.c: 25:         }
  1065  005F  2861               	goto	l822
  1066  0060                     l98:	
  1067                           ;SPI.c: 26:         else {
  1068                           
  1069                           
  1070                           ;SPI.c: 27:             TRISCbits.TRISC3 = 1;
  1071  0060  1587               	bsf	7,3	;volatile
  1072  0061                     l822:
  1073                           
  1074                           ;SPI.c: 32:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 0;}
  1075  0061  3004               	movlw	4
  1076  0062  0678               	xorwf	InitMSSP@Modo,w
  1077  0063  1D03               	btfss	3,2
  1078  0064  2866               	goto	u71
  1079  0065  2867               	goto	u70
  1080  0066                     u71:
  1081  0066  2868               	goto	l826
  1082  0067                     u70:
  1083  0067                     l824:
  1084  0067  1285               	bcf	5,5	;volatile
  1085  0068                     l826:
  1086                           
  1087                           ;SPI.c: 36:     SSPCON = SSPCON | Modo;
  1088  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1090  006A  0814               	movf	20,w	;volatile
  1091  006B  0478               	iorwf	InitMSSP@Modo,w	;volatile
  1092  006C  0094               	movwf	20	;volatile
  1093  006D                     l828:
  1094                           
  1095                           ;SPI.c: 38:     PIE1bits.SSPIE = 0;
  1096  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1097  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1098  006F  118C               	bcf	12,3	;volatile
  1099  0070                     l830:
  1100                           
  1101                           ;SPI.c: 42:     SSPCONbits.CKP = 0;
  1102  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0071  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0072  1214               	bcf	20,4	;volatile
  1105  0073                     l832:
  1106                           
  1107                           ;SPI.c: 45:     SSPSTATbits.CKE = 1;
  1108  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0075  1714               	bsf	20,6	;volatile
  1111  0076                     l834:
  1112                           
  1113                           ;SPI.c: 47:     SSPSTATbits.SMP = 0;
  1114  0076  1394               	bcf	20,7	;volatile
  1115  0077                     l101:
  1116  0077  0008               	return
  1117  0078                     __end_of_InitMSSP:
  1118                           
  1119                           	psect	text4
  1120  00D8                     __ptext4:	
  1121 ;; *************** function _WriteMSSP *****************
  1122 ;; Defined at:
  1123 ;;		line 51 in file "SPI.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  Data            1    wreg     unsigned char 
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;  Data            1    2[COMMON] unsigned char 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         1       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         1       0       0       0       0
  1141 ;;Total ram usage:        1 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 1
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _WriteMSSP
  1153  00D8                     _WriteMSSP:
  1154                           
  1155                           ;incstack = 0
  1156                           ; Regs used in _WriteMSSP: [wreg]
  1157                           ;WriteMSSP@Data stored from wreg
  1158  00D8  00F8               	movwf	WriteMSSP@Data
  1159  00D9                     l852:
  1160                           
  1161                           ;SPI.c: 55:     SSPBUF = Data;
  1162  00D9  0878               	movf	WriteMSSP@Data,w
  1163  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1164  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1165  00DC  0093               	movwf	19	;volatile
  1166  00DD                     l104:
  1167  00DD  0008               	return
  1168  00DE                     __end_of_WriteMSSP:
  1169                           
  1170                           	psect	text5
  1171  00C7                     __ptext5:	
  1172 ;; *************** function _ReadMSSP *****************
  1173 ;; Defined at:
  1174 ;;		line 59 in file "SPI.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      unsigned char 
  1181 ;; Registers used:
  1182 ;;		wreg
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function _ReadMSSP
  1204  00C7                     _ReadMSSP:
  1205  00C7                     l854:	
  1206                           ;incstack = 0
  1207                           ; Regs used in _ReadMSSP: [wreg]
  1208                           
  1209  00C7                     l107:	
  1210                           ;SPI.c: 60:     while(SSPSTATbits.BF == 0){}
  1211                           
  1212  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1213  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1214  00C9  1C14               	btfss	20,0	;volatile
  1215  00CA  28CC               	goto	u81
  1216  00CB  28CD               	goto	u80
  1217  00CC                     u81:
  1218  00CC  28C7               	goto	l107
  1219  00CD                     u80:
  1220  00CD                     l856:
  1221                           
  1222                           ;SPI.c: 61:     return(SSPBUF);
  1223  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1224  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1225  00CF  0813               	movf	19,w	;volatile
  1226  00D0                     l110:
  1227  00D0  0008               	return
  1228  00D1                     __end_of_ReadMSSP:
  1229                           
  1230                           	psect	text6
  1231  00D1                     __ptext6:	
  1232 ;; *************** function _isr *****************
  1233 ;; Defined at:
  1234 ;;		line 65 in file "Maestro.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		None
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       0       0       0       0
  1249 ;;      Locals:         0       0       0       0       0
  1250 ;;      Temps:          2       0       0       0       0
  1251 ;;      Totals:         2       0       0       0       0
  1252 ;;Total ram usage:        2 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		Interrupt level 1
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _isr
  1263  00D1                     _isr:
  1264  00D1                     i1l53:
  1265  00D1  0877               	movf	??_isr+1,w
  1266  00D2  008A               	movwf	10
  1267  00D3  0E76               	swapf	??_isr,w
  1268  00D4  0083               	movwf	3
  1269  00D5  0EFE               	swapf	btemp,f
  1270  00D6  0E7E               	swapf	btemp,w
  1271  00D7  0009               	retfie
  1272  00D8                     __end_of_isr:
  1273  007E                     btemp	set	126	;btemp
  1274  007E                     wtemp0	set	126
  1275                           
  1276                           	psect	intentry
  1277  0004                     __pintentry:	
  1278                           ;incstack = 0
  1279                           ; Regs used in _isr: []
  1280                           
  1281  0004                     interrupt_function:
  1282  007E                     saved_w	set	btemp
  1283  0004  00FE               	movwf	btemp
  1284  0005  0E03               	swapf	3,w
  1285  0006  00F6               	movwf	??_isr
  1286  0007  080A               	movf	10,w
  1287  0008  00F7               	movwf	??_isr+1
  1288  0009  120A  118A  28D1   	ljmp	_isr
  1289                           
  1290                           	psect	config
  1291                           
  1292                           ;Config register CONFIG1 @ 0x2007
  1293                           ;	Oscillator Selection bits
  1294                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1295                           ;	Watchdog Timer Enable bit
  1296                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1297                           ;	Power-up Timer Enable bit
  1298                           ;	PWRTE = OFF, PWRT disabled
  1299                           ;	RE3/MCLR pin function select bit
  1300                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1301                           ;	Code Protection bit
  1302                           ;	CP = OFF, Program memory code protection is disabled
  1303                           ;	Data Code Protection bit
  1304                           ;	CPD = OFF, Data memory code protection is disabled
  1305                           ;	Brown Out Reset Selection bits
  1306                           ;	BOREN = OFF, BOR disabled
  1307                           ;	Internal External Switchover bit
  1308                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1309                           ;	Fail-Safe Clock Monitor Enabled bit
  1310                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1311                           ;	Low Voltage Programming Enable bit
  1312                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1313                           ;	In-Circuit Debugger Mode bit
  1314                           ;	DEBUG = 0x1, unprogrammed default
  1315  2007                     	org	8199
  1316  2007  20D4               	dw	8404
  1317                           
  1318                           ;Config register CONFIG2 @ 0x2008
  1319                           ;	Brown-out Reset Selection bit
  1320                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1321                           ;	Flash Program Memory Self Write Enable bits
  1322                           ;	WRT = OFF, Write protection off
  1323  2008                     	org	8200
  1324  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_WriteMSSP
    _setup->_InitMSSP
    _setup->_initOsc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     135
                                              3 COMMON     1     1      0
                           _ReadMSSP
                          _WriteMSSP
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     120
                           _InitMSSP
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   _setup
     _InitMSSP
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 08:41:51 2022

            _SSPSTATbits 0094                       l64 00C6                       l98 0060  
                     u10 0020                       u11 001F                       u20 002B  
                     u21 002A                       u30 0036                       u31 0035  
                     u40 0040                       u41 003F                       u50 0058  
                     u51 0057                       u60 005E                       u61 005D  
                     u70 0067                       u71 0066                       u80 00CD  
                     u81 00CC                      l101 0077                      l110 00D0  
                    l104 00DD                      l107 00C7                      l173 0045  
                    l174 0048                      l800 0020                      l810 003B  
                    l802 0025                      l820 005E                      l812 0040  
                    l804 002B                      l830 0070                      l822 0061  
                    l814 004A                      l806 0030                      l832 0073  
                    l824 0067                      l816 0052                      l808 0036  
                    l834 0076                      l826 0068                      l818 0058  
                    l850 00C0                      l842 00A4                      l852 00D9  
                    l828 006D                      l844 00B4                      l854 00C7  
                    l846 00B7                      l856 00CD                      l848 00BA  
                    l880 0078                      l890 008E                      l882 007D  
                    l892 0096                      l884 007E                      l798 001A  
                    l894 009D                      l886 0081                      l888 0088  
                    u247 0083                      u257 0098                      _isr 00D1  
                   ?_isr 0076                     i1l53 00D1                     _main 0078  
                   btemp 007E                     start 000C                    ??_isr 0076  
                  ?_main 0076                    _ANSEL 0188                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089             InitMSSP@Modo 0078          __end_of_initOsc 0049  
                  _setup 00A4                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00A4  
       __end_of_InitMSSP 0078         __end_of_ReadMSSP 00D1                   ??_main 0079  
                 ?_setup 0076                   _ANSELH 0189                   _TRISC2 043A  
                 _SSPCON 0014                   _SSPBUF 0013                ??_initOsc 0078  
                 saved_w 007E  __end_of__initialization 0015       __size_of_WriteMSSP 0006  
         __pcstackCOMMON 0076            __end_of_setup 00C7                  ??_setup 0079  
              ?_InitMSSP 0076                ?_ReadMSSP 0076               __pmaintext 0078  
             __pintentry 0004                  _ADC_dig 0074        __end_of_WriteMSSP 00DE  
           initOsc@Valor 0078               ??_InitMSSP 0078               ??_ReadMSSP 0078  
                _dec_ADC 0071                  _cen_ADC 0070                  _dig_ADC 0073  
                __ptext1 00A4                  __ptext2 0019                  __ptext3 0049  
                __ptext4 00D8                  __ptext5 00C7                  __ptext6 00D1  
                _initOsc 0019             __size_of_isr 0007                  _val_ADC 0075  
                _uni_ADC 0072     end_of_initialization 0015                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _TRISAbits 0085  
              _TRISCbits 0087            WriteMSSP@Data 0078      start_initialization 000F  
            __end_of_isr 00D8        __size_of_InitMSSP 002F        __size_of_ReadMSSP 000A  
            __pbssCOMMON 0070                ___latbits 0002                _WriteMSSP 00D8  
               ?_initOsc 0076               ?_WriteMSSP 0076           __size_of_setup 0023  
      interrupt_function 0004                 _PIE1bits 008C                 _InitMSSP 0049  
               _ReadMSSP 00C7         __size_of_initOsc 0030              ??_WriteMSSP 0078  
          __size_of_main 002C                 intlevel1 0000               _OSCCONbits 008F  
             _SSPCONbits 0014  
