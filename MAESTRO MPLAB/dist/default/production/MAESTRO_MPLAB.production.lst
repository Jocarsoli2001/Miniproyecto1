

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 17 12:25:35 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  008F                     	;# 
   409  0090                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0093                     	;# 
   414  0093                     	;# 
   415  0094                     	;# 
   416  0095                     	;# 
   417  0096                     	;# 
   418  0097                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009A                     	;# 
   422  009B                     	;# 
   423  009C                     	;# 
   424  009D                     	;# 
   425  009E                     	;# 
   426  009F                     	;# 
   427  0105                     	;# 
   428  0107                     	;# 
   429  0108                     	;# 
   430  0109                     	;# 
   431  010C                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  010E                     	;# 
   435  010F                     	;# 
   436  0185                     	;# 
   437  0187                     	;# 
   438  0188                     	;# 
   439  0189                     	;# 
   440  018C                     	;# 
   441  018D                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  000E                     	;# 
   458  000F                     	;# 
   459  0010                     	;# 
   460  0011                     	;# 
   461  0012                     	;# 
   462  0013                     	;# 
   463  0014                     	;# 
   464  0015                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0017                     	;# 
   468  0018                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001D                     	;# 
   475  001E                     	;# 
   476  001F                     	;# 
   477  0081                     	;# 
   478  0085                     	;# 
   479  0086                     	;# 
   480  0087                     	;# 
   481  0088                     	;# 
   482  0089                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  008F                     	;# 
   487  0090                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0093                     	;# 
   492  0093                     	;# 
   493  0094                     	;# 
   494  0095                     	;# 
   495  0096                     	;# 
   496  0097                     	;# 
   497  0098                     	;# 
   498  0099                     	;# 
   499  009A                     	;# 
   500  009B                     	;# 
   501  009C                     	;# 
   502  009D                     	;# 
   503  009E                     	;# 
   504  009F                     	;# 
   505  0105                     	;# 
   506  0107                     	;# 
   507  0108                     	;# 
   508  0109                     	;# 
   509  010C                     	;# 
   510  010C                     	;# 
   511  010D                     	;# 
   512  010E                     	;# 
   513  010F                     	;# 
   514  0185                     	;# 
   515  0187                     	;# 
   516  0188                     	;# 
   517  0189                     	;# 
   518  018C                     	;# 
   519  018D                     	;# 
   520  0006                     _PORTBbits	set	6
   521  0008                     _PORTDbits	set	8
   522  0013                     _SSPBUF	set	19
   523  0014                     _SSPCON	set	20
   524  0014                     _SSPCONbits	set	20
   525  0009                     _PORTE	set	9
   526  0008                     _PORTD	set	8
   527  0005                     _PORTA	set	5
   528  0006                     _PORTB	set	6
   529  0007                     _PORTCbits	set	7
   530  008F                     _OSCCONbits	set	143
   531  0094                     _SSPSTATbits	set	148
   532  008C                     _PIE1bits	set	140
   533  0085                     _TRISAbits	set	133
   534  0087                     _TRISCbits	set	135
   535  0089                     _TRISE	set	137
   536  0088                     _TRISD	set	136
   537  0086                     _TRISB	set	134
   538  0085                     _TRISA	set	133
   539  0438                     _TRISC0	set	1080
   540  0439                     _TRISC1	set	1081
   541  043A                     _TRISC2	set	1082
   542  0189                     _ANSELH	set	393
   543  0188                     _ANSEL	set	392
   544                           
   545                           	psect	cinit
   546  000F                     start_initialization:	
   547                           ; #config settings
   548                           
   549  000F                     __initialization:
   550                           
   551                           ; Clear objects allocated to COMMON
   552  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   553  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   554  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   555  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   556  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   557  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   558  0015                     end_of_initialization:	
   559                           ;End of C runtime variable initialization code
   560                           
   561  0015                     __end_of__initialization:
   562  0015  0183               	clrf	3
   563  0016  120A  118A  28A7   	ljmp	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMMON
   566  0070                     __pbssCOMMON:
   567  0070                     _cen_ADC:
   568  0070                     	ds	1
   569  0071                     _dec_ADC:
   570  0071                     	ds	1
   571  0072                     _uni_ADC:
   572  0072                     	ds	1
   573  0073                     _dig_ADC:
   574  0073                     	ds	1
   575  0074                     _ADC_dig:
   576  0074                     	ds	1
   577  0075                     _val_ADC:
   578  0075                     	ds	1
   579                           
   580                           	psect	cstackCOMMON
   581  0076                     __pcstackCOMMON:
   582  0076                     ?_setup:
   583  0076                     ?_WriteMSSP:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0076                     ?_ReadMSSP:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0076                     ?_initOsc:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0076                     ?_InitMSSP:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0076                     ?_isr:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0076                     ??_isr:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0076                     ?_main:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 1 bytes @ 0x0
   606  0076                     	ds	2
   607  0078                     ??_WriteMSSP:
   608  0078                     ??_ReadMSSP:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0078                     ??_initOsc:	
   612                           ; 1 bytes @ 0x2
   613                           
   614  0078                     ??_InitMSSP:	
   615                           ; 1 bytes @ 0x2
   616                           
   617  0078                     InitMSSP@Modo:	
   618                           ; 1 bytes @ 0x2
   619                           
   620  0078                     WriteMSSP@Data:	
   621                           ; 1 bytes @ 0x2
   622                           
   623  0078                     initOsc@Valor:	
   624                           ; 1 bytes @ 0x2
   625                           
   626                           
   627                           ; 1 bytes @ 0x2
   628  0078                     	ds	1
   629  0079                     ??_setup:
   630  0079                     ??_main:	
   631                           ; 1 bytes @ 0x3
   632                           
   633                           
   634                           ; 1 bytes @ 0x3
   635  0079                     	ds	1
   636                           
   637                           	psect	maintext
   638  00A7                     __pmaintext:	
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   641 ;;
   642 ;; *************** function _main *****************
   643 ;; Defined at:
   644 ;;		line 73 in file "Maestro.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : B00/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          1       0       0       0       0
   661 ;;      Totals:         1       0       0       0       0
   662 ;;Total ram usage:        1 bytes
   663 ;; Hardware stack levels required when called: 3
   664 ;; This function calls:
   665 ;;		_ReadMSSP
   666 ;;		_WriteMSSP
   667 ;;		_setup
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _main
   675  00A7                     _main:
   676  00A7                     l890:	
   677                           ;incstack = 0
   678                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   679                           
   680                           
   681                           ;Maestro.c: 74:     setup();
   682  00A7  120A  118A  2049  120A  118A  	fcall	_setup
   683  00AC                     l892:
   684                           
   685                           ;Maestro.c: 83:     val_ADC = 0;
   686  00AC  01F5               	clrf	_val_ADC
   687  00AD                     l894:
   688                           
   689                           ;Maestro.c: 92:         PORTCbits.RC2 = 0;
   690  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   691  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   692  00AF  1107               	bcf	7,2	;volatile
   693  00B0                     l896:
   694                           
   695                           ;Maestro.c: 93:         _delay((unsigned long)((1)*(4000000/4000.0)));
   696  00B0  30C7               	movlw	199
   697  00B1  00F9               	movwf	??_main
   698  00B2                     u247:
   699  00B2  28B3               	nop2
   700  00B3  0BF9               	decfsz	??_main,f
   701  00B4  28B2               	goto	u247
   702  00B5  28B6               	nop2
   703  00B6  28B7               	nop2
   704  00B7                     l898:
   705                           
   706                           ;Maestro.c: 95:         WriteMSSP(1);
   707  00B7  3001               	movlw	1
   708  00B8  120A  118A  20E4  120A  118A  	fcall	_WriteMSSP
   709  00BD                     l900:
   710                           
   711                           ;Maestro.c: 96:         PORTB = ReadMSSP();
   712  00BD  120A  118A  20D3  120A  118A  	fcall	_ReadMSSP
   713  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   714  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   715  00C4  0086               	movwf	6	;volatile
   716  00C5                     l902:
   717                           
   718                           ;Maestro.c: 98:         _delay((unsigned long)((1)*(4000000/4000.0)));
   719  00C5  30C7               	movlw	199
   720  00C6  00F9               	movwf	??_main
   721  00C7                     u257:
   722  00C7  28C8               	nop2
   723  00C8  0BF9               	decfsz	??_main,f
   724  00C9  28C7               	goto	u257
   725  00CA  28CB               	nop2
   726  00CB  28CC               	nop2
   727  00CC                     l904:
   728                           
   729                           ;Maestro.c: 99:         PORTCbits.RC2 = 1;
   730  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   731  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   732  00CE  1507               	bsf	7,2	;volatile
   733  00CF  28AD               	goto	l894
   734  00D0  120A  118A  280C   	ljmp	start
   735  00D3                     __end_of_main:
   736                           
   737                           	psect	text1
   738  0049                     __ptext1:	
   739 ;; *************** function _setup *****************
   740 ;; Defined at:
   741 ;;		line 127 in file "Maestro.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 2
   762 ;; This function calls:
   763 ;;		_InitMSSP
   764 ;;		_initOsc
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _setup
   772  0049                     _setup:
   773  0049                     l844:	
   774                           ;incstack = 0
   775                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   776                           
   777                           
   778                           ;Maestro.c: 130:     ANSEL = 0;
   779  0049  1683               	bsf	3,5	;RP0=1, select bank3
   780  004A  1703               	bsf	3,6	;RP1=1, select bank3
   781  004B  0188               	clrf	8	;volatile
   782                           
   783                           ;Maestro.c: 131:     ANSELH = 0;
   784  004C  0189               	clrf	9	;volatile
   785                           
   786                           ;Maestro.c: 133:     TRISA = 0;
   787  004D  1683               	bsf	3,5	;RP0=1, select bank1
   788  004E  1303               	bcf	3,6	;RP1=0, select bank1
   789  004F  0185               	clrf	5	;volatile
   790                           
   791                           ;Maestro.c: 134:     TRISB = 0;
   792  0050  0186               	clrf	6	;volatile
   793                           
   794                           ;Maestro.c: 135:     TRISD = 0;
   795  0051  0188               	clrf	8	;volatile
   796                           
   797                           ;Maestro.c: 136:     TRISE = 0;
   798  0052  0189               	clrf	9	;volatile
   799                           
   800                           ;Maestro.c: 138:     PORTA = 0;
   801  0053  1283               	bcf	3,5	;RP0=0, select bank0
   802  0054  1303               	bcf	3,6	;RP1=0, select bank0
   803  0055  0185               	clrf	5	;volatile
   804                           
   805                           ;Maestro.c: 139:     PORTD = 0;
   806  0056  0188               	clrf	8	;volatile
   807                           
   808                           ;Maestro.c: 140:     PORTE = 0;
   809  0057  0189               	clrf	9	;volatile
   810                           
   811                           ;Maestro.c: 141:     PORTB = 0;
   812  0058  0186               	clrf	6	;volatile
   813  0059                     l846:
   814                           
   815                           ;Maestro.c: 144:     TRISC2 = 0;
   816  0059  1683               	bsf	3,5	;RP0=1, select bank1
   817  005A  1303               	bcf	3,6	;RP1=0, select bank1
   818  005B  1107               	bcf	7,2	;volatile
   819  005C                     l848:
   820                           
   821                           ;Maestro.c: 145:     PORTCbits.RC2 = 1;
   822  005C  1283               	bcf	3,5	;RP0=0, select bank0
   823  005D  1303               	bcf	3,6	;RP1=0, select bank0
   824  005E  1507               	bsf	7,2	;volatile
   825  005F                     l850:
   826                           
   827                           ;Maestro.c: 147:     TRISC1 = 0;
   828  005F  1683               	bsf	3,5	;RP0=1, select bank1
   829  0060  1303               	bcf	3,6	;RP1=0, select bank1
   830  0061  1087               	bcf	7,1	;volatile
   831  0062                     l852:
   832                           
   833                           ;Maestro.c: 148:     PORTCbits.RC1 = 1;
   834  0062  1283               	bcf	3,5	;RP0=0, select bank0
   835  0063  1303               	bcf	3,6	;RP1=0, select bank0
   836  0064  1487               	bsf	7,1	;volatile
   837  0065                     l854:
   838                           
   839                           ;Maestro.c: 150:     TRISC0 = 0;
   840  0065  1683               	bsf	3,5	;RP0=1, select bank1
   841  0066  1303               	bcf	3,6	;RP1=0, select bank1
   842  0067  1007               	bcf	7,0	;volatile
   843  0068                     l856:
   844                           
   845                           ;Maestro.c: 151:     PORTCbits.RC0;
   846  0068  1283               	bcf	3,5	;RP0=0, select bank0
   847  0069  1303               	bcf	3,6	;RP1=0, select bank0
   848  006A  0807               	movf	7,w	;volatile
   849  006B                     l858:
   850                           
   851                           ;Maestro.c: 154:     initOsc(4);
   852  006B  3004               	movlw	4
   853  006C  120A  118A  2019  120A  118A  	fcall	_initOsc
   854  0071                     l860:
   855                           
   856                           ;Maestro.c: 157:     InitMSSP(SPI_MASTER_FOSC4);
   857  0071  3000               	movlw	0
   858  0072  120A  118A  2078  120A  118A  	fcall	_InitMSSP
   859  0077                     l68:
   860  0077  0008               	return
   861  0078                     __end_of_setup:
   862                           
   863                           	psect	text2
   864  0019                     __ptext2:	
   865 ;; *************** function _initOsc *****************
   866 ;; Defined at:
   867 ;;		line 12 in file "Oscilador.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  Valor           1    wreg     unsigned char 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  Valor           1    2[COMMON] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         1       0       0       0       0
   885 ;;Total ram usage:        1 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_setup
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _initOsc
   897  0019                     _initOsc:
   898                           
   899                           ;incstack = 0
   900                           ; Regs used in _initOsc: [wreg+status,2+status,0]
   901                           ;initOsc@Valor stored from wreg
   902  0019  00F8               	movwf	initOsc@Valor
   903  001A                     l800:
   904                           
   905                           ;Oscilador.c: 14:     if(Valor == 8){
   906  001A  3008               	movlw	8
   907  001B  0678               	xorwf	initOsc@Valor,w
   908  001C  1D03               	btfss	3,2
   909  001D  281F               	goto	u11
   910  001E  2820               	goto	u10
   911  001F                     u11:
   912  001F  2825               	goto	l804
   913  0020                     u10:
   914  0020                     l802:
   915                           
   916                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
   917  0020  1683               	bsf	3,5	;RP0=1, select bank1
   918  0021  1303               	bcf	3,6	;RP1=0, select bank1
   919  0022  160F               	bsf	15,4	;volatile
   920                           
   921                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
   922  0023  168F               	bsf	15,5	;volatile
   923                           
   924                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
   925  0024  170F               	bsf	15,6	;volatile
   926  0025                     l804:
   927                           
   928                           ;Oscilador.c: 19:     if(Valor == 4){
   929  0025  3004               	movlw	4
   930  0026  0678               	xorwf	initOsc@Valor,w
   931  0027  1D03               	btfss	3,2
   932  0028  282A               	goto	u21
   933  0029  282B               	goto	u20
   934  002A                     u21:
   935  002A  2830               	goto	l808
   936  002B                     u20:
   937  002B                     l806:
   938                           
   939                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
   940  002B  1683               	bsf	3,5	;RP0=1, select bank1
   941  002C  1303               	bcf	3,6	;RP1=0, select bank1
   942  002D  120F               	bcf	15,4	;volatile
   943                           
   944                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
   945  002E  168F               	bsf	15,5	;volatile
   946                           
   947                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
   948  002F  170F               	bsf	15,6	;volatile
   949  0030                     l808:
   950                           
   951                           ;Oscilador.c: 24:     if(Valor == 2){
   952  0030  3002               	movlw	2
   953  0031  0678               	xorwf	initOsc@Valor,w
   954  0032  1D03               	btfss	3,2
   955  0033  2835               	goto	u31
   956  0034  2836               	goto	u30
   957  0035                     u31:
   958  0035  283B               	goto	l812
   959  0036                     u30:
   960  0036                     l810:
   961                           
   962                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
   963  0036  1683               	bsf	3,5	;RP0=1, select bank1
   964  0037  1303               	bcf	3,6	;RP1=0, select bank1
   965  0038  160F               	bsf	15,4	;volatile
   966                           
   967                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
   968  0039  128F               	bcf	15,5	;volatile
   969                           
   970                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
   971  003A  170F               	bsf	15,6	;volatile
   972  003B                     l812:
   973                           
   974                           ;Oscilador.c: 29:     if(Valor == 1){
   975  003B  0378               	decf	initOsc@Valor,w
   976  003C  1D03               	btfss	3,2
   977  003D  283F               	goto	u41
   978  003E  2840               	goto	u40
   979  003F                     u41:
   980  003F  2845               	goto	l175
   981  0040                     u40:
   982  0040                     l814:
   983                           
   984                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
   985  0040  1683               	bsf	3,5	;RP0=1, select bank1
   986  0041  1303               	bcf	3,6	;RP1=0, select bank1
   987  0042  120F               	bcf	15,4	;volatile
   988                           
   989                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
   990  0043  128F               	bcf	15,5	;volatile
   991                           
   992                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
   993  0044  170F               	bsf	15,6	;volatile
   994  0045                     l175:	
   995                           ;Oscilador.c: 33:     }
   996                           
   997                           
   998                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
   999  0045  1683               	bsf	3,5	;RP0=1, select bank1
  1000  0046  1303               	bcf	3,6	;RP1=0, select bank1
  1001  0047  140F               	bsf	15,0	;volatile
  1002  0048                     l176:
  1003  0048  0008               	return
  1004  0049                     __end_of_initOsc:
  1005                           
  1006                           	psect	text3
  1007  0078                     __ptext3:	
  1008 ;; *************** function _InitMSSP *****************
  1009 ;; Defined at:
  1010 ;;		line 10 in file "SPI.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  Modo            1    wreg     enum E1264
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  Modo            1    2[COMMON] enum E1264
  1015 ;; Return value:  Size  Location     Type
  1016 ;;                  1    wreg      void 
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         1       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0
  1027 ;;      Totals:         1       0       0       0       0
  1028 ;;Total ram usage:        1 bytes
  1029 ;; Hardware stack levels used: 1
  1030 ;; Hardware stack levels required when called: 1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_setup
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           
  1039                           ;psect for function _InitMSSP
  1040  0078                     _InitMSSP:
  1041                           
  1042                           ;incstack = 0
  1043                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  1044                           ;InitMSSP@Modo stored from wreg
  1045  0078  00F8               	movwf	InitMSSP@Modo
  1046  0079                     l816:
  1047                           
  1048                           ;SPI.c: 14:     SSPCONbits.SSPEN = 0;
  1049  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1050  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1051  007B  1294               	bcf	20,5	;volatile
  1052                           
  1053                           ;SPI.c: 16:     SSPCONbits.SSPEN = 1;
  1054  007C  1694               	bsf	20,5	;volatile
  1055                           
  1056                           ;SPI.c: 19:     TRISCbits.TRISC5 = 0;
  1057  007D  1683               	bsf	3,5	;RP0=1, select bank1
  1058  007E  1303               	bcf	3,6	;RP1=0, select bank1
  1059  007F  1287               	bcf	7,5	;volatile
  1060                           
  1061                           ;SPI.c: 20:     TRISCbits.TRISC4 = 1;
  1062  0080  1607               	bsf	7,4	;volatile
  1063  0081                     l818:
  1064                           
  1065                           ;SPI.c: 21:     if (Modo < 0b00000110){
  1066  0081  3006               	movlw	6
  1067  0082  0278               	subwf	InitMSSP@Modo,w
  1068  0083  1803               	skipnc
  1069  0084  2886               	goto	u51
  1070  0085  2887               	goto	u50
  1071  0086                     u51:
  1072  0086  2890               	goto	l824
  1073  0087                     u50:
  1074  0087                     l820:
  1075                           
  1076                           ;SPI.c: 23:         if (Modo < 0b00000100){
  1077  0087  3004               	movlw	4
  1078  0088  0278               	subwf	InitMSSP@Modo,w
  1079  0089  1803               	skipnc
  1080  008A  288C               	goto	u61
  1081  008B  288D               	goto	u60
  1082  008C                     u61:
  1083  008C  288F               	goto	l102
  1084  008D                     u60:
  1085  008D                     l822:
  1086                           
  1087                           ;SPI.c: 24:             TRISCbits.TRISC3 = 0;
  1088  008D  1187               	bcf	7,3	;volatile
  1089                           
  1090                           ;SPI.c: 25:         }
  1091  008E  2890               	goto	l824
  1092  008F                     l102:	
  1093                           ;SPI.c: 26:         else {
  1094                           
  1095                           
  1096                           ;SPI.c: 27:             TRISCbits.TRISC3 = 1;
  1097  008F  1587               	bsf	7,3	;volatile
  1098  0090                     l824:
  1099                           
  1100                           ;SPI.c: 32:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 0;}
  1101  0090  3004               	movlw	4
  1102  0091  0678               	xorwf	InitMSSP@Modo,w
  1103  0092  1D03               	btfss	3,2
  1104  0093  2895               	goto	u71
  1105  0094  2896               	goto	u70
  1106  0095                     u71:
  1107  0095  2897               	goto	l828
  1108  0096                     u70:
  1109  0096                     l826:
  1110  0096  1285               	bcf	5,5	;volatile
  1111  0097                     l828:
  1112                           
  1113                           ;SPI.c: 36:     SSPCON = SSPCON | Modo;
  1114  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0099  0814               	movf	20,w	;volatile
  1117  009A  0478               	iorwf	InitMSSP@Modo,w	;volatile
  1118  009B  0094               	movwf	20	;volatile
  1119  009C                     l830:
  1120                           
  1121                           ;SPI.c: 38:     PIE1bits.SSPIE = 0;
  1122  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1123  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1124  009E  118C               	bcf	12,3	;volatile
  1125  009F                     l832:
  1126                           
  1127                           ;SPI.c: 42:     SSPCONbits.CKP = 0;
  1128  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00A1  1214               	bcf	20,4	;volatile
  1131  00A2                     l834:
  1132                           
  1133                           ;SPI.c: 45:     SSPSTATbits.CKE = 1;
  1134  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1135  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1136  00A4  1714               	bsf	20,6	;volatile
  1137  00A5                     l836:
  1138                           
  1139                           ;SPI.c: 47:     SSPSTATbits.SMP = 0;
  1140  00A5  1394               	bcf	20,7	;volatile
  1141  00A6                     l105:
  1142  00A6  0008               	return
  1143  00A7                     __end_of_InitMSSP:
  1144                           
  1145                           	psect	text4
  1146  00E4                     __ptext4:	
  1147 ;; *************** function _WriteMSSP *****************
  1148 ;; Defined at:
  1149 ;;		line 51 in file "SPI.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  Data            1    wreg     unsigned char 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  Data            1    2[COMMON] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         1       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0
  1166 ;;      Totals:         1       0       0       0       0
  1167 ;;Total ram usage:        1 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _WriteMSSP
  1179  00E4                     _WriteMSSP:
  1180                           
  1181                           ;incstack = 0
  1182                           ; Regs used in _WriteMSSP: [wreg]
  1183                           ;WriteMSSP@Data stored from wreg
  1184  00E4  00F8               	movwf	WriteMSSP@Data
  1185  00E5                     l862:
  1186                           
  1187                           ;SPI.c: 55:     SSPBUF = Data;
  1188  00E5  0878               	movf	WriteMSSP@Data,w
  1189  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1190  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1191  00E8  0093               	movwf	19	;volatile
  1192  00E9                     l108:
  1193  00E9  0008               	return
  1194  00EA                     __end_of_WriteMSSP:
  1195                           
  1196                           	psect	text5
  1197  00D3                     __ptext5:	
  1198 ;; *************** function _ReadMSSP *****************
  1199 ;; Defined at:
  1200 ;;		line 59 in file "SPI.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      unsigned char 
  1207 ;; Registers used:
  1208 ;;		wreg
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _ReadMSSP
  1230  00D3                     _ReadMSSP:
  1231  00D3                     l864:	
  1232                           ;incstack = 0
  1233                           ; Regs used in _ReadMSSP: [wreg]
  1234                           
  1235  00D3                     l111:	
  1236                           ;SPI.c: 60:     while(SSPSTATbits.BF == 0){}
  1237                           
  1238  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  1239  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  1240  00D5  1C14               	btfss	20,0	;volatile
  1241  00D6  28D8               	goto	u81
  1242  00D7  28D9               	goto	u80
  1243  00D8                     u81:
  1244  00D8  28D3               	goto	l111
  1245  00D9                     u80:
  1246  00D9                     l866:
  1247                           
  1248                           ;SPI.c: 61:     return(SSPBUF);
  1249  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1250  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1251  00DB  0813               	movf	19,w	;volatile
  1252  00DC                     l114:
  1253  00DC  0008               	return
  1254  00DD                     __end_of_ReadMSSP:
  1255                           
  1256                           	psect	text6
  1257  00DD                     __ptext6:	
  1258 ;; *************** function _isr *****************
  1259 ;; Defined at:
  1260 ;;		line 67 in file "Maestro.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		None
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1274 ;;      Params:         0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0
  1276 ;;      Temps:          2       0       0       0       0
  1277 ;;      Totals:         2       0       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		Interrupt level 1
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _isr
  1289  00DD                     _isr:
  1290  00DD                     i1l57:
  1291  00DD  0877               	movf	??_isr+1,w
  1292  00DE  008A               	movwf	10
  1293  00DF  0E76               	swapf	??_isr,w
  1294  00E0  0083               	movwf	3
  1295  00E1  0EFE               	swapf	btemp,f
  1296  00E2  0E7E               	swapf	btemp,w
  1297  00E3  0009               	retfie
  1298  00E4                     __end_of_isr:
  1299  007E                     btemp	set	126	;btemp
  1300  007E                     wtemp0	set	126
  1301                           
  1302                           	psect	intentry
  1303  0004                     __pintentry:	
  1304                           ;incstack = 0
  1305                           ; Regs used in _isr: []
  1306                           
  1307  0004                     interrupt_function:
  1308  007E                     saved_w	set	btemp
  1309  0004  00FE               	movwf	btemp
  1310  0005  0E03               	swapf	3,w
  1311  0006  00F6               	movwf	??_isr
  1312  0007  080A               	movf	10,w
  1313  0008  00F7               	movwf	??_isr+1
  1314  0009  120A  118A  28DD   	ljmp	_isr
  1315                           
  1316                           	psect	config
  1317                           
  1318                           ;Config register CONFIG1 @ 0x2007
  1319                           ;	Oscillator Selection bits
  1320                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1321                           ;	Watchdog Timer Enable bit
  1322                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1323                           ;	Power-up Timer Enable bit
  1324                           ;	PWRTE = OFF, PWRT disabled
  1325                           ;	RE3/MCLR pin function select bit
  1326                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1327                           ;	Code Protection bit
  1328                           ;	CP = OFF, Program memory code protection is disabled
  1329                           ;	Data Code Protection bit
  1330                           ;	CPD = OFF, Data memory code protection is disabled
  1331                           ;	Brown Out Reset Selection bits
  1332                           ;	BOREN = OFF, BOR disabled
  1333                           ;	Internal External Switchover bit
  1334                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1335                           ;	Fail-Safe Clock Monitor Enabled bit
  1336                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1337                           ;	Low Voltage Programming Enable bit
  1338                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1339                           ;	In-Circuit Debugger Mode bit
  1340                           ;	DEBUG = 0x1, unprogrammed default
  1341  2007                     	org	8199
  1342  2007  20D4               	dw	8404
  1343                           
  1344                           ;Config register CONFIG2 @ 0x2008
  1345                           ;	Brown-out Reset Selection bit
  1346                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1347                           ;	Flash Program Memory Self Write Enable bits
  1348                           ;	WRT = OFF, Write protection off
  1349  2008                     	org	8200
  1350  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_WriteMSSP
    _setup->_InitMSSP
    _setup->_initOsc

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     135
                                              3 COMMON     1     1      0
                           _ReadMSSP
                          _WriteMSSP
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     120
                           _InitMSSP
                            _initOsc
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      60
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ReadMSSP
   _WriteMSSP
   _setup
     _InitMSSP
     _initOsc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 17 12:25:35 2022

            _SSPSTATbits 0094                       l68 0077                       u10 0020  
                     u11 001F                       u20 002B                       u21 002A  
                     u30 0036                       u31 0035                       u40 0040  
                     u41 003F                       u50 0087                       u51 0086  
                     u60 008D                       u61 008C                       u70 0096  
                     u71 0095                       u80 00D9                       u81 00D8  
                    l102 008F                      l111 00D3                      l105 00A6  
                    l114 00DC                      l108 00E9                      l175 0045  
                    l176 0048                      l800 001A                      l810 0036  
                    l802 0020                      l820 0087                      l812 003B  
                    l804 0025                      l900 00BD                      l830 009C  
                    l822 008D                      l814 0040                      l806 002B  
                    l902 00C5                      l832 009F                      l824 0090  
                    l816 0079                      l808 0030                      l904 00CC  
                    l834 00A2                      l826 0096                      l818 0081  
                    l850 005F                      l836 00A5                      l828 0097  
                    l860 0071                      l852 0062                      l844 0049  
                    l862 00E5                      l854 0065                      l846 0059  
                    l864 00D3                      l856 0068                      l848 005C  
                    l866 00D9                      l858 006B                      l890 00A7  
                    l892 00AC                      l894 00AD                      l896 00B0  
                    l898 00B7                      u247 00B2                      u257 00C7  
                    _isr 00DD                     ?_isr 0076                     i1l57 00DD  
                   _main 00A7                     btemp 007E                     start 000C  
                  ??_isr 0076                    ?_main 0076                    _ANSEL 0188  
                  _PORTA 0005                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089             InitMSSP@Modo 0078  
        __end_of_initOsc 0049                    _setup 0049                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 00D3         __end_of_InitMSSP 00A7         __end_of_ReadMSSP 00DD  
                 ??_main 0079                   ?_setup 0076                   _ANSELH 0189  
                 _TRISC0 0438                   _TRISC1 0439                   _TRISC2 043A  
                 _SSPCON 0014                   _SSPBUF 0013                ??_initOsc 0078  
                 saved_w 007E  __end_of__initialization 0015       __size_of_WriteMSSP 0006  
         __pcstackCOMMON 0076            __end_of_setup 0078                  ??_setup 0079  
              ?_InitMSSP 0076                ?_ReadMSSP 0076               __pmaintext 00A7  
             __pintentry 0004                  _ADC_dig 0074        __end_of_WriteMSSP 00EA  
           initOsc@Valor 0078               ??_InitMSSP 0078               ??_ReadMSSP 0078  
                _dec_ADC 0071                  _cen_ADC 0070                  _dig_ADC 0073  
                __ptext1 0049                  __ptext2 0019                  __ptext3 0078  
                __ptext4 00E4                  __ptext5 00D3                  __ptext6 00DD  
                _initOsc 0019             __size_of_isr 0007                  _val_ADC 0075  
                _uni_ADC 0072     end_of_initialization 0015                _PORTBbits 0006  
              _PORTCbits 0007                _PORTDbits 0008                _TRISAbits 0085  
              _TRISCbits 0087            WriteMSSP@Data 0078      start_initialization 000F  
            __end_of_isr 00E4        __size_of_InitMSSP 002F        __size_of_ReadMSSP 000A  
            __pbssCOMMON 0070                ___latbits 0002                _WriteMSSP 00E4  
               ?_initOsc 0076               ?_WriteMSSP 0076           __size_of_setup 002F  
      interrupt_function 0004                 _PIE1bits 008C                 _InitMSSP 0078  
               _ReadMSSP 00D3         __size_of_initOsc 0030              ??_WriteMSSP 0078  
          __size_of_main 002C                 intlevel1 0000               _OSCCONbits 008F  
             _SSPCONbits 0014  
