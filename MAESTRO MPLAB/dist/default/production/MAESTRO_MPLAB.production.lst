

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 18 13:20:42 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000D                     	;# 
   474  000E                     	;# 
   475  000E                     	;# 
   476  000F                     	;# 
   477  0010                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0015                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001B                     	;# 
   491  001C                     	;# 
   492  001D                     	;# 
   493  001E                     	;# 
   494  001F                     	;# 
   495  0081                     	;# 
   496  0085                     	;# 
   497  0086                     	;# 
   498  0087                     	;# 
   499  0088                     	;# 
   500  0089                     	;# 
   501  008C                     	;# 
   502  008D                     	;# 
   503  008E                     	;# 
   504  008F                     	;# 
   505  0090                     	;# 
   506  0091                     	;# 
   507  0092                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0093                     	;# 
   511  0094                     	;# 
   512  0095                     	;# 
   513  0096                     	;# 
   514  0097                     	;# 
   515  0098                     	;# 
   516  0099                     	;# 
   517  009A                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  009F                     	;# 
   523  0105                     	;# 
   524  0107                     	;# 
   525  0108                     	;# 
   526  0109                     	;# 
   527  010C                     	;# 
   528  010C                     	;# 
   529  010D                     	;# 
   530  010E                     	;# 
   531  010F                     	;# 
   532  0185                     	;# 
   533  0187                     	;# 
   534  0188                     	;# 
   535  0189                     	;# 
   536  018C                     	;# 
   537  018D                     	;# 
   538  0000                     	;# 
   539  0001                     	;# 
   540  0002                     	;# 
   541  0003                     	;# 
   542  0004                     	;# 
   543  0005                     	;# 
   544  0006                     	;# 
   545  0007                     	;# 
   546  0008                     	;# 
   547  0009                     	;# 
   548  000A                     	;# 
   549  000B                     	;# 
   550  000C                     	;# 
   551  000D                     	;# 
   552  000E                     	;# 
   553  000E                     	;# 
   554  000F                     	;# 
   555  0010                     	;# 
   556  0011                     	;# 
   557  0012                     	;# 
   558  0013                     	;# 
   559  0014                     	;# 
   560  0015                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0017                     	;# 
   564  0018                     	;# 
   565  0019                     	;# 
   566  001A                     	;# 
   567  001B                     	;# 
   568  001B                     	;# 
   569  001C                     	;# 
   570  001D                     	;# 
   571  001E                     	;# 
   572  001F                     	;# 
   573  0081                     	;# 
   574  0085                     	;# 
   575  0086                     	;# 
   576  0087                     	;# 
   577  0088                     	;# 
   578  0089                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  008E                     	;# 
   582  008F                     	;# 
   583  0090                     	;# 
   584  0091                     	;# 
   585  0092                     	;# 
   586  0093                     	;# 
   587  0093                     	;# 
   588  0093                     	;# 
   589  0094                     	;# 
   590  0095                     	;# 
   591  0096                     	;# 
   592  0097                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  009F                     	;# 
   601  0105                     	;# 
   602  0107                     	;# 
   603  0108                     	;# 
   604  0109                     	;# 
   605  010C                     	;# 
   606  010C                     	;# 
   607  010D                     	;# 
   608  010E                     	;# 
   609  010F                     	;# 
   610  0185                     	;# 
   611  0187                     	;# 
   612  0188                     	;# 
   613  0189                     	;# 
   614  018C                     	;# 
   615  018D                     	;# 
   616                           
   617                           	psect	idataBANK0
   618  05F8                     __pidataBANK0:
   619                           
   620                           ;initializer for _Bandera_s1
   621  05F8  3401               	retlw	1
   622  05F9  3400               	retlw	0
   623  0018                     _RCSTAbits	set	24
   624  0006                     _PORTBbits	set	6
   625  0008                     _PORTDbits	set	8
   626  0013                     _SSPBUF	set	19
   627  0014                     _SSPCONbits	set	20
   628  0014                     _SSPCON	set	20
   629  0007                     _PORTC	set	7
   630  0006                     _PORTB	set	6
   631  0009                     _PORTE	set	9
   632  0008                     _PORTD	set	8
   633  0005                     _PORTA	set	5
   634  0007                     _PORTCbits	set	7
   635  009A                     _SPBRGH	set	154
   636  0099                     _SPBRG	set	153
   637  0098                     _TXSTAbits	set	152
   638  008F                     _OSCCONbits	set	143
   639  0094                     _SSPSTATbits	set	148
   640  008C                     _PIE1bits	set	140
   641  0085                     _TRISAbits	set	133
   642  0087                     _TRISCbits	set	135
   643  0094                     _SSPSTAT	set	148
   644  0089                     _TRISE	set	137
   645  0088                     _TRISD	set	136
   646  0086                     _TRISB	set	134
   647  0085                     _TRISA	set	133
   648  0438                     _TRISC0	set	1080
   649  0439                     _TRISC1	set	1081
   650  043A                     _TRISC2	set	1082
   651  0187                     _BAUDCTLbits	set	391
   652  0189                     _ANSELH	set	393
   653  0188                     _ANSEL	set	392
   654                           
   655                           	psect	strings
   656  0554                     __pstrings:
   657  0554                     stringtab:
   658  0554                     __stringtab:
   659  0554                     stringcode:	
   660                           ;	String table - string pointers are 1 byte each
   661                           
   662  0554                     stringdir:
   663  0554  3005               	movlw	high stringdir
   664  0555  008A               	movwf	10
   665  0556  0804               	movf	4,w
   666  0557  0A84               	incf	4,f
   667  0558  0782               	addwf	2,f
   668  0559                     __stringbase:
   669  0559  3400               	retlw	0
   670  055A                     __end_of__stringtab:
   671  055A                     STR_1:
   672  055A  3453               	retlw	83	;'S'
   673  055B  3431               	retlw	49	;'1'
   674  055C  343A               	retlw	58	;':'
   675  055D  3420               	retlw	32	;' '
   676  055E  3420               	retlw	32	;' '
   677  055F  3420               	retlw	32	;' '
   678  0560  3420               	retlw	32	;' '
   679  0561  3453               	retlw	83	;'S'
   680  0562  3432               	retlw	50	;'2'
   681  0563  343A               	retlw	58	;':'
   682  0564  3420               	retlw	32	;' '
   683  0565  3420               	retlw	32	;' '
   684  0566  3420               	retlw	32	;' '
   685  0567  3453               	retlw	83	;'S'
   686  0568  3433               	retlw	51	;'3'
   687  0569  343A               	retlw	58	;':'
   688  056A  3400               	retlw	0
   689  056B                     STR_4:
   690  056B  344A               	retlw	74	;'J'
   691  056C  346F               	retlw	111	;'o'
   692  056D  3473               	retlw	115	;'s'
   693  056E  3465               	retlw	101	;'e'
   694  056F  3420               	retlw	32	;' '
   695  0570  3453               	retlw	83	;'S'
   696  0571  3461               	retlw	97	;'a'
   697  0572  346E               	retlw	110	;'n'
   698  0573  3474               	retlw	116	;'t'
   699  0574  3469               	retlw	105	;'i'
   700  0575  347A               	retlw	122	;'z'
   701  0576  346F               	retlw	111	;'o'
   702  0577  3400               	retlw	0
   703  0578                     STR_3:
   704  0578  3448               	retlw	72	;'H'
   705  0579  346F               	retlw	111	;'o'
   706  057A  346C               	retlw	108	;'l'
   707  057B  3461               	retlw	97	;'a'
   708  057C  3400               	retlw	0
   709  057D                     STR_2:
   710  057D  3443               	retlw	67	;'C'
   711  057E  3400               	retlw	0
   712                           
   713                           	psect	cinit
   714  000F                     start_initialization:	
   715                           ; #config settings
   716                           
   717  000F                     __initialization:
   718                           
   719                           ; Initialize objects allocated to BANK0
   720  000F  120A  118A  25F8  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   721  0014  00C4               	movwf	__pdataBANK0& (0+127)
   722  0015  120A  118A  25F9  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   723  001A  00C5               	movwf	(__pdataBANK0+1)& (0+127)
   724                           
   725                           ; Clear objects allocated to BANK0
   726  001B  1383               	bcf	3,7	;select IRP bank0
   727  001C  3020               	movlw	low __pbssBANK0
   728  001D  0084               	movwf	4
   729  001E  3037               	movlw	low (__pbssBANK0+23)
   730  001F  120A  118A  25E3  120A  118A  	fcall	clear_ram0
   731                           
   732                           ; Clear objects allocated to COMMON
   733  0024  01FA               	clrf	__pbssCOMMON& (0+127)
   734  0025  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   735  0026                     end_of_initialization:	
   736                           ;End of C runtime variable initialization code
   737                           
   738  0026                     __end_of__initialization:
   739  0026  0183               	clrf	3
   740  0027  120A  118A  282A   	ljmp	_main	;jump to C main() function
   741                           
   742                           	psect	bssCOMMON
   743  007A                     __pbssCOMMON:
   744  007A                     _Cont_dig:
   745  007A                     	ds	1
   746  007B                     _ADC_dig:
   747  007B                     	ds	1
   748                           
   749                           	psect	bssBANK0
   750  0020                     __pbssBANK0:
   751  0020                     _Bandera_s3:
   752  0020                     	ds	2
   753  0022                     _Bandera_s2:
   754  0022                     	ds	2
   755  0024                     _Temp:
   756  0024                     	ds	2
   757  0026                     _Contador:
   758  0026                     	ds	2
   759  0028                     _val_ADC:
   760  0028                     	ds	2
   761  002A                     _cen_Temp:
   762  002A                     	ds	1
   763  002B                     _dec_Temp:
   764  002B                     	ds	1
   765  002C                     _uni_Temp:
   766  002C                     	ds	1
   767  002D                     _dig_Temp:
   768  002D                     	ds	1
   769  002E                     _cen_Cont:
   770  002E                     	ds	1
   771  002F                     _dec_Cont:
   772  002F                     	ds	1
   773  0030                     _uni_Cont:
   774  0030                     	ds	1
   775  0031                     _dig_Cont:
   776  0031                     	ds	1
   777  0032                     _cen_ADC:
   778  0032                     	ds	1
   779  0033                     _dec_ADC:
   780  0033                     	ds	1
   781  0034                     _uni_ADC:
   782  0034                     	ds	1
   783  0035                     _dig_ADC:
   784  0035                     	ds	1
   785  0036                     _Temp_dig:
   786  0036                     	ds	1
   787                           
   788                           	psect	dataBANK0
   789  0044                     __pdataBANK0:
   790  0044                     _Bandera_s1:
   791  0044                     	ds	2
   792                           
   793                           	psect	clrtext
   794  05E3                     clear_ram0:	
   795                           ;	Called with FSR containing the base address, and
   796                           ;	W with the last address+1
   797                           
   798  05E3  0064               	clrwdt	;clear the watchdog before getting into this loop
   799  05E4                     clrloop0:
   800  05E4  0180               	clrf	0	;clear RAM location pointed to by FSR
   801  05E5  0A84               	incf	4,f	;increment pointer
   802  05E6  0604               	xorwf	4,w	;XOR with final address
   803  05E7  1903               	btfsc	3,2	;have we reached the end yet?
   804  05E8  3400               	retlw	0	;all done for this memory range, return
   805  05E9  0604               	xorwf	4,w	;XOR again to restore value
   806  05EA  2DE4               	goto	clrloop0	;do the next byte
   807                           
   808                           	psect	cstackCOMMON
   809  0070                     __pcstackCOMMON:
   810  0070                     ?_setup:
   811  0070                     ?_Escribir_stringLCD:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0070                     ?_WriteMSSP:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0070                     ?_ReadMSSP:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0070                     ?_tabla_numASCII:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0070                     ?_Escribir_caracterLCD:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0070                     ?_initOsc:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_InitMSSP:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_Iniciar_LCD:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_Limpiar_pantallaLCD:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_isr:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ??_isr:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_main:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_prender_ELCD:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_Escribir_comandoLCD:	
   851                           ; 1 bytes @ 0x0
   852                           
   853                           
   854                           ; 1 bytes @ 0x0
   855  0070                     	ds	2
   856  0072                     ??_WriteMSSP:
   857  0072                     ??_ReadMSSP:	
   858                           ; 1 bytes @ 0x2
   859                           
   860  0072                     ??_tabla_numASCII:	
   861                           ; 1 bytes @ 0x2
   862                           
   863  0072                     ??_initOsc:	
   864                           ; 1 bytes @ 0x2
   865                           
   866  0072                     ??_InitMSSP:	
   867                           ; 1 bytes @ 0x2
   868                           
   869  0072                     ?_Config_USART:	
   870                           ; 1 bytes @ 0x2
   871                           
   872  0072                     ??_prender_ELCD:	
   873                           ; 1 bytes @ 0x2
   874                           
   875  0072                     ?___awdiv:	
   876                           ; 1 bytes @ 0x2
   877                           
   878  0072                     ?___awmod:	
   879                           ; 2 bytes @ 0x2
   880                           
   881  0072                     InitMSSP@Modo:	
   882                           ; 2 bytes @ 0x2
   883                           
   884  0072                     WriteMSSP@Data:	
   885                           ; 1 bytes @ 0x2
   886                           
   887  0072                     initOsc@Valor:	
   888                           ; 1 bytes @ 0x2
   889                           
   890  0072                     Config_USART@baud_rate:	
   891                           ; 1 bytes @ 0x2
   892                           
   893  0072                     ___awdiv@divisor:	
   894                           ; 2 bytes @ 0x2
   895                           
   896  0072                     ___awmod@divisor:	
   897                           ; 2 bytes @ 0x2
   898                           
   899                           
   900                           ; 2 bytes @ 0x2
   901  0072                     	ds	1
   902  0073                     ??_Escribir_comandoLCD:
   903  0073                     Escribir_comandoLCD@Comando:	
   904                           ; 1 bytes @ 0x3
   905                           
   906                           
   907                           ; 1 bytes @ 0x3
   908  0073                     	ds	1
   909  0074                     ?_set_cursor:
   910  0074                     ??_Escribir_stringLCD:	
   911                           ; 1 bytes @ 0x4
   912                           
   913  0074                     ??_Escribir_caracterLCD:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0074                     ??_Iniciar_LCD:	
   917                           ; 1 bytes @ 0x4
   918                           
   919  0074                     ??_Limpiar_pantallaLCD:	
   920                           ; 1 bytes @ 0x4
   921                           
   922  0074                     tabla_numASCII@a:	
   923                           ; 1 bytes @ 0x4
   924                           
   925  0074                     Escribir_caracterLCD@a:	
   926                           ; 1 bytes @ 0x4
   927                           
   928  0074                     set_cursor@posicion:	
   929                           ; 1 bytes @ 0x4
   930                           
   931  0074                     Config_USART@Freq:	
   932                           ; 1 bytes @ 0x4
   933                           
   934  0074                     ___awdiv@dividend:	
   935                           ; 2 bytes @ 0x4
   936                           
   937  0074                     ___awmod@dividend:	
   938                           ; 2 bytes @ 0x4
   939                           
   940                           
   941                           ; 2 bytes @ 0x4
   942  0074                     	ds	1
   943  0075                     ??_set_cursor:
   944  0075                     Escribir_stringLCD@i:	
   945                           ; 1 bytes @ 0x5
   946                           
   947                           
   948                           ; 1 bytes @ 0x5
   949  0075                     	ds	1
   950  0076                     ??_Config_USART:
   951  0076                     ??___awdiv:	
   952                           ; 1 bytes @ 0x6
   953                           
   954  0076                     ??___awmod:	
   955                           ; 1 bytes @ 0x6
   956                           
   957  0076                     Escribir_stringLCD@d:	
   958                           ; 1 bytes @ 0x6
   959                           
   960                           
   961                           ; 1 bytes @ 0x6
   962  0076                     	ds	1
   963  0077                     set_cursor@linea:
   964  0077                     ___awmod@counter:	
   965                           ; 1 bytes @ 0x7
   966                           
   967                           
   968                           ; 1 bytes @ 0x7
   969  0077                     	ds	1
   970  0078                     ___awmod@sign:
   971                           
   972                           ; 1 bytes @ 0x8
   973  0078                     	ds	1
   974  0079                     ?_divisor_dec:
   975  0079                     divisor_dec@dig1:	
   976                           ; 1 bytes @ 0x9
   977                           
   978                           
   979                           ; 1 bytes @ 0x9
   980  0079                     	ds	1
   981                           
   982                           	psect	cstackBANK0
   983  0037                     __pcstackBANK0:
   984  0037                     ??_setup:
   985  0037                     ___awdiv@counter:	
   986                           ; 1 bytes @ 0x0
   987                           
   988                           
   989                           ; 1 bytes @ 0x0
   990  0037                     	ds	1
   991  0038                     ___awdiv@sign:
   992                           
   993                           ; 1 bytes @ 0x1
   994  0038                     	ds	1
   995  0039                     ___awdiv@quotient:
   996                           
   997                           ; 2 bytes @ 0x2
   998  0039                     	ds	2
   999  003B                     ??_divisor_dec:
  1000                           
  1001                           ; 1 bytes @ 0x4
  1002  003B                     	ds	4
  1003  003F                     divisor_dec@b:
  1004                           
  1005                           ; 1 bytes @ 0x8
  1006  003F                     	ds	1
  1007  0040                     divisor_dec@n:
  1008                           
  1009                           ; 2 bytes @ 0x9
  1010  0040                     	ds	2
  1011  0042                     ??_main:
  1012                           
  1013                           ; 1 bytes @ 0xB
  1014  0042                     	ds	2
  1015                           
  1016                           	psect	maintext
  1017  002A                     __pmaintext:	
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 97 in file "Maestro.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : B00/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       2       0       0       0
  1040 ;;      Totals:         0       2       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels required when called: 5
  1043 ;; This function calls:
  1044 ;;		_Escribir_caracterLCD
  1045 ;;		_Escribir_stringLCD
  1046 ;;		_ReadMSSP
  1047 ;;		_WriteMSSP
  1048 ;;		_divisor_dec
  1049 ;;		_set_cursor
  1050 ;;		_setup
  1051 ;;		_tabla_numASCII
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _main
  1059  002A                     _main:
  1060  002A                     l2155:	
  1061                           ;incstack = 0
  1062                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1063                           
  1064                           
  1065                           ;Maestro.c: 98:     setup();
  1066  002A  120A  118A  223A  120A  118A  	fcall	_setup
  1067  002F                     l2157:
  1068                           
  1069                           ;Maestro.c: 99:     val_ADC = 0;
  1070  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0031  01A8               	clrf	_val_ADC
  1073  0032  01A9               	clrf	_val_ADC+1
  1074  0033                     l2159:
  1075                           
  1076                           ;Maestro.c: 100:     Contador = 0;
  1077  0033  01A6               	clrf	_Contador
  1078  0034  01A7               	clrf	_Contador+1
  1079  0035                     l2161:
  1080                           
  1081                           ;Maestro.c: 101:     Temp = 0;
  1082  0035  01A4               	clrf	_Temp
  1083  0036  01A5               	clrf	_Temp+1
  1084  0037                     l2163:
  1085                           
  1086                           ;Maestro.c: 102:     PORTCbits.RC2 = 1;
  1087  0037  1507               	bsf	7,2	;volatile
  1088  0038                     l2165:
  1089                           
  1090                           ;Maestro.c: 103:     PORTCbits.RC1 = 1;
  1091  0038  1487               	bsf	7,1	;volatile
  1092  0039                     l2167:
  1093                           
  1094                           ;Maestro.c: 104:     PORTCbits.RC0 = 1;
  1095  0039  1407               	bsf	7,0	;volatile
  1096  003A                     l2169:
  1097                           
  1098                           ;Maestro.c: 106:         set_cursor(1,0);
  1099  003A  01F4               	clrf	set_cursor@posicion
  1100  003B  3001               	movlw	1
  1101  003C  120A  118A  242C  120A  118A  	fcall	_set_cursor
  1102  0041                     l2171:
  1103                           
  1104                           ;Maestro.c: 107:         Escribir_stringLCD("S1:    S2:   S3:");
  1105  0041  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1106  0042  120A  118A  257F  120A  118A  	fcall	_Escribir_stringLCD
  1107  0047                     l2173:
  1108                           
  1109                           ;Maestro.c: 112:         PORTCbits.RC1 = 1;
  1110  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0049  1487               	bsf	7,1	;volatile
  1113  004A                     l2175:
  1114                           
  1115                           ;Maestro.c: 113:         PORTCbits.RC0 = 1;
  1116  004A  1407               	bsf	7,0	;volatile
  1117  004B                     l2177:
  1118                           
  1119                           ;Maestro.c: 114:         PORTCbits.RC2 = 0;
  1120  004B  1107               	bcf	7,2	;volatile
  1121  004C                     l2179:
  1122                           
  1123                           ;Maestro.c: 116:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1124  004C  284D               	nop2	;2 cycle nop
  1125  004D  284E               	nop2	;2 cycle nop
  1126  004E  0000               	nop
  1127  004F                     l2181:
  1128                           
  1129                           ;Maestro.c: 118:         WriteMSSP(1);
  1130  004F  3001               	movlw	1
  1131  0050  120A  118A  25F2  120A  118A  	fcall	_WriteMSSP
  1132  0055                     l2183:
  1133                           
  1134                           ;Maestro.c: 121:         val_ADC = ReadMSSP();
  1135  0055  120A  118A  25D9  120A  118A  	fcall	_ReadMSSP
  1136  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1137  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1138  005C  00C2               	movwf	??_main
  1139  005D  01C3               	clrf	??_main+1
  1140  005E  0842               	movf	??_main,w
  1141  005F  00A8               	movwf	_val_ADC
  1142  0060  0843               	movf	??_main+1,w
  1143  0061  00A9               	movwf	_val_ADC+1
  1144  0062                     l2185:
  1145                           
  1146                           ;Maestro.c: 123:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1147  0062  2863               	nop2	;2 cycle nop
  1148  0063  2864               	nop2	;2 cycle nop
  1149  0064  0000               	nop
  1150  0065                     l2187:
  1151                           
  1152                           ;Maestro.c: 125:         PORTCbits.RC2 = 1;
  1153  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1154  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1155  0067  1507               	bsf	7,2	;volatile
  1156  0068                     l2189:
  1157                           
  1158                           ;Maestro.c: 126:         PORTCbits.RC1 = 1;
  1159  0068  1487               	bsf	7,1	;volatile
  1160  0069                     l2191:
  1161                           
  1162                           ;Maestro.c: 127:         PORTCbits.RC0 = 1;
  1163  0069  1407               	bsf	7,0	;volatile
  1164  006A                     l2193:
  1165                           
  1166                           ;Maestro.c: 133:         PORTCbits.RC2 = 1;
  1167  006A  1507               	bsf	7,2	;volatile
  1168  006B                     l2195:
  1169                           
  1170                           ;Maestro.c: 134:         PORTCbits.RC1 = 0;
  1171  006B  1087               	bcf	7,1	;volatile
  1172  006C                     l2197:
  1173                           
  1174                           ;Maestro.c: 135:         PORTCbits.RC0 = 1;
  1175  006C  1407               	bsf	7,0	;volatile
  1176  006D                     l2199:
  1177                           
  1178                           ;Maestro.c: 137:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1179  006D  286E               	nop2	;2 cycle nop
  1180  006E  286F               	nop2	;2 cycle nop
  1181  006F  0000               	nop
  1182  0070                     l2201:
  1183                           
  1184                           ;Maestro.c: 139:         WriteMSSP(1);
  1185  0070  3001               	movlw	1
  1186  0071  120A  118A  25F2  120A  118A  	fcall	_WriteMSSP
  1187  0076                     l2203:
  1188                           
  1189                           ;Maestro.c: 142:         Contador = ReadMSSP();
  1190  0076  120A  118A  25D9  120A  118A  	fcall	_ReadMSSP
  1191  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1192  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1193  007D  00C2               	movwf	??_main
  1194  007E  01C3               	clrf	??_main+1
  1195  007F  0842               	movf	??_main,w
  1196  0080  00A6               	movwf	_Contador
  1197  0081  0843               	movf	??_main+1,w
  1198  0082  00A7               	movwf	_Contador+1
  1199  0083                     l2205:
  1200                           
  1201                           ;Maestro.c: 144:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1202  0083  2884               	nop2	;2 cycle nop
  1203  0084  2885               	nop2	;2 cycle nop
  1204  0085  0000               	nop
  1205  0086                     l2207:
  1206                           
  1207                           ;Maestro.c: 146:         PORTCbits.RC1 = 1;
  1208  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0088  1487               	bsf	7,1	;volatile
  1211  0089                     l2209:
  1212                           
  1213                           ;Maestro.c: 147:         PORTCbits.RC1 = 1;
  1214  0089  1487               	bsf	7,1	;volatile
  1215  008A                     l2211:
  1216                           
  1217                           ;Maestro.c: 148:         PORTCbits.RC0 = 1;
  1218  008A  1407               	bsf	7,0	;volatile
  1219  008B                     l2213:
  1220                           
  1221                           ;Maestro.c: 154:         PORTCbits.RC2 = 1;
  1222  008B  1507               	bsf	7,2	;volatile
  1223  008C                     l2215:
  1224                           
  1225                           ;Maestro.c: 155:         PORTCbits.RC1 = 1;
  1226  008C  1487               	bsf	7,1	;volatile
  1227  008D                     l2217:
  1228                           
  1229                           ;Maestro.c: 156:         PORTCbits.RC0 = 0;
  1230  008D  1007               	bcf	7,0	;volatile
  1231  008E                     l2219:
  1232                           
  1233                           ;Maestro.c: 158:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1234  008E  288F               	nop2	;2 cycle nop
  1235  008F  2890               	nop2	;2 cycle nop
  1236  0090  0000               	nop
  1237  0091                     l2221:
  1238                           
  1239                           ;Maestro.c: 160:         WriteMSSP(1);
  1240  0091  3001               	movlw	1
  1241  0092  120A  118A  25F2  120A  118A  	fcall	_WriteMSSP
  1242  0097                     l2223:
  1243                           
  1244                           ;Maestro.c: 163:         Temp = ReadMSSP();
  1245  0097  120A  118A  25D9  120A  118A  	fcall	_ReadMSSP
  1246  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1247  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1248  009E  00C2               	movwf	??_main
  1249  009F  01C3               	clrf	??_main+1
  1250  00A0  0842               	movf	??_main,w
  1251  00A1  00A4               	movwf	_Temp
  1252  00A2  0843               	movf	??_main+1,w
  1253  00A3  00A5               	movwf	_Temp+1
  1254  00A4                     l2225:
  1255                           
  1256                           ;Maestro.c: 165:         _delay((unsigned long)((5)*(4000000/4000000.0)));
  1257  00A4  28A5               	nop2	;2 cycle nop
  1258  00A5  28A6               	nop2	;2 cycle nop
  1259  00A6  0000               	nop
  1260  00A7                     l2227:
  1261                           
  1262                           ;Maestro.c: 167:         PORTCbits.RC1 = 1;
  1263  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1264  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1265  00A9  1487               	bsf	7,1	;volatile
  1266  00AA                     l2229:
  1267                           
  1268                           ;Maestro.c: 168:         PORTCbits.RC1 = 1;
  1269  00AA  1487               	bsf	7,1	;volatile
  1270  00AB                     l2231:
  1271                           
  1272                           ;Maestro.c: 169:         PORTCbits.RC0 = 1;
  1273  00AB  1407               	bsf	7,0	;volatile
  1274  00AC                     l2233:
  1275                           
  1276                           ;Maestro.c: 176:         divisor_dec(Contador, Cont_dig);
  1277  00AC  307A               	movlw	(low (_Cont_dig| 0))& (0+255)
  1278  00AD  00C2               	movwf	??_main
  1279  00AE  0842               	movf	??_main,w
  1280  00AF  00F9               	movwf	divisor_dec@dig1
  1281  00B0  0826               	movf	_Contador,w
  1282  00B1  120A  118A  23DB  120A  118A  	fcall	_divisor_dec
  1283  00B6                     l2235:
  1284                           
  1285                           ;Maestro.c: 178:         uni_Cont = tabla_numASCII(Cont_dig[2]);
  1286  00B6  087C               	movf	_Cont_dig+2,w
  1287  00B7  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1288  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1289  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1290  00BE  00C2               	movwf	??_main
  1291  00BF  0842               	movf	??_main,w
  1292  00C0  00B0               	movwf	_uni_Cont
  1293  00C1                     l2237:
  1294                           
  1295                           ;Maestro.c: 179:         dec_Cont = tabla_numASCII(Cont_dig[1]);
  1296  00C1  087B               	movf	_Cont_dig+1,w
  1297  00C2  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1298  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1299  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1300  00C9  00C2               	movwf	??_main
  1301  00CA  0842               	movf	??_main,w
  1302  00CB  00AF               	movwf	_dec_Cont
  1303  00CC                     l2239:
  1304                           
  1305                           ;Maestro.c: 180:         cen_Cont = tabla_numASCII(Cont_dig[0]);
  1306  00CC  087A               	movf	_Cont_dig,w
  1307  00CD  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1308  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1309  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1310  00D4  00C2               	movwf	??_main
  1311  00D5  0842               	movf	??_main,w
  1312  00D6  00AE               	movwf	_cen_Cont
  1313  00D7                     l2241:
  1314                           
  1315                           ;Maestro.c: 183:         divisor_dec(val_ADC, ADC_dig);
  1316  00D7  307B               	movlw	(low (_ADC_dig| 0))& (0+255)
  1317  00D8  00C2               	movwf	??_main
  1318  00D9  0842               	movf	??_main,w
  1319  00DA  00F9               	movwf	divisor_dec@dig1
  1320  00DB  0828               	movf	_val_ADC,w
  1321  00DC  120A  118A  23DB  120A  118A  	fcall	_divisor_dec
  1322  00E1                     l2243:
  1323                           
  1324                           ;Maestro.c: 185:         uni_ADC = tabla_numASCII(ADC_dig[2]);
  1325  00E1  087D               	movf	_ADC_dig+2,w
  1326  00E2  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1327  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1328  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1329  00E9  00C2               	movwf	??_main
  1330  00EA  0842               	movf	??_main,w
  1331  00EB  00B4               	movwf	_uni_ADC
  1332  00EC                     l2245:
  1333                           
  1334                           ;Maestro.c: 186:         dec_ADC = tabla_numASCII(ADC_dig[1]);
  1335  00EC  087C               	movf	_ADC_dig+1,w
  1336  00ED  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1337  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1338  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1339  00F4  00C2               	movwf	??_main
  1340  00F5  0842               	movf	??_main,w
  1341  00F6  00B3               	movwf	_dec_ADC
  1342  00F7                     l2247:
  1343                           
  1344                           ;Maestro.c: 187:         cen_ADC = tabla_numASCII(ADC_dig[0]);
  1345  00F7  087B               	movf	_ADC_dig,w
  1346  00F8  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1347  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1348  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1349  00FF  00C2               	movwf	??_main
  1350  0100  0842               	movf	??_main,w
  1351  0101  00B2               	movwf	_cen_ADC
  1352  0102                     l2249:
  1353                           
  1354                           ;Maestro.c: 190:         divisor_dec(Temp, Temp_dig);
  1355  0102  3036               	movlw	(low (_Temp_dig| 0))& (0+255)
  1356  0103  00C2               	movwf	??_main
  1357  0104  0842               	movf	??_main,w
  1358  0105  00F9               	movwf	divisor_dec@dig1
  1359  0106  0824               	movf	_Temp,w
  1360  0107  120A  118A  23DB  120A  118A  	fcall	_divisor_dec
  1361  010C                     l2251:
  1362                           
  1363                           ;Maestro.c: 192:         uni_Temp = tabla_numASCII(Temp_dig[0]);
  1364  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1365  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1366  010E  0836               	movf	_Temp_dig,w
  1367  010F  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1368  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0116  00C2               	movwf	??_main
  1371  0117  0842               	movf	??_main,w
  1372  0118  00AC               	movwf	_uni_Temp
  1373  0119                     l2253:
  1374                           
  1375                           ;Maestro.c: 193:         dec_Temp = tabla_numASCII(Temp_dig[1]);
  1376  0119  0837               	movf	_Temp_dig+1,w
  1377  011A  120A  118A  24B2  120A  118A  	fcall	_tabla_numASCII
  1378  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0121  00C2               	movwf	??_main
  1381  0122  0842               	movf	??_main,w
  1382  0123  00AB               	movwf	_dec_Temp
  1383  0124                     l2255:
  1384                           
  1385                           ;Maestro.c: 201:         set_cursor(2,7);
  1386  0124  3007               	movlw	7
  1387  0125  00C2               	movwf	??_main
  1388  0126  0842               	movf	??_main,w
  1389  0127  00F4               	movwf	set_cursor@posicion
  1390  0128  3002               	movlw	2
  1391  0129  120A  118A  242C  120A  118A  	fcall	_set_cursor
  1392  012E                     l2257:
  1393                           
  1394                           ;Maestro.c: 202:         Escribir_caracterLCD(uni_Cont);
  1395  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1396  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0130  0830               	movf	_uni_Cont,w
  1398  0131  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1399  0136                     l2259:
  1400                           
  1401                           ;Maestro.c: 203:         Escribir_caracterLCD(dec_Cont);
  1402  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0138  082F               	movf	_dec_Cont,w
  1405  0139  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1406  013E                     l2261:
  1407                           
  1408                           ;Maestro.c: 204:         Escribir_caracterLCD(cen_Cont);
  1409  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1410  013F  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0140  082E               	movf	_cen_Cont,w
  1412  0141  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1413  0146                     l2263:
  1414                           
  1415                           ;Maestro.c: 206:         set_cursor(2,13);
  1416  0146  300D               	movlw	13
  1417  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0149  00C2               	movwf	??_main
  1420  014A  0842               	movf	??_main,w
  1421  014B  00F4               	movwf	set_cursor@posicion
  1422  014C  3002               	movlw	2
  1423  014D  120A  118A  242C  120A  118A  	fcall	_set_cursor
  1424  0152                     l2265:
  1425                           
  1426                           ;Maestro.c: 207:         Escribir_caracterLCD(dec_Temp);
  1427  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0154  082B               	movf	_dec_Temp,w
  1430  0155  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1431  015A                     l2267:
  1432                           
  1433                           ;Maestro.c: 208:         Escribir_caracterLCD(uni_Temp);
  1434  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1435  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1436  015C  082C               	movf	_uni_Temp,w
  1437  015D  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1438  0162                     l2269:
  1439                           
  1440                           ;Maestro.c: 209:         Escribir_stringLCD("C");
  1441  0162  3024               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1442  0163  120A  118A  257F  120A  118A  	fcall	_Escribir_stringLCD
  1443  0168                     l2271:
  1444                           
  1445                           ;Maestro.c: 211:         set_cursor(2,0);
  1446  0168  01F4               	clrf	set_cursor@posicion
  1447  0169  3002               	movlw	2
  1448  016A  120A  118A  242C  120A  118A  	fcall	_set_cursor
  1449  016F                     l2273:
  1450                           
  1451                           ;Maestro.c: 212:         Escribir_caracterLCD(uni_ADC);
  1452  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0171  0834               	movf	_uni_ADC,w
  1455  0172  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1456  0177                     l2275:
  1457                           
  1458                           ;Maestro.c: 213:         Escribir_caracterLCD(dec_ADC);
  1459  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0179  0833               	movf	_dec_ADC,w
  1462  017A  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1463  017F                     l2277:
  1464                           
  1465                           ;Maestro.c: 214:         Escribir_caracterLCD(cen_ADC);
  1466  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0181  0832               	movf	_cen_ADC,w
  1469  0182  120A  118A  25CD  120A  118A  	fcall	_Escribir_caracterLCD
  1470  0187  283A               	goto	l2169
  1471  0188  120A  118A  280C   	ljmp	start
  1472  018B                     __end_of_main:
  1473                           
  1474                           	psect	text1
  1475  04B2                     __ptext1:	
  1476 ;; *************** function _tabla_numASCII *****************
  1477 ;; Defined at:
  1478 ;;		line 277 in file "Maestro.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  a               1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  a               1    4[COMMON] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       0       0       0
  1493 ;;      Locals:         1       0       0       0       0
  1494 ;;      Temps:          2       0       0       0       0
  1495 ;;      Totals:         3       0       0       0       0
  1496 ;;Total ram usage:        3 bytes
  1497 ;; Hardware stack levels used: 1
  1498 ;; Hardware stack levels required when called: 1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _tabla_numASCII
  1508  04B2                     _tabla_numASCII:
  1509                           
  1510                           ;incstack = 0
  1511                           ; Regs used in _tabla_numASCII: [wreg-fsr0h+status,2+status,0]
  1512                           ;tabla_numASCII@a stored from wreg
  1513  04B2  00F4               	movwf	tabla_numASCII@a
  1514  04B3                     l1833:
  1515                           
  1516                           ;Maestro.c: 278:     switch(a){
  1517  04B3  2CC8               	goto	l1897
  1518  04B4                     l1835:
  1519                           
  1520                           ;Maestro.c: 280:             return 48;
  1521  04B4  3030               	movlw	48
  1522  04B5  2CF0               	goto	l121
  1523  04B6                     l1841:
  1524                           
  1525                           ;Maestro.c: 283:             return 49;
  1526  04B6  3031               	movlw	49
  1527  04B7  2CF0               	goto	l121
  1528  04B8                     l1847:
  1529                           
  1530                           ;Maestro.c: 286:             return 50;
  1531  04B8  3032               	movlw	50
  1532  04B9  2CF0               	goto	l121
  1533  04BA                     l1853:
  1534                           
  1535                           ;Maestro.c: 289:             return 51;
  1536  04BA  3033               	movlw	51
  1537  04BB  2CF0               	goto	l121
  1538  04BC                     l1859:
  1539                           
  1540                           ;Maestro.c: 292:             return 52;
  1541  04BC  3034               	movlw	52
  1542  04BD  2CF0               	goto	l121
  1543  04BE                     l1865:
  1544                           
  1545                           ;Maestro.c: 295:             return 53;
  1546  04BE  3035               	movlw	53
  1547  04BF  2CF0               	goto	l121
  1548  04C0                     l1871:
  1549                           
  1550                           ;Maestro.c: 298:             return 54;
  1551  04C0  3036               	movlw	54
  1552  04C1  2CF0               	goto	l121
  1553  04C2                     l1877:
  1554                           
  1555                           ;Maestro.c: 301:             return 55;
  1556  04C2  3037               	movlw	55
  1557  04C3  2CF0               	goto	l121
  1558  04C4                     l1883:
  1559                           
  1560                           ;Maestro.c: 304:             return 56;
  1561  04C4  3038               	movlw	56
  1562  04C5  2CF0               	goto	l121
  1563  04C6                     l1889:
  1564                           
  1565                           ;Maestro.c: 307:             return 57;
  1566  04C6  3039               	movlw	57
  1567  04C7  2CF0               	goto	l121
  1568  04C8                     l1897:
  1569  04C8  0874               	movf	tabla_numASCII@a,w
  1570  04C9  00F2               	movwf	??_tabla_numASCII
  1571  04CA  01F3               	clrf	??_tabla_numASCII+1
  1572                           
  1573                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1574                           ; Switch size 1, requested type "simple"
  1575                           ; Number of cases is 1, Range of values is 0 to 0
  1576                           ; switch strategies available:
  1577                           ; Name         Instructions Cycles
  1578                           ; simple_byte            4     3 (average)
  1579                           ; direct_byte           11     8 (fixed)
  1580                           ; jumptable            260     6 (fixed)
  1581                           ;	Chosen strategy is simple_byte
  1582  04CB  0873               	movf	??_tabla_numASCII+1,w
  1583  04CC  3A00               	xorlw	0	; case 0
  1584  04CD  1903               	skipnz
  1585  04CE  2CD0               	goto	l2311
  1586  04CF  2CF0               	goto	l121
  1587  04D0                     l2311:
  1588                           
  1589                           ; Switch size 1, requested type "simple"
  1590                           ; Number of cases is 10, Range of values is 0 to 9
  1591                           ; switch strategies available:
  1592                           ; Name         Instructions Cycles
  1593                           ; simple_byte           31    16 (average)
  1594                           ; direct_byte           38     8 (fixed)
  1595                           ; jumptable            260     6 (fixed)
  1596                           ;	Chosen strategy is simple_byte
  1597  04D0  0872               	movf	??_tabla_numASCII,w
  1598  04D1  3A00               	xorlw	0	; case 0
  1599  04D2  1903               	skipnz
  1600  04D3  2CB4               	goto	l1835
  1601  04D4  3A01               	xorlw	1	; case 1
  1602  04D5  1903               	skipnz
  1603  04D6  2CB6               	goto	l1841
  1604  04D7  3A03               	xorlw	3	; case 2
  1605  04D8  1903               	skipnz
  1606  04D9  2CB8               	goto	l1847
  1607  04DA  3A01               	xorlw	1	; case 3
  1608  04DB  1903               	skipnz
  1609  04DC  2CBA               	goto	l1853
  1610  04DD  3A07               	xorlw	7	; case 4
  1611  04DE  1903               	skipnz
  1612  04DF  2CBC               	goto	l1859
  1613  04E0  3A01               	xorlw	1	; case 5
  1614  04E1  1903               	skipnz
  1615  04E2  2CBE               	goto	l1865
  1616  04E3  3A03               	xorlw	3	; case 6
  1617  04E4  1903               	skipnz
  1618  04E5  2CC0               	goto	l1871
  1619  04E6  3A01               	xorlw	1	; case 7
  1620  04E7  1903               	skipnz
  1621  04E8  2CC2               	goto	l1877
  1622  04E9  3A0F               	xorlw	15	; case 8
  1623  04EA  1903               	skipnz
  1624  04EB  2CC4               	goto	l1883
  1625  04EC  3A01               	xorlw	1	; case 9
  1626  04ED  1903               	skipnz
  1627  04EE  2CC6               	goto	l1889
  1628  04EF  2CF0               	goto	l121
  1629  04F0                     l121:
  1630  04F0  0008               	return
  1631  04F1                     __end_of_tabla_numASCII:
  1632                           
  1633                           	psect	text2
  1634  023A                     __ptext2:	
  1635 ;; *************** function _setup *****************
  1636 ;; Defined at:
  1637 ;;		line 228 in file "Maestro.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0
  1653 ;;      Temps:          0       3       0       0       0
  1654 ;;      Totals:         0       3       0       0       0
  1655 ;;Total ram usage:        3 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 4
  1658 ;; This function calls:
  1659 ;;		_Config_USART
  1660 ;;		_Escribir_stringLCD
  1661 ;;		_Iniciar_LCD
  1662 ;;		_InitMSSP
  1663 ;;		_Limpiar_pantallaLCD
  1664 ;;		_initOsc
  1665 ;;		_set_cursor
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           
  1672                           ;psect for function _setup
  1673  023A                     _setup:
  1674  023A                     l2107:	
  1675                           ;incstack = 0
  1676                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1677                           
  1678                           
  1679                           ;Maestro.c: 231:     ANSEL = 0;
  1680  023A  1683               	bsf	3,5	;RP0=1, select bank3
  1681  023B  1703               	bsf	3,6	;RP1=1, select bank3
  1682  023C  0188               	clrf	8	;volatile
  1683                           
  1684                           ;Maestro.c: 232:     ANSELH = 0;
  1685  023D  0189               	clrf	9	;volatile
  1686                           
  1687                           ;Maestro.c: 234:     TRISA = 0;
  1688  023E  1683               	bsf	3,5	;RP0=1, select bank1
  1689  023F  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0240  0185               	clrf	5	;volatile
  1691                           
  1692                           ;Maestro.c: 235:     TRISB = 0;
  1693  0241  0186               	clrf	6	;volatile
  1694                           
  1695                           ;Maestro.c: 236:     TRISD = 0;
  1696  0242  0188               	clrf	8	;volatile
  1697                           
  1698                           ;Maestro.c: 237:     TRISE = 0;
  1699  0243  0189               	clrf	9	;volatile
  1700                           
  1701                           ;Maestro.c: 239:     PORTA = 0;
  1702  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0246  0185               	clrf	5	;volatile
  1705                           
  1706                           ;Maestro.c: 240:     PORTD = 0;
  1707  0247  0188               	clrf	8	;volatile
  1708                           
  1709                           ;Maestro.c: 241:     PORTE = 0;
  1710  0248  0189               	clrf	9	;volatile
  1711                           
  1712                           ;Maestro.c: 242:     PORTB = 0;
  1713  0249  0186               	clrf	6	;volatile
  1714                           
  1715                           ;Maestro.c: 243:     PORTC = 0;
  1716  024A  0187               	clrf	7	;volatile
  1717  024B                     l2109:
  1718                           
  1719                           ;Maestro.c: 246:     TRISC2 = 0;
  1720  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1721  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1722  024D  1107               	bcf	7,2	;volatile
  1723  024E                     l2111:
  1724                           
  1725                           ;Maestro.c: 247:     PORTCbits.RC2 = 1;
  1726  024E  1283               	bcf	3,5	;RP0=0, select bank0
  1727  024F  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0250  1507               	bsf	7,2	;volatile
  1729  0251                     l2113:
  1730                           
  1731                           ;Maestro.c: 249:     TRISC1 = 0;
  1732  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1733  0252  1303               	bcf	3,6	;RP1=0, select bank1
  1734  0253  1087               	bcf	7,1	;volatile
  1735  0254                     l2115:
  1736                           
  1737                           ;Maestro.c: 250:     PORTCbits.RC1 = 1;
  1738  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0256  1487               	bsf	7,1	;volatile
  1741  0257                     l2117:
  1742                           
  1743                           ;Maestro.c: 252:     TRISC0 = 0;
  1744  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1746  0259  1007               	bcf	7,0	;volatile
  1747  025A                     l2119:
  1748                           
  1749                           ;Maestro.c: 253:     PORTCbits.RC0 = 1;
  1750  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1751  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1752  025C  1407               	bsf	7,0	;volatile
  1753  025D                     l2121:
  1754                           
  1755                           ;Maestro.c: 256:     initOsc(4);
  1756  025D  3004               	movlw	4
  1757  025E  120A  118A  2524  120A  118A  	fcall	_initOsc
  1758  0263                     l2123:
  1759                           
  1760                           ;Maestro.c: 259:     InitMSSP(SPI_MASTER_FOSC4);
  1761  0263  3000               	movlw	0
  1762  0264  120A  118A  24F1  120A  118A  	fcall	_InitMSSP
  1763  0269                     l2125:
  1764                           
  1765                           ;Maestro.c: 262:     Iniciar_LCD();
  1766  0269  120A  118A  231D  120A  118A  	fcall	_Iniciar_LCD
  1767  026E                     l2127:
  1768                           
  1769                           ;Maestro.c: 263:     Limpiar_pantallaLCD();
  1770  026E  120A  118A  25A5  120A  118A  	fcall	_Limpiar_pantallaLCD
  1771  0273                     l2129:
  1772                           
  1773                           ;Maestro.c: 264:     set_cursor(1,0);
  1774  0273  01F4               	clrf	set_cursor@posicion
  1775  0274  3001               	movlw	1
  1776  0275  120A  118A  242C  120A  118A  	fcall	_set_cursor
  1777  027A                     l2131:
  1778                           
  1779                           ;Maestro.c: 265:     Escribir_stringLCD("Hola");
  1780  027A  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1781  027B  120A  118A  257F  120A  118A  	fcall	_Escribir_stringLCD
  1782  0280                     l2133:
  1783                           
  1784                           ;Maestro.c: 266:     set_cursor(2,2);
  1785  0280  3002               	movlw	2
  1786  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0283  00B7               	movwf	??_setup
  1789  0284  0837               	movf	??_setup,w
  1790  0285  00F4               	movwf	set_cursor@posicion
  1791  0286  3002               	movlw	2
  1792  0287  120A  118A  242C  120A  118A  	fcall	_set_cursor
  1793  028C                     l2135:
  1794                           
  1795                           ;Maestro.c: 267:     Escribir_stringLCD("Jose Santizo");
  1796  028C  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1797  028D  120A  118A  257F  120A  118A  	fcall	_Escribir_stringLCD
  1798  0292                     l2137:
  1799                           
  1800                           ;Maestro.c: 268:     _delay((unsigned long)((5000)*(4000000/4000.0)));
  1801  0292  301A               	movlw	26
  1802  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0295  00B9               	movwf	??_setup+2
  1805  0296  305E               	movlw	94
  1806  0297  00B8               	movwf	??_setup+1
  1807  0298  306D               	movlw	109
  1808  0299  00B7               	movwf	??_setup
  1809  029A                     u1217:
  1810  029A  0BB7               	decfsz	??_setup,f
  1811  029B  2A9A               	goto	u1217
  1812  029C  0BB8               	decfsz	??_setup+1,f
  1813  029D  2A9A               	goto	u1217
  1814  029E  0BB9               	decfsz	??_setup+2,f
  1815  029F  2A9A               	goto	u1217
  1816  02A0  2AA1               	nop2
  1817  02A1                     l2139:
  1818                           
  1819                           ;Maestro.c: 269:     Limpiar_pantallaLCD();
  1820  02A1  120A  118A  25A5  120A  118A  	fcall	_Limpiar_pantallaLCD
  1821  02A6                     l2141:
  1822                           
  1823                           ;Maestro.c: 272:     Config_USART(9600,4);
  1824  02A6  3080               	movlw	128
  1825  02A7  00F2               	movwf	Config_USART@baud_rate
  1826  02A8  3025               	movlw	37
  1827  02A9  00F3               	movwf	Config_USART@baud_rate+1
  1828  02AA  3004               	movlw	4
  1829  02AB  00F4               	movwf	Config_USART@Freq
  1830  02AC  3000               	movlw	0
  1831  02AD  00F5               	movwf	Config_USART@Freq+1
  1832  02AE  120A  118A  218B  120A  118A  	fcall	_Config_USART
  1833  02B3                     l116:
  1834  02B3  0008               	return
  1835  02B4                     __end_of_setup:
  1836                           
  1837                           	psect	text3
  1838  042C                     __ptext3:	
  1839 ;; *************** function _set_cursor *****************
  1840 ;; Defined at:
  1841 ;;		line 77 in file "LCD.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  linea           1    wreg     unsigned char 
  1844 ;;  posicion        1    4[COMMON] unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  linea           1    7[COMMON] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         1       0       0       0       0
  1857 ;;      Locals:         1       0       0       0       0
  1858 ;;      Temps:          2       0       0       0       0
  1859 ;;      Totals:         4       0       0       0       0
  1860 ;;Total ram usage:        4 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 3
  1863 ;; This function calls:
  1864 ;;		_Escribir_comandoLCD
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;;		_setup
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _set_cursor
  1873  042C                     _set_cursor:
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _set_cursor: [wreg+status,2+status,0+pclath+cstack]
  1877                           ;set_cursor@linea stored from wreg
  1878  042C  00F7               	movwf	set_cursor@linea
  1879  042D                     l1513:
  1880                           
  1881                           ;LCD.c: 78:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  1882  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1883  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1884  042F  1188               	bcf	8,3	;volatile
  1885  0430  1208               	bcf	8,4	;volatile
  1886  0431                     l1515:
  1887                           
  1888                           ;LCD.c: 81:     if (linea == 1){ Escribir_comandoLCD(0b10000000);}
  1889  0431  0377               	decf	set_cursor@linea,w
  1890  0432  1D03               	btfss	3,2
  1891  0433  2C35               	goto	u631
  1892  0434  2C36               	goto	u630
  1893  0435                     u631:
  1894  0435  2C3D               	goto	l1519
  1895  0436                     u630:
  1896  0436                     l1517:
  1897  0436  3080               	movlw	128
  1898  0437  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  1899  043C  2C49               	goto	l1523
  1900  043D                     l1519:
  1901  043D  3002               	movlw	2
  1902  043E  0677               	xorwf	set_cursor@linea,w
  1903  043F  1D03               	btfss	3,2
  1904  0440  2C42               	goto	u641
  1905  0441  2C43               	goto	u640
  1906  0442                     u641:
  1907  0442  2C49               	goto	l1523
  1908  0443                     u640:
  1909  0443                     l1521:
  1910  0443  30C0               	movlw	192
  1911  0444  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  1912  0449                     l1523:
  1913                           
  1914                           ;LCD.c: 84:     _delay((unsigned long)((40)*(8000000/4000.0)));
  1915  0449  3068               	movlw	104
  1916  044A  00F6               	movwf	??_set_cursor+1
  1917  044B  30E4               	movlw	228
  1918  044C  00F5               	movwf	??_set_cursor
  1919  044D                     u1227:
  1920  044D  0BF5               	decfsz	??_set_cursor,f
  1921  044E  2C4D               	goto	u1227
  1922  044F  0BF6               	decfsz	??_set_cursor+1,f
  1923  0450  2C4D               	goto	u1227
  1924  0451  0000               	nop
  1925  0452                     l1525:
  1926                           
  1927                           ;LCD.c: 86:     if (posicion != 0){
  1928  0452  0874               	movf	set_cursor@posicion,w
  1929  0453  1903               	btfsc	3,2
  1930  0454  2C56               	goto	u651
  1931  0455  2C57               	goto	u650
  1932  0456                     u651:
  1933  0456  2C6E               	goto	l217
  1934  0457                     u650:
  1935  0457  2C60               	goto	l1533
  1936  0458                     l1529:
  1937                           
  1938                           ;LCD.c: 88:             Escribir_comandoLCD(0b00010100);
  1939  0458  3014               	movlw	20
  1940  0459  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  1941  045E                     l1531:
  1942                           
  1943                           ;LCD.c: 89:             posicion--;
  1944  045E  3001               	movlw	1
  1945  045F  02F4               	subwf	set_cursor@posicion,f
  1946  0460                     l1533:
  1947                           
  1948                           ;LCD.c: 87:         while(posicion > 0){
  1949  0460  0874               	movf	set_cursor@posicion,w
  1950  0461  1D03               	btfss	3,2
  1951  0462  2C64               	goto	u661
  1952  0463  2C65               	goto	u660
  1953  0464                     u661:
  1954  0464  2C58               	goto	l1529
  1955  0465                     u660:
  1956  0465                     l1535:
  1957                           
  1958                           ;LCD.c: 92:         _delay((unsigned long)((40)*(8000000/4000.0)));
  1959  0465  3068               	movlw	104
  1960  0466  00F6               	movwf	??_set_cursor+1
  1961  0467  30E4               	movlw	228
  1962  0468  00F5               	movwf	??_set_cursor
  1963  0469                     u1237:
  1964  0469  0BF5               	decfsz	??_set_cursor,f
  1965  046A  2C69               	goto	u1237
  1966  046B  0BF6               	decfsz	??_set_cursor+1,f
  1967  046C  2C69               	goto	u1237
  1968  046D  0000               	nop
  1969  046E                     l217:
  1970  046E  0008               	return
  1971  046F                     __end_of_set_cursor:
  1972                           
  1973                           	psect	text4
  1974  0524                     __ptext4:	
  1975 ;; *************** function _initOsc *****************
  1976 ;; Defined at:
  1977 ;;		line 12 in file "Oscilador.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  Valor           1    wreg     unsigned char 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  Valor           1    2[COMMON] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1991 ;;      Params:         0       0       0       0       0
  1992 ;;      Locals:         1       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0
  1994 ;;      Totals:         1       0       0       0       0
  1995 ;;Total ram usage:        1 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_setup
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _initOsc
  2007  0524                     _initOsc:
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in _initOsc: [wreg+status,2+status,0]
  2011                           ;initOsc@Valor stored from wreg
  2012  0524  00F2               	movwf	initOsc@Valor
  2013  0525                     l1547:
  2014                           
  2015                           ;Oscilador.c: 14:     if(Valor == 8){
  2016  0525  3008               	movlw	8
  2017  0526  0672               	xorwf	initOsc@Valor,w
  2018  0527  1D03               	btfss	3,2
  2019  0528  2D2A               	goto	u681
  2020  0529  2D2B               	goto	u680
  2021  052A                     u681:
  2022  052A  2D30               	goto	l1551
  2023  052B                     u680:
  2024  052B                     l1549:
  2025                           
  2026                           ;Oscilador.c: 15:         OSCCONbits.IRCF0 = 1;
  2027  052B  1683               	bsf	3,5	;RP0=1, select bank1
  2028  052C  1303               	bcf	3,6	;RP1=0, select bank1
  2029  052D  160F               	bsf	15,4	;volatile
  2030                           
  2031                           ;Oscilador.c: 16:         OSCCONbits.IRCF1 = 1;
  2032  052E  168F               	bsf	15,5	;volatile
  2033                           
  2034                           ;Oscilador.c: 17:         OSCCONbits.IRCF2 = 1;
  2035  052F  170F               	bsf	15,6	;volatile
  2036  0530                     l1551:
  2037                           
  2038                           ;Oscilador.c: 19:     if(Valor == 4){
  2039  0530  3004               	movlw	4
  2040  0531  0672               	xorwf	initOsc@Valor,w
  2041  0532  1D03               	btfss	3,2
  2042  0533  2D35               	goto	u691
  2043  0534  2D36               	goto	u690
  2044  0535                     u691:
  2045  0535  2D3B               	goto	l1555
  2046  0536                     u690:
  2047  0536                     l1553:
  2048                           
  2049                           ;Oscilador.c: 20:         OSCCONbits.IRCF0 = 0;
  2050  0536  1683               	bsf	3,5	;RP0=1, select bank1
  2051  0537  1303               	bcf	3,6	;RP1=0, select bank1
  2052  0538  120F               	bcf	15,4	;volatile
  2053                           
  2054                           ;Oscilador.c: 21:         OSCCONbits.IRCF1 = 1;
  2055  0539  168F               	bsf	15,5	;volatile
  2056                           
  2057                           ;Oscilador.c: 22:         OSCCONbits.IRCF2 = 1;
  2058  053A  170F               	bsf	15,6	;volatile
  2059  053B                     l1555:
  2060                           
  2061                           ;Oscilador.c: 24:     if(Valor == 2){
  2062  053B  3002               	movlw	2
  2063  053C  0672               	xorwf	initOsc@Valor,w
  2064  053D  1D03               	btfss	3,2
  2065  053E  2D40               	goto	u701
  2066  053F  2D41               	goto	u700
  2067  0540                     u701:
  2068  0540  2D46               	goto	l1559
  2069  0541                     u700:
  2070  0541                     l1557:
  2071                           
  2072                           ;Oscilador.c: 25:         OSCCONbits.IRCF0 = 1;
  2073  0541  1683               	bsf	3,5	;RP0=1, select bank1
  2074  0542  1303               	bcf	3,6	;RP1=0, select bank1
  2075  0543  160F               	bsf	15,4	;volatile
  2076                           
  2077                           ;Oscilador.c: 26:         OSCCONbits.IRCF1 = 0;
  2078  0544  128F               	bcf	15,5	;volatile
  2079                           
  2080                           ;Oscilador.c: 27:         OSCCONbits.IRCF2 = 1;
  2081  0545  170F               	bsf	15,6	;volatile
  2082  0546                     l1559:
  2083                           
  2084                           ;Oscilador.c: 29:     if(Valor == 1){
  2085  0546  0372               	decf	initOsc@Valor,w
  2086  0547  1D03               	btfss	3,2
  2087  0548  2D4A               	goto	u711
  2088  0549  2D4B               	goto	u710
  2089  054A                     u711:
  2090  054A  2D50               	goto	l225
  2091  054B                     u710:
  2092  054B                     l1561:
  2093                           
  2094                           ;Oscilador.c: 30:         OSCCONbits.IRCF0 = 0;
  2095  054B  1683               	bsf	3,5	;RP0=1, select bank1
  2096  054C  1303               	bcf	3,6	;RP1=0, select bank1
  2097  054D  120F               	bcf	15,4	;volatile
  2098                           
  2099                           ;Oscilador.c: 31:         OSCCONbits.IRCF1 = 0;
  2100  054E  128F               	bcf	15,5	;volatile
  2101                           
  2102                           ;Oscilador.c: 32:         OSCCONbits.IRCF2 = 1;
  2103  054F  170F               	bsf	15,6	;volatile
  2104  0550                     l225:	
  2105                           ;Oscilador.c: 33:     }
  2106                           
  2107                           
  2108                           ;Oscilador.c: 36:     OSCCONbits.SCS = 1;
  2109  0550  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0551  1303               	bcf	3,6	;RP1=0, select bank1
  2111  0552  140F               	bsf	15,0	;volatile
  2112  0553                     l226:
  2113  0553  0008               	return
  2114  0554                     __end_of_initOsc:
  2115                           
  2116                           	psect	text5
  2117  05A5                     __ptext5:	
  2118 ;; *************** function _Limpiar_pantallaLCD *****************
  2119 ;; Defined at:
  2120 ;;		line 69 in file "LCD.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0
  2136 ;;      Temps:          2       0       0       0       0
  2137 ;;      Totals:         2       0       0       0       0
  2138 ;;Total ram usage:        2 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 3
  2141 ;; This function calls:
  2142 ;;		_Escribir_comandoLCD
  2143 ;; This function is called by:
  2144 ;;		_setup
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _Limpiar_pantallaLCD
  2150  05A5                     _Limpiar_pantallaLCD:
  2151  05A5                     l1619:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _Limpiar_pantallaLCD: [wreg+status,2+status,0+pclath+cstack]
  2154                           
  2155                           
  2156                           ;LCD.c: 70:     PORTDbits.RD3 = 0; PORTDbits.RD4 = 0;
  2157  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2158  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2159  05A7  1188               	bcf	8,3	;volatile
  2160  05A8  1208               	bcf	8,4	;volatile
  2161  05A9                     l1621:
  2162                           
  2163                           ;LCD.c: 72:     Escribir_comandoLCD(0b00000001);
  2164  05A9  3001               	movlw	1
  2165  05AA  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2166  05AF                     l1623:
  2167                           
  2168                           ;LCD.c: 73:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2169  05AF  301A               	movlw	26
  2170  05B0  00F5               	movwf	??_Limpiar_pantallaLCD+1
  2171  05B1  30F8               	movlw	248
  2172  05B2  00F4               	movwf	??_Limpiar_pantallaLCD
  2173  05B3                     u1247:
  2174  05B3  0BF4               	decfsz	??_Limpiar_pantallaLCD,f
  2175  05B4  2DB3               	goto	u1247
  2176  05B5  0BF5               	decfsz	??_Limpiar_pantallaLCD+1,f
  2177  05B6  2DB3               	goto	u1247
  2178  05B7  0000               	nop
  2179  05B8                     l1625:
  2180                           
  2181                           ;LCD.c: 74:     Escribir_comandoLCD(0b00000010);
  2182  05B8  3002               	movlw	2
  2183  05B9  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2184  05BE                     l207:
  2185  05BE  0008               	return
  2186  05BF                     __end_of_Limpiar_pantallaLCD:
  2187                           
  2188                           	psect	text6
  2189  04F1                     __ptext6:	
  2190 ;; *************** function _InitMSSP *****************
  2191 ;; Defined at:
  2192 ;;		line 10 in file "SPI.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  Modo            1    wreg     enum E1264
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  Modo            1    2[COMMON] enum E1264
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         1       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         1       0       0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 1
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_setup
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _InitMSSP
  2222  04F1                     _InitMSSP:
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _InitMSSP: [wreg+status,2+status,0]
  2226                           ;InitMSSP@Modo stored from wreg
  2227  04F1  00F2               	movwf	InitMSSP@Modo
  2228  04F2                     l1563:
  2229                           
  2230                           ;SPI.c: 12:     SSPSTAT = 0b00000000;
  2231  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2232  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  2233  04F4  0194               	clrf	20	;volatile
  2234                           
  2235                           ;SPI.c: 13:     SSPCON = 0b00000000;
  2236  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2237  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2238  04F7  0194               	clrf	20	;volatile
  2239  04F8                     l1565:
  2240                           
  2241                           ;SPI.c: 18:     SSPCONbits.SSPEN = 0;
  2242  04F8  1294               	bcf	20,5	;volatile
  2243  04F9                     l1567:
  2244                           
  2245                           ;SPI.c: 20:     SSPCONbits.SSPEN = 1;
  2246  04F9  1694               	bsf	20,5	;volatile
  2247  04FA                     l1569:
  2248                           
  2249                           ;SPI.c: 23:     TRISCbits.TRISC5 = 0;
  2250  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2251  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2252  04FC  1287               	bcf	7,5	;volatile
  2253  04FD                     l1571:
  2254                           
  2255                           ;SPI.c: 24:     TRISCbits.TRISC4 = 1;
  2256  04FD  1607               	bsf	7,4	;volatile
  2257  04FE                     l1573:
  2258                           
  2259                           ;SPI.c: 25:     if (Modo < 0b00000110){
  2260  04FE  3006               	movlw	6
  2261  04FF  0272               	subwf	InitMSSP@Modo,w
  2262  0500  1803               	skipnc
  2263  0501  2D03               	goto	u721
  2264  0502  2D04               	goto	u720
  2265  0503                     u721:
  2266  0503  2D0D               	goto	l1579
  2267  0504                     u720:
  2268  0504                     l1575:
  2269                           
  2270                           ;SPI.c: 27:         if (Modo < 0b00000100){
  2271  0504  3004               	movlw	4
  2272  0505  0272               	subwf	InitMSSP@Modo,w
  2273  0506  1803               	skipnc
  2274  0507  2D09               	goto	u731
  2275  0508  2D0A               	goto	u730
  2276  0509                     u731:
  2277  0509  2D0C               	goto	l152
  2278  050A                     u730:
  2279  050A                     l1577:
  2280                           
  2281                           ;SPI.c: 28:             TRISCbits.TRISC3 = 0;
  2282  050A  1187               	bcf	7,3	;volatile
  2283                           
  2284                           ;SPI.c: 29:         }
  2285  050B  2D0D               	goto	l1579
  2286  050C                     l152:	
  2287                           ;SPI.c: 30:         else {
  2288                           
  2289                           
  2290                           ;SPI.c: 31:             TRISCbits.TRISC3 = 1;
  2291  050C  1587               	bsf	7,3	;volatile
  2292  050D                     l1579:
  2293                           
  2294                           ;SPI.c: 36:     if (Modo == 0b00000100){ TRISAbits.TRISA5 = 1;}
  2295  050D  3004               	movlw	4
  2296  050E  0672               	xorwf	InitMSSP@Modo,w
  2297  050F  1D03               	btfss	3,2
  2298  0510  2D12               	goto	u741
  2299  0511  2D13               	goto	u740
  2300  0512                     u741:
  2301  0512  2D14               	goto	l1583
  2302  0513                     u740:
  2303  0513                     l1581:
  2304  0513  1685               	bsf	5,5	;volatile
  2305  0514                     l1583:
  2306                           
  2307                           ;SPI.c: 40:     SSPCON = SSPCON | Modo;
  2308  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0516  0814               	movf	20,w	;volatile
  2311  0517  0472               	iorwf	InitMSSP@Modo,w	;volatile
  2312  0518  0094               	movwf	20	;volatile
  2313  0519                     l1585:
  2314                           
  2315                           ;SPI.c: 42:     PIE1bits.SSPIE = 0;
  2316  0519  1683               	bsf	3,5	;RP0=1, select bank1
  2317  051A  1303               	bcf	3,6	;RP1=0, select bank1
  2318  051B  118C               	bcf	12,3	;volatile
  2319  051C                     l1587:
  2320                           
  2321                           ;SPI.c: 46:     SSPCONbits.CKP = 0;
  2322  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2323  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2324  051E  1214               	bcf	20,4	;volatile
  2325  051F                     l1589:
  2326                           
  2327                           ;SPI.c: 49:     SSPSTATbits.CKE = 0;
  2328  051F  1683               	bsf	3,5	;RP0=1, select bank1
  2329  0520  1303               	bcf	3,6	;RP1=0, select bank1
  2330  0521  1314               	bcf	20,6	;volatile
  2331  0522                     l1591:
  2332                           
  2333                           ;SPI.c: 51:     SSPSTATbits.SMP = 0;
  2334  0522  1394               	bcf	20,7	;volatile
  2335  0523                     l155:
  2336  0523  0008               	return
  2337  0524                     __end_of_InitMSSP:
  2338                           
  2339                           	psect	text7
  2340  031D                     __ptext7:	
  2341 ;; *************** function _Iniciar_LCD *****************
  2342 ;; Defined at:
  2343 ;;		line 30 in file "LCD.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0
  2359 ;;      Temps:          2       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 3
  2364 ;; This function calls:
  2365 ;;		_Escribir_comandoLCD
  2366 ;; This function is called by:
  2367 ;;		_setup
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _Iniciar_LCD
  2373  031D                     _Iniciar_LCD:
  2374  031D                     l1593:	
  2375                           ;incstack = 0
  2376                           ; Regs used in _Iniciar_LCD: [wreg+status,2+status,0+pclath+cstack]
  2377                           
  2378                           
  2379                           ;LCD.c: 31:     PORTDbits.RD3 = 0;
  2380  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2381  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2382  031F  1188               	bcf	8,3	;volatile
  2383                           
  2384                           ;LCD.c: 32:     PORTDbits.RD4 = 0;
  2385  0320  1208               	bcf	8,4	;volatile
  2386  0321                     l1595:
  2387                           
  2388                           ;LCD.c: 34:     _delay((unsigned long)((14)*(8000000/4000.0)));
  2389  0321  3025               	movlw	37
  2390  0322  00F5               	movwf	??_Iniciar_LCD+1
  2391  0323  305B               	movlw	91
  2392  0324  00F4               	movwf	??_Iniciar_LCD
  2393  0325                     u1257:
  2394  0325  0BF4               	decfsz	??_Iniciar_LCD,f
  2395  0326  2B25               	goto	u1257
  2396  0327  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2397  0328  2B25               	goto	u1257
  2398  0329  2B2A               	nop2
  2399  032A                     l1597:
  2400                           
  2401                           ;LCD.c: 35:     Escribir_comandoLCD(0b00110000);
  2402  032A  3030               	movlw	48
  2403  032B  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2404  0330                     l1599:
  2405                           
  2406                           ;LCD.c: 36:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2407  0330  300B               	movlw	11
  2408  0331  00F5               	movwf	??_Iniciar_LCD+1
  2409  0332  3062               	movlw	98
  2410  0333  00F4               	movwf	??_Iniciar_LCD
  2411  0334                     u1267:
  2412  0334  0BF4               	decfsz	??_Iniciar_LCD,f
  2413  0335  2B34               	goto	u1267
  2414  0336  0BF5               	decfsz	??_Iniciar_LCD+1,f
  2415  0337  2B34               	goto	u1267
  2416  0338  0000               	nop
  2417                           
  2418                           ;LCD.c: 37:     Escribir_comandoLCD(0b00110000);
  2419  0339  3030               	movlw	48
  2420  033A  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2421  033F                     l1601:
  2422                           
  2423                           ;LCD.c: 38:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2424  033F  3042               	movlw	66
  2425  0340  00F4               	movwf	??_Iniciar_LCD
  2426  0341                     u1277:
  2427  0341  0BF4               	decfsz	??_Iniciar_LCD,f
  2428  0342  2B41               	goto	u1277
  2429  0343  0000               	nop
  2430  0344                     l1603:
  2431                           
  2432                           ;LCD.c: 39:     Escribir_comandoLCD(0b00110000);
  2433  0344  3030               	movlw	48
  2434  0345  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2435                           
  2436                           ;LCD.c: 42:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2437  034A  3042               	movlw	66
  2438  034B  00F4               	movwf	??_Iniciar_LCD
  2439  034C                     u1287:
  2440  034C  0BF4               	decfsz	??_Iniciar_LCD,f
  2441  034D  2B4C               	goto	u1287
  2442  034E  0000               	nop
  2443  034F                     l1605:
  2444                           
  2445                           ;LCD.c: 43:     Escribir_comandoLCD(0b00111000);
  2446  034F  3038               	movlw	56
  2447  0350  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2448  0355                     l1607:
  2449                           
  2450                           ;LCD.c: 44:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2451  0355  3042               	movlw	66
  2452  0356  00F4               	movwf	??_Iniciar_LCD
  2453  0357                     u1297:
  2454  0357  0BF4               	decfsz	??_Iniciar_LCD,f
  2455  0358  2B57               	goto	u1297
  2456  0359  0000               	nop
  2457                           
  2458                           ;LCD.c: 45:     Escribir_comandoLCD(0b00001000);
  2459  035A  3008               	movlw	8
  2460  035B  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2461  0360                     l1609:
  2462                           
  2463                           ;LCD.c: 46:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2464  0360  3042               	movlw	66
  2465  0361  00F4               	movwf	??_Iniciar_LCD
  2466  0362                     u1307:
  2467  0362  0BF4               	decfsz	??_Iniciar_LCD,f
  2468  0363  2B62               	goto	u1307
  2469  0364  0000               	nop
  2470  0365                     l1611:
  2471                           
  2472                           ;LCD.c: 47:     Escribir_comandoLCD(0b00000001);
  2473  0365  3001               	movlw	1
  2474  0366  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2475                           
  2476                           ;LCD.c: 48:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2477  036B  3042               	movlw	66
  2478  036C  00F4               	movwf	??_Iniciar_LCD
  2479  036D                     u1317:
  2480  036D  0BF4               	decfsz	??_Iniciar_LCD,f
  2481  036E  2B6D               	goto	u1317
  2482  036F  0000               	nop
  2483  0370                     l1613:
  2484                           
  2485                           ;LCD.c: 49:     Escribir_comandoLCD(0b00000110);
  2486  0370  3006               	movlw	6
  2487  0371  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2488  0376                     l1615:
  2489                           
  2490                           ;LCD.c: 50:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  2491  0376  3042               	movlw	66
  2492  0377  00F4               	movwf	??_Iniciar_LCD
  2493  0378                     u1327:
  2494  0378  0BF4               	decfsz	??_Iniciar_LCD,f
  2495  0379  2B78               	goto	u1327
  2496  037A  0000               	nop
  2497                           
  2498                           ;LCD.c: 51:     Escribir_comandoLCD(0b00001100);
  2499  037B  300C               	movlw	12
  2500  037C  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2501  0381                     l195:
  2502  0381  0008               	return
  2503  0382                     __end_of_Iniciar_LCD:
  2504                           
  2505                           	psect	text8
  2506  057F                     __ptext8:	
  2507 ;; *************** function _Escribir_stringLCD *****************
  2508 ;; Defined at:
  2509 ;;		line 55 in file "LCD.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  d               1    wreg     PTR const unsigned char 
  2512 ;;		 -> STR_4(13), STR_3(5), STR_2(2), STR_1(17), 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  d               1    6[COMMON] PTR const unsigned char 
  2515 ;;		 -> STR_4(13), STR_3(5), STR_2(2), STR_1(17), 
  2516 ;;  i               1    5[COMMON] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         2       0       0       0       0
  2528 ;;      Temps:          1       0       0       0       0
  2529 ;;      Totals:         3       0       0       0       0
  2530 ;;Total ram usage:        3 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 3
  2533 ;; This function calls:
  2534 ;;		_Escribir_comandoLCD
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;;		_setup
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _Escribir_stringLCD
  2543  057F                     _Escribir_stringLCD:
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _Escribir_stringLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2547                           ;Escribir_stringLCD@d stored from wreg
  2548  057F  00F6               	movwf	Escribir_stringLCD@d
  2549  0580                     l1537:
  2550                           
  2551                           ;LCD.c: 56:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  2552  0580  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0581  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0582  1588               	bsf	8,3	;volatile
  2555  0583  1208               	bcf	8,4	;volatile
  2556  0584                     l1539:
  2557                           
  2558                           ;LCD.c: 58:     for (char i=0; d[i]!='\0'; i++){
  2559  0584  01F5               	clrf	Escribir_stringLCD@i
  2560  0585  2D97               	goto	l1545
  2561  0586                     l1541:
  2562                           
  2563                           ;LCD.c: 59:         Escribir_comandoLCD(d[i]);
  2564  0586  0875               	movf	Escribir_stringLCD@i,w
  2565  0587  0776               	addwf	Escribir_stringLCD@d,w
  2566  0588  0084               	movwf	4
  2567  0589  120A  118A  2554  120A  118A  	fcall	stringdir
  2568  058E  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  2569  0593                     l1543:
  2570                           
  2571                           ;LCD.c: 60:     }
  2572  0593  3001               	movlw	1
  2573  0594  00F4               	movwf	??_Escribir_stringLCD
  2574  0595  0874               	movf	??_Escribir_stringLCD,w
  2575  0596  07F5               	addwf	Escribir_stringLCD@i,f
  2576  0597                     l1545:
  2577  0597  0875               	movf	Escribir_stringLCD@i,w
  2578  0598  0776               	addwf	Escribir_stringLCD@d,w
  2579  0599  0084               	movwf	4
  2580  059A  120A  118A  2554  120A  118A  	fcall	stringdir
  2581  059F  3A00               	xorlw	0
  2582  05A0  1D03               	skipz
  2583  05A1  2DA3               	goto	u671
  2584  05A2  2DA4               	goto	u670
  2585  05A3                     u671:
  2586  05A3  2D86               	goto	l1541
  2587  05A4                     u670:
  2588  05A4                     l201:
  2589  05A4  0008               	return
  2590  05A5                     __end_of_Escribir_stringLCD:
  2591                           
  2592                           	psect	text9
  2593  018B                     __ptext9:	
  2594 ;; *************** function _Config_USART *****************
  2595 ;; Defined at:
  2596 ;;		line 13 in file "UART.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  baud_rate       2    2[COMMON] int 
  2599 ;;  Freq            2    4[COMMON] int 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         4       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0
  2614 ;;      Totals:         4       0       0       0       0
  2615 ;;Total ram usage:        4 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 1
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_setup
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _Config_USART
  2627  018B                     _Config_USART:
  2628  018B                     l1627:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _Config_USART: [wreg+status,2+status,0]
  2631                           
  2632                           
  2633                           ;UART.c: 14:     if(baud_rate == 9600 && Freq == 4){
  2634  018B  3080               	movlw	128
  2635  018C  0672               	xorwf	Config_USART@baud_rate,w
  2636  018D  3025               	movlw	37
  2637  018E  1903               	skipnz
  2638  018F  0673               	xorwf	Config_USART@baud_rate+1,w
  2639  0190  1D03               	btfss	3,2
  2640  0191  2993               	goto	u751
  2641  0192  2994               	goto	u750
  2642  0193                     u751:
  2643  0193  29A7               	goto	l1637
  2644  0194                     u750:
  2645  0194                     l1629:
  2646  0194  3004               	movlw	4
  2647  0195  0674               	xorwf	Config_USART@Freq,w
  2648  0196  0475               	iorwf	Config_USART@Freq+1,w
  2649  0197  1D03               	btfss	3,2
  2650  0198  299A               	goto	u761
  2651  0199  299B               	goto	u760
  2652  019A                     u761:
  2653  019A  29A7               	goto	l1637
  2654  019B                     u760:
  2655  019B                     l1631:
  2656                           
  2657                           ;UART.c: 15:         TXSTAbits.SYNC = 0;
  2658  019B  1683               	bsf	3,5	;RP0=1, select bank1
  2659  019C  1303               	bcf	3,6	;RP1=0, select bank1
  2660  019D  1218               	bcf	24,4	;volatile
  2661                           
  2662                           ;UART.c: 16:         TXSTAbits.BRGH = 1;
  2663  019E  1518               	bsf	24,2	;volatile
  2664                           
  2665                           ;UART.c: 18:         BAUDCTLbits.BRG16 = 0;
  2666  019F  1683               	bsf	3,5	;RP0=1, select bank3
  2667  01A0  1703               	bsf	3,6	;RP1=1, select bank3
  2668  01A1  1187               	bcf	7,3	;volatile
  2669  01A2                     l1633:
  2670                           
  2671                           ;UART.c: 20:         SPBRG = 25;
  2672  01A2  3019               	movlw	25
  2673  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2674  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  2675  01A5  0099               	movwf	25	;volatile
  2676  01A6                     l1635:
  2677                           
  2678                           ;UART.c: 21:         SPBRGH = 0;
  2679  01A6  019A               	clrf	26	;volatile
  2680  01A7                     l1637:
  2681                           
  2682                           ;UART.c: 24:     if(baud_rate == 9600 && Freq == 8){
  2683  01A7  3080               	movlw	128
  2684  01A8  0672               	xorwf	Config_USART@baud_rate,w
  2685  01A9  3025               	movlw	37
  2686  01AA  1903               	skipnz
  2687  01AB  0673               	xorwf	Config_USART@baud_rate+1,w
  2688  01AC  1D03               	btfss	3,2
  2689  01AD  29AF               	goto	u771
  2690  01AE  29B0               	goto	u770
  2691  01AF                     u771:
  2692  01AF  29C3               	goto	l1647
  2693  01B0                     u770:
  2694  01B0                     l1639:
  2695  01B0  3008               	movlw	8
  2696  01B1  0674               	xorwf	Config_USART@Freq,w
  2697  01B2  0475               	iorwf	Config_USART@Freq+1,w
  2698  01B3  1D03               	btfss	3,2
  2699  01B4  29B6               	goto	u781
  2700  01B5  29B7               	goto	u780
  2701  01B6                     u781:
  2702  01B6  29C3               	goto	l1647
  2703  01B7                     u780:
  2704  01B7                     l1641:
  2705                           
  2706                           ;UART.c: 25:         TXSTAbits.SYNC = 0;
  2707  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2708  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2709  01B9  1218               	bcf	24,4	;volatile
  2710                           
  2711                           ;UART.c: 26:         TXSTAbits.BRGH = 0;
  2712  01BA  1118               	bcf	24,2	;volatile
  2713                           
  2714                           ;UART.c: 28:         BAUDCTLbits.BRG16 = 1;
  2715  01BB  1683               	bsf	3,5	;RP0=1, select bank3
  2716  01BC  1703               	bsf	3,6	;RP1=1, select bank3
  2717  01BD  1587               	bsf	7,3	;volatile
  2718  01BE                     l1643:
  2719                           
  2720                           ;UART.c: 30:         SPBRG = 51;
  2721  01BE  3033               	movlw	51
  2722  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  2723  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  2724  01C1  0099               	movwf	25	;volatile
  2725  01C2                     l1645:
  2726                           
  2727                           ;UART.c: 31:         SPBRGH = 0;
  2728  01C2  019A               	clrf	26	;volatile
  2729  01C3                     l1647:
  2730                           
  2731                           ;UART.c: 34:     if(baud_rate == 9600 && Freq == 1){
  2732  01C3  3080               	movlw	128
  2733  01C4  0672               	xorwf	Config_USART@baud_rate,w
  2734  01C5  3025               	movlw	37
  2735  01C6  1903               	skipnz
  2736  01C7  0673               	xorwf	Config_USART@baud_rate+1,w
  2737  01C8  1D03               	btfss	3,2
  2738  01C9  29CB               	goto	u791
  2739  01CA  29CC               	goto	u790
  2740  01CB                     u791:
  2741  01CB  29DE               	goto	l1657
  2742  01CC                     u790:
  2743  01CC                     l1649:
  2744  01CC  0374               	decf	Config_USART@Freq,w
  2745  01CD  0475               	iorwf	Config_USART@Freq+1,w
  2746  01CE  1D03               	btfss	3,2
  2747  01CF  29D1               	goto	u801
  2748  01D0  29D2               	goto	u800
  2749  01D1                     u801:
  2750  01D1  29DE               	goto	l1657
  2751  01D2                     u800:
  2752  01D2                     l1651:
  2753                           
  2754                           ;UART.c: 35:         TXSTAbits.SYNC = 0;
  2755  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2756  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2757  01D4  1218               	bcf	24,4	;volatile
  2758                           
  2759                           ;UART.c: 36:         TXSTAbits.BRGH = 1;
  2760  01D5  1518               	bsf	24,2	;volatile
  2761                           
  2762                           ;UART.c: 38:         BAUDCTLbits.BRG16 = 1;
  2763  01D6  1683               	bsf	3,5	;RP0=1, select bank3
  2764  01D7  1703               	bsf	3,6	;RP1=1, select bank3
  2765  01D8  1587               	bsf	7,3	;volatile
  2766  01D9                     l1653:
  2767                           
  2768                           ;UART.c: 40:         SPBRG = 25;
  2769  01D9  3019               	movlw	25
  2770  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2771  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  2772  01DC  0099               	movwf	25	;volatile
  2773  01DD                     l1655:
  2774                           
  2775                           ;UART.c: 41:         SPBRGH = 0;
  2776  01DD  019A               	clrf	26	;volatile
  2777  01DE                     l1657:
  2778                           
  2779                           ;UART.c: 44:     if(baud_rate == 10417 && Freq == 4){
  2780  01DE  30B1               	movlw	177
  2781  01DF  0672               	xorwf	Config_USART@baud_rate,w
  2782  01E0  3028               	movlw	40
  2783  01E1  1903               	skipnz
  2784  01E2  0673               	xorwf	Config_USART@baud_rate+1,w
  2785  01E3  1D03               	btfss	3,2
  2786  01E4  29E6               	goto	u811
  2787  01E5  29E7               	goto	u810
  2788  01E6                     u811:
  2789  01E6  29FA               	goto	l1667
  2790  01E7                     u810:
  2791  01E7                     l1659:
  2792  01E7  3004               	movlw	4
  2793  01E8  0674               	xorwf	Config_USART@Freq,w
  2794  01E9  0475               	iorwf	Config_USART@Freq+1,w
  2795  01EA  1D03               	btfss	3,2
  2796  01EB  29ED               	goto	u821
  2797  01EC  29EE               	goto	u820
  2798  01ED                     u821:
  2799  01ED  29FA               	goto	l1667
  2800  01EE                     u820:
  2801  01EE                     l1661:
  2802                           
  2803                           ;UART.c: 45:         TXSTAbits.SYNC = 0;
  2804  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2805  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  2806  01F0  1218               	bcf	24,4	;volatile
  2807                           
  2808                           ;UART.c: 46:         TXSTAbits.BRGH = 1;
  2809  01F1  1518               	bsf	24,2	;volatile
  2810                           
  2811                           ;UART.c: 48:         BAUDCTLbits.BRG16 = 1;
  2812  01F2  1683               	bsf	3,5	;RP0=1, select bank3
  2813  01F3  1703               	bsf	3,6	;RP1=1, select bank3
  2814  01F4  1587               	bsf	7,3	;volatile
  2815  01F5                     l1663:
  2816                           
  2817                           ;UART.c: 50:         SPBRG = 23;
  2818  01F5  3017               	movlw	23
  2819  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2820  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2821  01F8  0099               	movwf	25	;volatile
  2822  01F9                     l1665:
  2823                           
  2824                           ;UART.c: 51:         SPBRGH = 0;
  2825  01F9  019A               	clrf	26	;volatile
  2826  01FA                     l1667:
  2827                           
  2828                           ;UART.c: 54:     if(baud_rate == 10417 && Freq == 8){
  2829  01FA  30B1               	movlw	177
  2830  01FB  0672               	xorwf	Config_USART@baud_rate,w
  2831  01FC  3028               	movlw	40
  2832  01FD  1903               	skipnz
  2833  01FE  0673               	xorwf	Config_USART@baud_rate+1,w
  2834  01FF  1D03               	btfss	3,2
  2835  0200  2A02               	goto	u831
  2836  0201  2A03               	goto	u830
  2837  0202                     u831:
  2838  0202  2A16               	goto	l1677
  2839  0203                     u830:
  2840  0203                     l1669:
  2841  0203  3008               	movlw	8
  2842  0204  0674               	xorwf	Config_USART@Freq,w
  2843  0205  0475               	iorwf	Config_USART@Freq+1,w
  2844  0206  1D03               	btfss	3,2
  2845  0207  2A09               	goto	u841
  2846  0208  2A0A               	goto	u840
  2847  0209                     u841:
  2848  0209  2A16               	goto	l1677
  2849  020A                     u840:
  2850  020A                     l1671:
  2851                           
  2852                           ;UART.c: 55:         TXSTAbits.SYNC = 0;
  2853  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2854  020B  1303               	bcf	3,6	;RP1=0, select bank1
  2855  020C  1218               	bcf	24,4	;volatile
  2856                           
  2857                           ;UART.c: 56:         TXSTAbits.BRGH = 0;
  2858  020D  1118               	bcf	24,2	;volatile
  2859                           
  2860                           ;UART.c: 58:         BAUDCTLbits.BRG16 = 1;
  2861  020E  1683               	bsf	3,5	;RP0=1, select bank3
  2862  020F  1703               	bsf	3,6	;RP1=1, select bank3
  2863  0210  1587               	bsf	7,3	;volatile
  2864  0211                     l1673:
  2865                           
  2866                           ;UART.c: 60:         SPBRG = 47;
  2867  0211  302F               	movlw	47
  2868  0212  1683               	bsf	3,5	;RP0=1, select bank1
  2869  0213  1303               	bcf	3,6	;RP1=0, select bank1
  2870  0214  0099               	movwf	25	;volatile
  2871  0215                     l1675:
  2872                           
  2873                           ;UART.c: 61:         SPBRGH = 0;
  2874  0215  019A               	clrf	26	;volatile
  2875  0216                     l1677:
  2876                           
  2877                           ;UART.c: 64:     if(baud_rate == 10417 && Freq == 1){
  2878  0216  30B1               	movlw	177
  2879  0217  0672               	xorwf	Config_USART@baud_rate,w
  2880  0218  3028               	movlw	40
  2881  0219  1903               	skipnz
  2882  021A  0673               	xorwf	Config_USART@baud_rate+1,w
  2883  021B  1D03               	btfss	3,2
  2884  021C  2A1E               	goto	u851
  2885  021D  2A1F               	goto	u850
  2886  021E                     u851:
  2887  021E  2A31               	goto	l1687
  2888  021F                     u850:
  2889  021F                     l1679:
  2890  021F  0374               	decf	Config_USART@Freq,w
  2891  0220  0475               	iorwf	Config_USART@Freq+1,w
  2892  0221  1D03               	btfss	3,2
  2893  0222  2A24               	goto	u861
  2894  0223  2A25               	goto	u860
  2895  0224                     u861:
  2896  0224  2A31               	goto	l1687
  2897  0225                     u860:
  2898  0225                     l1681:
  2899                           
  2900                           ;UART.c: 65:         TXSTAbits.SYNC = 0;
  2901  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2902  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2903  0227  1218               	bcf	24,4	;volatile
  2904                           
  2905                           ;UART.c: 66:         TXSTAbits.BRGH = 0;
  2906  0228  1118               	bcf	24,2	;volatile
  2907                           
  2908                           ;UART.c: 68:         BAUDCTLbits.BRG16 = 1;
  2909  0229  1683               	bsf	3,5	;RP0=1, select bank3
  2910  022A  1703               	bsf	3,6	;RP1=1, select bank3
  2911  022B  1587               	bsf	7,3	;volatile
  2912  022C                     l1683:
  2913                           
  2914                           ;UART.c: 70:         SPBRG = 5;
  2915  022C  3005               	movlw	5
  2916  022D  1683               	bsf	3,5	;RP0=1, select bank1
  2917  022E  1303               	bcf	3,6	;RP1=0, select bank1
  2918  022F  0099               	movwf	25	;volatile
  2919  0230                     l1685:
  2920                           
  2921                           ;UART.c: 71:         SPBRGH = 0;
  2922  0230  019A               	clrf	26	;volatile
  2923  0231                     l1687:
  2924                           
  2925                           ;UART.c: 74:     RCSTAbits.SPEN = 1;
  2926  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0233  1798               	bsf	24,7	;volatile
  2929  0234                     l1689:
  2930                           
  2931                           ;UART.c: 75:     RCSTAbits.RX9 = 0;
  2932  0234  1318               	bcf	24,6	;volatile
  2933  0235                     l1691:
  2934                           
  2935                           ;UART.c: 76:     RCSTAbits.CREN = 1;
  2936  0235  1618               	bsf	24,4	;volatile
  2937  0236                     l1693:
  2938                           
  2939                           ;UART.c: 78:     TXSTAbits.TXEN = 1;
  2940  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0237  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0238  1698               	bsf	24,5	;volatile
  2943  0239                     l277:
  2944  0239  0008               	return
  2945  023A                     __end_of_Config_USART:
  2946                           
  2947                           	psect	text10
  2948  03DB                     __ptext10:	
  2949 ;; *************** function _divisor_dec *****************
  2950 ;; Defined at:
  2951 ;;		line 76 in file "7SEG-hex.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  b               1    wreg     unsigned char 
  2954 ;;  dig1            1    9[COMMON] PTR unsigned char 
  2955 ;;		 -> Temp_dig(1), ADC_dig(1), Cont_dig(1), 
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  b               1    8[BANK0 ] unsigned char 
  2958 ;;  n               2    9[BANK0 ] int 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2968 ;;      Params:         1       0       0       0       0
  2969 ;;      Locals:         0       3       0       0       0
  2970 ;;      Temps:          0       4       0       0       0
  2971 ;;      Totals:         1       7       0       0       0
  2972 ;;Total ram usage:        8 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 2
  2975 ;; This function calls:
  2976 ;;		___awdiv
  2977 ;;		___awmod
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _divisor_dec
  2985  03DB                     _divisor_dec:
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _divisor_dec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2989                           ;divisor_dec@b stored from wreg
  2990  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2991  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2992  03DD  00BF               	movwf	divisor_dec@b
  2993  03DE                     l2143:
  2994  03DE  01C0               	clrf	divisor_dec@n
  2995  03DF  01C1               	clrf	divisor_dec@n+1
  2996  03E0                     l2149:
  2997  03E0  300A               	movlw	10
  2998  03E1  00F2               	movwf	___awmod@divisor
  2999  03E2  3000               	movlw	0
  3000  03E3  00F3               	movwf	___awmod@divisor+1
  3001  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  3002  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  3003  03E6  083F               	movf	divisor_dec@b,w
  3004  03E7  00BB               	movwf	??_divisor_dec
  3005  03E8  01BC               	clrf	??_divisor_dec+1
  3006  03E9  083B               	movf	??_divisor_dec,w
  3007  03EA  00F4               	movwf	___awmod@dividend
  3008  03EB  083C               	movf	??_divisor_dec+1,w
  3009  03EC  00F5               	movwf	___awmod@dividend+1
  3010  03ED  120A  118A  2382  120A  118A  	fcall	___awmod
  3011  03F2  0872               	movf	?___awmod,w
  3012  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3013  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3014  03F5  00BD               	movwf	??_divisor_dec+2
  3015  03F6  0840               	movf	divisor_dec@n,w
  3016  03F7  0779               	addwf	divisor_dec@dig1,w
  3017  03F8  00BE               	movwf	??_divisor_dec+3
  3018  03F9  083E               	movf	??_divisor_dec+3,w
  3019  03FA  0084               	movwf	4
  3020  03FB  083D               	movf	??_divisor_dec+2,w
  3021  03FC  1383               	bcf	3,7	;select IRP bank0
  3022  03FD  0080               	movwf	0
  3023  03FE  300A               	movlw	10
  3024  03FF  00F2               	movwf	___awdiv@divisor
  3025  0400  3000               	movlw	0
  3026  0401  00F3               	movwf	___awdiv@divisor+1
  3027  0402  0840               	movf	divisor_dec@n,w
  3028  0403  0779               	addwf	divisor_dec@dig1,w
  3029  0404  00BB               	movwf	??_divisor_dec
  3030  0405  083B               	movf	??_divisor_dec,w
  3031  0406  0084               	movwf	4
  3032  0407  0800               	movf	0,w
  3033  0408  023F               	subwf	divisor_dec@b,w
  3034  0409  00F4               	movwf	___awdiv@dividend
  3035  040A  01F5               	clrf	___awdiv@dividend+1
  3036  040B  1C03               	skipc
  3037  040C  03F5               	decf	___awdiv@dividend+1,f
  3038  040D  120A  118A  22B4  120A  118A  	fcall	___awdiv
  3039  0412  0872               	movf	?___awdiv,w
  3040  0413  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0414  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0415  00BC               	movwf	??_divisor_dec+1
  3043  0416  083C               	movf	??_divisor_dec+1,w
  3044  0417  00BF               	movwf	divisor_dec@b
  3045  0418                     l2151:
  3046  0418  3001               	movlw	1
  3047  0419  07C0               	addwf	divisor_dec@n,f
  3048  041A  1803               	skipnc
  3049  041B  0AC1               	incf	divisor_dec@n+1,f
  3050  041C  3000               	movlw	0
  3051  041D  07C1               	addwf	divisor_dec@n+1,f
  3052  041E                     l2153:
  3053  041E  0841               	movf	divisor_dec@n+1,w
  3054  041F  3A80               	xorlw	128
  3055  0420  00FF               	movwf	btemp+1
  3056  0421  3080               	movlw	128
  3057  0422  027F               	subwf	btemp+1,w
  3058  0423  1D03               	skipz
  3059  0424  2C27               	goto	u1195
  3060  0425  3003               	movlw	3
  3061  0426  0240               	subwf	divisor_dec@n,w
  3062  0427                     u1195:
  3063  0427  1C03               	skipc
  3064  0428  2C2A               	goto	u1191
  3065  0429  2C2B               	goto	u1190
  3066  042A                     u1191:
  3067  042A  2BE0               	goto	l2149
  3068  042B                     u1190:
  3069  042B                     l258:
  3070  042B  0008               	return
  3071  042C                     __end_of_divisor_dec:
  3072                           
  3073                           	psect	text11
  3074  0382                     __ptext11:	
  3075 ;; *************** function ___awmod *****************
  3076 ;; Defined at:
  3077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  divisor         2    2[COMMON] int 
  3080 ;;  dividend        2    4[COMMON] int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  sign            1    8[COMMON] unsigned char 
  3083 ;;  counter         1    7[COMMON] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  2    2[COMMON] int 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         4       0       0       0       0
  3094 ;;      Locals:         2       0       0       0       0
  3095 ;;      Temps:          1       0       0       0       0
  3096 ;;      Totals:         7       0       0       0       0
  3097 ;;Total ram usage:        7 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_divisor_dec
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function ___awmod
  3109  0382                     ___awmod:
  3110  0382                     l1739:	
  3111                           ;incstack = 0
  3112                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3113                           
  3114  0382  01F8               	clrf	___awmod@sign
  3115  0383                     l1741:
  3116  0383  1FF5               	btfss	___awmod@dividend+1,7
  3117  0384  2B86               	goto	u971
  3118  0385  2B87               	goto	u970
  3119  0386                     u971:
  3120  0386  2B8E               	goto	l1747
  3121  0387                     u970:
  3122  0387                     l1743:
  3123  0387  09F4               	comf	___awmod@dividend,f
  3124  0388  09F5               	comf	___awmod@dividend+1,f
  3125  0389  0AF4               	incf	___awmod@dividend,f
  3126  038A  1903               	skipnz
  3127  038B  0AF5               	incf	___awmod@dividend+1,f
  3128  038C                     l1745:
  3129  038C  01F8               	clrf	___awmod@sign
  3130  038D  0AF8               	incf	___awmod@sign,f
  3131  038E                     l1747:
  3132  038E  1FF3               	btfss	___awmod@divisor+1,7
  3133  038F  2B91               	goto	u981
  3134  0390  2B92               	goto	u980
  3135  0391                     u981:
  3136  0391  2B97               	goto	l1751
  3137  0392                     u980:
  3138  0392                     l1749:
  3139  0392  09F2               	comf	___awmod@divisor,f
  3140  0393  09F3               	comf	___awmod@divisor+1,f
  3141  0394  0AF2               	incf	___awmod@divisor,f
  3142  0395  1903               	skipnz
  3143  0396  0AF3               	incf	___awmod@divisor+1,f
  3144  0397                     l1751:
  3145  0397  0872               	movf	___awmod@divisor,w
  3146  0398  0473               	iorwf	___awmod@divisor+1,w
  3147  0399  1903               	btfsc	3,2
  3148  039A  2B9C               	goto	u991
  3149  039B  2B9D               	goto	u990
  3150  039C                     u991:
  3151  039C  2BCC               	goto	l1769
  3152  039D                     u990:
  3153  039D                     l1753:
  3154  039D  01F7               	clrf	___awmod@counter
  3155  039E  0AF7               	incf	___awmod@counter,f
  3156  039F  2BAB               	goto	l1759
  3157  03A0                     l1755:
  3158  03A0  3001               	movlw	1
  3159  03A1                     u1005:
  3160  03A1  1003               	clrc
  3161  03A2  0DF2               	rlf	___awmod@divisor,f
  3162  03A3  0DF3               	rlf	___awmod@divisor+1,f
  3163  03A4  3EFF               	addlw	-1
  3164  03A5  1D03               	skipz
  3165  03A6  2BA1               	goto	u1005
  3166  03A7                     l1757:
  3167  03A7  3001               	movlw	1
  3168  03A8  00F6               	movwf	??___awmod
  3169  03A9  0876               	movf	??___awmod,w
  3170  03AA  07F7               	addwf	___awmod@counter,f
  3171  03AB                     l1759:
  3172  03AB  1FF3               	btfss	___awmod@divisor+1,7
  3173  03AC  2BAE               	goto	u1011
  3174  03AD  2BAF               	goto	u1010
  3175  03AE                     u1011:
  3176  03AE  2BA0               	goto	l1755
  3177  03AF                     u1010:
  3178  03AF                     l1761:
  3179  03AF  0873               	movf	___awmod@divisor+1,w
  3180  03B0  0275               	subwf	___awmod@dividend+1,w
  3181  03B1  1D03               	skipz
  3182  03B2  2BB5               	goto	u1025
  3183  03B3  0872               	movf	___awmod@divisor,w
  3184  03B4  0274               	subwf	___awmod@dividend,w
  3185  03B5                     u1025:
  3186  03B5  1C03               	skipc
  3187  03B6  2BB8               	goto	u1021
  3188  03B7  2BB9               	goto	u1020
  3189  03B8                     u1021:
  3190  03B8  2BBF               	goto	l1765
  3191  03B9                     u1020:
  3192  03B9                     l1763:
  3193  03B9  0872               	movf	___awmod@divisor,w
  3194  03BA  02F4               	subwf	___awmod@dividend,f
  3195  03BB  0873               	movf	___awmod@divisor+1,w
  3196  03BC  1C03               	skipc
  3197  03BD  03F5               	decf	___awmod@dividend+1,f
  3198  03BE  02F5               	subwf	___awmod@dividend+1,f
  3199  03BF                     l1765:
  3200  03BF  3001               	movlw	1
  3201  03C0                     u1035:
  3202  03C0  1003               	clrc
  3203  03C1  0CF3               	rrf	___awmod@divisor+1,f
  3204  03C2  0CF2               	rrf	___awmod@divisor,f
  3205  03C3  3EFF               	addlw	-1
  3206  03C4  1D03               	skipz
  3207  03C5  2BC0               	goto	u1035
  3208  03C6                     l1767:
  3209  03C6  3001               	movlw	1
  3210  03C7  02F7               	subwf	___awmod@counter,f
  3211  03C8  1D03               	btfss	3,2
  3212  03C9  2BCB               	goto	u1041
  3213  03CA  2BCC               	goto	u1040
  3214  03CB                     u1041:
  3215  03CB  2BAF               	goto	l1761
  3216  03CC                     u1040:
  3217  03CC                     l1769:
  3218  03CC  0878               	movf	___awmod@sign,w
  3219  03CD  1903               	btfsc	3,2
  3220  03CE  2BD0               	goto	u1051
  3221  03CF  2BD1               	goto	u1050
  3222  03D0                     u1051:
  3223  03D0  2BD6               	goto	l1773
  3224  03D1                     u1050:
  3225  03D1                     l1771:
  3226  03D1  09F4               	comf	___awmod@dividend,f
  3227  03D2  09F5               	comf	___awmod@dividend+1,f
  3228  03D3  0AF4               	incf	___awmod@dividend,f
  3229  03D4  1903               	skipnz
  3230  03D5  0AF5               	incf	___awmod@dividend+1,f
  3231  03D6                     l1773:
  3232  03D6  0875               	movf	___awmod@dividend+1,w
  3233  03D7  00F3               	movwf	?___awmod+1
  3234  03D8  0874               	movf	___awmod@dividend,w
  3235  03D9  00F2               	movwf	?___awmod
  3236  03DA                     l529:
  3237  03DA  0008               	return
  3238  03DB                     __end_of___awmod:
  3239                           
  3240                           	psect	text12
  3241  02B4                     __ptext12:	
  3242 ;; *************** function ___awdiv *****************
  3243 ;; Defined at:
  3244 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  divisor         2    2[COMMON] int 
  3247 ;;  dividend        2    4[COMMON] int 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  quotient        2    2[BANK0 ] int 
  3250 ;;  sign            1    1[BANK0 ] unsigned char 
  3251 ;;  counter         1    0[BANK0 ] unsigned char 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    2[COMMON] int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         4       0       0       0       0
  3262 ;;      Locals:         0       4       0       0       0
  3263 ;;      Temps:          1       0       0       0       0
  3264 ;;      Totals:         5       4       0       0       0
  3265 ;;Total ram usage:        9 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_divisor_dec
  3272 ;;		_divisor_hex
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           
  3277                           ;psect for function ___awdiv
  3278  02B4                     ___awdiv:
  3279  02B4                     l2063:	
  3280                           ;incstack = 0
  3281                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3282                           
  3283  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3284  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  3285  02B6  01B8               	clrf	___awdiv@sign
  3286  02B7                     l2065:
  3287  02B7  1FF3               	btfss	___awdiv@divisor+1,7
  3288  02B8  2ABA               	goto	u1091
  3289  02B9  2ABB               	goto	u1090
  3290  02BA                     u1091:
  3291  02BA  2AC2               	goto	l2071
  3292  02BB                     u1090:
  3293  02BB                     l2067:
  3294  02BB  09F2               	comf	___awdiv@divisor,f
  3295  02BC  09F3               	comf	___awdiv@divisor+1,f
  3296  02BD  0AF2               	incf	___awdiv@divisor,f
  3297  02BE  1903               	skipnz
  3298  02BF  0AF3               	incf	___awdiv@divisor+1,f
  3299  02C0                     l2069:
  3300  02C0  01B8               	clrf	___awdiv@sign
  3301  02C1  0AB8               	incf	___awdiv@sign,f
  3302  02C2                     l2071:
  3303  02C2  1FF5               	btfss	___awdiv@dividend+1,7
  3304  02C3  2AC5               	goto	u1101
  3305  02C4  2AC6               	goto	u1100
  3306  02C5                     u1101:
  3307  02C5  2ACF               	goto	l2077
  3308  02C6                     u1100:
  3309  02C6                     l2073:
  3310  02C6  09F4               	comf	___awdiv@dividend,f
  3311  02C7  09F5               	comf	___awdiv@dividend+1,f
  3312  02C8  0AF4               	incf	___awdiv@dividend,f
  3313  02C9  1903               	skipnz
  3314  02CA  0AF5               	incf	___awdiv@dividend+1,f
  3315  02CB                     l2075:
  3316  02CB  3001               	movlw	1
  3317  02CC  00F6               	movwf	??___awdiv
  3318  02CD  0876               	movf	??___awdiv,w
  3319  02CE  06B8               	xorwf	___awdiv@sign,f
  3320  02CF                     l2077:
  3321  02CF  01B9               	clrf	___awdiv@quotient
  3322  02D0  01BA               	clrf	___awdiv@quotient+1
  3323  02D1                     l2079:
  3324  02D1  0872               	movf	___awdiv@divisor,w
  3325  02D2  0473               	iorwf	___awdiv@divisor+1,w
  3326  02D3  1903               	btfsc	3,2
  3327  02D4  2AD6               	goto	u1111
  3328  02D5  2AD7               	goto	u1110
  3329  02D6                     u1111:
  3330  02D6  2B0E               	goto	l2099
  3331  02D7                     u1110:
  3332  02D7                     l2081:
  3333  02D7  01B7               	clrf	___awdiv@counter
  3334  02D8  0AB7               	incf	___awdiv@counter,f
  3335  02D9  2AE5               	goto	l2087
  3336  02DA                     l2083:
  3337  02DA  3001               	movlw	1
  3338  02DB                     u1125:
  3339  02DB  1003               	clrc
  3340  02DC  0DF2               	rlf	___awdiv@divisor,f
  3341  02DD  0DF3               	rlf	___awdiv@divisor+1,f
  3342  02DE  3EFF               	addlw	-1
  3343  02DF  1D03               	skipz
  3344  02E0  2ADB               	goto	u1125
  3345  02E1                     l2085:
  3346  02E1  3001               	movlw	1
  3347  02E2  00F6               	movwf	??___awdiv
  3348  02E3  0876               	movf	??___awdiv,w
  3349  02E4  07B7               	addwf	___awdiv@counter,f
  3350  02E5                     l2087:
  3351  02E5  1FF3               	btfss	___awdiv@divisor+1,7
  3352  02E6  2AE8               	goto	u1131
  3353  02E7  2AE9               	goto	u1130
  3354  02E8                     u1131:
  3355  02E8  2ADA               	goto	l2083
  3356  02E9                     u1130:
  3357  02E9                     l2089:
  3358  02E9  3001               	movlw	1
  3359  02EA                     u1145:
  3360  02EA  1003               	clrc
  3361  02EB  0DB9               	rlf	___awdiv@quotient,f
  3362  02EC  0DBA               	rlf	___awdiv@quotient+1,f
  3363  02ED  3EFF               	addlw	-1
  3364  02EE  1D03               	skipz
  3365  02EF  2AEA               	goto	u1145
  3366  02F0  0873               	movf	___awdiv@divisor+1,w
  3367  02F1  0275               	subwf	___awdiv@dividend+1,w
  3368  02F2  1D03               	skipz
  3369  02F3  2AF6               	goto	u1155
  3370  02F4  0872               	movf	___awdiv@divisor,w
  3371  02F5  0274               	subwf	___awdiv@dividend,w
  3372  02F6                     u1155:
  3373  02F6  1C03               	skipc
  3374  02F7  2AF9               	goto	u1151
  3375  02F8  2AFA               	goto	u1150
  3376  02F9                     u1151:
  3377  02F9  2B01               	goto	l2095
  3378  02FA                     u1150:
  3379  02FA                     l2091:
  3380  02FA  0872               	movf	___awdiv@divisor,w
  3381  02FB  02F4               	subwf	___awdiv@dividend,f
  3382  02FC  0873               	movf	___awdiv@divisor+1,w
  3383  02FD  1C03               	skipc
  3384  02FE  03F5               	decf	___awdiv@dividend+1,f
  3385  02FF  02F5               	subwf	___awdiv@dividend+1,f
  3386  0300                     l2093:
  3387  0300  1439               	bsf	___awdiv@quotient,0
  3388  0301                     l2095:
  3389  0301  3001               	movlw	1
  3390  0302                     u1165:
  3391  0302  1003               	clrc
  3392  0303  0CF3               	rrf	___awdiv@divisor+1,f
  3393  0304  0CF2               	rrf	___awdiv@divisor,f
  3394  0305  3EFF               	addlw	-1
  3395  0306  1D03               	skipz
  3396  0307  2B02               	goto	u1165
  3397  0308                     l2097:
  3398  0308  3001               	movlw	1
  3399  0309  02B7               	subwf	___awdiv@counter,f
  3400  030A  1D03               	btfss	3,2
  3401  030B  2B0D               	goto	u1171
  3402  030C  2B0E               	goto	u1170
  3403  030D                     u1171:
  3404  030D  2AE9               	goto	l2089
  3405  030E                     u1170:
  3406  030E                     l2099:
  3407  030E  0838               	movf	___awdiv@sign,w
  3408  030F  1903               	btfsc	3,2
  3409  0310  2B12               	goto	u1181
  3410  0311  2B13               	goto	u1180
  3411  0312                     u1181:
  3412  0312  2B18               	goto	l2103
  3413  0313                     u1180:
  3414  0313                     l2101:
  3415  0313  09B9               	comf	___awdiv@quotient,f
  3416  0314  09BA               	comf	___awdiv@quotient+1,f
  3417  0315  0AB9               	incf	___awdiv@quotient,f
  3418  0316  1903               	skipnz
  3419  0317  0ABA               	incf	___awdiv@quotient+1,f
  3420  0318                     l2103:
  3421  0318  083A               	movf	___awdiv@quotient+1,w
  3422  0319  00F3               	movwf	?___awdiv+1
  3423  031A  0839               	movf	___awdiv@quotient,w
  3424  031B  00F2               	movwf	?___awdiv
  3425  031C                     l516:
  3426  031C  0008               	return
  3427  031D                     __end_of___awdiv:
  3428                           
  3429                           	psect	text13
  3430  05F2                     __ptext13:	
  3431 ;; *************** function _WriteMSSP *****************
  3432 ;; Defined at:
  3433 ;;		line 55 in file "SPI.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  Data            1    wreg     unsigned char 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  Data            1    2[COMMON] unsigned char 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       0       0       0
  3448 ;;      Locals:         1       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         1       0       0       0       0
  3451 ;;Total ram usage:        1 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 1
  3454 ;; This function calls:
  3455 ;;		Nothing
  3456 ;; This function is called by:
  3457 ;;		_main
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           
  3462                           ;psect for function _WriteMSSP
  3463  05F2                     _WriteMSSP:
  3464                           
  3465                           ;incstack = 0
  3466                           ; Regs used in _WriteMSSP: [wreg]
  3467                           ;WriteMSSP@Data stored from wreg
  3468  05F2  00F2               	movwf	WriteMSSP@Data
  3469  05F3                     l1813:
  3470                           
  3471                           ;SPI.c: 59:     SSPBUF = Data;
  3472  05F3  0872               	movf	WriteMSSP@Data,w
  3473  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3474  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3475  05F6  0093               	movwf	19	;volatile
  3476  05F7                     l158:
  3477  05F7  0008               	return
  3478  05F8                     __end_of_WriteMSSP:
  3479                           
  3480                           	psect	text14
  3481  05D9                     __ptext14:	
  3482 ;; *************** function _ReadMSSP *****************
  3483 ;; Defined at:
  3484 ;;		line 63 in file "SPI.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      unsigned char 
  3491 ;; Registers used:
  3492 ;;		wreg
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; Hardware stack levels required when called: 1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_main
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _ReadMSSP
  3514  05D9                     _ReadMSSP:
  3515  05D9                     l1815:	
  3516                           ;incstack = 0
  3517                           ; Regs used in _ReadMSSP: [wreg]
  3518                           
  3519  05D9                     l161:	
  3520                           ;SPI.c: 64:     while(SSPSTATbits.BF == 0){}
  3521                           
  3522  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3523  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3524  05DB  1C14               	btfss	20,0	;volatile
  3525  05DC  2DDE               	goto	u1061
  3526  05DD  2DDF               	goto	u1060
  3527  05DE                     u1061:
  3528  05DE  2DD9               	goto	l161
  3529  05DF                     u1060:
  3530  05DF                     l1817:
  3531                           
  3532                           ;SPI.c: 65:     return(SSPBUF);
  3533  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  3534  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  3535  05E1  0813               	movf	19,w	;volatile
  3536  05E2                     l164:
  3537  05E2  0008               	return
  3538  05E3                     __end_of_ReadMSSP:
  3539                           
  3540                           	psect	text15
  3541  05CD                     __ptext15:	
  3542 ;; *************** function _Escribir_caracterLCD *****************
  3543 ;; Defined at:
  3544 ;;		line 63 in file "LCD.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;  a               1    wreg     unsigned char 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  a               1    4[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       0       0       0       0
  3559 ;;      Locals:         1       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0
  3561 ;;      Totals:         1       0       0       0       0
  3562 ;;Total ram usage:        1 bytes
  3563 ;; Hardware stack levels used: 1
  3564 ;; Hardware stack levels required when called: 3
  3565 ;; This function calls:
  3566 ;;		_Escribir_comandoLCD
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _Escribir_caracterLCD
  3574  05CD                     _Escribir_caracterLCD:
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _Escribir_caracterLCD: [wreg+status,2+status,0+pclath+cstack]
  3578                           ;Escribir_caracterLCD@a stored from wreg
  3579  05CD  00F4               	movwf	Escribir_caracterLCD@a
  3580  05CE                     l1903:
  3581                           
  3582                           ;LCD.c: 64:     PORTDbits.RD3 = 1; PORTDbits.RD4 = 0;
  3583  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3584  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3585  05D0  1588               	bsf	8,3	;volatile
  3586  05D1  1208               	bcf	8,4	;volatile
  3587  05D2                     l1905:
  3588                           
  3589                           ;LCD.c: 66:     Escribir_comandoLCD(a);
  3590  05D2  0874               	movf	Escribir_caracterLCD@a,w
  3591  05D3  120A  118A  246F  120A  118A  	fcall	_Escribir_comandoLCD
  3592  05D8                     l204:
  3593  05D8  0008               	return
  3594  05D9                     __end_of_Escribir_caracterLCD:
  3595                           
  3596                           	psect	text16
  3597  046F                     __ptext16:	
  3598 ;; *************** function _Escribir_comandoLCD *****************
  3599 ;; Defined at:
  3600 ;;		line 17 in file "LCD.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  Comando         1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  Comando         1    3[COMMON] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         0       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0
  3617 ;;      Totals:         1       0       0       0       0
  3618 ;;Total ram usage:        1 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; Hardware stack levels required when called: 2
  3621 ;; This function calls:
  3622 ;;		_prender_ELCD
  3623 ;; This function is called by:
  3624 ;;		_Iniciar_LCD
  3625 ;;		_Escribir_stringLCD
  3626 ;;		_Escribir_caracterLCD
  3627 ;;		_Limpiar_pantallaLCD
  3628 ;;		_set_cursor
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _Escribir_comandoLCD
  3634  046F                     _Escribir_comandoLCD:
  3635                           
  3636                           ;incstack = 0
  3637                           ; Regs used in _Escribir_comandoLCD: [wreg+status,2+status,0+pclath+cstack]
  3638                           ;Escribir_comandoLCD@Comando stored from wreg
  3639  046F  00F3               	movwf	Escribir_comandoLCD@Comando
  3640  0470                     l1493:
  3641                           
  3642                           ;LCD.c: 18:     if((Comando & 0b00000001) == 0b00000001){PORTDbits.RD6 = 1;} else {PORTD
      +                          bits.RD6 = 0;}
  3643  0470  1C73               	btfss	Escribir_comandoLCD@Comando,0
  3644  0471  2C73               	goto	u551
  3645  0472  2C74               	goto	u550
  3646  0473                     u551:
  3647  0473  2C78               	goto	l176
  3648  0474                     u550:
  3649  0474                     l1495:
  3650  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3652  0476  1708               	bsf	8,6	;volatile
  3653  0477  2C7B               	goto	l177
  3654  0478                     l176:
  3655  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3657  047A  1308               	bcf	8,6	;volatile
  3658  047B                     l177:
  3659                           
  3660                           ;LCD.c: 19:     if((Comando & 0b00000010) == 0b00000010){PORTDbits.RD7 = 1;} else {PORTD
      +                          bits.RD7 = 0;}
  3661  047B  1CF3               	btfss	Escribir_comandoLCD@Comando,1
  3662  047C  2C7E               	goto	u561
  3663  047D  2C7F               	goto	u560
  3664  047E                     u561:
  3665  047E  2C81               	goto	l178
  3666  047F                     u560:
  3667  047F                     l1497:
  3668  047F  1788               	bsf	8,7	;volatile
  3669  0480  2C82               	goto	l179
  3670  0481                     l178:
  3671  0481  1388               	bcf	8,7	;volatile
  3672  0482                     l179:
  3673                           
  3674                           ;LCD.c: 20:     if((Comando & 0b00000100) == 0b00000100){PORTBbits.RB0 = 1;} else {PORTB
      +                          bits.RB0 = 0;}
  3675  0482  1D73               	btfss	Escribir_comandoLCD@Comando,2
  3676  0483  2C85               	goto	u571
  3677  0484  2C86               	goto	u570
  3678  0485                     u571:
  3679  0485  2C88               	goto	l180
  3680  0486                     u570:
  3681  0486                     l1499:
  3682  0486  1406               	bsf	6,0	;volatile
  3683  0487  2C89               	goto	l181
  3684  0488                     l180:
  3685  0488  1006               	bcf	6,0	;volatile
  3686  0489                     l181:
  3687                           
  3688                           ;LCD.c: 21:     if((Comando & 0b00001000) == 0b00001000){PORTBbits.RB1 = 1;} else {PORTB
      +                          bits.RB1 = 0;}
  3689  0489  1DF3               	btfss	Escribir_comandoLCD@Comando,3
  3690  048A  2C8C               	goto	u581
  3691  048B  2C8D               	goto	u580
  3692  048C                     u581:
  3693  048C  2C8F               	goto	l182
  3694  048D                     u580:
  3695  048D                     l1501:
  3696  048D  1486               	bsf	6,1	;volatile
  3697  048E  2C90               	goto	l183
  3698  048F                     l182:
  3699  048F  1086               	bcf	6,1	;volatile
  3700  0490                     l183:
  3701                           
  3702                           ;LCD.c: 22:     if((Comando & 0b00010000) == 0b00010000){PORTBbits.RB2 = 1;} else {PORTB
      +                          bits.RB2 = 0;}
  3703  0490  1E73               	btfss	Escribir_comandoLCD@Comando,4
  3704  0491  2C93               	goto	u591
  3705  0492  2C94               	goto	u590
  3706  0493                     u591:
  3707  0493  2C96               	goto	l184
  3708  0494                     u590:
  3709  0494                     l1503:
  3710  0494  1506               	bsf	6,2	;volatile
  3711  0495  2C97               	goto	l185
  3712  0496                     l184:
  3713  0496  1106               	bcf	6,2	;volatile
  3714  0497                     l185:
  3715                           
  3716                           ;LCD.c: 23:     if((Comando & 0b00100000) == 0b00100000){PORTBbits.RB3 = 1;} else {PORTB
      +                          bits.RB3 = 0;}
  3717  0497  1EF3               	btfss	Escribir_comandoLCD@Comando,5
  3718  0498  2C9A               	goto	u601
  3719  0499  2C9B               	goto	u600
  3720  049A                     u601:
  3721  049A  2C9D               	goto	l186
  3722  049B                     u600:
  3723  049B                     l1505:
  3724  049B  1586               	bsf	6,3	;volatile
  3725  049C  2C9E               	goto	l187
  3726  049D                     l186:
  3727  049D  1186               	bcf	6,3	;volatile
  3728  049E                     l187:
  3729                           
  3730                           ;LCD.c: 24:     if((Comando & 0b01000000) == 0b01000000){PORTBbits.RB4 = 1;} else {PORTB
      +                          bits.RB4 = 0;}
  3731  049E  1F73               	btfss	Escribir_comandoLCD@Comando,6
  3732  049F  2CA1               	goto	u611
  3733  04A0  2CA2               	goto	u610
  3734  04A1                     u611:
  3735  04A1  2CA4               	goto	l188
  3736  04A2                     u610:
  3737  04A2                     l1507:
  3738  04A2  1606               	bsf	6,4	;volatile
  3739  04A3  2CA5               	goto	l189
  3740  04A4                     l188:
  3741  04A4  1206               	bcf	6,4	;volatile
  3742  04A5                     l189:
  3743                           
  3744                           ;LCD.c: 25:     if((Comando & 0b10000000) == 0b10000000){PORTBbits.RB5 = 1;} else {PORTB
      +                          bits.RB5 = 0;}
  3745  04A5  1FF3               	btfss	Escribir_comandoLCD@Comando,7
  3746  04A6  2CA8               	goto	u621
  3747  04A7  2CA9               	goto	u620
  3748  04A8                     u621:
  3749  04A8  2CAB               	goto	l190
  3750  04A9                     u620:
  3751  04A9                     l1509:
  3752  04A9  1686               	bsf	6,5	;volatile
  3753  04AA  2CAC               	goto	l1511
  3754  04AB                     l190:
  3755  04AB  1286               	bcf	6,5	;volatile
  3756  04AC                     l1511:
  3757                           
  3758                           ;LCD.c: 27:     prender_ELCD();
  3759  04AC  120A  118A  25BF  120A  118A  	fcall	_prender_ELCD
  3760  04B1                     l192:
  3761  04B1  0008               	return
  3762  04B2                     __end_of_Escribir_comandoLCD:
  3763                           
  3764                           	psect	text17
  3765  05BF                     __ptext17:	
  3766 ;; *************** function _prender_ELCD *****************
  3767 ;; Defined at:
  3768 ;;		line 11 in file "LCD.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;		None
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0
  3784 ;;      Temps:          1       0       0       0       0
  3785 ;;      Totals:         1       0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_Escribir_comandoLCD
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _prender_ELCD
  3798  05BF                     _prender_ELCD:
  3799  05BF                     l1487:	
  3800                           ;incstack = 0
  3801                           ; Regs used in _prender_ELCD: [wreg]
  3802                           
  3803                           
  3804                           ;LCD.c: 12:     PORTDbits.RD5 = 1;
  3805  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3806  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3807  05C1  1688               	bsf	8,5	;volatile
  3808  05C2                     l1489:
  3809                           
  3810                           ;LCD.c: 13:     _delay((unsigned long)((500)*(8000000/4000000.0)));
  3811  05C2  30C7               	movlw	199
  3812  05C3  00F2               	movwf	??_prender_ELCD
  3813  05C4                     u1337:
  3814  05C4  2DC5               	nop2
  3815  05C5  0BF2               	decfsz	??_prender_ELCD,f
  3816  05C6  2DC4               	goto	u1337
  3817  05C7  2DC8               	nop2
  3818  05C8  2DC9               	nop2
  3819  05C9                     l1491:
  3820                           
  3821                           ;LCD.c: 14:     PORTDbits.RD5 = 0;
  3822  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3823  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  3824  05CB  1288               	bcf	8,5	;volatile
  3825  05CC                     l173:
  3826  05CC  0008               	return
  3827  05CD                     __end_of_prender_ELCD:
  3828                           
  3829                           	psect	text18
  3830  05EB                     __ptext18:	
  3831 ;; *************** function _isr *****************
  3832 ;; Defined at:
  3833 ;;		line 91 in file "Maestro.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		None
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0
  3849 ;;      Temps:          2       0       0       0       0
  3850 ;;      Totals:         2       0       0       0       0
  3851 ;;Total ram usage:        2 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		Interrupt level 1
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function _isr
  3862  05EB                     _isr:
  3863  05EB                     i1l105:
  3864  05EB  0871               	movf	??_isr+1,w
  3865  05EC  008A               	movwf	10
  3866  05ED  0E70               	swapf	??_isr,w
  3867  05EE  0083               	movwf	3
  3868  05EF  0EFE               	swapf	btemp,f
  3869  05F0  0E7E               	swapf	btemp,w
  3870  05F1  0009               	retfie
  3871  05F2                     __end_of_isr:
  3872  007E                     btemp	set	126	;btemp
  3873  007E                     wtemp0	set	126
  3874                           
  3875                           	psect	intentry
  3876  0004                     __pintentry:	
  3877                           ;incstack = 0
  3878                           ; Regs used in _isr: []
  3879                           
  3880  0004                     interrupt_function:
  3881  007E                     saved_w	set	btemp
  3882  0004  00FE               	movwf	btemp
  3883  0005  0E03               	swapf	3,w
  3884  0006  00F0               	movwf	??_isr
  3885  0007  080A               	movf	10,w
  3886  0008  00F1               	movwf	??_isr+1
  3887  0009  120A  118A  2DEB   	ljmp	_isr
  3888                           
  3889                           	psect	config
  3890                           
  3891                           ;Config register CONFIG1 @ 0x2007
  3892                           ;	Oscillator Selection bits
  3893                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3894                           ;	Watchdog Timer Enable bit
  3895                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3896                           ;	Power-up Timer Enable bit
  3897                           ;	PWRTE = OFF, PWRT disabled
  3898                           ;	RE3/MCLR pin function select bit
  3899                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3900                           ;	Code Protection bit
  3901                           ;	CP = OFF, Program memory code protection is disabled
  3902                           ;	Data Code Protection bit
  3903                           ;	CPD = OFF, Data memory code protection is disabled
  3904                           ;	Brown Out Reset Selection bits
  3905                           ;	BOREN = OFF, BOR disabled
  3906                           ;	Internal External Switchover bit
  3907                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3908                           ;	Fail-Safe Clock Monitor Enabled bit
  3909                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3910                           ;	Low Voltage Programming Enable bit
  3911                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3912                           ;	In-Circuit Debugger Mode bit
  3913                           ;	DEBUG = 0x1, unprogrammed default
  3914  2007                     	org	8199
  3915  2007  20D4               	dw	8404
  3916                           
  3917                           ;Config register CONFIG2 @ 0x2008
  3918                           ;	Brown-out Reset Selection bit
  3919                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3920                           ;	Flash Program Memory Self Write Enable bits
  3921                           ;	WRT = OFF, Write protection off
  3922  2008                     	org	8200
  3923  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    0
    Data        2
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     13      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    divisor_dec@dig1	PTR unsigned char  size(1) Largest target is 1
		 -> Temp_dig(BANK0[1]), ADC_dig(COMMON[1]), Cont_dig(COMMON[1]), 

    Escribir_stringLCD@d	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[13]), STR_3(CODE[5]), STR_2(CODE[2]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_divisor_dec
    _setup->_set_cursor
    _set_cursor->_Escribir_comandoLCD
    _Limpiar_pantallaLCD->_Escribir_comandoLCD
    _Iniciar_LCD->_Escribir_comandoLCD
    _Escribir_stringLCD->_Escribir_comandoLCD
    _divisor_dec->___awmod
    _Escribir_caracterLCD->_Escribir_comandoLCD
    _Escribir_comandoLCD->_prender_ELCD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_divisor_dec
    _divisor_dec->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5204
                                             11 BANK0      2     2      0
               _Escribir_caracterLCD
                 _Escribir_stringLCD
                           _ReadMSSP
                          _WriteMSSP
                        _divisor_dec
                         _set_cursor
                              _setup
                     _tabla_numASCII
 ---------------------------------------------------------------------------------
 (1) _tabla_numASCII                                       3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                3     3      0    2063
                                              0 BANK0      3     3      0
                       _Config_USART
                 _Escribir_stringLCD
                        _Iniciar_LCD
                           _InitMSSP
                _Limpiar_pantallaLCD
                            _initOsc
                         _set_cursor
 ---------------------------------------------------------------------------------
 (2) _set_cursor                                           4     3      1     721
                                              4 COMMON     4     3      1
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _initOsc                                              1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Limpiar_pantallaLCD                                  2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _InitMSSP                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Iniciar_LCD                                          2     2      0     176
                                              4 COMMON     2     2      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Escribir_stringLCD                                   3     3      0     398
                                              4 COMMON     3     3      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (2) _Config_USART                                         4     0      4     416
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _divisor_dec                                          8     7      1    1780
                                              9 COMMON     1     0      1
                                              4 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _WriteMSSP                                            1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ReadMSSP                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Escribir_caracterLCD                                 1     1      0     198
                                              4 COMMON     1     1      0
                _Escribir_comandoLCD
 ---------------------------------------------------------------------------------
 (3) _Escribir_comandoLCD                                  1     1      0     176
                                              3 COMMON     1     1      0
                       _prender_ELCD
 ---------------------------------------------------------------------------------
 (4) _prender_ELCD                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escribir_caracterLCD
     _Escribir_comandoLCD
       _prender_ELCD
   _Escribir_stringLCD
     _Escribir_comandoLCD
   _ReadMSSP
   _WriteMSSP
   _divisor_dec
     ___awdiv
     ___awmod
   _set_cursor
     _Escribir_comandoLCD
   _setup
     _Config_USART
     _Escribir_stringLCD
     _Iniciar_LCD
       _Escribir_comandoLCD
     _InitMSSP
     _Limpiar_pantallaLCD
       _Escribir_comandoLCD
     _initOsc
     _set_cursor
   _tabla_numASCII

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32      12        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 18 13:20:42 2022

                            pc 0002                    _SSPSTATbits 0094                   ___awdiv@sign 0038  
                           fsr 0004                set_cursor@linea 0077                   ?_divisor_dec 0079  
                          l201 05A4                            l121 04F0                            l204 05D8  
                          l116 02B3                            l207 05BE                            l152 050C  
                          l161 05D9                            l225 0550                            l217 046E  
                          l226 0553                            l155 0523                            l180 0488  
                          l164 05E2                            l173 05CC                            l181 0489  
                          l190 04AB                            l182 048F                            l158 05F7  
                          l183 0490                            l192 04B1                            l184 0496  
                          l176 0478                            l185 0497                            l177 047B  
                          l186 049D                            l178 0481                            l258 042B  
                          l187 049E                            l179 0482                            l195 0381  
                          l188 04A4                            l516 031C                            l189 04A5  
                          l277 0239                            l529 03DA                            u600 049B  
                          u601 049A                            u610 04A2                            u611 04A1  
                          u620 04A9                            u700 0541                            u621 04A8  
                          u701 0540                            u550 0474                            u710 054B  
                          u630 0436                            u551 0473                            u711 054A  
                          u631 0435                            u560 047F                            u800 01D2  
                          u720 0504                            u640 0443                            u561 047E  
                          u801 01D1                            u721 0503                            u641 0442  
                          u570 0486                            u810 01E7                            u730 050A  
                          u650 0457                            u571 0485                            u811 01E6  
                          u731 0509                            u651 0456                            u580 048D  
                          u820 01EE                            u740 0513                            u660 0465  
                          u581 048C                            u821 01ED                            u741 0512  
                          u661 0464                            u590 0494                            u830 0203  
                          u750 0194                            u670 05A4                            u591 0493  
                          u831 0202                            u751 0193                            u671 05A3  
                          u840 020A                            u760 019B                            u680 052B  
                          u841 0209                            u761 019A                            u681 052A  
                          u850 021F                            u770 01B0                            u690 0536  
                          u851 021E                            u771 01AF                            u691 0535  
                          u860 0225                            u780 01B7                            u861 0224  
                          u781 01B6                            u790 01CC                            u791 01CB  
                          u970 0387                            u971 0386                            u980 0392  
                          u981 0391                            u990 039D                            u991 039C  
                   _Bandera_s1 0044                     _Bandera_s2 0022                     _Bandera_s3 0020  
                          _isr 05EB                            fsr0 0004                            indf 0000  
                 ___awmod@sign 0078                           l2101 0313                           l2103 0318  
                         l2111 024E                           l2121 025D                           l2113 0251  
                         l2201 0070                           l2131 027A                           l2123 0263  
                         l2115 0254                           l2107 023A                           l2211 008A  
                         l2203 0076                           l1501 048D                           l2141 02A6  
                         l2133 0280                           l2125 0269                           l2117 0257  
                         l2109 024B                           l2221 0091                           l2213 008B  
                         l2205 0083                           l1511 04AC                           l1503 0494  
                         l2071 02C2                           l2063 02B4                           l2151 0418  
                         l2143 03DE                           l2135 028C                           l2127 026E  
                         l2119 025A                           l2311 04D0                           l2231 00AB  
                         l2223 0097                           l2215 008C                           l2207 0086  
                         l1505 049B                           l2081 02D7                           l2073 02C6  
                         l2065 02B7                           l2153 041E                           l1601 033F  
                         l1521 0443                           l1513 042D                           l2137 0292  
                         l2129 0273                           l2241 00D7                           l2233 00AC  
                         l2225 00A4                           l2217 008D                           l2209 0089  
                         l2161 0035                           l1507 04A2                           l2091 02FA  
                         l2083 02DA                           l2075 02CB                           l2067 02BB  
                         l1611 0365                           l1603 0344                           l1531 045E  
                         l1523 0449                           l1515 0431                           l2139 02A1  
                         l2251 010C                           l2243 00E1                           l2235 00B6  
                         l2227 00A7                           l2219 008E                           l2171 0041  
                         l2163 0037                           l2155 002A                           l1509 04A9  
                         l2093 0300                           l2085 02E1                           l2077 02CF  
                         l2069 02C0                           l2149 03E0                           l1541 0586  
                         l1613 0370                           l1605 034F                           l1621 05A9  
                         l1533 0460                           l1525 0452                           l1517 0436  
                         l2261 013E                           l2253 0119                           l2245 00EC  
                         l2237 00C1                           l2229 00AA                           l2181 004F  
                         l2173 0047                           l2165 0038                           l2157 002F  
                         l2095 0301                           l2087 02E5                           l2079 02D1  
                         l1631 019B                           l1543 0593                           l1615 0376  
                         l1607 0355                           l1623 05AF                           l1551 0530  
                         l1535 0465                           l1519 043D                           l2271 0168  
                         l2263 0146                           l2255 0124                           l2247 00F7  
                         l2239 00CC                           l2191 0069                           l2183 0055  
                         l2175 004A                           l2167 0039                           l2159 0033  
                         l2097 0308                           l2089 02E9                           l1641 01B7  
                         l1633 01A2                           l1545 0597                           l1537 0580  
                         l1609 0360                           l1625 05B8                           l1561 054B  
                         l1553 0536                           l1529 0458                           l2273 016F  
                         l2265 0152                           l2257 012E                           l2249 0102  
                         l2193 006A                           l2185 0062                           l2177 004B  
                         l2169 003A                           l1491 05C9                           l2099 030E  
                         l1651 01D2                           l1643 01BE                           l1635 01A6  
                         l1627 018B                           l1539 0584                           l1571 04FD  
                         l1563 04F2                           l1619 05A5                           l1555 053B  
                         l1547 0525                           l2275 0177                           l2267 015A  
                         l2259 0136                           l2195 006B                           l2187 0065  
                         l2179 004C                           l1493 0470                           l1813 05F3  
                         l1741 0383                           l1661 01EE                           l1653 01D9  
                         l1645 01C2                           l1629 0194                           l1637 01A7  
                         l1581 0513                           l1573 04FE                           l1565 04F8  
                         l1557 0541                           l1549 052B                           l2277 017F  
                         l2269 0162                           l2197 006C                           l2189 0068  
                         l1487 05BF                           l1495 0474                           l1903 05CE  
                         l1815 05D9                           l1751 0397                           l1743 0387  
                         l1671 020A                           l1663 01F5                           l1655 01DD  
                         l1639 01B0                           l1647 01C3                           l1591 0522  
                         l1583 0514                           l1575 0504                           l1567 04F9  
                         l1559 0546                           l2199 006D                           l1489 05C2  
                         l1497 047F                           l1905 05D2                           l1817 05DF  
                         l1761 03AF                           l1753 039D                           l1745 038C  
                         l1681 0225                           l1673 0211                           l1665 01F9  
                         l1649 01CC                           l1657 01DE                           l1593 031D  
                         l1585 0519                           l1577 050A                           l1569 04FA  
                         l1841 04B6                           l1833 04B3                           l1499 0486  
                         l1771 03D1                           l1763 03B9                           l1755 03A0  
                         l1747 038E                           l1739 0382                           l1691 0235  
                         l1683 022C                           l1675 0215                           l1659 01E7  
                         l1667 01FA                           l1595 0321                           l1587 051C  
                         l1579 050D                           l1835 04B4                           l1773 03D6  
                         l1765 03BF                           l1757 03A7                           l1749 0392  
                         l1693 0236                           l1685 0230                           l1669 0203  
                         l1677 0216                           l1597 032A                           l1589 051F  
                         l1853 04BA                           l1767 03C6                           l1759 03AB  
                         l1679 021F                           l1687 0231                           l1599 0330  
                         l1871 04C0                           l1847 04B8                           l1769 03CC  
                         l1689 0234                           l1865 04BE                           l1883 04C4  
                         l1859 04BC                           l1877 04C2                           l1889 04C6  
                         l1897 04C8                           ?_isr 0070                           STR_1 055A  
                         STR_2 057D                           STR_3 0578                           STR_4 056B  
                         u1010 03AF                           u1011 03AE                           u1100 02C6  
                         u1020 03B9                           u1101 02C5                           u1021 03B8  
                         u1005 03A1                           u1110 02D7                           u1111 02D6  
                         u1040 03CC                           u1041 03CB                           u1025 03B5  
                         u1130 02E9                           u1050 03D1                           u1131 02E8  
                         u1051 03D0                           u1035 03C0                           u1060 05DF  
                         u1061 05DE                           u1125 02DB                           u1150 02FA  
                         u1151 02F9                           u1145 02EA                           u1217 029A  
                         u1170 030E                           u1090 02BB                           u1171 030D  
                         u1155 02F6                           u1091 02BA                           u1307 0362  
                         u1227 044D                           u1180 0313                           u1181 0312  
                         u1165 0302                           u1317 036D                           u1237 0469  
                         u1190 042B                           u1191 042A                           u1327 0378  
                         u1247 05B3                           u1337 05C4                           u1257 0325  
                         u1195 0427                           u1267 0334                           u1277 0341  
                         u1287 034C                           u1297 0357                  ??_Iniciar_LCD 0074  
                         _Temp 0024                           _main 002A                           btemp 007E  
                         start 000C           _Escribir_caracterLCD 05CD                          ??_isr 0070  
   __end_of_Escribir_stringLCD 05A5                          ?_main 0070                __end_of___awdiv 031D  
              __end_of___awmod 03DB                          _ANSEL 0188                ___awdiv@divisor 0072  
                        i1l105 05EB                ___awdiv@counter 0037                          _SPBRG 0099  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          _TRISA 0085  
                        _TRISB 0086                          _TRISD 0088                          _TRISE 0089  
                 InitMSSP@Modo 0072                __end_of_initOsc 0554                          _setup 023A  
          _Limpiar_pantallaLCD 05A5                          pclath 000A                          status 0003  
                        wtemp0 007E          ?_Escribir_caracterLCD 0070           __end_of_Config_USART 023A  
              __initialization 000F            __end_of_Iniciar_LCD 0382                   __end_of_main 018B  
             __end_of_InitMSSP 0524               __end_of_ReadMSSP 05E3           ?_Limpiar_pantallaLCD 0070  
                       ??_main 0042                   divisor_dec@b 003F                   divisor_dec@n 0040  
           set_cursor@posicion 0074               ___awdiv@dividend 0074                         ?_setup 0070  
                       _ANSELH 0189                         _SPBRGH 009A                         _TRISC0 0438  
                       _TRISC1 0439                         _TRISC2 043A                         _SSPCON 0014  
                       _SSPBUF 0013               ??_tabla_numASCII 0072          ??_Limpiar_pantallaLCD 0074  
                    ??___awdiv 0076                      ??___awmod 0076               ___awdiv@quotient 0039  
              ___awmod@divisor 0072                ___awmod@counter 0077                      ??_initOsc 0072  
         __size_of_divisor_dec 0051                         saved_w 007E                divisor_dec@dig1 0079  
      __end_of__initialization 0026                    _Iniciar_LCD 031D             __size_of_WriteMSSP 0006  
       ??_Escribir_caracterLCD 0074                 __pcstackCOMMON 0070                   __pidataBANK0 05F8  
                __end_of_setup 02B4                        ??_setup 0037                     __pbssBANK0 0020  
                    ?_InitMSSP 0070                      ?_ReadMSSP 0070          __size_of_Config_USART 00AF  
                   __pmaintext 002A                     __pintentry 0004   __size_of_Escribir_comandoLCD 0043  
                      _ADC_dig 007B              __end_of_WriteMSSP 05F8                   initOsc@Valor 0072  
                 _Config_USART 018B                        _SSPSTAT 0094             _Escribir_stringLCD 057F  
                   __stringtab 0554                     ??_InitMSSP 0072                     ??_ReadMSSP 0072  
              tabla_numASCII@a 0074            ?_Escribir_stringLCD 0070          Escribir_caracterLCD@a 0074  
                      ___awdiv 02B4                        ___awmod 0382                        _dec_ADC 0033  
                      _cen_ADC 0032                        _dig_ADC 0035                        __ptext1 04B2  
                      __ptext2 023A                        __ptext3 042C                        __ptext4 0524  
                      __ptext5 05A5                        __ptext6 04F1                        __ptext7 031D  
                      __ptext8 057F                        __ptext9 018B           ??_Escribir_stringLCD 0074  
                      _initOsc 0524                   __size_of_isr 0007                        _val_ADC 0028  
             ___awmod@dividend 0074                  ?_prender_ELCD 0070                        _uni_ADC 0034  
                      clrloop0 05E4           end_of_initialization 0026                     _set_cursor 042C  
                    _RCSTAbits 0018                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                 ??_prender_ELCD 0072                      _TRISAbits 0085  
                    _TRISCbits 0087                   ?_Iniciar_LCD 0070                      _TXSTAbits 0098  
  __end_of_Limpiar_pantallaLCD 05BF                  WriteMSSP@Data 0072                    _BAUDCTLbits 0187  
                ??_divisor_dec 003B            start_initialization 000F                    __end_of_isr 05F2  
          _Escribir_comandoLCD 046F     Escribir_comandoLCD@Comando 0073              __size_of_InitMSSP 0033  
            __size_of_ReadMSSP 000A  __size_of_Escribir_caracterLCD 000C                    ?_set_cursor 0074  
                  __pdataBANK0 0044           ?_Escribir_comandoLCD 0070                    __pbssCOMMON 007A  
      __size_of_tabla_numASCII 003F                      ___latbits 0002                  __pcstackBANK0 0037  
                    _WriteMSSP 05F2            __end_of_divisor_dec 042C           __end_of_prender_ELCD 05CD  
                     ?___awdiv 0072                       ?___awmod 0072          ??_Escribir_comandoLCD 0073  
                    __pstrings 0554                       ?_initOsc 0070                     ?_WriteMSSP 0070  
          __size_of_set_cursor 0043                 __size_of_setup 007A              interrupt_function 0004  
                    clear_ram0 05E3                       _PIE1bits 008C           __size_of_Iniciar_LCD 0065  
                  __stringbase 0559                    _divisor_dec 03DB    __size_of_Escribir_stringLCD 0026  
                     _Cont_dig 007A                       _Contador 0026                       _InitMSSP 04F1  
                     _ReadMSSP 05D9            Escribir_stringLCD@d 0076            Escribir_stringLCD@i 0075  
                     _Temp_dig 0036               __size_of___awdiv 0069               __size_of___awmod 0059  
           __end_of__stringtab 055A                       _dec_Cont 002F                       _dec_Temp 002B  
                     _cen_Cont 002E                       _cen_Temp 002A                 _tabla_numASCII 04B2  
                     _dig_Cont 0031                       _dig_Temp 002D               __size_of_initOsc 0030  
                  ??_WriteMSSP 0072                       __ptext10 03DB                       __ptext11 0382  
                     __ptext12 02B4                       __ptext13 05F2                       __ptext14 05D9  
                     __ptext15 05CD                       __ptext16 046F                       __ptext17 05BF  
                     __ptext18 05EB          __size_of_prender_ELCD 000E                  __size_of_main 0161  
                 ??_set_cursor 0075                       _uni_Cont 0030                       _uni_Temp 002C  
 __size_of_Limpiar_pantallaLCD 001A         __end_of_tabla_numASCII 04F1   __end_of_Escribir_caracterLCD 05D9  
                 _prender_ELCD 05BF                  ?_Config_USART 0072               Config_USART@Freq 0074  
           __end_of_set_cursor 046F                       intlevel1 0000                      stringcode 0554  
                   _OSCCONbits 008F                ?_tabla_numASCII 0070                 ??_Config_USART 0076  
                     stringdir 0554                       stringtab 0554          Config_USART@baud_rate 0072  
                   _SSPCONbits 0014    __end_of_Escribir_comandoLCD 04B2  
